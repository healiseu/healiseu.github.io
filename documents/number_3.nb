(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1040481,      19708]
NotebookOptionsPosition[   1011506,      18742]
NotebookOutlinePosition[   1013350,      18796]
CellTagsIndexPosition[   1013260,      18791]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Towards a New Data Modelling Architecture", "Title",
 CellChangeTimes->{{3.635595586131425*^9, 3.6355956352300577`*^9}, {
  3.635595665789628*^9, 3.635595668822831*^9}, {3.635596970109497*^9, 
  3.635596972613639*^9}}],

Cell[CellGroupData[{

Cell["\<\
By Athanassios I. Hatzis, PhD, R&D Software Engineer\[LineSeparator](C) 1st \
of May 2015\
\>", "Subsection",
 CellChangeTimes->{{3.63559577126912*^9, 3.6355957808374796`*^9}, {
  3.6356544814300365`*^9, 3.6356544835081615`*^9}, {3.639459771018173*^9, 
  3.639459774722144*^9}}],

Cell[TextData[{
 "In Part 2 of this series we introduced the Atomic Information Resource \
(AIR) data model of the AtomicDB database management system. In this part we \
present a simple but extensive example on various representations of number \
three using the poweful ",
 StyleBox["Mathematica ",
  FontSlant->"Italic"],
 "functions and the unique features of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebooks. We relate these with the ",
 StyleBox["three-faceted abstraction mechanism",
  FontWeight->"Bold"],
 " in R3DM and we discuss the principles and the architectural design of \
R3DM, a conceptual framework based on semiosis, in Part 4."
}], "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.635601096813324*^9, 3.635601215832855*^9}, {
   3.635650060973152*^9, 3.635650132966316*^9}, {3.635650164906746*^9, 
   3.635650252937996*^9}, {3.6356503721088943`*^9, 3.6356504651909256`*^9}, {
   3.6356545504300365`*^9, 3.6356545623206615`*^9}, {3.6394588015222063`*^9, 
   3.639458831833394*^9}, {3.6394589272260647`*^9, 3.6394590433054657`*^9}, {
   3.63945909604191*^9, 3.639459210923592*^9}, {3.639459351417672*^9, 
   3.63945936481743*^9}, {3.639459468233573*^9, 3.639459471561247*^9}, {
   3.639459540961533*^9, 3.639459558025588*^9}, {3.639459603698227*^9, 
   3.639459722077133*^9}, {3.6394597875449677`*^9, 3.639459892561829*^9}, {
   3.63990413249643*^9, 3.6399041513128147`*^9}, {3.6399049050884542`*^9, 
   3.639904913127923*^9}, {3.6406710793108363`*^9, 3.6406710801021724`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Part3: The number \[OpenCurlyQuote]3\[CloseCurlyQuote] and The Three-Faceted \
Abstraction Mechanism in R3DM\
\>", "Chapter",
 CellChangeTimes->{{3.630738914254218*^9, 3.6307389219582787`*^9}, {
   3.6353225177334347`*^9, 3.635322539524624*^9}, {3.6354784103288155`*^9, 
   3.635478412886284*^9}, {3.63556757136775*^9, 3.6355675741045046`*^9}, {
   3.635567605906556*^9, 3.6355676400374155`*^9}, {3.635568709733591*^9, 
   3.635568710092966*^9}, {3.63559557073787*^9, 3.6355955816158*^9}, {
   3.6355995612187643`*^9, 3.6355995896631002`*^9}, 3.635599619746108*^9, {
   3.6356012742947693`*^9, 3.63560129925473*^9}, {3.635601507022894*^9, 
   3.635601584097452*^9}, {3.6394592543135*^9, 3.6394592550883427`*^9}, {
   3.639459942850027*^9, 3.639459959121708*^9}, {3.639905079503807*^9, 
   3.639905099039065*^9}, {3.6408663258843794`*^9, 3.640866368265239*^9}}],

Cell[CellGroupData[{

Cell["Quick Introduction to Forms and In-formation", "Subchapter",
 CellChangeTimes->{{3.6356566217581615`*^9, 3.6356566584144115`*^9}, {
  3.6394703038373337`*^9, 3.639470353917823*^9}, {3.639813840530911*^9, 
  3.6398139082744207`*^9}}],

Cell[CellGroupData[{

Cell["Etymology", "Section",
 CellChangeTimes->{{3.639482370954805*^9, 3.639482374386348*^9}}],

Cell[CellGroupData[{

Cell["Information origin", "Subsection",
 CellChangeTimes->{{3.6394834586113586`*^9, 3.639483470818202*^9}}],

Cell[TextData[{
 "The origin of the word information reveals its use. Inform comes from the \
Latin verb ",
 StyleBox["informare",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ", which means to give form, or to form an idea of. Where form is the mold, \
the container, that is used to give shape to molten, i.e. the content. At the \
time computer scientists were designing and constructing the first digital \
computer, at the same time digital information was given birth and shape. \
Modern computers operate with memory chips and those are mere containers of \
storing sequences of 0s and 1s."
}], "Text",
 CellChangeTimes->{{3.639482446254287*^9, 3.6394825857078447`*^9}, {
   3.6394827353553333`*^9, 3.6394827508429537`*^9}, {3.639482876955103*^9, 
   3.639483105964191*^9}, {3.639483156498892*^9, 3.639483231348308*^9}, {
   3.639483278700046*^9, 3.639483332147896*^9}, {3.639483475124123*^9, 
   3.639483479900272*^9}, {3.639807523176921*^9, 3.639807531969906*^9}, 
   3.639807586889737*^9, {3.64093284637493*^9, 3.640932906276395*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plerophoria origin", "Subsection",
 CellChangeTimes->{{3.639483520885435*^9, 3.6394835268748493`*^9}, {
  3.6406710391496754`*^9, 3.6406710393098745`*^9}}],

Cell["\<\
The above interpretation and use of the word information is typical of \
western culture way of thinking. Although it is convenvient to keep things in \
boxes, Eastern philosophers used to think differently. The ancient and modern \
Greek word for information is \[Pi]\[Lambda]\[Eta]\[Rho]\[Omicron]\[CurlyPhi]\
\[Omicron]\[Rho]\:03af\[Alpha], which transliterates (pl\[EBar]rophoria) from \
\[Pi]\[Lambda]\:03ae\[Rho]\[Eta]\[FinalSigma] (pl\[EBar]r\[EBar]s) \
\[OpenCurlyDoubleQuote]fully\[CloseCurlyDoubleQuote] and \[CurlyPhi]\:03ad\
\[Rho]\[Omega] (phorein) frequentative of (pherein) to carry-through. This \
contrasting use and interpretation of the word plerophoria traces its roots \
back to Socrates, Plato, and Aristotle\[CloseCurlyQuote]s theory of semiosis. \
In this regard every word plays the role of a symbol, i.e. sign that can be \
interpreted to communicate information to the one decoding that specific type \
of sign. There is an intimate  and inseperable connection of the signified, \
i.e. the concept whose meaning the interpretant attempts to decode, with the \
signifier, i.e. sign\[CloseCurlyQuote]s physical form such as the sound of a \
word. Every bit of digital information, i.e. 0 or 1 assimilates this triadic \
relationship. Bits are symbols signified as true or false taking the form of \
input voltage (signifier). The infinite combination of sequences of such \
symbols gives us the power to represent anything digitally. Their meaning \
depends on how we interpret these sequences, as numbers, letters, sounds, \
color, or anything else that can be encoded. The form of the signifier is not \
limited to that of a mere container that stores a sequence of 0s and 1s. It \
is a fully functional level of abstraction connected to higher and lower \
levels by applying recursively the theory of semiosis until we reach CPU\
\[CloseCurlyQuote]s binary level.\
\>", "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.639483531290951*^9, 3.639483766388081*^9}, 
   3.639483866587709*^9, {3.639483918715185*^9, 3.6394839305077343`*^9}, 
   3.639483964771954*^9, {3.6394840092687397`*^9, 3.639484011659149*^9}, {
   3.639484100684807*^9, 3.639484130866129*^9}, {3.639484173547632*^9, 
   3.639484290147681*^9}, {3.639484365251618*^9, 3.6394843836997232`*^9}, {
   3.639484437459577*^9, 3.639484525675892*^9}, {3.63948457442022*^9, 
   3.639484608452815*^9}, {3.6394846546192636`*^9, 3.6394846967009068`*^9}, {
   3.639484790284973*^9, 3.639484803227367*^9}, {3.639484843108395*^9, 
   3.639484843483971*^9}, 3.639484921732895*^9, {3.639484998124362*^9, 
   3.6394850563574*^9}, {3.639485099755844*^9, 3.639485205148601*^9}, {
   3.639485280403842*^9, 3.639485325171288*^9}, {3.639485475909134*^9, 
   3.63948554999782*^9}, {3.639485590491379*^9, 3.63948585938908*^9}, {
   3.639485925174691*^9, 3.639486006861477*^9}, {3.639486049190185*^9, 
   3.639486134540214*^9}, {3.639486207652111*^9, 3.639486392422155*^9}, {
   3.639746108978036*^9, 3.639746134097505*^9}, {3.6397461718339567`*^9, 
   3.639746191480448*^9}, {3.639806833121872*^9, 3.639806841795312*^9}, {
   3.6398071618749037`*^9, 3.6398072561135387`*^9}, {3.639807288340331*^9, 
   3.639807293361912*^9}, {3.6398073616213207`*^9, 3.639807446234351*^9}, {
   3.639807609340662*^9, 3.6398076220663967`*^9}, {3.6398077115334063`*^9, 
   3.639807731813122*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Turing Machine", "Section",
 CellChangeTimes->{{3.639470536566654*^9, 3.6394705397500963`*^9}}],

Cell["\<\
One-tape Turing machine according to Hopcroft and Ullman can be formally \
defined as a 7-tuple. Elements of this tuple are members of three distinct \
sets. A non-empty set of tape alphabet symbols, e.g. {0, 1}, a non-empty set \
of states, e.g. {A, B, C, HALT} and a set of state transitions e.g. {L, R}. \
Turing machine reads the tape symbols and executes a sequence of instructions \
according to a state table. Although this is not the space and time to adapt \
the theory of semiosis on the Turing machine we can cleary see the role of \
the tape symbol as that of a sign, the signified instruction that is executed \
according to the interpretation given by the state table, and the physical \
form it takes as a printed text symbol on a white square of a paper tape. And \
of course you can apply the same logic to the set of states and the set of \
transitions because these are symbols (signs) too; they can be interpreted \
and realized in some other physical or non-physical form.\
\>", "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.6398086219131804`*^9, 3.639808623953547*^9}, {
   3.639810124898069*^9, 3.639810188826253*^9}, {3.639810265689424*^9, 
   3.6398102975610733`*^9}, {3.639810341274123*^9, 3.639810360505262*^9}, {
   3.639810442914893*^9, 3.6398105348256407`*^9}, {3.639810664850932*^9, 
   3.639810678066381*^9}, {3.639810808050043*^9, 3.639810815657793*^9}, {
   3.639810890795277*^9, 3.63981093421089*^9}, {3.639810978259067*^9, 
   3.6398110264111443`*^9}, {3.639811065914216*^9, 3.639811149432107*^9}, {
   3.639811212171378*^9, 3.639811373219483*^9}, {3.639811406684164*^9, 
   3.639811525187153*^9}, {3.639811559451776*^9, 3.639811648178575*^9}, {
   3.639811858467615*^9, 3.6398118604742117`*^9}, {3.639811911956785*^9, 
   3.6398120218841743`*^9}, {3.639812074812295*^9, 3.639812164371468*^9}, 
   3.639812197973741*^9, {3.639812229035254*^9, 3.639812258924437*^9}, {
   3.639812317957646*^9, 3.639812372306963*^9}, {3.639812727676075*^9, 
   3.6398127346441603`*^9}, {3.639812815161827*^9, 3.639812911019454*^9}, {
   3.63981298455724*^9, 3.6398130106770277`*^9}, {3.639813276011363*^9, 
   3.639813278219051*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Functional Representation", "Section",
 CellChangeTimes->{{3.639470446269534*^9, 3.639470448453541*^9}, {
  3.6398137382797318`*^9, 3.639813740682568*^9}}],

Cell["\<\
Functional representation is the core operation of R3DM. Everything is \
represented as a function that is mapping values from one domain to another. \
You may view functions, as transformations. This is also how they operate in \
Wolfram Language. They transform expressions from one symbolic form to \
another.\
\>", "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.639813810794252*^9, 3.639813822267268*^9}, {
   3.639814395860577*^9, 3.6398144113363657`*^9}}],

Cell[CellGroupData[{

Cell["From bits to strings", "Subsubsection",
 CellChangeTimes->{{3.6398144440112677`*^9, 3.6398144488267813`*^9}}],

Cell["\<\
In the following example we will see how we can apply the theory of semiosis \
so that it can naturally follow from the etymology of the word plerophoria as \
it has been discussed above.\
\>", "Text",
 CellChangeTimes->{{3.639814496778096*^9, 3.639814510347122*^9}, {
  3.6398146180992317`*^9, 3.639814638051242*^9}, {3.639898434517524*^9, 
  3.639898436661522*^9}, {3.639898530237249*^9, 3.639898646670209*^9}}],

Cell[CellGroupData[{

Cell["The Capacitor Discharge Function", "Subsubsubsection",
 CellChangeTimes->{{3.639818062925777*^9, 3.639818065715115*^9}, {
  3.639818112896007*^9, 3.639818138325042*^9}}],

Cell["\<\
A transistor and a capacitor are paired to create a memory cell, which \
represents a single bit of data. When capacitor is discharged, i.e.the \
voltage is between zero and one Volts, we represent its state with \
\[OpenCurlyQuote]0\[CloseCurlyQuote] and when the voltage is between two and \
five Volts capacitor\[CloseCurlyQuote] s state is represented with \
\[OpenCurlyQuote]1\[CloseCurlyQuote]. \
\>", "Text",
 CellChangeTimes->{3.6355989339035053`*^9, 3.639818059260635*^9, 
  3.639898424791189*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fCapacitor", "[", "x_", "]"}], ":=", 
  RowBox[{"0", "/;", 
   RowBox[{"0", "<", "x", "<", "1"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fCapacitor", "[", "x_", "]"}], ":=", 
  RowBox[{"1", "/;", 
   RowBox[{"2", "<", "x", "<", "5"}]}]}]}], "Input",
 CellChangeTimes->{{3.639816655504508*^9, 3.639816680549178*^9}, {
  3.6398167284437532`*^9, 3.639816767644966*^9}, {3.6398181659376583`*^9, 
  3.639818220516582*^9}, {3.639818325082223*^9, 3.639818366128277*^9}, {
  3.639818454561714*^9, 3.639818460167*^9}, {3.639818840352002*^9, 
  3.639818863966449*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"fCapacitor", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.639816770085958*^9, 3.6398168409393473`*^9}, {
  3.639818191783779*^9, 3.639818197315506*^9}, {3.639818867590539*^9, 
  3.639818870290991*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQPbcuic0wpdqOAQrmRb2xCleItIfxb/p2FSkoZML5
5e6RfKwKlXC+2xGHmO/ynXD+2iaT5g/yM+H8h4nrxN7Kr4TzqwOzE17L74Tz
OX/OPpmjdwrOLzxU3/Om6DKcr7dk8sUt627C+U/9MmTuWzyA86dLtckuTHgM
51sW7VjPfOYZnH/4+uyAfPVXcP6UpNAvX40R/LS3fDNqHBB8Luam+52RCH6A
Xkbekm4E/16LSc/N9wj+L8Ozx513vIbzz+xpyz51BMGf5+7AH3gRwXeM3RwW
9wrB7+iY+bRC5g2cL3Y/lXldA4Jv2PPPTsLzLZxvlPknZW0Ygm/i9qvLKQXB
N2P4di2nHsG3KXmbd3Argu8Rc2deltI7ON/L8taR//oIvrfYjVdTbBF8vwuX
zfZHIPghLqfPCfcj+Ak6u/7t+Y3gJ3HuUAnifA/nJz/b6vVcDMFPW7BxmqAR
gp8jslIvLQPBz/u4LOR3KYKff25J1YRmBL+oY8GxXfMQ/OLUeW/81yD4JU5z
hJ7uRPDL/0yP47+K4FfcnNqy5BGCX7Vt8irLDwh+9eSJF879RfDLHAWTb/xH
8AEw09ME
     "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQvY7r5xVWBgYHBjD4YB/x9r/ieyYEv2xCTN4iAQR/
ivHOXaFyCP6FyqLgPZYIPs8B7TdKoQj+jl/PCvYdQPBTTRd9jdRhhPPL6yqC
FL4i+K2vJl8+d44JzvfR4l/BM4sZzu9da3bAJ5EFzj8VvPhPiSUrnH/gbH6P
DjMbnL8pq9HhzF0EX87b3iJvCzuc7/w/pnl+DQecn3Jt/6cdoZxwvl1j09ZE
BS44f1L+x908zxH8Rw1Ln83fxw3nv07dmXKonQfO/5ArxH42kRfOX+d5+k+a
Lh+c/yzDwIz5K4IvtfrW5Paz/HB+c0LRorPeAnD+9z+Svd47EXyN3dNnnlIR
hPNNk4/6C3Yi+AfmiEqc+YrgaxwQ7fKLFoLzfVnfyF7ah+B/uP3k8EktYTg/
f06vcGc/gi/mEdV25DiCv++z2s///xF8AO0NrAY=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 5}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6398168224730453`*^9, 3.639816864062066*^9}, {
   3.6398182033237057`*^9, 3.6398182254140797`*^9}, {3.639818439732087*^9, 
   3.639818468730392*^9}, 3.6398197752777653`*^9, 3.640676793273614*^9, 
   3.6406768290870905`*^9}]
}, Open  ]],

Cell[TextData[{
 "Notice that numbers here in the intervals {0,1} and {2,5} are interpreted \
as voltage values. If we want to be precise we will use the Quantity function \
and unit symbols in ",
 StyleBox["Mathematica.",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.639818509537238*^9, 3.6398186406856318`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quantity", "[", 
  RowBox[{"3", ",", "\"\<Volt\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.639818643911821*^9, 3.639818685629867*^9}}],

Cell[BoxData[
 TemplateBox[{"3","\"V\"","volts","\"Volts\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.639818662760429*^9, 3.639818688621798*^9}, {
  3.640676818099786*^9, 3.6406768291183405`*^9}}]
}, Open  ]],

Cell["\<\
And we will rewrite the function above to accept voltage values only.\
\>", "Text",
 CellChangeTimes->{{3.639819395957347*^9, 3.639819435925288*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fvCapacitor", "[", 
   RowBox[{"v_", "?", "QuantityQ"}], "]"}], ":=", 
  RowBox[{"0", "/;", 
   RowBox[{"0", "<", 
    RowBox[{"QuantityMagnitude", "[", "v", "]"}], "<", 
    "1"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fvCapacitor", "[", 
   RowBox[{"v_", "?", "QuantityQ"}], "]"}], ":=", 
  RowBox[{"1", "/;", 
   RowBox[{"2", "<", 
    RowBox[{"QuantityMagnitude", "[", "v", "]"}], "<", "5"}]}]}]}], "Input",
 CellChangeTimes->{{3.639816655504508*^9, 3.639816680549178*^9}, {
  3.6398167284437532`*^9, 3.639816767644966*^9}, {3.6398181659376583`*^9, 
  3.639818220516582*^9}, {3.639818325082223*^9, 3.639818366128277*^9}, {
  3.639818454561714*^9, 3.639818460167*^9}, {3.639818840352002*^9, 
  3.639818863966449*^9}, {3.639818964502418*^9, 3.639818988559494*^9}, {
  3.6398190505903063`*^9, 3.6398190715852833`*^9}, {3.6398192908086643`*^9, 
  3.6398192978964767`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fvCapacitor", "[", 
  TemplateBox[{"3"},
   "QuantityUnit",
   DisplayFunction->(TooltipBox[
     StyleBox[
      RowBox[{#, "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{" ", "\"V\""}], "QuantityUnitTraditionalLabel"]}], 
      ShowStringCharacters -> False], "Unit: volts"]& ),
   InterpretationFunction->(RowBox[{"Quantity", "[", 
      RowBox[{#, ",", "\"Volts\""}], "]"}]& )], "]"}]], "Input",
 CellChangeTimes->{{3.6398190781307507`*^9, 3.639819085376412*^9}, {
  3.639819326224988*^9, 3.6398193333773193`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.639819086447763*^9, {3.6398193023274813`*^9, 3.6398193347530727`*^9}, {
   3.640676818474786*^9, 3.6406768291652155`*^9}}]
}, Open  ]],

Cell["\<\
This is a simple but powerful example that demonstrates how a symbol, the \
number 3 in arabic numeral form, has been transformed, interpreted as a \
voltage value through the function Quantity and then how it was interpreted \
again as 0 or 1 through the capacitor discharge function. Let us see now how \
0 and 1 can be interpreted.\
\>", "Text",
 CellChangeTimes->{{3.639819481330369*^9, 3.639819521877441*^9}, {
  3.639819586589223*^9, 3.639819720277253*^9}, {3.639820150661763*^9, 
  3.639820169277379*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["The Transistor Switch Function", "Subsubsubsection",
 CellChangeTimes->{{3.639820062054435*^9, 3.639820091957691*^9}}],

Cell["\<\
For the transistor, 1 is interpreted as the READ operation and 0 is \
interpreted as the CHANGE operation.\
\>", "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.6398201944278584`*^9, 3.639820232941523*^9}}],

Cell["\<\
Transistor state = 1 -> Read Capacitor State
Transistor state = 0 -> Change Capacitor State\
\>", "Text",
 CellChangeTimes->{{3.6398202588861237`*^9, 3.63982026523807*^9}}],

Cell[TextData[{
 "In ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " we can represent the above transformations with rules such as"
}], "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.639820326435295*^9, 3.639820363021757*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"1", "\[Rule]", " ", "READ"}], ",", 
    RowBox[{"0", "\[Rule]", "CHANGE"}]}], "}"}], ";"}]], "Input",
 CellChangeTimes->{{3.639820280088543*^9, 3.639820304820417*^9}, {
  3.6398207698011293`*^9, 3.639820782568666*^9}}],

Cell["\<\
Notice here that READ and CHANGE are symbols that have not been defined.\
\>", "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.639821253845484*^9, 3.6398212711179237`*^9}}],

Cell["\<\
Or we can build another function that accepts only two values, 0 and 1 as the \
transistor state input and outputs symbols that represent operations on the \
capacitor state.\
\>", "Text",
 CellChangeTimes->{{3.639820499596652*^9, 3.6398205919826*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fTransistor", "[", "state_", "]"}], ":=", 
  RowBox[{"READ", "/;", 
   RowBox[{"state", "==", "1"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fTransistor", "[", "state_", "]"}], ":=", 
  RowBox[{"CHANGE", "/;", 
   RowBox[{"state", "==", "0"}]}]}]}], "Input",
 CellChangeTimes->{{3.639821601188806*^9, 3.639821684889839*^9}, {
  3.639821715931361*^9, 3.639821718536388*^9}, {3.639821927234149*^9, 
  3.639821930607514*^9}, {3.639821966993916*^9, 3.639821972472807*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"fTransistor", "[", "1", "]"}], ",", 
   RowBox[{"fTransistor", "[", "0", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6398216894882193`*^9, 3.639821696884907*^9}, {
  3.639821739362308*^9, 3.6398217484641733`*^9}, {3.639821936913568*^9, 
  3.639821941182529*^9}, {3.639821983073781*^9, 3.639821989054522*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"READ", ",", "CHANGE"}], "}"}]], "Output",
 CellChangeTimes->{
  3.639821698963705*^9, {3.639821732157056*^9, 3.63982175010772*^9}, 
   3.639821942611413*^9, 3.639821990655016*^9, {3.640676818537286*^9, 
   3.6406768292433405`*^9}}]
}, Open  ]],

Cell["\<\
We may also say that READ is represented with 1 and CHANGE with 0\
\>", "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.639822656854546*^9, 3.639822674903019*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Logic Gate Representation", "Subsubsubsection",
 CellChangeTimes->{{3.639820062054435*^9, 3.639820091957691*^9}, {
  3.6398204508691387`*^9, 3.639820456637188*^9}}],

Cell["\<\
A different meaning is assigned here for the same values of 0 and 1. When \
state is 1 that is interpreted as the logic value True and when it is 0 that \
is interpreted as the logic value False.\
\>", "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.6398201944278584`*^9, 3.639820232941523*^9}, {
   3.639820664365418*^9, 3.639820664793998*^9}, {3.639822367645673*^9, 
   3.639822446559095*^9}, {3.639822583022304*^9, 3.639822583790353*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"1", "\[Rule]", "True"}], ",", " ", 
    RowBox[{"0", "\[Rule]", "False"}]}], "}"}], ";"}]], "Input",
 CellChangeTimes->{{3.639820703014821*^9, 3.639820705982791*^9}, {
  3.639820747913711*^9, 3.6398207861771317`*^9}}],

Cell["Or define a function as before ", "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.639822049181095*^9, 3.6398220542694817`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fMemory", "[", "state_", "]"}], ":=", 
  RowBox[{"True", " ", "/;", " ", 
   RowBox[{"state", "\[Equal]", "1"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fMemory", "[", "state_", "]"}], ":=", 
  RowBox[{"False", "/;", 
   RowBox[{"state", "\[Equal]", "0"}]}]}]}], "Input",
 CellChangeTimes->{{3.639822058537189*^9, 3.639822110328697*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"fMemory", "[", "0", "]"}], ",", 
   RowBox[{"fMemory", "[", "1", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.639822116402377*^9, 3.639822126311275*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{
  3.639822127528205*^9, {3.640676818599786*^9, 3.6406768293214655`*^9}}]
}, Open  ]],

Cell["\<\
In the opposite way we can represent True and False with 1 and 0\
\>", "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.639822168611742*^9, 3.639822212902154*^9}, {
   3.640671355325129*^9, 3.640671359519102*^9}}],

Cell["\<\
Boole is a Wolfram Language function that transforms symbols like True to \
integer 1 and False to integer 0\
\>", "Text",
 CellChangeTimes->{{3.6398208061885433`*^9, 3.639820816238467*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Boole", "[", "True", "]"}], ",", 
   RowBox[{"Boole", "[", "False", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6398208209708138`*^9, 3.63982083356673*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6398208345535917`*^9, {3.640676818631036*^9, 3.6406768293683405`*^9}}]
}, Open  ]],

Cell["\<\
We may also say that True is represented with 1 and False with 0\
\>", "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.639821018644959*^9, 3.6398210350698643`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Dichotomus Representation", "Subsubsubsection",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.63982142802114*^9, 3.6398214341923523`*^9}, {
   3.639892329138771*^9, 3.639892338163137*^9}}],

Cell["\<\
From the examples above it becomes clear that we can assign any \
interpretation to a dichotomus type of variable which we assign values such \
as Male/Female, On/Off, Yes/No or others. In all the cases the representation \
can be done with \[OpenCurlyQuote]0\[CloseCurlyQuote] and \[OpenCurlyQuote]1\
\[CloseCurlyQuote] symbols and the physical realization, i.e. storage of data \
can also be done using the same two integers.\
\>", "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, 3.639822735903839*^9, {3.639822775462963*^9, 
   3.6398227768371153`*^9}, 3.6398228475684443`*^9, {3.639892408051161*^9, 
   3.639892452188314*^9}, {3.639892529027814*^9, 3.639892544980266*^9}, {
   3.6398925784993277`*^9, 3.6398926492356567`*^9}, {3.639892884244094*^9, 
   3.6398930075648623`*^9}, {3.639893040747264*^9, 3.6398930419074783`*^9}, {
   3.640671403646222*^9, 3.6406714211194186`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Memory Addressing and Interpretation", "Subsubsubsection",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.63982142802114*^9, 3.6398214341923523`*^9}}],

Cell["\<\
A memory container is defined by a starting memory address and the sequence \
of bits to read, memLength. This is interpreted as a memObject.\
\>", "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, 3.639822735903839*^9, {3.639822775462963*^9, 
   3.6398227768371153`*^9}, 3.6398228475684443`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"isMemoryFunction", "[", 
   RowBox[{"memAddress", ",", "memLength"}], "]"}], "\[Rule]", 
  "memObject"}]], "Input",
 CellChangeTimes->{{3.639893272776792*^9, 3.6398932727772303`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"isMemoryFunction", "[", 
   RowBox[{"memAddress", ",", "memLength"}], "]"}], "\[Rule]", 
  "memObject"}]], "Output",
 CellChangeTimes->{{3.640676818662286*^9, 3.6406768293995905`*^9}}]
}, Open  ]],

Cell["\<\
For example a sequence of 8 bits, byte, that is encoded here with the string\
\>", "Text",
 CellChangeTimes->{{3.639893293403913*^9, 3.6398933082737226`*^9}, {
  3.639893385369423*^9, 3.6398933884898863`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringLength", "[", "\"\<01000001\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6398933135091457`*^9, 3.639893321200096*^9}, {
  3.639893362435967*^9, 3.639893369328829*^9}}],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{
  3.639893369926776*^9, {3.640676818693536*^9, 3.6406768294308405`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "[", 
  RowBox[{"\"\<01000001\>\"", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.6398933288058662`*^9, 3.639893350034992*^9}}],

Cell[BoxData["65"], "Output",
 CellChangeTimes->{{3.639893344209178*^9, 3.63989335132161*^9}, {
  3.640676818740411*^9, 3.6406768294777155`*^9}}]
}, Open  ]],

Cell["\<\
This byte is decoded in decimal system as the integer 65. And then according \
to ASCII coding scheme, number 65 is decoded as the character \
\[OpenCurlyDoubleQuote]A\[CloseCurlyDoubleQuote]. This in turn is interpreted \
as the capital letter \[OpenCurlyDoubleQuote]A\[CloseCurlyDoubleQuote] of the \
English Alphabet. Therefore this specific \[OpenCurlyDoubleQuote]A\
\[CloseCurlyDoubleQuote] can be represented with either an integer, or a \
binary number, or a character.\
\>", "Text",
 CellChangeTimes->{{3.6398934336469803`*^9, 3.639893459203113*^9}, {
  3.639893502459054*^9, 3.639893564028654*^9}, {3.639893620284356*^9, 
  3.639893633852523*^9}, {3.63989366394845*^9, 3.6398937282282743`*^9}, {
  3.639893814292849*^9, 3.63989387419678*^9}, {3.6406715080762014`*^9, 
  3.640671519599655*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", "\"\<A\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6398947978839197`*^9, 3.639894804608645*^9}}],

Cell[BoxData["String"], "Output",
 CellChangeTimes->{
  3.639894805551132*^9, {3.640676818771661*^9, 3.6406768295089655`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ToCharacterCode", "[", "\"\<A\>\"", "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.639893730616798*^9, 3.639893736057817*^9}, {
  3.639894845494753*^9, 3.6398948596620083`*^9}}],

Cell[BoxData["65"], "Output",
 CellChangeTimes->{
  3.639894860813116*^9, {3.640676818802911*^9, 3.6406768295402155`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.639894814272139*^9, 3.639894822078582*^9}, {
  3.639894866742587*^9, 3.639894867454924*^9}}],

Cell[BoxData["Integer"], "Output",
 CellChangeTimes->{
  3.639894826946789*^9, 3.639894869378335*^9, {3.640676818834161*^9, 
   3.6406768295714655`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BaseForm", "[", 
  RowBox[{"65", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.639893741151576*^9, 3.639893746645546*^9}}],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   SubscriptBox["\<\"1000001\"\>", "\<\"2\"\>"],
   65,
   Editable->False],
  BaseForm[#, 2]& ]], "Output",
 CellChangeTimes->{
  3.6398937478947563`*^9, 3.6398941493283567`*^9, 3.639894333028266*^9, 
   3.6398944128268633`*^9, 3.639894448943111*^9, 3.639894872130258*^9, {
   3.640676818865411*^9, 3.6406768296495905`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.639894442687305*^9, 3.639894444899972*^9}}],

Cell[BoxData["Integer"], "Output",
 CellChangeTimes->{{3.6398944458134203`*^9, 3.639894455348576*^9}, 
   3.6398948758754396`*^9, {3.640676818912286*^9, 3.6406768296964655`*^9}}]
}, Open  ]],

Cell[TextData[{
 "Therefore in the example above we can distinguish ",
 StyleBox["the notion of the interpretation",
  FontWeight->"Bold"],
 ", e.g. \[OpenCurlyDoubleQuote]The capital letter A of the English Alphabet\
\[CloseCurlyDoubleQuote] as an ",
 StyleBox["information resource",
  FontWeight->"Bold"],
 ", that remains the same for any ",
 StyleBox["representation, i.e. the displayed form of it",
  FontWeight->"Bold"],
 " such as character \[OpenCurlyDoubleQuote]A\[CloseCurlyDoubleQuote], the \
integer number 65, and the binary number ",
 Cell[BoxData[
  SubscriptBox["\<\"1000001\"\>", "\<\"2\"\>"]], "Output",
  CellChangeTimes->{3.6398937478947563`*^9, 3.6398941493283567`*^9, 
   3.639894333028266*^9, 3.6398944128268633`*^9, 3.639894448943111*^9}],
 ". There is a ",
 StyleBox["third notion of the realization",
  FontWeight->"Bold"],
 ", i.e. the type of container that stores the value of the symbol for \
evaluation purposes. In the first case the character \[OpenCurlyDoubleQuote]A\
\[CloseCurlyDoubleQuote] is stored into a string container but the other two \
representations are integer expressions. The binary form of letter \
\[OpenCurlyDoubleQuote]A\[CloseCurlyDoubleQuote] affects printing but not \
evaluation as it is stored in the same way as number 65."
}], "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.639893767659327*^9, 3.6398937764684877`*^9}, {
   3.639893949955839*^9, 3.639894010939796*^9}, {3.639894058029405*^9, 
   3.639894077732457*^9}, {3.63989461540445*^9, 3.639894768509083*^9}, {
   3.639894931844347*^9, 3.639894977844818*^9}, {3.639895194764574*^9, 
   3.639895486477089*^9}, {3.639895518133923*^9, 3.639895526173827*^9}, {
   3.639895556525976*^9, 3.639895594349118*^9}, {3.6398956653170433`*^9, 
   3.639895670900708*^9}}],

Cell["Now consider a 32bit representation of the number 65", "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.639897948876545*^9, 3.639897972534746*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringLength", "[", "\"\<00000000000000000000000001000001\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.639897989386903*^9, 3.6398980195576353`*^9}}],

Cell[BoxData["32"], "Output",
 CellChangeTimes->{
  3.6398980206872253`*^9, {3.640676818943536*^9, 3.6406768297433405`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", "\"\<00000000000000000000000001000001\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.639898055040564*^9, 3.6398980629498796`*^9}}],

Cell[BoxData["String"], "Output",
 CellChangeTimes->{
  3.639898064064836*^9, {3.640676818974786*^9, 3.6406768297902155`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "[", 
  RowBox[{"\"\<00000000000000000000000001000001\>\"", ",", "2"}], 
  "]"}]], "Input"],

Cell[BoxData["65"], "Output",
 CellChangeTimes->{
  3.639898023729748*^9, {3.640676819006036*^9, 3.6406768298370905`*^9}}]
}, Open  ]],

Cell["\<\
This 32bit representation is stored and it is evaluated as a string of \
digits, not as a number. It is the function FromDigits that converts the \
string to an integer number.\
\>", "Text",
 CellChangeTimes->{{3.639898040551652*^9, 3.6398982092784653`*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Building higher abstractions from primitives", "Subsubsection",
 CellChangeTimes->{{3.639898723258532*^9, 3.6398987290397587`*^9}}],

Cell[CellGroupData[{

Cell["Display Representation - VGA - compatible text mode", "Subsubsubsection",
 CellChangeTimes->{{3.639898802643824*^9, 3.639898814927678*^9}}],

Cell["\<\
According to Wikipedia, \[OpenCurlyDoubleQuote]Text mode is a computer \
display mode in which content is internally represented on a computer screen \
in terms of characters rather than individual pixels\[CloseCurlyDoubleQuote].

By far the most common text mode used in DOS environments, and initial \
Windows consoles, is the default 80 columns by 25 rows, or 80x25, where each \
character is represented by a dot matrix (a matrix of bits). The MDA \
(Monochrome Display Adapter) mode is using a 9x14 matrix of pixels. A pixel \
is is the smallest controllable element of a picture represented on the \
screen. The total graphics resolution of the MDA is calculated by multiplying \
the 80x25 matrix of characters with the 9x14 matrix of pixels which is \
720x350 pixels.\
\>", "Text",
 CellChangeTimes->{{3.639898858148117*^9, 3.6398988659354362`*^9}, {
  3.6398989103654547`*^9, 3.639898960902391*^9}, {3.6406718926070676`*^9, 
  3.6406719033707395`*^9}, {3.640671939954724*^9, 3.640671967133435*^9}}],

Cell["\<\
Therefore, any display content can be represented on a 80x25 matrix of \
characters and the 80x25 matrix of characters is realized on a 720x350 matrix \
of pixels. The most primitive element here is the pixel and we use them to \
build a higher abstraction layer which is made of characters. Then a \
character can play the role of a fundamental unit that is used to compose \
words, sentences and even textual graphics.\
\>", "Text",
 CellChangeTimes->{{3.639899175150999*^9, 3.639899281357823*^9}, {
  3.639899464662456*^9, 3.639899496485608*^9}, {3.639899529181382*^9, 
  3.6398996497510233`*^9}, {3.639900427350945*^9, 3.639900433549419*^9}, {
  3.640933371950758*^9, 3.6409334168531017`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Content Representation - Strings, Words, Files and Folders and Drives\
\>", "Subsubsubsection",
 CellChangeTimes->{{3.6398988322761497`*^9, 3.639898839457436*^9}}],

Cell[TextData[{
 "Apparently there is a chain of interpretations, representations and \
realizations that are built in a consecutive order. ",
 StyleBox["This chain of semiosis reveals the mechanism that we can use to \
build higher levels of abstraction. ",
  FontWeight->"Bold"],
 "At each step the symbol that is used to link together the signifier with \
the signified can become a fundamental unit, i.e. signifier to build the next \
level of abstraction. Thus we can move in two directions, we can generalize \
or we can specialize. In the following example we start with a generalization \
procedure, and we read from left to right."
}], "Text",
 CellChangeTimes->{{3.639900462099935*^9, 3.6399004700871353`*^9}, {
  3.639900991630314*^9, 3.6399010730221043`*^9}, {3.639901169934472*^9, 
  3.639901260661756*^9}, {3.639901304582377*^9, 3.6399013155106916`*^9}, {
  3.639901360222912*^9, 3.6399014720071077`*^9}, {3.63990254345612*^9, 
  3.639902626368463*^9}, {3.6399026581595783`*^9, 3.63990269001497*^9}}],

Cell[TextData[{
 "Matrix of ",
 StyleBox["Bits",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Signifier)",
  FontColor->RGBColor[1, 0.5, 0]],
 "\t\t\tisSymbolizedAs\[Rule]",
 StyleBox["Character",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Sign)",
  FontColor->RGBColor[1, 0, 0]],
 "\t\tisSignifiedAs\[Rule]",
 StyleBox["Letter",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Signified)",
  FontColor->RGBColor[1, 0, 1]]
}], "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.639900539823032*^9, 3.6399006150388813`*^9}, {
   3.639900674077766*^9, 3.6399006791505003`*^9}, 3.639900827805975*^9, {
   3.639902757040169*^9, 3.6399028005031843`*^9}, {3.639903965976017*^9, 
   3.639903967167716*^9}}],

Cell[TextData[{
 "Sequence of ",
 StyleBox["Characters",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Signifier)",
  FontColor->RGBColor[1, 0.5, 0]],
 " \t\tisSymbolizedAs\[Rule]",
 StyleBox["String",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Sign) ",
  FontColor->RGBColor[1, 0, 0]],
 "\t\tisSignifiedAs\[Rule]",
 StyleBox["Word",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Signified)",
  FontColor->RGBColor[1, 0, 1]]
}], "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.639900582967453*^9, 3.639900611710806*^9}, {
   3.639900690926622*^9, 3.639900712702766*^9}, 3.639900831869708*^9, {
   3.6399028132232122`*^9, 3.6399028134310617`*^9}, {3.639902853455422*^9, 
   3.6399028536561327`*^9}}],

Cell[TextData[{
 "Sequence of ",
 StyleBox["Strings",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Signifier)",
  FontColor->RGBColor[1, 0.5, 0]],
 "\t\tisSymbolizedAs\[Rule]",
 StyleBox["Sentence",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Sign)",
  FontColor->RGBColor[1, 0, 0]],
 "\t\tisSignifiedAs\[Rule]",
 StyleBox["Statement",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Signified)",
  FontColor->RGBColor[1, 0, 1]]
}], "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.6399007526950893`*^9, 3.639900766486855*^9}, {
   3.639900839686677*^9, 3.63990088200603*^9}, {3.639902820799253*^9, 
   3.6399028209430227`*^9}, {3.639902859959043*^9, 3.639902860174539*^9}}],

Cell[TextData[{
 "Sequence of ",
 StyleBox["Sentences",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Signifier)",
  FontColor->RGBColor[1, 0.5, 0]],
 "\t\tisSymbolizedAs\[Rule]",
 StyleBox["Text File",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Sign)",
  FontColor->RGBColor[1, 0, 0]],
 "\t\tisSignifiedAs\[Rule]",
 StyleBox["Document",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Signified)",
  FontColor->RGBColor[1, 0, 1]]
}], "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, 3.639900788110684*^9, {3.63990084583817*^9, 
   3.639900846606331*^9}, {3.639900888246607*^9, 3.639900896021978*^9}, {
   3.6399028265509644`*^9, 3.6399028267359324`*^9}, {3.639902865558715*^9, 
   3.639902865750292*^9}}],

Cell[TextData[{
 "Collection of ",
 StyleBox["Text Files",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Signifier)",
  FontColor->RGBColor[1, 0.5, 0]],
 "\t\tisSymbolizedAs\[Rule]",
 StyleBox["Folder",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Sign)",
  FontColor->RGBColor[1, 0, 0]],
 "\t\tisSignifiedAs\[Rule]",
 StyleBox["Folded cover for holding a collection of documents",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Signified)",
  FontColor->RGBColor[1, 0, 1]]
}], "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, 3.639900794886861*^9, {3.639900852318038*^9, 
   3.639900853086402*^9}, {3.6399009030221033`*^9, 3.6399009088539343`*^9}, {
   3.639902203510686*^9, 3.639902208550253*^9}, {3.639902331167156*^9, 
   3.63990233206345*^9}, 3.6399023633498363`*^9, {3.639902833335116*^9, 
   3.639902833526866*^9}, {3.639902872958942*^9, 3.639902873134714*^9}, {
   3.6399030896956787`*^9, 3.639903090822757*^9}}],

Cell[TextData[{
 "Collection of ",
 StyleBox["Folders",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Signifier)",
  FontColor->RGBColor[1, 0.5, 0]],
 "\t\tisSymbolizedAs\[Rule]",
 StyleBox["Drive",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Sign)",
  FontColor->RGBColor[1, 0, 0]],
 "\t\t\tisSignifiedAs\[Rule]",
 StyleBox["Filing Cabinet",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Signified)",
  FontColor->RGBColor[1, 0, 1]]
}], "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, 3.639900802759437*^9, {3.639900922238365*^9, 
   3.63990092873442*^9}, {3.6399011385026903`*^9, 3.639901138989984*^9}, {
   3.639902219958551*^9, 3.6399022228625298`*^9}, {3.6399023294233828`*^9, 
   3.6399023302783937`*^9}, {3.6399028396788197`*^9, 
   3.6399028398626957`*^9}, {3.6399028872630796`*^9, 
   3.6399028884309607`*^9}, {3.639902942367484*^9, 3.63990294545479*^9}, {
   3.6399031054227753`*^9, 3.639903105558681*^9}}],

Cell[TextData[StyleBox["The same example can be read backwards, i.e. from \
right to left if we change the linked phrases",
 FontWeight->"Bold",
 FontSlant->"Italic",
 Background->GrayLevel[0.85]]], "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, 3.639900812206997*^9, {3.6399009528545856`*^9, 
   3.639900974558414*^9}, {3.639902702454907*^9, 3.639902730663126*^9}, {
   3.639902897686863*^9, 3.639902909567031*^9}}],

Cell[TextData[{
 "Collection of ",
 StyleBox["Folders",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Realization)",
  FontColor->RGBColor[1, 0.5, 0]],
 "\t\t\[LeftArrow]isRealizedAs ",
 StyleBox["Drive",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Representation)",
  FontColor->RGBColor[1, 0, 0]],
 "\t\[LeftArrow]isRepresentedAs ",
 StyleBox["Filing Cabinet",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Resource)",
  FontColor->RGBColor[1, 0, 1]]
}], "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, 3.639900981246571*^9, {3.639902138614685*^9, 
   3.639902156389393*^9}, {3.639902235541463*^9, 3.639902237269949*^9}, {
   3.639902327422576*^9, 3.639902373231215*^9}, {3.639902931751074*^9, 
   3.639902951742937*^9}, {3.6399031100716963`*^9, 3.639903110295258*^9}}],

Cell[TextData[{
 "Collection of ",
 StyleBox["Text Files",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Realization)\t\t",
  FontColor->RGBColor[1, 0.5, 0]],
 "\[LeftArrow]isRealizedAs ",
 StyleBox["Folder ",
  FontWeight->"Bold"],
 StyleBox["(Representation)\t",
  FontColor->RGBColor[1, 0, 0]],
 "\[LeftArrow]isRepresentedAs ",
 StyleBox["Folded cover for holding a collection of documents ",
  FontWeight->"Bold"],
 StyleBox["(Resource)",
  FontColor->RGBColor[1, 0, 1]]
}], "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.639902254678487*^9, 3.639902267774238*^9}, {
   3.639902325470189*^9, 3.639902326413632*^9}, {3.639902393430915*^9, 
   3.639902466039138*^9}, {3.639902509606381*^9, 3.63990250994328*^9}, {
   3.639903034551195*^9, 3.639903059128088*^9}, {3.639903157639803*^9, 
   3.639903168791213*^9}, 3.639903225304325*^9}],

Cell[TextData[{
 "Sequence of ",
 StyleBox["Sentences",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Realization)\t",
  FontColor->RGBColor[1, 0.5, 0]],
 "\[LeftArrow]isRealizedAs ",
 StyleBox["Text File",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Representation)\t",
  FontColor->RGBColor[1, 0, 0]],
 "\[LeftArrow]isRepresentedAs ",
 StyleBox["Document ",
  FontWeight->"Bold"],
 StyleBox["(Resource)",
  FontColor->RGBColor[1, 0, 1]]
}], "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.63990227131736*^9, 3.6399022880065527`*^9}, {
   3.6399023966467247`*^9, 3.639902474886819*^9}, {3.639902513974865*^9, 
   3.639902514342513*^9}, {3.639903038614869*^9, 3.6399030713900623`*^9}, {
   3.639903173238626*^9, 3.639903173374877*^9}, {3.63990322691965*^9, 
   3.639903227215528*^9}}],

Cell[TextData[{
 "Sequence of ",
 StyleBox["String ",
  FontWeight->"Bold"],
 StyleBox["(Realization)\t\t",
  FontColor->RGBColor[1, 0.5, 0]],
 "\[LeftArrow]isRealizedAs ",
 StyleBox["Sentence",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Representation)\t",
  FontColor->RGBColor[1, 0, 0]],
 "\[LeftArrow]isRepresentedAs ",
 StyleBox["Statement ",
  FontWeight->"Bold"],
 StyleBox["(Resource)",
  FontColor->RGBColor[1, 0, 1]]
}], "Text",
 CellChangeTimes->{{3.6399022912886963`*^9, 3.639902297501877*^9}, {
  3.6399023985748243`*^9, 3.6399024272142477`*^9}, {3.6399024773431168`*^9, 
  3.6399024790546503`*^9}, {3.639902516183344*^9, 3.639902516502862*^9}, {
  3.6399030413269453`*^9, 3.6399030419111853`*^9}, {3.6399030739596033`*^9, 
  3.639903078815247*^9}, {3.639903179783174*^9, 3.639903188759074*^9}, {
  3.639903228343144*^9, 3.639903228653598*^9}}],

Cell[TextData[{
 "Sequence of ",
 StyleBox["Characters",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Realization)\t",
  FontColor->RGBColor[1, 0.5, 0]],
 "\[LeftArrow]isRealizedAs ",
 StyleBox["String",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Representation)\t",
  FontColor->RGBColor[1, 0, 0]],
 "\[LeftArrow]isRepresentedAs ",
 StyleBox["Word ",
  FontWeight->"Bold"],
 StyleBox["(Resource)",
  FontColor->RGBColor[1, 0, 1]]
}], "Text",
 CellChangeTimes->{{3.6399023030541983`*^9, 3.639902314830638*^9}, {
  3.639902400422572*^9, 3.639902430495151*^9}, {3.639902481222762*^9, 
  3.639902482454205*^9}, {3.6399025239114313`*^9, 3.639902524214877*^9}, {
  3.639903043847207*^9, 3.639903044431081*^9}, {3.6399031921589603`*^9, 
  3.6399032301753674`*^9}}],

Cell[TextData[{
 "Matrix of ",
 StyleBox["Bits",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Realization)\t\t\t",
  FontColor->RGBColor[1, 0.5, 0]],
 "\[LeftArrow]isRealizedAs ",
 StyleBox["Character",
  FontWeight->"Bold"],
 " ",
 StyleBox["(Representation)\t",
  FontColor->RGBColor[1, 0, 0]],
 "\[LeftArrow]isRepresentedAs ",
 StyleBox["Letter ",
  FontWeight->"Bold"],
 StyleBox["(Resource)",
  FontColor->RGBColor[1, 0, 1]]
}], "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.639902319142889*^9, 3.6399023231348886`*^9}, {
   3.639902402031135*^9, 3.639902434390769*^9}, {3.639902485479804*^9, 
   3.6399024880068693`*^9}, {3.6399025256634073`*^9, 3.639902525982972*^9}, {
   3.6399030458796167`*^9, 3.639903046383209*^9}, {3.6399032025673037`*^9, 
   3.63990323156773*^9}, {3.639903994055045*^9, 3.639903994591713*^9}}],

Cell["\<\
We have constructed a uniform generalization of the abstraction mechanism \
with a three-faceted representation:  
Signifier-Sign-Signified (S3) or Realization-Representation-Resource (R3) \
based on the theory of semiosis.\
\>", "Text",
 CellChangeTimes->{{3.63990516725369*^9, 3.6399053157917852`*^9}, 
   3.639905983353984*^9, {3.640672113348067*^9, 3.640672176969161*^9}}]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Symbolic Expressions", "Section",
 CellChangeTimes->{{3.640676572001246*^9, 3.6406765839669733`*^9}, {
  3.640676998351739*^9, 3.640676998617364*^9}}],

Cell[TextData[{
 "Everything in Wolfram Language is represented with an expression, but every \
expression has a head, i.e. ",
 StyleBox["Symbol",
  FontWeight->"Bold"],
 " that specifies its functionality and computability. The ",
 ButtonBox["Basic Internal Architecture",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/BasicInternalArchitecture"],
 " tutorial explains how crucial is the role of Wolfram Language ",
 StyleBox["Symbol. ",
  FontWeight->"Bold"],
 "Every expression is structured and parsed according to the placement of \
symbols. \n\nFor each ",
 StyleBox["Symbol",
  FontWeight->"Bold"],
 ", a pointer entry, i.e. a fixed computer memory address, in a central table \
of all symbols is defined in a Wolfram Language session. Therefore each ",
 StyleBox["Symbol ",
  FontWeight->"Bold"],
 "represents a pointer that specifies an address in computer memory at which \
the ",
 ButtonBox["internal representation",
  BaseStyle->"Hyperlink",
  ButtonData->"Internal Representation"],
 " of the actual expression is found. This memory address contains also a \
pointer to a string giving the symbol\[CloseCurlyQuote]s name, as well as \
other pointers, i.e. other Symbols, to evaluate subexpressions. The names of \
symbols defined by the user in a session are placed in the Global` context. \
We can take a list of these with the following command."
}], "Text",
 CellChangeTimes->{{3.621145330679023*^9, 3.6211454786447573`*^9}, {
  3.621146177613552*^9, 3.621146192519802*^9}, {3.6211462390622034`*^9, 
  3.6211463532078342`*^9}, {3.6211463848583307`*^9, 3.621146553866143*^9}, {
  3.6211465853927307`*^9, 3.62114661559844*^9}, {3.62114667447344*^9, 
  3.6211467802890115`*^9}, {3.6211468357219954`*^9, 3.621146840763941*^9}, {
  3.62114692215493*^9, 3.6211469423346176`*^9}, {3.6211469967564926`*^9, 
  3.6211471097881403`*^9}, {3.6211471448849945`*^9, 3.6211471524195623`*^9}, {
  3.6211471866447926`*^9, 3.6211471899455805`*^9}, {3.621147310232624*^9, 
  3.6211473117560616`*^9}, {3.6211480016897964`*^9, 3.6211484409219117`*^9}, {
  3.6406767445519342`*^9, 3.640676746115411*^9}, {3.640851829031003*^9, 
  3.640851829031003*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6211478667678537`*^9, 3.621147884603791*^9}, {
   3.6211479490803537`*^9, 3.621147951822541*^9}, 3.640676749146661*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"CHANGE\"\>", ",", "\<\"fCapacitor\"\>", ",", "\<\"fMemory\"\>",
    ",", "\<\"fTransistor\"\>", ",", "\<\"fvCapacitor\"\>", 
   ",", "\<\"isMemoryFunction\"\>", ",", "\<\"memAddress\"\>", 
   ",", "\<\"memLength\"\>", ",", "\<\"memObject\"\>", ",", "\<\"READ\"\>", 
   ",", "\<\"state\"\>", ",", "\<\"v\"\>", ",", "\<\"x\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.640676749787286*^9, {3.640676819084161*^9, 3.6406768299152155`*^9}}]
}, Open  ]],

Cell["\<\
Built-in Wolfram language objects are in the System` context. Therefore we \
can issue the following command  to remove completely any previously \
user-defined symbols.\
\>", "Text",
 CellChangeTimes->{{3.6211483686047406`*^9, 3.621148403773474*^9}, {
  3.621148446617224*^9, 3.621148486367224*^9}}],

Cell[BoxData[
 RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.621147979963316*^9, 3.621147979963316*^9}, {
  3.6406767797238092`*^9, 3.640676786443536*^9}, {3.6406768635851374`*^9, 
  3.6406768654445124`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.6406768757902155`*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Functional Representations of Number 3
The Sign - Representation\
\>", "Subchapter",
 CellChangeTimes->{{3.64067642353738*^9, 3.640676474075466*^9}, {
  3.6408660259264107`*^9, 3.6408660298600044`*^9}, {3.6408677487271433`*^9, 
  3.6408677515796824`*^9}}],

Cell[TextData[{
 "In this section we will investigate the various forms that a symbol related \
to number \[OpenCurlyQuote]3\[CloseCurlyQuote] can take. ",
 StyleBox["In R3DM this is the sign that is used to signify something at a \
higher level and at the same time it is used to symbolize an internal \
representation, a realization",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.6408656109337683`*^9, 3.64086568829412*^9}, {
  3.640865751347309*^9, 3.640865863090473*^9}, {3.6408659175299263`*^9, 
  3.64086592811977*^9}, {3.640865962668598*^9, 3.6408660023736763`*^9}}],

Cell[CellGroupData[{

Cell["Display Format", "Section",
 CellChangeTimes->{{3.640678328135641*^9, 3.6406783334178677`*^9}}],

Cell[TextData[{
 "We start our journey into the ",
 StyleBox["re-presentations",
  FontWeight->"Bold"],
 "  with the display format, i.e. something that is presented, appears on the \
screen with a certain form"
}], "Text",
 CellChangeTimes->{{3.6406775715254817`*^9, 3.6406776227549734`*^9}, {
  3.6406778204178677`*^9, 3.640677843203024*^9}, {3.6406807649584465`*^9, 
  3.640680819181073*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BaseForm", "[", 
  RowBox[{"3", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.6406773358350515`*^9, 3.640677339742278*^9}, {
  3.6406779372557583`*^9, 3.6406779389432583`*^9}}],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   SubscriptBox["\<\"11\"\>", "\<\"2\"\>"],
   3,
   Editable->False],
  BaseForm[#, 2]& ]], "Output",
 CellChangeTimes->{
  3.640677340992278*^9, 3.640677465972747*^9, 3.6406778572840786`*^9, {
   3.640677940003805*^9, 3.640677969668844*^9}, 3.64067800339736*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox[
   InterpretationBox[
    SubscriptBox["\"\<11\>\"", "\"\<2\>\""],
    3,
    Editable->False],
   BaseForm[#, 2]& ], "//", "Head"}]], "Input",
 CellChangeTimes->{{3.6406778649120083`*^9, 3.640677867162985*^9}, {
  3.6406779347245083`*^9, 3.6406779830614223`*^9}}],

Cell[BoxData["Integer"], "Output",
 CellChangeTimes->{
  3.64067786789736*^9, {3.6406779457870083`*^9, 3.6406780050702114`*^9}}]
}, Open  ]],

Cell["\<\
Number three is displayed here in a binary format, but internally it is \
realized, evaluated, as an integer.\
\>", "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.6406778987928677`*^9, 3.6406779290047817`*^9}, {
   3.6406780597704067`*^9, 3.6406780647557583`*^9}, {3.64067829776943*^9, 
   3.6406783015360317`*^9}}],

Cell[CellGroupData[{

Cell["Cell Representation", "Subsection",
 CellChangeTimes->{{3.6211362807347803`*^9, 3.6211362895191555`*^9}, {
   3.621149809082855*^9, 3.6211498212989635`*^9}, {3.621161592928918*^9, 
   3.621161593663816*^9}, 3.6406811939819703`*^9}],

Cell[TextData[{
 "Cell is the low-level representation of a cell inside a Wolfram System \
notebook. In the previous examples the input of a symbol, such as ",
 StyleBox["Three",
  FontWeight->"Bold"],
 ", in a Wolfram System Notebook, is represented underneath with the string \
\[OpenCurlyDoubleQuote]Three\[CloseCurlyDoubleQuote]. That string is encoded \
in another expression, i.e. a Cell expression, that prints its content, \
BoxData, with a specified format. We can select \[OpenCurlyDoubleQuote]",
 StyleBox["Show Expression",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote] option from the menu Cell, or use the shortcut \
Shift+Ctrl+E to examine the underlying cell structure of any expression that \
is displayed on Input or Output Notebook cells."
}], "Text",
 CellChangeTimes->{{3.621136308178753*^9, 3.621136323875163*^9}, {
  3.621136359997452*^9, 3.6211365225969677`*^9}, {3.6211366823387756`*^9, 
  3.6211366849717917`*^9}, {3.621136873905549*^9, 3.6211369376321115`*^9}, {
  3.6211371035250916`*^9, 3.6211371813981266`*^9}, {3.6211372251034403`*^9, 
  3.6211372832537003`*^9}, {3.6211373386365128`*^9, 3.6211373415427628`*^9}, {
  3.6211429305663137`*^9, 3.6211429434569387`*^9}, {3.621148603074456*^9, 
  3.621148604886956*^9}, {3.621154661208379*^9, 3.621154839568303*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cell", "[", 
   RowBox[{
    RowBox[{"BoxData", "[", "\"\<Three\>\"", "]"}], ",", "\"\<Input\>\"", ",", 
    RowBox[{"FontSize", "\[Rule]", "24"}]}], "]"}], "//", 
  "DisplayForm"}]], "Input",
 CellChangeTimes->{{3.6211357083783097`*^9, 3.6211357261463375`*^9}, {
  3.62113751983419*^9, 3.6211375226509347`*^9}, {3.6211376060170813`*^9, 
  3.6211376073764563`*^9}, {3.6211486245735025`*^9, 3.6211487539612093`*^9}, {
  3.621148799781522*^9, 3.621148839414424*^9}, {3.621154618554743*^9, 
  3.6211546206852164`*^9}}],

Cell[BoxData[
 TagBox[Cell[BoxData["Three"], "Input",
   FontSize->24],
  DisplayForm]], "Output",
 CellChangeTimes->{
  3.6211357267719135`*^9, 3.6211358250002427`*^9, 3.6211375442761884`*^9, {
   3.6211376175014563`*^9, 3.6211376471733313`*^9}, 3.6211486507267847`*^9, 
   3.6211486857580843`*^9, 3.621148755953397*^9, 3.6211488108885584`*^9, 
   3.621148841310981*^9, 3.621154623553973*^9, 3.6211634670204954`*^9, 
   3.6211644345976863`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox[Cell[BoxData["Three"], "Input",
    FontSize->24],
   DisplayForm], "//", "Head"}]], "Input",
 CellChangeTimes->{{3.6211358143596177`*^9, 3.6211358285627427`*^9}, {
  3.6406808442514334`*^9, 3.640680844533558*^9}}],

Cell[BoxData["ExpressionCell"], "Output",
 CellChangeTimes->{{3.6211358182971177`*^9, 3.6211358298049307`*^9}, 
   3.621137545915847*^9, 3.6211376471967688`*^9, 3.621163467090808*^9, 
   3.6211644346198835`*^9, 3.6406808468281703`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Box Representation", "Subsection",
 CellChangeTimes->{{3.621093203345625*^9, 3.621093210158125*^9}, 
   3.621153658790476*^9, {3.6408496451463966`*^9, 3.6408496464302983`*^9}}],

Cell[TextData[{
 "The following low-level box constructs represents a textual and graphical \
display form of three to the power of three (",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["3", "3"], TraditionalForm]]],
 "). These boxes are usually arranged in a nested collection that correspond \
to objects that are to be placed at definite relative positions in two \
dimensions, see \[OpenCurlyDoubleQuote]",
 ButtonBox["Representing Textual Forms by Boxes",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/RepresentingTextualFormsByBoxes"],
 "\[CloseCurlyDoubleQuote],"
}], "Text",
 CellChangeTimes->{{3.621150351886418*^9, 3.621150385532251*^9}, {
  3.621150439717101*^9, 3.6211504867071695`*^9}, {3.621150566418107*^9, 
  3.621150716619686*^9}, {3.621150785736873*^9, 3.621150785736873*^9}, {
  3.6211535099454765`*^9, 3.621153560868601*^9}, {3.6406824735353856`*^9, 
  3.6406824936711273`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "SuperscriptBox of 3 to the 3 ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[TildeFullEqual]", 
    SuperscriptBox["3", "3"]}], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.6211347236186485`*^9, 3.62113472559774*^9}, {
  3.621134911506795*^9, 3.62113491314742*^9}, {3.6211539628651953`*^9, 
  3.6211539634347305`*^9}, {3.6211593579670134`*^9, 3.621159406693576*^9}, {
  3.6211595176232634`*^9, 3.6211595225920134`*^9}, {3.6211595690410194`*^9, 
  3.621159571395484*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SuperscriptBox", "[", 
   RowBox[{"3", ",", "3"}], "]"}], "//", "StandardForm"}]], "Input",
 CellChangeTimes->{{3.621154978514405*^9, 3.6211549839860106`*^9}}],

Cell[BoxData[
 RowBox[{"SuperscriptBox", "[", 
  RowBox[{"3", ",", "3"}], "]"}]], "Output",
 CellChangeTimes->{3.6211549850457287`*^9, 3.6211567609956408`*^9, 
  3.6211567957768908`*^9, 3.6211572055588093`*^9, 3.6211634674892454`*^9, 
  3.621164434808554*^9, 3.640682536633042*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "Head"}]], "Input",
 CellChangeTimes->{{3.6211567524643908`*^9, 3.6211567547143908`*^9}}],

Cell[BoxData["SuperscriptBox"], "Output",
 CellChangeTimes->{{3.6211567561909533`*^9, 3.6211567632925158`*^9}, 
   3.6211567995737658`*^9, 3.621157205769747*^9, 3.621163467559558*^9, 
   3.6211644348196526`*^9, 3.640682536773667*^9}]
}, Open  ]],

Cell["\<\
Here StandardForm refers literraly to the output of the Input Cell \
Expression. But this specific cell expression cannot be interpreted or \
formatted further. Let us examine the structure of the expression underneath.\
\>", "Text",
 CellChangeTimes->{{3.6211550326550403`*^9, 3.6211552018197126`*^9}, {
  3.6211563141133227`*^9, 3.621156378059784*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cell", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"BoxData", "[", "\[IndentingNewLine]", 
      RowBox[{"RowBox", "[", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"\"\<SuperscriptBox\>\"", ",", "\"\<[\>\"", ",", 
         RowBox[{"RowBox", "[", 
          RowBox[{"{", 
           RowBox[{
           "\"\<3\>\"", ",", " ", "\"\<,\>\"", ",", " ", "\"\<3\>\""}], "}"}],
           "]"}], ",", " ", "\"\<]\>\""}], "}"}], "\[IndentingNewLine]", 
       "]"}], "\[IndentingNewLine]", "]"}], ",", " ", "\"\<Output\>\""}], 
    "\[IndentingNewLine]", "]"}], "//", "DisplayForm"}], "\n"}]], "Input",
 CellChangeTimes->{{3.62115526038741*^9, 3.6211553434298286`*^9}, {
  3.6211553925548286`*^9, 3.621155395578266*^9}, {3.6406826274699554`*^9, 
  3.640682656124253*^9}}],

Cell[BoxData[
 TagBox[Cell[BoxData[
   RowBox[{"SuperscriptBox", "[", 
    RowBox[{"3", ",", "3"}], "]"}]], "Output"],
  DisplayForm]], "Output",
 CellChangeTimes->{3.6211553973829536`*^9, 3.621156397953895*^9, 
  3.6211564492346363`*^9, 3.6211567698081408`*^9, 3.6211568029956408`*^9, 
  3.6211572058330283`*^9, 3.621163467606433*^9, 3.6211644348418493`*^9, 
  3.640682536820542*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "Head"}]], "Input",
 CellChangeTimes->{{3.6211567730425158`*^9, 3.6211567744253283`*^9}}],

Cell[BoxData["Cell"], "Output",
 CellChangeTimes->{3.6211567755972033`*^9, 3.6211568110112658`*^9, 
  3.621157205854122*^9, 3.6211634676767454`*^9, 3.621164434852947*^9, 
  3.640682536867417*^9}]
}, Open  ]],

Cell["\<\
But the RawBoxes construct on the above SuperscriptBox expression prints the \
low-level SuperscriptBox construct in explicit two-dimensional form. \
Nevertheless RawBoxes IS NOT a wrapper, it affects both display and \
evaluation.\
\>", "Text",
 CellChangeTimes->{{3.621155407250141*^9, 3.6211555172039747`*^9}, {
  3.6211555802548513`*^9, 3.62115558137945*^9}, {3.6211564424024897`*^9, 
  3.6211565448380203`*^9}, {3.6211572354580956`*^9, 3.6211572638661165`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SuperscriptBox", "[", 
   RowBox[{"3", ",", "3"}], "]"}], "//", "RawBoxes"}]], "Input",
 CellChangeTimes->{{3.6211554853987055`*^9, 3.621155488677354*^9}, {
  3.621156404849615*^9, 3.621156419754223*^9}}],

Cell[BoxData[
 SuperscriptBox["3", "3"]], "Output",
 CellChangeTimes->{
  3.621155489300149*^9, {3.6211564064006433`*^9, 3.6211564516568494`*^9}, 
   3.6211565534161453`*^9, 3.6211567249642715`*^9, 3.6211568142222033`*^9, {
   3.6211569372156773`*^9, 3.6211569502356105`*^9}, 3.62115720589631*^9, 
   3.621163467747058*^9, 3.621164434875144*^9, 3.640682536929917*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "Head"}]], "Input",
 CellChangeTimes->{{3.6211567144783716`*^9, 3.6211567173231273`*^9}}],

Cell[BoxData["RawBoxes"], "Output",
 CellChangeTimes->{{3.6211567185284266`*^9, 3.6211567273748703`*^9}, 
   3.6211568170347033`*^9, 3.621156954805445*^9, 3.6211572059174037`*^9, 
   3.621163467793933*^9, 3.6211644348862424`*^9, 3.640682536976792*^9}]
}, Open  ]],

Cell["The same result is printed using the DisplayForm", "Text",
 CellChangeTimes->{{3.621155512997719*^9, 3.6211555582676983`*^9}, {
  3.6211555916089735`*^9, 3.621155612679286*^9}, {3.6211556939839735`*^9, 
  3.621155716741786*^9}, {3.621156562720833*^9, 3.621156603033333*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SuperscriptBox", "[", 
   RowBox[{"3", ",", "3"}], "]"}], "//", "DisplayForm"}]], "Input",
 CellChangeTimes->{{3.621092466876875*^9, 3.621092503314375*^9}, {
  3.621092548533125*^9, 3.621092548845625*^9}, {3.621134150689125*^9, 
  3.621134152876625*^9}, {3.621134478157875*^9, 3.6211344788797503`*^9}}],

Cell[BoxData[
 TagBox[
  SuperscriptBox["3", "3"],
  DisplayForm]], "Output",
 CellChangeTimes->{{3.6210924975175*^9, 3.621092504158125*^9}, 
   3.6210927520175*^9, 3.621134155376625*^9, 3.621134479601625*^9, 
   3.6211346964439535`*^9, 3.62113473695333*^9, {3.6211508400204906`*^9, 
   3.6211508583517075`*^9}, 3.6211555649345512`*^9, 3.621155625851161*^9, 
   3.621156610861458*^9, 3.6211566913364964`*^9, 3.6211568224722033`*^9, 
   3.6211569609061575`*^9, 3.621157205980685*^9, 3.621163467887683*^9, 
   3.6211644349084387`*^9, 3.640682537023667*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "Head"}]], "Input",
 CellChangeTimes->{{3.6211566825764527`*^9, 3.6211566858228116`*^9}}],

Cell[BoxData["SuperscriptBox"], "Output",
 CellChangeTimes->{{3.6211566865062556`*^9, 3.621156693084403*^9}, 
   3.6211568254487658`*^9, 3.6211569628619223`*^9, 3.621157206022873*^9, 
   3.6211634680986204`*^9, 3.6211644349195375`*^9, 3.640682537070542*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cell", "[", 
   RowBox[{
    RowBox[{"BoxData", "[", " ", 
     RowBox[{"SuperscriptBox", "[", 
      RowBox[{"\"\<3\>\"", ",", " ", "\"\<3\>\""}], "]"}], "]"}], ",", " ", 
    "\"\<Input\>\""}], "]"}], "//", "DisplayForm"}]], "Input",
 CellChangeTimes->{{3.621150939542369*^9, 3.621150948322631*^9}, {
  3.6211557716089735`*^9, 3.621155777058205*^9}}],

Cell[BoxData[
 TagBox[Cell[BoxData[
   SuperscriptBox["3", "3"]], "Input"],
  DisplayForm]], "Output",
 CellChangeTimes->{{3.6211509441141915`*^9, 3.6211509489238367`*^9}, 
   3.621155786698078*^9, {3.621156671405966*^9, 3.621156695715661*^9}, 
   3.6211568289409533`*^9, 3.621157206086154*^9, 3.621160053893027*^9, 
   3.621160086518027*^9, {3.621160248916464*^9, 3.6211602675024014`*^9}, 
   3.621163468168933*^9, 3.621164434941734*^9, 3.640682537133042*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "Head"}]], "Input",
 CellChangeTimes->{{3.621092567876875*^9, 3.62109256954875*^9}, 
   3.621134713775508*^9, 3.6211508433533115`*^9, {3.6211600890024014`*^9, 
   3.621160089869589*^9}}],

Cell[BoxData["Cell"], "Output",
 CellChangeTimes->{
  3.621092570564375*^9, 3.62109275204875*^9, 3.621134260736*^9, {
   3.621134715251748*^9, 3.62113474388009*^9}, {3.6211508446126165`*^9, 
   3.621150859991973*^9}, {3.6211566731145706`*^9, 3.621156697764283*^9}, 
   3.6211568314018908`*^9, 3.621157206149435*^9, 3.621160055978964*^9, 
   3.6211600911586514`*^9, 3.6211602695649014`*^9, 3.6211634682392454`*^9, 
   3.621164434952832*^9, 3.640682537195542*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%%", "//", "StandardForm"}]], "Input",
 CellChangeTimes->{{3.621160029893027*^9, 3.621160076510214*^9}}],

Cell[BoxData[
 RowBox[{"Cell", "[", 
  RowBox[{
   RowBox[{"BoxData", "[", 
    RowBox[{"SuperscriptBox", "[", 
     RowBox[{"\<\"3\"\>", ",", "\<\"3\"\>"}], "]"}], "]"}], 
   ",", "\<\"Input\"\>"}], "]"}]], "Output",
 CellChangeTimes->{{3.621160034650839*^9, 3.621160093291464*^9}, {
   3.6211602525961514`*^9, 3.621160271486777*^9}, 3.621163468309558*^9, 
   3.62116443496393*^9, 3.640682537242417*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Display Wrappers", "Subsubsection",
 CellChangeTimes->{{3.6211571428892746`*^9, 3.621157167897087*^9}}],

Cell["\<\
Notice that in the evaluation of the expressions above, FullForm, InputForm, \
StandardForm, DisplayForm act as \[OpenCurlyDoubleQuote]wrappers\
\[CloseCurlyDoubleQuote]. They affect display but not evaluation.\
\>", "Text",
 CellChangeTimes->{{3.621157041100212*^9, 3.621157135225212*^9}, 
   3.621157174928337*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Input and Output Representations", "Subsection",
 CellChangeTimes->{{3.6211434898586674`*^9, 3.6211434975930424`*^9}, {
   3.621148964969861*^9, 3.6211489662891026`*^9}, {3.621153651618601*^9, 
   3.6211536555795383`*^9}, 3.62116158500284*^9}],

Cell[TextData[{
 "Expressions in Wolfram language can be displayed with many formats \
depending on whether they are ",
 StyleBox["used for input or output. ",
  FontWeight->"Bold"],
 "Normally the naming of these display formats such as InputForm or \
OutputForm are paired with the input and output cells that are used for \
entering expressions and displaying results, but they can be interchangeable. \
There are many ways to enter (input of) an expression, e.g. from keyboard, \
from a notation palette, from cutting and paste other Cell expressions. \
Similarly there are many ways to display a result, i.e. what an expression \
returns as output. \n\nFor example, in the following input expression of ",
 Cell[BoxData[
  SqrtBox["3"]], "Input",
  CellChangeTimes->{{3.621142571755866*^9, 3.6211425736022263`*^9}}],
 ", a two-dimensional form, we instruct the kernel to output the result using \
the InputForm format. Notice that this is not necessarily the format we use \
to enter an expression. In fact input expressions can take any form, \
including the InputForm of course."
}], "Text",
 CellChangeTimes->{{3.6211426140396433`*^9, 3.6211426214653397`*^9}, {
   3.6211427289868183`*^9, 3.6211427413618183`*^9}, {3.6211435214992924`*^9, 
   3.6211435520149174`*^9}, {3.621144150650586*^9, 3.621144353213977*^9}, {
   3.6211448121536627`*^9, 3.6211448965101395`*^9}, {3.621144930064714*^9, 
   3.621145029064714*^9}, {3.621145059428014*^9, 3.6211451823790345`*^9}, {
   3.6211499794473624`*^9, 3.6211499804083*^9}, {3.6406818445967755`*^9, 
   3.640681866613115*^9}, {3.640681908130391*^9, 3.6406819335132036`*^9}, {
   3.6406819945219927`*^9, 3.640682022605977*^9}, {3.6408497169010763`*^9, 
   3.6408497199333024`*^9}, {3.6408498546550465`*^9, 3.640849935540789*^9}, {
   3.6408499899441094`*^9, 3.640849997602312*^9}, {3.640850111241769*^9, 
   3.640850120353097*^9}, 3.6408501746155396`*^9, {3.640850229967627*^9, 
   3.6408502332398205`*^9}, {3.640850293087598*^9, 3.6408503423363686`*^9}, {
   3.640850421857243*^9, 3.640850430962772*^9}, {3.640850519987417*^9, 
   3.640850537814912*^9}, {3.6408505766813498`*^9, 3.6408506147971473`*^9}, {
   3.640850645932068*^9, 3.6408507667197857`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SqrtBox["3"], "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.621142571755866*^9, 3.6211425736022263`*^9}}],

Cell["Sqrt[3]", "Output",
 CellChangeTimes->{3.6211425739553556`*^9, 3.621163467372058*^9, 
  3.6211644347530627`*^9, 3.640850779107658*^9}]
}, Open  ]],

Cell["\<\
Or if we reverse the display formats, then we can use one-dimensional form \
for the input of the expression, i.e. use the keyboard to enter Sqrt[3] and \
request a standard form for the output of the expression :\
\>", "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.6408508650699253`*^9, 3.6408509368149977`*^9}, {
   3.640850967223201*^9, 3.640850990301326*^9}, {3.6408510848550367`*^9, 
   3.6408510869966383`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sqrt", "[", "3", "]"}], "//", "StandardForm"}]], "Input",
 CellChangeTimes->{{3.640850808840293*^9, 3.6408508510997458`*^9}}],

Cell[BoxData[
 SqrtBox["3"]], "Output",
 CellChangeTimes->{{3.640850822897847*^9, 3.6408508518893003`*^9}}]
}, Open  ]],

Cell["\<\
StandardForm is the default format that is used for the output of expressions\
\>", "Text",
 CellChangeTimes->{{3.6211500278926888`*^9, 3.6211500738938017`*^9}, {
  3.640850861936716*^9, 3.6408508622847643`*^9}}],

Cell["\<\
Now, use the keyboard input form, Sqrt[3], again and format the output in a \
more traditional mathematical notation form : \
\>", "Text",
 CellChangeTimes->{{3.6211436159336834`*^9, 3.62114370443851*^9}, {
  3.64085102498199*^9, 3.6408510811880445`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sqrt", "[", "3", "]"}], "//", "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.6211435875461674`*^9, 3.62114359858523*^9}}],

Cell[BoxData[
 FormBox[
  SqrtBox["3"], TraditionalForm]], "Output",
 CellChangeTimes->{3.621143601163355*^9, 3.6211634674423704`*^9, 
  3.621164434786358*^9}]
}, Open  ]],

Cell[TextData[{
 "It is important at this point to understand that the various forms, that \
are used for input and output of expressions, do not affect the evaluation of \
the expression. This is because evaluation depends always on the ",
 ButtonBox["internal representation",
  BaseStyle->"Hyperlink",
  ButtonData->"Internal Representation"],
 ". FullForm, InputForm, StandardForm, DisplayForm act as display wrappers."
}], "Text",
 CellChangeTimes->{{3.6406821230317583`*^9, 3.6406821693081255`*^9}, {
  3.640682220853201*^9, 3.640682228994177*^9}, {3.640682386593979*^9, 
  3.640682427726792*^9}, {3.6406827455646825`*^9, 3.6406827464865575`*^9}, {
  3.6408511134175367`*^9, 3.6408511944917555`*^9}, {3.6408517283464327`*^9, 
  3.640851762075925*^9}, {3.6408517947224092`*^9, 3.6408517947224092`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["2D Low-Level Representation", "Subsection",
 CellChangeTimes->{{3.621153602774851*^9, 3.621153620868601*^9}, 
   3.621153661931101*^9, {3.6211539459352818`*^9, 3.621153974447658*^9}, {
   3.621161575438018*^9, 3.6211615798359833`*^9}, 3.6408496515911317`*^9, {
   3.640856735933243*^9, 3.640856738119766*^9}}],

Cell["\<\
We continue our discussion with more examples on the 2D display format of \
expressions.\
\>", "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.6408513493491774`*^9, 3.6408513737710524`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Superscript of 3 to the 3 ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", " ", 
    RowBox[{"(", 
     SuperscriptBox["3", "3"], ")"}]}], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.6211347305385485`*^9, 3.6211347321578083`*^9}, {
  3.6211349044052324`*^9, 3.6211349072177324`*^9}, {3.6211539776940165`*^9, 
  3.621153978018653*^9}, {3.6211595509753437`*^9, 3.62115956400062*^9}, {
  3.640858295122252*^9, 3.6408583044884624`*^9}}],

Cell[TextData[{
 "The following expression represents a 2D object that is displayed with a \
proper superscript format. Notice that this expression is not interpreted as \
Power[3,3]. It is only formatted as ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["3", "3"], TraditionalForm]]],
 " in StandardForm and DisplayForm"
}], "Text",
 CellChangeTimes->{
  3.6211581916068025`*^9, {3.6408556573254185`*^9, 3.640855657944171*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Superscript", "[", 
   RowBox[{"3", ",", "3"}], "]"}], "//", "DisplayForm"}]], "Input",
 CellChangeTimes->{{3.621092554876875*^9, 3.62109255973625*^9}, {
  3.62109329248625*^9, 3.621093317783125*^9}, {3.621134266407875*^9, 
  3.621134271189125*^9}, {3.6211346657815347`*^9, 3.621134674851847*^9}, {
  3.64085622412597*^9, 3.64085622590722*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{"3","3"},
   "Superscript"],
  DisplayForm]], "Output",
 CellChangeTimes->{3.640857129138702*^9}]
}, Open  ]],

Cell[TextData[{
 "If we copy and paste the previous output (",
 Cell[BoxData[
  TagBox[
   TemplateBox[{"3","3"},
    "Superscript"],
   DisplayForm]], "Output",
  CellChangeTimes->{
   3.621092560689375*^9, 3.621092752064375*^9, 3.62109331942375*^9, {
    3.621134263470375*^9, 3.62113427257975*^9}, 3.621134305345375*^9, {
    3.6211346451565347`*^9, 3.6211346766284103`*^9}, 3.6211347470784187`*^9, 
    3.6211510558520374`*^9, 3.6211569069202642`*^9, 3.621160304697714*^9, 
    3.6211603593683033`*^9, 3.6211605109192543`*^9, {3.6211605742942543`*^9, 
    3.621160600286442*^9}, 3.621163468356433*^9, 3.6211644349972253`*^9, 
    3.640855680816786*^9, 3.64085622684472*^9}],
 ") into an input expression we will have"
}], "Text",
 CellChangeTimes->{{3.6408562351611257`*^9, 3.640856284843743*^9}, {
  3.640857143737544*^9, 3.640857146820552*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[{"3","3"},
    "Superscript"], "//", "Defer"}], "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.6408555782444496`*^9, 3.6408555809807777`*^9}, {
  3.640855685636718*^9, 3.6408556859062476`*^9}, {3.6408557501716037`*^9, 
  3.64085575825622*^9}, {3.6408558145964146`*^9, 3.640855868378316*^9}, {
  3.6408559495023394`*^9, 3.640855950822652*^9}, {3.6408560014779253`*^9, 
  3.6408560022054644`*^9}, {3.6408560399623003`*^9, 3.640856043757222*^9}, {
  3.6408560850580034`*^9, 3.640856149488274*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Defer", "[", 
    RowBox[{"Superscript", "[", 
     RowBox[{"3", ",", "3"}], "]"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.640856087208394*^9, 3.640856096036457*^9}, {
   3.6408561355153913`*^9, 3.6408561654921803`*^9}, 3.6408571497922316`*^9}]
}, Open  ]],

Cell["\<\
But, entering superscript notation directly, through x Ctrl + ^ y will be \
interpreted as Power[x, y] :\
\>", "Text",
 CellChangeTimes->{{3.640856442952101*^9, 3.6408565020767975`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["3", "3"], " ", "//", "Defer"}], "//", 
  "FullForm"}]], "Input",
 CellChangeTimes->{{3.64085569243384*^9, 3.6408557382605577`*^9}, {
  3.6408557737171364`*^9, 3.640855797579566*^9}, {3.640856022864644*^9, 
  3.640856023599019*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Defer", "[", 
    RowBox[{"Power", "[", 
     RowBox[{"3", ",", "3"}], "]"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.6408561798808527`*^9, 3.6408571555021925`*^9}]
}, Open  ]],

Cell["\<\
Supersciptbox is the low-level representation of Superscript.\
\>", "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.64085659114711*^9, 3.640856629713516*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SuperscriptBox", "[", 
   RowBox[{"\"\<3\>\"", ",", "\"\<3\>\""}], "]"}], "//", 
  "DisplayForm"}]], "Input",
 CellChangeTimes->{{3.640856641693009*^9, 3.6408566607066803`*^9}}],

Cell[BoxData[
 TagBox[
  SuperscriptBox["3", "3"],
  DisplayForm]], "Output",
 CellChangeTimes->{
  3.6408566616842194`*^9, {3.640856967901016*^9, 3.640856982499649*^9}, 
   3.640857077528229*^9, 3.640857159601802*^9}]
}, Open  ]],

Cell[TextData[{
 "If we examine the previous output expression (",
 Cell[BoxData[
  TagBox[
   SuperscriptBox["3", "3"],
   DisplayForm]], "Output",
  CellChangeTimes->{
   3.6408566616842194`*^9, {3.640856967901016*^9, 3.640856982499649*^9}, 
    3.640857077528229*^9, 3.640857159601802*^9}],
 ") we see that it is evaluated as a Power expression"
}], "Text",
 CellChangeTimes->{{3.640857348248933*^9, 3.640857370518464*^9}, {
  3.6408576344438562`*^9, 3.6408576484448323`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   TagBox[
    SuperscriptBox["3", "3"],
    DisplayForm], "//", "Defer"}], "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.640856961761368*^9, 3.6408569779098053`*^9}, {
  3.6408570716864324`*^9, 3.6408570744676824`*^9}, {3.640857206268794*^9, 
  3.640857206706294*^9}, {3.640857273133052*^9, 3.640857304225938*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Defer", "[", 
    RowBox[{"Power", "[", 
     RowBox[{"3", ",", "3"}], "]"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.640856969160782*^9, 3.6408569849254303`*^9}, 
   3.6408570789784245`*^9, 3.6408572078078566`*^9, {3.6408572759289503`*^9, 
   3.640857305280529*^9}, 3.6408573732831125`*^9}]
}, Open  ]],

Cell["\<\
and If we use a more generic low-level representation using the TemplateBox\
\>", "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.6408567121656647`*^9, 3.6408567286978917`*^9}, {
   3.6408567608941803`*^9, 3.640856764339493*^9}, {3.6408572129240675`*^9, 
   3.640857227723872*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TemplateBox", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<3\>\"", ",", "\"\<3\>\""}], "}"}], ",", 
    "\"\<Superscript\>\""}], "]"}], "//", "RawBoxes"}]], "Input",
 CellChangeTimes->{{3.6211543416006804`*^9, 3.621154345555002*^9}, {
   3.621160431489523*^9, 3.621160432453963*^9}, 3.640855238663395*^9}],

Cell[BoxData[
 TemplateBox[{"3","3"},
  "Superscript"]], "Output",
 CellChangeTimes->{
  3.621154346153199*^9, 3.6211579793568025`*^9, {3.6211604134966183`*^9, 
   3.6211604504217997`*^9}, 3.621160624145817*^9, 3.621163468590808*^9, 
   3.6211644350527167`*^9, 3.640856787640274*^9, 3.6408571028443203`*^9, 
   3.6408572324660597`*^9, 3.6408573171044755`*^9, 3.640857377534089*^9}]
}, Open  ]],

Cell["\<\
this time the full form of this output is a Superscipt expression\
\>", "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.64085724580688*^9, 3.6408572545871534`*^9}, {
   3.6408573835448313`*^9, 3.640857399380769*^9}, {3.640857592205575*^9, 
   3.640857618043465*^9}, {3.640857661884286*^9, 3.6408576687524495`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[{"3","3"},
    "Superscript"], "//", "Defer"}], "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.640856996056326*^9, 3.6408569976805534`*^9}, {
  3.640857095434559*^9, 3.6408571013007183`*^9}, {3.6408572432951612`*^9, 
  3.6408572668664503`*^9}, {3.640857404514558*^9, 3.640857407957917*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Defer", "[", 
    RowBox[{"Superscript", "[", 
     RowBox[{"3", ",", "3"}], "]"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.640856998189736*^9, 3.6408571039920087`*^9, {3.6408572581896925`*^9, 
   3.6408572675383253`*^9}, 3.6408574089256907`*^9}]
}, Open  ]],

Cell["\<\
and then to print low - level boxes we can use an expression such as\
\>", "Text",
 CellChangeTimes->{{3.640856862702774*^9, 3.640856866242813*^9}, {
  3.6408569060807037`*^9, 3.6408569404088287`*^9}, {3.640857527363778*^9, 
  3.640857528762215*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cell", "[", 
   RowBox[{
    RowBox[{"BoxData", "[", 
     RowBox[{"TemplateBox", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<3\>\"", ",", "\"\<3\>\""}], "}"}], ",", 
       "\"\<Superscript\>\""}], "]"}], "]"}], ",", "\"\<Output\>\""}], "]"}], 
  "//", "DisplayForm"}]], "Input",
 CellChangeTimes->{{3.621154111922484*^9, 3.6211541180631094`*^9}, {
  3.6211542404068594`*^9, 3.6211542426568594`*^9}, {3.6211543165962257`*^9, 
  3.6211543184396987`*^9}, {3.621157895274704*^9, 3.621157916387897*^9}}],

Cell[BoxData[
 TagBox[Cell[BoxData[
   TemplateBox[{"3","3"},
    "Superscript"]], "Output"],
  DisplayForm]], "Output",
 CellChangeTimes->{3.6408574468060923`*^9}]
}, Open  ]],

Cell[TextData[{
 "But in this case the last output (",
 Cell[BoxData[
  TagBox[Cell[BoxData[
    TemplateBox[{"3","3"},
     "Superscript"]], "Output"],
   DisplayForm]], "Output",
  CellChangeTimes->{3.6408574468060923`*^9}],
 ") is internally represented as"
}], "Text",
 CellChangeTimes->{{3.640857531761239*^9, 3.640857561415536*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   TagBox[Cell[BoxData[
     TemplateBox[{"3","3"},
      "Superscript"]], "Output"],
    DisplayForm], "//", "Defer"}], "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.640857481540536*^9, 3.640857487111825*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Defer", "[", 
    RowBox[{"ExpressionCell", "[", 
     RowBox[{
      RowBox[{"Superscript", "[", 
       RowBox[{"3", ",", "3"}], "]"}], ",", "\"\<Output\>\""}], "]"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.640857487585458*^9}]
}, Open  ]],

Cell[TextData[{
 "With this example we see how differently the kernel evaluates ",
 Cell[BoxData[
  TagBox[Cell[BoxData[
    TemplateBox[{"3","3"},
     "Superscript"]], "Output"],
   DisplayForm]], "Input",
  CellChangeTimes->{{3.640857481540536*^9, 3.640857487111825*^9}}],
 " according to its ",
 ButtonBox["internal representation",
  BaseStyle->"Hyperlink",
  ButtonData->"Internal Representation"]
}], "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.6408577013335047`*^9, 3.6408577754692464`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Power of 3 to the 3  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", " ", 
    RowBox[{"(", 
     SuperscriptBox["3", "3"], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subsubsection",
 CellChangeTimes->{{3.621134891913045*^9, 3.62113490077242*^9}, {
   3.621159321668105*^9, 3.6211593243223267`*^9}, {3.621159586064099*^9, 
   3.621159586894487*^9}, 3.6408581735675645`*^9, {3.640858232778502*^9, 
   3.6408582709171743`*^9}}],

Cell["\<\
The following expression is evaluated and the integer 27 is returned as the \
output result.\
\>", "Text",
 CellChangeTimes->{{3.621158214177115*^9, 3.62115824947399*^9}, {
  3.6211583393383317`*^9, 3.621158452339555*^9}, {3.6408581637374864`*^9, 
  3.6408581649093614`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox["3", "3"]], "Input",
 CellChangeTimes->{{3.6211349323427324`*^9, 3.6211349340302324`*^9}}],

Cell[BoxData["27"], "Output",
 CellChangeTimes->{3.62113493555367*^9, 3.6211584608549004`*^9, 
  3.621163468825183*^9, 3.6211644351193066`*^9}]
}, Open  ]],

Cell["\<\
We use the unevaluated form of the expression above to examine other display \
formats\
\>", "Text",
 CellChangeTimes->{{3.621158528044367*^9, 3.621158549700617*^9}, {
  3.621158590856867*^9, 3.621158611809992*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Unevaluated", "[", 
   SuperscriptBox["3", "3"], "]"}], "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.640857836816903*^9, 3.640857838012215*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Unevaluated", "[", 
    RowBox[{"Power", "[", 
     RowBox[{"3", ",", "3"}], "]"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.621134982381795*^9, 3.6211584677136836`*^9, 
  3.621163468918933*^9, 3.6211644351526017`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Unevaluated", "[", 
   SuperscriptBox["3", "3"], "]"}], "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.6211347853326883`*^9, 3.621134827880581*^9}}],

Cell["Unevaluated[3^3]", "Output",
 CellChangeTimes->{{3.621134800546574*^9, 3.6211348297837477`*^9}, 
   3.621158482153742*^9, 3.621163469012683*^9, 3.6211644352413883`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Unevaluated", "[", 
   SuperscriptBox["3", "3"], "]"}], "//", "StandardForm"}]], "Input",
 CellChangeTimes->{{3.621134957350545*^9, 3.6211349609364824`*^9}}],

Cell[BoxData[
 RowBox[{"Unevaluated", "[", 
  SuperscriptBox["3", "3"], "]"}]], "Output",
 CellChangeTimes->{3.6211584909428043`*^9, 3.621163469059558*^9, 
  3.621164435263584*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Unevaluated", "[", 
   SuperscriptBox["3", "3"], "]"}], "//", "DisplayForm"}]], "Input",
 CellChangeTimes->{{3.6211586397287607`*^9, 3.621158659311886*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"Unevaluated", "[", 
   SuperscriptBox["3", "3"], "]"}],
  DisplayForm]], "Output",
 CellChangeTimes->{{3.621158647841446*^9, 3.621158663275861*^9}, 
   3.621163469153308*^9, 3.621164435274683*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Square root of 3 ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{"-", " ", 
     RowBox[{"(", 
      SuperscriptBox["3", 
       FractionBox["1", "2"]], ")"}]}]}], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.6211430161131887`*^9, 3.6211430314178762`*^9}, 
   3.6211593137251015`*^9, {3.621159715030864*^9, 3.621159778124614*^9}, {
   3.621159828582475*^9, 3.621159832492979*^9}, {3.6408582031759624`*^9, 
   3.6408582251749864`*^9}, {3.6408582606652207`*^9, 3.640858261516783*^9}}],

Cell["\<\
The symbol \[OpenCurlyDoubleQuote]Sqrt\[CloseCurlyDoubleQuote] is intepreted \
as the square root. We can enter an expression such as Sqrt[3] with this \
input format and the Wolfram Language evaluates it and returns the result \
with the default output format that prints a root symbol instead of the \
string \[OpenCurlyDoubleQuote]Sqrt\[CloseCurlyDoubleQuote]. Both the input \
and output format of Sqrt[3] can be displayed by entering cell expressions.\
\>", "Text",
 CellChangeTimes->{{3.621142189146126*^9, 3.621142376612141*^9}, {
  3.621142438510579*^9, 3.6211425211791763`*^9}, {3.6211430061288137`*^9, 
  3.6211430129022512`*^9}, {3.6211430721408577`*^9, 3.62114309521867*^9}, {
  3.6211431436805706`*^9, 3.621143154900889*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.6211380103050413`*^9, 3.6211380133987913`*^9}}],

Cell[BoxData[
 SqrtBox["3"]], "Output",
 CellChangeTimes->{3.6211380147112913`*^9, 3.6211634692704954`*^9, 
  3.621164435319076*^9}]
}, Open  ]],

Cell["\<\
The following cell expressions underneath are visual representations of the \
above input and output expressions, notice that a special SqrtBox is used to \
display the root symbol on a two-dimensional output format.\
\>", "Text",
 CellChangeTimes->{{3.6211431273952265`*^9, 3.6211431357547183`*^9}, {
  3.621150136987776*^9, 3.6211503190604916`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cell", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BoxData", "[", "\[IndentingNewLine]", " ", 
     RowBox[{"RowBox", "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Sqrt\>\"", ",", " ", "\"\<[\>\"", ",", " ", "\"\<3\>\"", ",", 
        " ", "\"\<]\>\""}], "}"}], "]"}], "]"}], ",", " ", "\"\<Input\>\""}], 
   "]"}], "//", "DisplayForm"}]], "Input",
 CellChangeTimes->{{3.621137803126487*^9, 3.6211378204371977`*^9}}],

Cell[BoxData[
 TagBox[Cell[BoxData[
   RowBox[{"Sqrt", "[", "3", "]"}]], "Input"],
  DisplayForm]], "Output",
 CellChangeTimes->{{3.6211378147703114`*^9, 3.6211378209668665`*^9}, 
   3.621160731855706*^9, 3.621163469340808*^9, 3.6211644353412724`*^9, 
   3.6408583562882676`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cell", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BoxData", "[", "\[IndentingNewLine]", 
     RowBox[{"SqrtBox", "[", "\"\<3\>\"", "]"}], "]"}], ",", " ", 
    "\"\<Output\>\""}], "]"}], "//", "DisplayForm"}]], "Input",
 CellChangeTimes->{{3.6211378349945602`*^9, 3.621137843398388*^9}, {
  3.62116100470432*^9, 3.6211610052414765`*^9}}],

Cell[BoxData[
 TagBox[Cell[BoxData[
   SqrtBox["3"]], "Output"],
  DisplayForm]], "Output",
 CellChangeTimes->{3.6211378443256545`*^9, 3.621160734071597*^9, 
  3.621161005815257*^9, 3.621161053607994*^9, 3.621163469434558*^9, 
  3.6211644353523707`*^9, 3.640858360164244*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.6211610076049643`*^9, 3.621161011391914*^9}}],

Cell["Cell[BoxData[\\(\\@3\\)], \"Output\"]", "Output",
 CellChangeTimes->{3.621161012076788*^9, 3.6211610570879736`*^9, 
  3.6211634695986204`*^9, 3.6211644353745675`*^9, 3.6408583676163926`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%%", "//", "StandardForm"}]], "Input",
 CellChangeTimes->{{3.6211610228601475`*^9, 3.6211610384815884`*^9}}],

Cell[BoxData[
 RowBox[{"Cell", "[", 
  RowBox[{
   RowBox[{"BoxData", "[", 
    RowBox[{"SqrtBox", "[", "\<\"3\"\>", "]"}], "]"}], 
   ",", "\<\"Output\"\>"}], "]"}]], "Output",
 CellChangeTimes->{{3.621161028824942*^9, 3.621161058523219*^9}, 
   3.6211634696454954`*^9, 3.621164435385666*^9, 3.6408583722911973`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%%%", "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.621161044004531*^9, 3.6211610497937794`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Cell", "[", 
    RowBox[{
     RowBox[{"BoxData", "[", 
      RowBox[{"SqrtBox", "[", "\"\<3\>\"", "]"}], "]"}], ",", 
     "\"\<Output\>\""}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.621161060308424*^9, 3.621163469668933*^9, 
  3.621164435396764*^9, 3.6408583761320176`*^9}]
}, Open  ]],

Cell["\<\
Let us print another cell expression of Sqrt[3] with a font style similar to \
that used in a SubSection and a Bold Font.\
\>", "Text",
 CellChangeTimes->{{3.6211444470197835`*^9, 3.6211444674104085`*^9}, {
  3.6211445016291585`*^9, 3.621144551264291*^9}, {3.6211446435255003`*^9, 
  3.6211447120052247`*^9}, {3.621154886457502*^9, 3.621154889559021*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cell", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BoxData", "[", "\[IndentingNewLine]", 
     RowBox[{"SqrtBox", "[", "\"\<3\>\"", "]"}], "]"}], ",", " ", 
    "\"\<Subsection\>\"", ",", 
    RowBox[{"FontWeight", "\[Rule]", "\"\<Bold\>\""}]}], "]"}], "//", 
  "DisplayForm"}]], "Input",
 CellChangeTimes->{{3.6211444822697835`*^9, 3.6211444862307205`*^9}, {
  3.621144554647341*^9, 3.6211445671623745`*^9}, {3.621144611744877*^9, 
  3.621144628346752*^9}}],

Cell[BoxData[
 TagBox[Cell[BoxData[
   SqrtBox["3"]], "Subsection",
   FontWeight->"Bold"],
  DisplayForm]], "Output",
 CellChangeTimes->{3.621144589202961*^9, 3.6211446345261497`*^9, 
  3.621163469762683*^9, 3.6211644354189606`*^9}]
}, Open  ]],

Cell[TextData[StyleBox["Other display formats for the square root of 3",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.621159903531625*^9, 3.621159923723551*^9}, {
  3.621161239535905*^9, 3.62116125939217*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.621161093473405*^9, 3.6211611055437174`*^9}}],

Cell[BoxData[
 SqrtBox["3"]], "Output",
 CellChangeTimes->{{3.621161101910905*^9, 3.621161106598405*^9}, 
   3.62116122158278*^9, 3.621163469856433*^9, 3.621164435430059*^9, 
   3.640858392047057*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.6211607585449743`*^9, 3.621160762331425*^9}, {
  3.621161109317155*^9, 3.6211611306687174`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Power", "[", 
    RowBox[{"3", ",", 
     RowBox[{"Rational", "[", 
      RowBox[{"1", ",", "2"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.621160763477594*^9, 3.6211607671064434`*^9}, 
   3.62116113186403*^9, 3.621161221817155*^9, 3.621163469950183*^9, 
   3.6211644354522552`*^9, 3.6408583933947124`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.621161137817155*^9, 3.6211611487624674`*^9}}],

Cell["Sqrt[3]", "Output",
 CellChangeTimes->{3.621161150379655*^9, 3.62116122186403*^9, 
  3.621163469997058*^9, 3.621164435463354*^9, 3.6408583949650254`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "StandardForm"}]], "Input",
 CellChangeTimes->{{3.6211611541999674`*^9, 3.62116116017653*^9}}],

Cell[BoxData[
 SqrtBox["3"]], "Output",
 CellChangeTimes->{3.62116116955153*^9, 3.6211612218874674`*^9, 
  3.621163470043933*^9, 3.621164435474452*^9, 3.6408583967218614`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.62116117320778*^9, 3.621161181153092*^9}}],

Cell[BoxData[
 FormBox[
  SqrtBox["3"], TraditionalForm]], "Output",
 CellChangeTimes->{3.621161183028092*^9, 3.62116122195778*^9, 
  3.6211634701142454`*^9, 3.621164435496649*^9, 3.6408583995519395`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Multiplication 3x3", "Subsubsection",
 CellChangeTimes->{{3.6211588128350735`*^9, 3.621158840983511*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"3", " ", "3"}]], "Input",
 CellChangeTimes->{{3.621134356001625*^9, 3.621134391220375*^9}}],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{{3.62113437051725*^9, 3.621134395157875*^9}, 
   3.621134447611*^9, 3.6211588522569485`*^9, 3.6211612858411565`*^9, 
   3.621163470184558*^9, 3.6211644355188456`*^9, 3.640858427026647*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Unevaluated", "[", 
   RowBox[{"3", " ", "3"}], "]"}], "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.6211589611475735`*^9, 3.621158963139761*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Unevaluated", "[", 
    RowBox[{"Times", "[", 
     RowBox[{"3", ",", "3"}], "]"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.621158965014761*^9, 3.6211612860120173`*^9, 
  3.6211634702079954`*^9, 3.6211644355299435`*^9, 3.640858427147591*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Unevaluated", "[", 
   RowBox[{"3", " ", "3"}], "]"}], "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.621158859639761*^9, 3.621158881858511*^9}}],

Cell["Unevaluated[3*3]", "Output",
 CellChangeTimes->{{3.6211588760225735`*^9, 3.621158882702261*^9}, 
   3.6211612860632753`*^9, 3.621163470278308*^9, 3.6211644355410423`*^9, 
   3.6408584272041473`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cell", "[", 
   RowBox[{"BoxData", "[", 
    RowBox[{"RowBox", "[", 
     RowBox[{"{", 
      RowBox[{"3", ",", "\"\< \>\"", ",", "3"}], "}"}], "]"}], "]"}], "]"}], "//",
   "DisplayForm"}]], "Input",
 CellChangeTimes->{{3.62113440064225*^9, 3.6211344120485*^9}, {
  3.621158928358511*^9, 3.6211589298819485`*^9}}],

Cell[BoxData[
 TagBox[Cell[BoxData[
   RowBox[{"3", " ", "3"}]]],
  DisplayForm]], "Output",
 CellChangeTimes->{{3.621134404861*^9, 3.621134412595375*^9}, {
   3.621158898311636*^9, 3.6211589414131985`*^9}, 3.621161286114534*^9, 
   3.621161344992738*^9, 3.6211634703486204`*^9, 3.62116443555214*^9, 
   3.6408584272467823`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.621161301939356*^9, 3.621161304610437*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Cell", "[", 
    RowBox[{"BoxData", "[", 
     RowBox[{"RowBox", "[", 
      RowBox[{"List", "[", 
       RowBox[{"3", ",", "\"\< \>\"", ",", "3"}], "]"}], "]"}], "]"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.6211613052055483`*^9, 3.621161345141945*^9, 
  3.621163470418933*^9, 3.621164435574337*^9, 3.640858427296378*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%%", "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.621161313476247*^9, 3.6211613195646687`*^9}}],

Cell["Cell[BoxData[RowBox[{3, \" \", 3}]]]", "Output",
 CellChangeTimes->{{3.621161320441558*^9, 3.621161345158524*^9}, 
   3.621163470465808*^9, 3.621164435585435*^9, 3.6408584273581553`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%%%", "//", "StandardForm"}]], "Input",
 CellChangeTimes->{{3.621161324798603*^9, 3.6211613279499173`*^9}}],

Cell[BoxData[
 RowBox[{"Cell", "[", 
  RowBox[{"BoxData", "[", 
   RowBox[{"RowBox", "[", 
    RowBox[{"{", 
     RowBox[{"3", ",", "\<\" \"\>", ",", "3"}], "}"}], "]"}], "]"}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.6211613293364954`*^9, 3.621161345191681*^9}, 
   3.621163470512683*^9, 3.6211644356076317`*^9, 3.6408584273946996`*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Internal Representation", "Section",
 CellChangeTimes->{{3.640681211332847*^9, 3.6406812182189646`*^9}},
 CellTags->"Internal Representation"],

Cell["\<\
Internal representation is the full functional form of an expression. \
Consider the square root of three, it can be displayed with the standard \
square root symbol such as\
\>", "Text",
 CellChangeTimes->{{3.621143259163355*^9, 3.6211433150617924`*^9}, {
  3.62114350783523*^9, 3.6211435080930424`*^9}, {3.621161667924077*^9, 
  3.621161671252202*^9}, {3.621161705002202*^9, 3.6211617402756395`*^9}, {
  3.640681260393799*^9, 3.640681353921668*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SqrtBox["3"], "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.621142567788501*^9, 3.6211425687413845`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Power", "[", 
    RowBox[{"3", ",", 
     RowBox[{"Rational", "[", 
      RowBox[{"1", ",", "2"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.6211425663423595`*^9, 3.621142569290694*^9}, 
   3.6211617543850145`*^9, 3.621163467137683*^9, 3.6211644346309814`*^9}]
}, Open  ]],

Cell["\<\
But when we ask to see the full functional form, the kernel returns a \
different expression with other symbols that represent functions such as the \
Power and Rational.\
\>", "Text",
 CellChangeTimes->{{3.640681361355186*^9, 3.6406814909996233`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SqrtBox["3"], "//", "Head"}]], "Input",
 CellChangeTimes->{{3.621161758533452*^9, 3.621161759939702*^9}, {
  3.6406815056476665`*^9, 3.640681505791253*^9}}],

Cell[BoxData["Power"], "Output",
 CellChangeTimes->{3.621161761580327*^9, 3.6211634672079954`*^9, 
  3.621164434653178*^9, 3.6406815067197313`*^9}]
}, Open  ]],

Cell["\<\
We can display it as a tree to visualise the structure of the expression with \
Symbols as Heads and Atoms as leaf nodes. This is also a nice visualization \
of the internal representation that is used inside the Wolfram kernel for \
evaluation purposes, free of any display formats, textual styles, graphics or \
2D notation format.\
\>", "Text",
 CellChangeTimes->{{3.621143332663355*^9, 3.621143348225855*^9}, {
  3.62114340564773*^9, 3.62114347389773*^9}, {3.6211439215452113`*^9, 
  3.6211441215646486`*^9}, {3.64085128760406*^9, 3.6408512994448805`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Hold", "[", 
   TagBox[
    StyleBox[
     RowBox[{"Power", "[", 
      RowBox[{"3", ",", 
       RowBox[{"Rational", "[", 
        RowBox[{"1", ",", "2"}], "]"}]}], "]"}],
     ShowSpecialCharacters->False,
     ShowStringCharacters->True,
     NumberMarks->True],
    FullForm], "]"}], "//", "TreeForm"}]], "Input",
 CellChangeTimes->{{3.6211433510149174`*^9, 3.621143387225855*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[GraphicsComplexBox[{{0.45643546458763845`, 2.7386127875258306`}, {
    0.45643546458763845`, 1.8257418583505536`}, {0., 0.9128709291752768}, {
    0.9128709291752769, 0.9128709291752768}, {0.45643546458763845`, 0.}, {
    1.3693063937629153`, 0.}}, {
     {RGBColor[0.55, 0.45, 0.45], 
      LineBox[{{1, 2}, {2, 3}, {2, 4}, {4, 5}, {4, 6}}]}, {
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Hold", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 1],
        TagBox[
         RowBox[{"Hold", "[", 
           SuperscriptBox["3", 
            RowBox[{"Rational", "[", 
              RowBox[{"1", ",", "2"}], "]"}]], "]"}], HoldForm]],
       Annotation[#, 
        HoldForm[
         Hold[3^Rational[1, 2]]], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Power", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 2],
        TagBox[
         SuperscriptBox["3", 
          RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "2"}], "]"}]], HoldForm]],
       Annotation[#, 
        HoldForm[3^Rational[1, 2]], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["3",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 3],
        TagBox["3", HoldForm]],
       Annotation[#, 
        HoldForm[3], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Rational", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 4],
        TagBox[
         RowBox[{"Rational", "[", 
           RowBox[{"1", ",", "2"}], "]"}], HoldForm]],
       Annotation[#, 
        HoldForm[
         Rational[1, 2]], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["1",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 5],
        TagBox["1", HoldForm]],
       Annotation[#, 
        HoldForm[1], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["2",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 6],
        TagBox["2", HoldForm]],
       Annotation[#, 
        HoldForm[2], "Tooltip"]& ]}}],
   Annotation[#, 
    VertexCoordinateRules -> {{0.45643546458763845`, 2.7386127875258306`}, {
     0.45643546458763845`, 1.8257418583505536`}, {0., 0.9128709291752768}, {
     0.9128709291752769, 0.9128709291752768}, {0.45643546458763845`, 0.}, {
     1.3693063937629153`, 0.}}]& ],
  AspectRatio->NCache[Rational[2, 3] 2^Rational[1, 2], 0.9428090415820634],
  FrameTicks->Automatic,
  PlotRange->All,
  PlotRangePadding->Scaled[0.1]]], "Output",
 CellChangeTimes->{{3.6211433549992924`*^9, 3.6211433889836674`*^9}, 
   3.6211634673017454`*^9, 3.621164434730866*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["String vs Symbol Representation", "Section",
 CellChangeTimes->{{3.640678634248536*^9, 3.640678638592286*^9}, {
  3.6408595714072256`*^9, 3.6408595747353506`*^9}}],

Cell["\<\
Let us take the string form first and apply the Head function\
\>", "Text",
 CellChangeTimes->{{3.6211630261411457`*^9, 3.6211630664345436`*^9}, {
  3.640858683940129*^9, 3.6408587252448163`*^9}, {3.640859481298827*^9, 
  3.6408594817753897`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\"\<Three\>\""], "Input",
 CellChangeTimes->{{3.621092382955*^9, 3.621092387376875*^9}, {
  3.621092596439375*^9, 3.621092600001875*^9}}],

Cell[BoxData["\<\"Three\"\>"], "Output",
 CellChangeTimes->{3.62109238823625*^9, 3.621092601205*^9, 
  3.62109275198625*^9, 3.621161872967016*^9, 3.62116233546218*^9, 
  3.621162725143551*^9, 3.6211634705361204`*^9, 3.62116443561873*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "Head"}]], "Input",
 CellChangeTimes->{{3.621092396658125*^9, 3.62109240148625*^9}, {
  3.621092602955*^9, 3.621092603939375*^9}}],

Cell[BoxData["String"], "Output",
 CellChangeTimes->{3.621092402501875*^9, 3.621092605314375*^9, 
  3.621092752001875*^9, 3.6211618741503267`*^9, 3.6211623357668676`*^9, 
  3.6211634705829954`*^9, 3.6211644356298285`*^9}]
}, Open  ]],

Cell["Use a symbol now", "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.6408587393170815`*^9, 3.640858754843449*^9}}],

Cell[CellGroupData[{

Cell[BoxData["Three"], "Input",
 CellChangeTimes->{{3.621162750549801*^9, 3.6211627513701134`*^9}}],

Cell[BoxData["Three"], "Output",
 CellChangeTimes->{3.621162752846676*^9, 3.621162973129131*^9, 
  3.6211634707236204`*^9, 3.621164435663123*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "Head"}]], "Input",
 CellChangeTimes->{{3.6211629688484745`*^9, 3.6211629698864594`*^9}}],

Cell[BoxData["Symbol"], "Output",
 CellChangeTimes->{{3.621162971450357*^9, 3.6211629739387646`*^9}, 
   3.621163470747058*^9, 3.62116443568532*^9}]
}, Open  ]],

Cell[TextData[{
 "Notice that in both cases, the output (Three) looks the same, but it is not \
internally. In the first case it is a string, in the second it is a symbol. \
The input of an expression such as Three, or three in a notebook cell is \
automatically recognised by Wolfram kernel as a symbol. The \
\[OpenCurlyDoubleQuote]Symbol\[CloseCurlyDoubleQuote] Function  refers to a \
symbol with the specified string name and returns the Symbol with that name. \
The two strings in the following list are symbolized as ",
 StyleBox["Three",
  FontWeight->"Bold"],
 " and  ",
 StyleBox["three",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.6408588195024233`*^9, 3.640858865004377*^9}, {
   3.6408596722226553`*^9, 3.6408596776220694`*^9}, {3.64085971211621*^9, 
   3.6408597161533194`*^9}, {3.6408597662695303`*^9, 3.640859791031249*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Symbol", "/@", 
  RowBox[{"{", 
   RowBox[{"\"\<Three\>\"", ",", "\"\<three\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6210827273325386`*^9, 3.6210828057075386`*^9}, {
  3.621091914955*^9, 3.621091925751875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Three", ",", "three"}], "}"}]], "Output",
 CellChangeTimes->{3.6210828014887886`*^9, 3.621091675314375*^9, 
  3.62109185173625*^9, 3.621091926955*^9, 3.62109275192375*^9, 
  3.6211359889862223`*^9, 3.6211360770225453`*^9, 3.621136203320718*^9, 
  3.6211634667861204`*^9, 3.6211644345421953`*^9, 3.640681158701399*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "/@", " ", "%"}]], "Input",
 CellChangeTimes->{{3.640681162501194*^9, 3.6406811667822533`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Symbol", ",", "Symbol"}], "}"}]], "Output",
 CellChangeTimes->{3.640681167582343*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["String vs Numeric Representation", "Section",
 CellChangeTimes->{{3.6408585299821205`*^9, 3.6408585329821205`*^9}, {
   3.640859438892577*^9, 3.6408594642685537`*^9}, 3.640859567205077*^9}],

Cell["How about entering the following list ", "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.6408591254003677`*^9, 3.640859147755294*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\"\<3\>\"", ",", "\"\<3.\>\""}], "}"}]], "Input",
 CellChangeTimes->{{3.621162406644248*^9, 3.6211624480934134`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"3\"\>", ",", "\<\"3.\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.621162407972869*^9, 3.6211624490053596`*^9}, 
   3.6211634712392454`*^9, 3.621164435763008*^9, 3.640859071840314*^9, 
   3.6408592914031043`*^9}]
}, Open  ]],

Cell["\<\
Notice that the output looks like a list of two numbers an integer and a \
decimal one but it is evaluated as a list of two strings\
\>", "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.6408591553207235`*^9, 3.6408592191576376`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "/@", " ", "%"}]], "Input",
 CellChangeTimes->{{3.621162409689004*^9, 3.621162437239723*^9}, {
  3.6408592608701873`*^9, 3.6408592653665624`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"String", ",", "String"}], "}"}]], "Output",
 CellChangeTimes->{{3.6211624113912992`*^9, 3.621162450499632*^9}, 
   3.621163471309558*^9, 3.621164435785205*^9, 3.64085929338243*^9}]
}, Open  ]],

Cell["While in the following one", "Text",
 CellChangeTimes->{{3.6408592373275595`*^9, 3.640859244083419*^9}, {
  3.640859296810498*^9, 3.6408592971979465`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "3."}], "}"}]], "Input",
 CellChangeTimes->{{3.6408592250179887`*^9, 3.6408592781235237`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "3.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6408592320502157`*^9, {3.640859279132869*^9, 3.640859285895472*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "/@", " ", "%"}]], "Input",
 CellChangeTimes->{{3.6408592825550623`*^9, 3.640859284208996*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Integer", ",", "Real"}], "}"}]], "Output",
 CellChangeTimes->{3.6408592870660386`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Entity Representation", "Section",
 CellChangeTimes->{{3.6408598696845694`*^9, 3.640859876319335*^9}}],

Cell["\<\
Wolfram researchers have implemented a different display format for \
representing entities of any kind including, characters, and words. This \
entity representation is analogous to the signified facet of the sign \
(symbol) in R3DM. The displayed form of this symbol, an orange box, signifies \
that the content has been assigned a specific meaning. Based on this meaning \
the kernel can evaluate the entity, i.e. the content is signified.\
\>", "Text",
 CellChangeTimes->{{3.6408601336470165`*^9, 3.6408602695464306`*^9}, {
  3.6408606576509542`*^9, 3.640860707060134*^9}, {3.6408607801079855`*^9, 
  3.6408607842066183`*^9}, {3.64086082305648*^9, 3.6408609743450975`*^9}, {
  3.640861008585332*^9, 3.6408611236116986`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Entity", "[", 
   RowBox[{"\"\<Character\>\"", ",", "51"}], "]"}], "//", 
  "StandardForm"}]], "Input",
 CellChangeTimes->{{3.62109165498625*^9, 3.62109168242375*^9}, {
  3.621164499424512*^9, 3.621164504974762*^9}}],

Cell[BoxData[
 TemplateBox[{"\"3\"",RowBox[{"Entity", "[", 
     RowBox[{"\"Character\"", ",", "51"}], "]"}],
   "\"Entity[\\\"Character\\\", 51]\"","\"character\""},
  "Entity"]], "Output",
 CellChangeTimes->{{3.62109166548625*^9, 3.62109168967375*^9}, 
   3.621091852376875*^9, 3.621092752126875*^9, {3.6211634446142454`*^9, 
   3.621163474309558*^9}, 3.62116444095035*^9, 3.621164506207495*^9, {
   3.62116754601825*^9, 3.621167549315125*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{"\"3\"",RowBox[{"Entity", "[", 
     RowBox[{"\"Character\"", ",", "51"}], "]"}],
   "\"Entity[\\\"Character\\\", 51]\"","\"character\""},
  "Entity"]], "Input"],

Cell[BoxData[
 TemplateBox[{"\"3\"",RowBox[{"Entity", "[", 
     RowBox[{"\"Character\"", ",", "51"}], "]"}],
   "\"Entity[\\\"Character\\\", 51]\"","\"character\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.6408604912253256`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"3\"",RowBox[{"Entity", "[", 
      RowBox[{"\"Character\"", ",", "51"}], "]"}],
    "\"Entity[\\\"Character\\\", 51]\"","\"character\""},
   "Entity"], "//", "Head"}]], "Input",
 CellChangeTimes->{{3.621167509815125*^9, 3.62116751208075*^9}, {
  3.6408603398462353`*^9, 3.6408603400493603`*^9}}],

Cell[BoxData["Entity"], "Output",
 CellChangeTimes->{3.621167513377625*^9, 3.621167551158875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"3\"",RowBox[{"Entity", "[", 
      RowBox[{"\"Character\"", ",", "51"}], "]"}],
    "\"Entity[\\\"Character\\\", 51]\"","\"character\""},
   "Entity"], "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.621167536190125*^9, 3.62116753901825*^9}, {
  3.640860506084773*^9, 3.640860506316805*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Entity", "[", 
    RowBox[{"\"\<Character\>\"", ",", "51"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.6211675397995*^9, 3.62116755464325*^9}, 
   3.6408605074856663`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   TemplateBox[{"\"3\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Character\"", ",", "51"}], "]"}],
     "\"Entity[\\\"Character\\\", 51]\"","\"character\""},
    "Entity"], ",", "\"\<Name\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.6211672450495*^9, 3.62116724845575*^9}, {
  3.62116727883075*^9, 3.621167484252625*^9}}],

Cell[BoxData["\<\"3\"\>"], "Output",
 CellChangeTimes->{{3.621167324815125*^9, 3.62116748689325*^9}, 
   3.621167564315125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "Head"}]], "Input",
 CellChangeTimes->{{3.621167497627625*^9, 3.6211675001745*^9}}],

Cell[BoxData["String"], "Output",
 CellChangeTimes->{3.621167501158875*^9, 3.621167566158875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Entity", "[", 
   RowBox[{"\"\<Word\>\"", ",", "\"\<Three\>\""}], "]"}], "//", 
  "StandardForm"}]], "Input",
 CellChangeTimes->{{3.621091834189375*^9, 3.6210918451425*^9}, {
  3.621164567757964*^9, 3.6211645695165005`*^9}}],

Cell[BoxData[
 TemplateBox[{"\"Three\"",RowBox[{"Entity", "[", 
     RowBox[{"\"Word\"", ",", "\"Three\""}], "]"}],
   "\"Entity[\\\"Word\\\", \\\"Three\\\"]\"","\"word\""},
  "Entity"]], "Output",
 CellChangeTimes->{{3.6210918470175*^9, 3.621091852970625*^9}, 
   3.621092752158125*^9, 3.621163476390811*^9, 3.6211644427449403`*^9, 
   3.621164571056656*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{"\"Three\"",RowBox[{"Entity", "[", 
     RowBox[{"\"Word\"", ",", "\"Three\""}], "]"}],
   "\"Entity[\\\"Word\\\", \\\"Three\\\"]\"","\"word\""},
  "Entity"]], "Input",
 CellChangeTimes->{{3.6408605677993517`*^9, 3.6408605689087267`*^9}}],

Cell[BoxData[
 RowBox[{"Entity", "[", 
  RowBox[{"\<\"Word\"\>", ",", "\<\"Three\"\>"}], "]"}]], "Output",
 CellChangeTimes->{3.6408605705034533`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wolfram Alpha Representations", "Subsection",
 CellChangeTimes->{{3.62109308554875*^9, 3.621093091001875*^9}}],

Cell[TextData[{
 "Wolfram Alpha makes it easy to identify",
 StyleBox[" entities",
  FontWeight->"Bold"],
 " such as number \[OpenCurlyDoubleQuote]3\[CloseCurlyDoubleQuote] and it can \
automatically generate many more representations. For example...."
}], "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.640861444228651*^9, 3.6408615353097057`*^9}, 
   3.6408619202271185`*^9, {3.6408619811539865`*^9, 3.6408619898932447`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{"\"\<3\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Input\>\"", ",", "1"}], "}"}], ",", "\"\<Content\>\""}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.621092232126875*^9, 3.621092232533125*^9}}],

Cell[BoxData[
 StyleBox[
  FormBox[
   TagBox["3",
    PolynomialForm[#, TraditionalOrder -> False]& ],
   TraditionalForm], "Output",
  ScriptLevel->0,
  FontFamily->"Times",
  FontSize->14,
  Background->None]], "Output",
 CellChangeTimes->{3.621092185095625*^9, 3.621092237220625*^9, 
  3.62109270004875*^9, 3.621092755814375*^9, 3.6211634820017614`*^9, 
  3.62116444685907*^9, 3.6408612940909557`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{"\"\<3\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<NumberName\>\"", ",", "1"}], "}"}], ",", 
     "\"\<Content\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.62109224186125*^9, 3.621092242158125*^9}}],

Cell[BoxData[
 StyleBox[
  FormBox["\<\"three\"\>",
   TraditionalForm], "Output",
  ScriptLevel->0,
  FontFamily->"Times",
  FontSize->14,
  Background->None]], "Output",
 CellChangeTimes->{3.62109217583*^9, 3.6210922463925*^9, 3.621092676876875*^9,
   3.62109275954875*^9, 3.6211634857775517`*^9, 3.6211644502443743`*^9, 
  3.640861297554823*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{"\"\<3\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<VisualRepresentation\>\"", ",", "1"}], "}"}], ",", 
     "\"\<Content\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.621092263345625*^9, 3.62109226454875*^9}, {
  3.621166819627625*^9, 3.621166820815125*^9}}],

Cell[BoxData[
 StyleBox[
  FormBox[
   StyleBox["\<\"\[FilledSmallCircle]\[ThinSpace]\[FilledSmallCircle]\
\[ThinSpace]\[FilledSmallCircle]\"\>",
    StripOnInput->False,
    LineColor->GrayLevel[0.5],
    FrontFaceColor->GrayLevel[0.5],
    BackFaceColor->GrayLevel[0.5],
    GraphicsColor->GrayLevel[0.5],
    FontFamily->"Courier",
    FontColor->GrayLevel[0.5]],
   TraditionalForm], "Output",
  ScriptLevel->0,
  FontFamily->"Times",
  FontSize->14,
  Background->None]], "Output",
 CellChangeTimes->{3.621092156158125*^9, 3.621092269408125*^9, 
  3.6210927626425*^9, 3.62109334936125*^9, 3.621163489456314*^9, 
  3.62116445358817*^9, 3.621166834158875*^9, 3.6408613013692756`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "OutputForm"}]], "Input",
 CellChangeTimes->{{3.621093370751875*^9, 3.621093384283125*^9}, 
   3.62109349023625*^9, {3.621166973487*^9, 3.621166973908875*^9}}],

Cell[OutputFormData["\<\
RawBoxes[
 StyleBox[\\(TraditionalForm\\`\\(\\*StyleBox[\"\\\"\[FilledSmallCircle]\
\[ThinSpace]\[FilledSmallCircle]\[ThinSpace]\[FilledSmallCircle]\\\"\", 
        Rule[FontFamily, \"Courier\"], GrayLevel[0.5`], Rule[StripOnInput, \
False]]\\)\\
\\), \"Output\", Rule[FontFamily, \"Times\"], Rule[FontSize, 14], \
Rule[ScriptLevel, 0], 
   Rule[Background, None]]
 ]\
\>", "\<\
RawBoxes[StyleBox[FormBox[StyleBox[\"\[FilledSmallCircle]\[ThinSpace]\
\[FilledSmallCircle]\[ThinSpace]\[FilledSmallCircle]\", FontFamily -> \
Courier, GrayLevel[0.5], 
 
     StripOnInput -> False], TraditionalForm], Output, FontFamily -> Times, 
 
   FontSize -> 14, ScriptLevel -> 0, Background -> None]]\
\>"], "Output",
 CellChangeTimes->{3.6408613014884167`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{"\"\<3\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<NumberLine\>\"", ",", "1"}], "}"}], ",", 
     "\"\<Content\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.62109227479875*^9, 3.621092275126875*^9}}],

Cell[BoxData[
 StyleBox[
  FormBox[
   TemplateBox[{GraphicsBox[{
       TagBox[
        TooltipBox[{
          PointSize[0.02], 
          RGBColor[0.24720000000000014`, 0.24, 0.6], 
          PointBox[{3., 0.05400000000000002}]}, "3.`"], 
        Annotation[#, 3., "Tooltip"]& ]}, ImageSize -> 300., 
      Axes -> {True, False}, AxesStyle -> {}, 
      PlotRange -> {{2.0999999999999996`, 3.9000000000000004`}, Automatic}, 
      AxesOrigin -> {0, 0}],"\"\""},
    "Labeled",
    DisplayFunction->(FormBox[
      GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       BaselinePosition -> {1, 1}], TraditionalForm]& ),
    InterpretationFunction->(RowBox[{
       StyleBox[
       "Labeled", FontFamily -> "Bitstream Vera Sans", 
        FontSize -> -1 + Inherited], "[", 
       RowBox[{#, ",", #2, ",", 
         StyleBox[
         "Bottom", FontFamily -> "Bitstream Vera Sans", 
          FontSize -> -1 + Inherited]}], "]"}]& )],
   TraditionalForm], "Output",
  ScriptLevel->0,
  FontFamily->"Times",
  FontSize->14,
  Background->None]], "Output",
 CellChangeTimes->{3.621092149970625*^9, 3.62109227936125*^9, 
  3.621092658455*^9, 3.621092766314375*^9, 3.6210929100175*^9, 
  3.621163493348137*^9, 3.621164465720582*^9, 3.640861305477674*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{"\"\<3\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<BaseConversions\>\"", ",", "1"}], "}"}], ",", 
     "\"\<Content\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.62109228461125*^9, 3.62109228554875*^9}, {
  3.6210926390175*^9, 3.62109263986125*^9}}],

Cell[BoxData[
 StyleBox[
  FormBox[
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"11\"\>", "\<\"2\"\>"],
     3,
     Editable->False],
    BaseForm[#, 2]& ],
   TraditionalForm], "Output",
  ScriptLevel->0,
  FontFamily->"Times",
  FontSize->14,
  Background->None]], "Output",
 CellChangeTimes->{3.621092140564375*^9, 3.621092290408125*^9, 
  3.621092644345625*^9, 3.62109276808*^9, 3.6211634964995637`*^9, 
  3.621164469880275*^9, 3.640861308478651*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{"\"\<3\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<CharacterCode\>\"", ",", "1"}], "}"}], ",", 
     "\"\<Content\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.621092296251875*^9, 3.62109229667375*^9}}],

Cell[BoxData[
 StyleBox[
  FormBox[
   StyleBox[GridBox[{
      {
       StyleBox[GridBox[{
          {
           StyleBox[GridBox[{
              {"\<\"control-C\"\>"},
              {
               
               TemplateBox[{
                PaneBox[
                 "\"ASCII: \"", 
                  BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline],
                 TemplateBox[{"   ", "\"   \"", "3", 
                   StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    RowBox[{
                    FormBox[
                    TagBox[
                    FormBox[
                    TemplateBox[{"\"hex: \"", 
                    StyleBox[
                    "\"03\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"], 
                    TraditionalForm], Format[#, TraditionalForm]& ], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    FormBox[
                    TemplateBox[{"\"octal: \"", 
                    StyleBox[
                    "\"003\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"], 
                    TraditionalForm], Format[#, TraditionalForm]& ], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    FormBox[
                    TemplateBox[{"\"binary: \"", 
                    StyleBox[
                    "\"00000011\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"], 
                    TraditionalForm], Format[#, TraditionalForm]& ], 
                    TraditionalForm]}], 
                    LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                    0], "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowWithSeparators"]},
                "RowDefault"]},
              {
               
               TemplateBox[{
                PaneBox[
                 "\"Unicode: \"", 
                  BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline],
                 TemplateBox[{"  ", "\"  \"", "\"U+0003\"", 
                   StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    FormBox[
                    TagBox[
                    FormBox[
                    TemplateBox[{"\"decimal: \"", 
                    StyleBox[
                    "3", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"], 
                    TraditionalForm], Format[#, TraditionalForm]& ], 
                    TraditionalForm], "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowWithSeparators"]},
                "RowNoSeparators"]}
             },
             AllowScriptLevelChange->False,
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]}
         },
         AutoDelete->False,
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]},
      {
       StyleBox[
        RowBox[{"\<\"(\"\>", "\[NoBreak]", "\<\"basic Latin\"\>", 
         "\[NoBreak]", "\<\")\"\>"}],
        StripOnInput->False,
        LineIndent->0,
        LinebreakAdjustments->{1, 100, 1, 0, 100},
        LineColor->GrayLevel[0.6],
        FrontFaceColor->GrayLevel[0.6],
        BackFaceColor->GrayLevel[0.6],
        GraphicsColor->GrayLevel[0.6],
        FontColor->GrayLevel[0.6]]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
    "Column"],
   TraditionalForm], "Output",
  ScriptLevel->0,
  FontFamily->"Times",
  FontSize->14,
  Background->None]], "Output",
 CellChangeTimes->{3.621092117955*^9, 3.621092302408125*^9, 
  3.621092772283125*^9, 3.6211635001445875`*^9, 3.621164474706168*^9, 
  3.6408613123556037`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{"\"\<3\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<RomanNumerals\>\"", ",", "1"}], "}"}], ",", 
     "\"\<Content\>\""}], "}"}], ",", 
   RowBox[{"PodStates", "\[Rule]", 
    RowBox[{
    "{", "\"\<RomanNumerals__Other historical numerals\>\"", "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.621092307876875*^9, 3.621092308189375*^9}}],

Cell[BoxData[
 StyleBox[
  FormBox[
   StyleBox[
    StyleBox[GridBox[{
       {
        PaneBox["\<\"Roman\"\>",
         BaseStyle->{{
           BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
           LineSpacing -> {0.9, 0, 1.5}, 
           LinebreakAdjustments -> {1, 10, 10000, 0, 100}, TextAlignment -> 
           Left},
         BaselinePosition->Baseline], "\<\"III\"\>"},
       {
        PaneBox["\<\"Greek\"\>",
         BaseStyle->{{
           BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
           LineSpacing -> {0.9, 0, 1.5}, 
           LinebreakAdjustments -> {1, 10, 10000, 0, 100}, TextAlignment -> 
           Left},
         BaselinePosition->Baseline], 
        TemplateBox[{
         StyleBox["\"\"", 19, StripOnInput -> False],StyleBox[
          "\"\"", 19, StripOnInput -> False],StyleBox[
          "\"\"", 19, StripOnInput -> False],StyleBox[
          "\"\[Gamma]\"", 19, StripOnInput -> False]},
         "RowDefault"]},
       {
        PaneBox["\<\"Babylonian\"\>",
         BaseStyle->{{
           BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
           LineSpacing -> {0.9, 0, 1.5}, 
           LinebreakAdjustments -> {1, 10, 10000, 0, 100}, TextAlignment -> 
           Left},
         BaselinePosition->Baseline], 
        PaneBox[
         TemplateBox[{GraphicsBox[{{
              LineBox[
               NCache[{{
                  Rational[-1, 4], 0}, {
                  Rational[-3, 8], 
                  Rational[1, 8]}, {
                  Rational[-1, 8], 
                  Rational[1, 8]}, {
                  Rational[-1, 4], 0}, {
                  Rational[-1, 4], 
                  Rational[-1, 8]}}, {{-0.25, 0}, {-0.375, 0.125}, {-0.125, 
                 0.125}, {-0.25, 0}, {-0.25, -0.125}}]], 
              LineBox[
               NCache[{{0, 0}, {
                  Rational[-1, 8], 
                  Rational[1, 8]}, {
                  Rational[1, 8], 
                  Rational[1, 8]}, {0, 0}, {0, 
                  Rational[-1, 8]}}, {{0, 0}, {-0.125, 0.125}, {0.125, 
                 0.125}, {0, 0}, {0, -0.125}}]], 
              LineBox[
               NCache[{{
                  Rational[1, 4], 0}, {
                  Rational[1, 8], 
                  Rational[1, 8]}, {
                  Rational[3, 8], 
                  Rational[1, 8]}, {
                  Rational[1, 4], 0}, {
                  Rational[1, 4], 
                  Rational[-1, 8]}}, {{0.25, 0}, {0.125, 0.125}, {0.375, 
                 0.125}, {0.25, 0}, {0.25, -0.125}}]]}}]},
          "RowDefault"],
         ImageSize->{45, 38},
         ImageSizeAction->"ResizeToFit"]},
       {
        PaneBox["\<\"Mayan\"\>",
         BaseStyle->{{
           BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
           LineSpacing -> {0.9, 0, 1.5}, 
           LinebreakAdjustments -> {1, 10, 10000, 0, 100}, TextAlignment -> 
           Left},
         BaselinePosition->Baseline], 
        StyleBox[GridBox[{
           {
            GraphicsBox[
             {RGBColor[0.696834, 0.696834, 0.696834], 
              DiskBox[NCache[{Rational[1, 8] 3^Rational[1, 2], 1}, {
                0.21650635094610965`, 1}], NCache[
               Rational[1, 2] (1 + Rational[-1, 2] 3^Rational[1, 2]), 
                0.0669872981077807]], 
              DiskBox[{0, 1}, NCache[
               Rational[1, 2] (1 + Rational[-1, 2] 3^Rational[1, 2]), 
                0.0669872981077807]], 
              DiskBox[NCache[{
                Rational[-1, 8] 3^Rational[1, 2], 1}, {-0.21650635094610965`, 
                 1}], NCache[
               Rational[1, 2] (1 + Rational[-1, 2] 3^Rational[1, 2]), 
                0.0669872981077807]]},
             ImageSize->{25.51442841485013, 6.028856829700268}]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Center}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0.9}}}], 
         "Column"]}
      },
      AllowScriptLevelChange->False,
      AutoDelete->False,
      BaselinePosition->Automatic,
      FrameStyle->GrayLevel[0.84],
      GridBoxAlignment->{"Columns" -> {Left, Left}, "Rows" -> {{Baseline}}},
      GridBoxBackground->{"Columns" -> {None, None}},
      GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}], "Grid"],
    StripOnInput->False,
    LineSpacing->{0.9, 0, 1.5},
    LineIndent->0],
   TraditionalForm], "Output",
  ScriptLevel->0,
  FontFamily->"Times",
  FontSize->14,
  Background->None]], "Output",
 CellChangeTimes->{3.621092074064375*^9, 3.62109232617375*^9, 
  3.62109277708*^9, 3.6211635026638365`*^9, 3.6211644857780557`*^9, 
  3.640861315415174*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Interpretation of \[OpenCurlyDoubleQuote]three\[CloseCurlyDoubleQuote] or 3
The Signified - Resource\
\>", "Subchapter",
 CellChangeTimes->{{3.6408623930477357`*^9, 3.640862421593634*^9}, {
  3.6408660347037544`*^9, 3.6408660381949654`*^9}, {3.640867728533784*^9, 
  3.64086775860312*^9}}],

Cell[TextData[{
 "The Wolfram Language provides a uniform mechanism, the ",
 StyleBox["Interpreter",
  FontWeight->"Bold"],
 " function, for specifying how input of different types should be \
interpreted. Interpretations can involve either structural or semantic \
conversions. The strings that appear in ",
 StyleBox["$InterpreterTypes",
  FontWeight->"Bold"],
 " are the possible first arguments to ",
 StyleBox["Interpreter.",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.6408625235594544`*^9, 3.6408626429461555`*^9}, {
  3.6408627454734993`*^9, 3.640862833251819*^9}, {3.6408628721922493`*^9, 
  3.640862957826038*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$InterpreterTypes", "//", "Short"}]], "Input",
 CellChangeTimes->{{3.6408629603035774`*^9, 3.6408629672674446`*^9}, {
  3.6408630016785774`*^9, 3.6408630190858035`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{"\<\"3DS\"\>", ",", "\<\"ACO\"\>", 
    ",", "\<\"AdministrativeDivision\"\>", ",", 
    RowBox[{"\[LeftSkeleton]", "606", "\[RightSkeleton]"}], 
    ",", "\<\"XYZ\"\>", ",", "\<\"ZIP\"\>", ",", "\<\"ZIPCode\"\>"}], "}"}],
  Short]], "Output",
 CellChangeTimes->{
  3.6408629733172493`*^9, {3.6408630068328743`*^9, 3.6408630198006477`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interpretation", "Section",
 CellChangeTimes->{{3.6408631484109993`*^9, 3.640863177500843*^9}, 
   3.6408635702548723`*^9}],

Cell[TextData[{
 "Generally speaking interpretation is closely related with the assignment of \
meaning to any expression or concept. But in computer science an interpreter \
is a computer program that executes instructions. In Wolfram Language the \
interpreter is involved in the evaluation of an expression. ",
 StyleBox["In R3DM any interpretation is directly linked to the signified, \
the semantics of any information resource",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.640864638064493*^9, 3.6408647243885183`*^9}, {
   3.6408647794246645`*^9, 3.640864783328398*^9}, {3.640864896715982*^9, 
   3.640864913500258*^9}, {3.640864970249198*^9, 3.6408650749376745`*^9}, 
   3.6408651238058386`*^9, {3.640865256382987*^9, 3.64086531201287*^9}, {
   3.6408653571115026`*^9, 3.640865438789237*^9}, {3.6408660896363716`*^9, 
   3.640866178604106*^9}}],

Cell[CellGroupData[{

Cell["The Interpreter Function", "Subsection",
 CellChangeTimes->{{3.6408635744521384`*^9, 3.6408635793173723`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Interpreter", "[", "\"\<Number\>\"", "]"}], "[", "\"\<3\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "returns", " ", "the", " ", "interpreted", " ", "object", " ", "only", 
     " ", "if", " ", "applying", " ", "test", " ", "to", " ", "it", " ", 
     "yields", " ", "True"}], ";", 
    RowBox[{
    "otherwise", " ", "it", " ", "returns", " ", "a", " ", "Failure", " ", 
     RowBox[{"object", "."}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.616401209726406*^9, 3.616401238977705*^9}, {
  3.616401528251606*^9, 3.616401535738824*^9}, {3.6164019321104193`*^9, 
  3.6164020227478533`*^9}, {3.6164021618136587`*^9, 3.616402162853628*^9}, {
  3.6164023333268747`*^9, 3.616402334789315*^9}, {3.619959238749571*^9, 
  3.619959241155821*^9}, {3.6199627087026963`*^9, 3.6199627128901963`*^9}, {
  3.6199628033589463`*^9, 3.619962810343321*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.616402052709634*^9, 3.6164021640846167`*^9, 3.6164023355513697`*^9, 
   3.6199580956401963`*^9, 3.6199590347964463`*^9, {3.619962709780821*^9, 
   3.619962714374571*^9}, 3.619962824718321*^9, 3.621081091057318*^9, 
   3.6210819672075386`*^9, {3.6210820623012886`*^9, 3.6210820754887886`*^9}, 
   3.6210821901762886`*^9, 3.6210822759106636`*^9, 3.621091681283125*^9, 
   3.6210918567675*^9, 3.621163503603572*^9, 3.6211644864751263`*^9, 
   3.640863184314319*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Interpreter", "[", "\"\<Number\>\"", "]"}], "/@", 
  RowBox[{"{", 
   RowBox[{"3", ",", "\"\<3\>\"", ",", 
    RowBox[{"{", "3", "}"}], ",", "\"\<three\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6199626012651963`*^9, 3.619962624312071*^9}, {
  3.619962722968321*^9, 3.619962747812071*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "3", ",", 
   RowBox[{"{", "3", "}"}], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["Failure",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquarePlusIconMedium"],
              ImageSizeCache->{15., {0., 15.}}],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = True),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           FrameBox[
            StyleBox["\<\"\[WarningSign]\"\>", "Message",
             StripOnInput->False,
             FontSize->35],
            ContentPadding->False,
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->None,
            StripOnInput->False], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Message: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Enter a valid number.\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Tag: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"InterpretationFailure\"\>",
                "SummaryItem"]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquareMinusIconMedium"]],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = False),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           FrameBox[
            StyleBox["\<\"\[WarningSign]\"\>", "Message",
             StripOnInput->False,
             FontSize->35],
            ContentPadding->False,
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->None,
            StripOnInput->False], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Message: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Enter a valid number.\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Tag: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"InterpretationFailure\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Input: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"three\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Type: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Number\"\>",
                "SummaryItem"]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    Failure["InterpretationFailure", 
     Association[
     "MessageTemplate" :> MessageName[Interpreter, "number"], 
      "MessageParameters" -> Association["Input" -> "three"], "Input" -> 
      "three", "Type" -> "Number"]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.619962610187071*^9, 3.6199626261401963`*^9}, {
   3.6199627237026963`*^9, 3.619962748999571*^9}, 3.6210810920651307`*^9, 
   3.6210819672231636`*^9, {3.6210820623325386`*^9, 3.6210820755044136`*^9}, 
   3.6210821902231636`*^9, 3.6210822759419136`*^9, 3.621091681814375*^9, 
   3.62109185679875*^9, 3.6211635040819826`*^9, 3.6211644871007023`*^9, 
   3.640863187470569*^9}]
}, Open  ]],

Cell["\<\
In the list above the last element cannot be interpreted as a number but \
according to Wolfram language the semantic interpretation should be tried \
instead. Indeed if we try\
\>", "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.640863375689443*^9, 3.6408634719111223`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Interpreter", "[", "\"\<SemanticNumber\>\"", "]"}], "[", 
  "\"\<three\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.616402109948011*^9, 3.616402133780987*^9}, {
  3.616402170398924*^9, 3.6164022776297092`*^9}, {3.616402319862591*^9, 
  3.616402321708239*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.616402135754654*^9, {3.616402180031015*^9, 3.6164022142400084`*^9}, {
   3.616402246949078*^9, 3.61640227983617*^9}, {3.6164023244285603`*^9, 
   3.616402339686161*^9}, 3.6199581049839463`*^9, 3.6199590377339463`*^9, 
   3.6210811025651307`*^9, 3.6210819679106636`*^9, {3.6210820630356636`*^9, 
   3.6210820762231636`*^9}, 3.6210821909262886`*^9, 3.6210822774106636`*^9, 
   3.621091683470625*^9, 3.62109185748625*^9, 3.6211635074650307`*^9, 
   3.621164489397453*^9, 3.6408632535399337`*^9}]
}, Open  ]],

Cell["\<\
But if we try the semantic interpretation for the word three in Greek (\[Tau]\
\[Rho]\:03af\[Alpha])\
\>", "Text",
 CellChangeTimes->{{3.6408632809482136`*^9, 3.640863331915125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Interpreter", "[", "\"\<SemanticNumber\>\"", "]"}], "[", 
  "\"\<\[Tau]\[Rho]\:03af\[Alpha]\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.64086326820343*^9, 3.6408632713111596`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{15., {0., 15.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         FrameBox[
          StyleBox["\<\"\[WarningSign]\"\>", "Message",
           StripOnInput->False,
           FontSize->35],
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          StripOnInput->False], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Message: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"No number interpretation found. Try again.\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Tag: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"InterpretationFailure\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         FrameBox[
          StyleBox["\<\"\[WarningSign]\"\>", "Message",
           StripOnInput->False,
           FontSize->35],
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          StripOnInput->False], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Message: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"No number interpretation found. Try again.\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Tag: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"InterpretationFailure\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Number\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Input: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"\[Tau]\[Rho]\:03af\[Alpha]\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  Failure["InterpretationFailure", 
   Association[
   "MessageTemplate" :> MessageName[Interpreter, "semantictype"], 
    "MessageParameters" -> 
    Association["Type" -> "number", "Input" -> "\[Tau]\[Rho]\:03af\[Alpha]"], 
    "Type" -> "Number", "Input" -> "\[Tau]\[Rho]\:03af\[Alpha]"]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.640863273580988*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["The Interpretation Function", "Subsection",
 CellChangeTimes->{{3.6408636050271425`*^9, 3.640863622856636*^9}}],

Cell["\<\
How are we going to define our own interpretations ? Wolfram Language \
provides the interpretation function for that purpose.\
\>", "Text",
 CellChangeTimes->{{3.6408636392988176`*^9, 3.6408637703369036`*^9}}],

Cell[CellGroupData[{

Cell["Interpretation[e,expr]", "Subsubsection",
 CellChangeTimes->{{3.6199593974526963`*^9, 3.6199593998901963`*^9}, {
  3.6199609196401963`*^9, 3.6199609221714463`*^9}}],

Cell["Represents an object that : ", "Text",
 CellChangeTimes->{{3.619959538499571*^9, 3.6199595408589463`*^9}, {
  3.6199596062964463`*^9, 3.619959615187071*^9}, {3.619960936562071*^9, 
  3.6199609444839463`*^9}}],

Cell[CellGroupData[{

Cell["displays as e", "Subitem",
 CellChangeTimes->{{3.619960898468321*^9, 3.6199609305776963`*^9}}],

Cell["\<\
interpreted as the unevaluated form of expr if supplied as input\
\>", "Subitem",
 CellChangeTimes->{{3.619960898468321*^9, 3.6199609406089463`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Interpretation of a unicode string e.g. \[OpenCurlyDoubleQuote]\[Tau]\
\[Rho]\[Iota]\[Alpha]\[CloseCurlyDoubleQuote] as 3", "Subsubsection",
 CellChangeTimes->{{3.619961106468321*^9, 3.619961149687071*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Interpretation", "[", 
  RowBox[{"\"\<\[Tau]\[Rho]\:03af\[Alpha]\>\"", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.616403946924549*^9, 3.61640396696072*^9}}],

Cell[BoxData[
 InterpretationBox["\<\"\[Tau]\[Rho]\:03af\[Alpha]\"\>",
  3]], "Output",
 CellChangeTimes->{
  3.61640414769178*^9, 3.6164071701775417`*^9, 3.6199581060151963`*^9, 
   3.619958748905821*^9, 3.6199622013589463`*^9, 3.6210811034088807`*^9, 
   3.6210819681762886`*^9, {3.6210820633325386`*^9, 3.6210820765356636`*^9}, 
   3.6210821912231636`*^9, 3.6210822777231636`*^9, 3.62109168386125*^9, 
   3.621091857783125*^9, 3.6211635082851634`*^9, 3.621164490026602*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "StandardForm"}]], "Input",
 CellChangeTimes->{{3.6199587288589463`*^9, 3.6199587428276963`*^9}, {
  3.6199587756089463`*^9, 3.619958777405821*^9}}],

Cell[BoxData[
 InterpretationBox["\<\"\[Tau]\[Rho]\:03af\[Alpha]\"\>",
  3]], "Output",
 CellChangeTimes->{{3.6199587345776963`*^9, 3.6199587777339463`*^9}, 
   3.619962203374571*^9, 3.621081103432318*^9, 3.6210819681919136`*^9, {
   3.6210820633481636`*^9, 3.6210820765512886`*^9}, 3.6210821912387886`*^9, 
   3.6210822777387886`*^9, 3.62109168386125*^9, 3.62109185779875*^9, 
   3.6211635083364215`*^9, 3.6211644900659237`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%%", "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.6199588360464463`*^9, 3.619958838749571*^9}, 
   3.6199622262651963`*^9}],

Cell["Interpretation[\"\[Tau]\[Rho]\:03af\[Alpha]\", 3]", "Output",
 CellChangeTimes->{
  3.6199588390464463`*^9, 3.619962227812071*^9, 3.6210811034557557`*^9, 
   3.6210819682075386`*^9, {3.6210820633637886`*^9, 3.6210820765669136`*^9}, 
   3.6210821912544136`*^9, 3.6210822777544136`*^9, 3.621091683876875*^9, 
   3.621091857814375*^9, 3.62116350838768*^9, 3.6211644900855846`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%%%", "//", "OutputForm"}]], "Input",
 CellChangeTimes->{{3.6199587843589463`*^9, 3.6199587876401963`*^9}, 
   3.619958848093321*^9, 3.619962241155821*^9}],

Cell[OutputFormData["\<\
Interpretation[\"\[Tau]\[Rho]\:03af\[Alpha]\", 3]\
\>", "\<\
Interpretation[\[Tau]\[Rho]\:03af\[Alpha], 3]\
\>"], "Output",
 CellChangeTimes->{
  3.6199587879839463`*^9, 3.6199588490464463`*^9, 3.6199622420776963`*^9, 
   3.621081103479193*^9, 3.6210819682075386`*^9, {3.6210820633794136`*^9, 
   3.6210820765825386`*^9}, 3.6210821912700386`*^9, 3.6210822777700386`*^9, 
   3.6210916838925*^9, 3.62109185783*^9, 3.621163508404766*^9, 
   3.621164490105245*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%%%%", "//", "Head"}]], "Input",
 CellChangeTimes->{{3.619962270405821*^9, 3.619962273499571*^9}}],

Cell[BoxData["Interpretation"], "Output",
 CellChangeTimes->{
  3.6199622744839463`*^9, 3.621081103479193*^9, 3.6210819682231636`*^9, {
   3.6210820633950386`*^9, 3.6210820765981636`*^9}, 3.6210821912856636`*^9, 
   3.6210822777856636`*^9, 3.621091683908125*^9, 3.62109185783*^9, 
   3.621163508438938*^9, 3.621164490144567*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["In this example, the output of the ",
  Background->RGBColor[0.88, 1, 0.88]],
 StyleBox["Interpretation",
  FontWeight->"Bold",
  Background->RGBColor[0.88, 1, 0.88]],
 StyleBox[" function",
  Background->RGBColor[0.88, 1, 0.88]],
 StyleBox[" is not a string",
  FontWeight->"Bold",
  Background->RGBColor[0.88, 1, 0.88]],
 StyleBox[", it evaluates to the ",
  Background->RGBColor[0.88, 1, 0.88]],
 StyleBox["expr",
  FontWeight->"Bold",
  Background->RGBColor[0.88, 1, 0.88]],
 StyleBox[" argument, i.e the integer number 3.\nCopy and paste that output \
when building expressions to display as a string in its unevaluated form.\n\
When the custom expression is going to be evaluated the string will be \
interpreted as a number.",
  Background->RGBColor[0.88, 1, 0.88]]
}], "Text",
 CellChangeTimes->{
  3.6199613818901963`*^9, {3.619961459062071*^9, 3.6199614638589463`*^9}, {
   3.6199614949526963`*^9, 3.6199616953276963`*^9}, {3.6199620268901963`*^9, 
   3.6199620692339463`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox["\"\<\[Tau]\[Rho]\:03af\[Alpha]\>\"",
  3]], "Input"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.6199581063276963`*^9, 3.6199588805151963`*^9, 3.619962297343321*^9, 
   3.6210811035026307`*^9, 3.6210819682387886`*^9, {3.6210820633950386`*^9, 
   3.6210820765981636`*^9}, 3.6210821913012886`*^9, 3.6210822778012886`*^9, 
   3.62109168392375*^9, 3.621091857845625*^9, 3.62116350847311*^9, 
   3.621164490164228*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", 
  InterpretationBox["\"\<\[Tau]\[Rho]\:03af\[Alpha]\>\"",
   3], "]"}]], "Input",
 CellChangeTimes->{{3.616407288288052*^9, 3.616407293115291*^9}, {
  3.6199623254526963`*^9, 3.619962339624571*^9}}],

Cell[BoxData["Integer"], "Output",
 CellChangeTimes->{
  3.616407293612092*^9, 3.619958106343321*^9, 3.619958881874571*^9, {
   3.6199623280776963`*^9, 3.6199623407964463`*^9}, 3.621081103526068*^9, 
   3.6210819682387886`*^9, {3.6210820634106636`*^9, 3.6210820766137886`*^9}, 
   3.6210821913012886`*^9, 3.6210822778169136`*^9, 3.62109168392375*^9, 
   3.62109185786125*^9, 3.6211635084901967`*^9, 3.621164490183889*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Interpretation of a numeral e.g. \[OpenCurlyDoubleQuote]III\
\[CloseCurlyDoubleQuote] as 3", "Subsubsection",
 CellChangeTimes->{{3.6199596939214463`*^9, 3.619959725812071*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Interpretation", "[", 
  RowBox[{"\"\<III\>\"", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.61640356375893*^9, 3.616403579019619*^9}, {
  3.616403626455546*^9, 3.616403659517281*^9}, {3.616403781642674*^9, 
  3.616403782939904*^9}, {3.6164039597976847`*^9, 3.616403959883831*^9}}],

Cell[BoxData[
 InterpretationBox["\<\"III\"\>",
  3]], "Output",
 CellChangeTimes->{
  3.616403802271884*^9, 3.6164066656391897`*^9, 3.619958105968321*^9, 
   3.619959837187071*^9, {3.6199609825776963`*^9, 3.6199610337339463`*^9}, 
   3.6199610648276963`*^9, 3.6199611699526963`*^9, 3.619961286312071*^9, 
   3.6210726194768543`*^9, 3.6210811031745057`*^9, 3.6210819680200386`*^9, {
   3.6210820630825386`*^9, 3.6210820762700386`*^9}, 3.6210821910512886`*^9, 
   3.6210822775356636`*^9, 3.62109168367375*^9, 3.621091857626875*^9, 
   3.6211635078067527`*^9, 3.6211644896530447`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "Head"}]], "Input",
 CellChangeTimes->{{3.6164040144451513`*^9, 3.6164040173487473`*^9}, {
  3.619960999968321*^9, 3.6199610037964463`*^9}}],

Cell[BoxData["Interpretation"], "Output",
 CellChangeTimes->{
  3.616404017780404*^9, 3.616406667409771*^9, 3.6199581059839463`*^9, {
   3.619960984030821*^9, 3.619961008749571*^9}, 3.6199610666089463`*^9, 
   3.6199611701089463`*^9, 3.6199612864526963`*^9, 3.621081103197943*^9, 
   3.6210819680356636`*^9, {3.6210820631762886`*^9, 3.6210820762856636`*^9}, 
   3.6210821910669136`*^9, 3.6210822775512886`*^9, 3.621091683689375*^9, 
   3.6210918576425*^9, 3.621163507858011*^9, 3.6211644896727057`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%%", "//", "OutputForm"}]], "Input",
 CellChangeTimes->{{3.6199598229526963`*^9, 3.6199598308589463`*^9}, {
  3.6199598951401963`*^9, 3.619959943999571*^9}, {3.6199609777339463`*^9, 
  3.6199609791401963`*^9}}],

Cell[OutputFormData["\<\
Interpretation[\"III\", 3]\
\>", "\<\
Interpretation[III, 3]\
\>"], "Output",
 CellChangeTimes->{{3.619959831218321*^9, 3.6199598387964463`*^9}, {
   3.619959920405821*^9, 3.619959944843321*^9}, {3.619960985843321*^9, 
   3.6199610114214463`*^9}, 3.6199610686714463`*^9, 3.619961170124571*^9, 
   3.619961286468321*^9, 3.6210811032213807`*^9, 3.6210819680512886`*^9, {
   3.6210820631919136`*^9, 3.6210820763637886`*^9}, 3.6210821910825386`*^9, 
   3.6210822775669136`*^9, 3.621091683705*^9, 3.621091857658125*^9, 
   3.6211635078750973`*^9, 3.6211644896923666`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%%%", "//", "StandardForm"}]], "Input",
 CellChangeTimes->{{3.619961018999571*^9, 3.6199610501714463`*^9}, {
  3.619961081780821*^9, 3.6199610829526963`*^9}}],

Cell[BoxData[
 InterpretationBox["\<\"III\"\>",
  3]], "Output",
 CellChangeTimes->{{3.619961022718321*^9, 3.6199610713276963`*^9}, 
   3.619961170155821*^9, 3.619961286499571*^9, 3.6210811032213807`*^9, 
   3.6210819680669136`*^9, {3.6210820632075386`*^9, 3.6210820763950386`*^9}, 
   3.6210821910981636`*^9, 3.6210822775825386`*^9, 3.621091683720625*^9, 
   3.62109185767375*^9, 3.6211635079092693`*^9, 3.621164489731688*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%%%%", "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.619961237280821*^9, 3.619961242093321*^9}}],

Cell["Interpretation[\"III\", 3]", "Output",
 CellChangeTimes->{
  3.619961242780821*^9, 3.619961286530821*^9, 3.621081103244818*^9, 
   3.6210819680669136`*^9, {3.6210820632231636`*^9, 3.6210820763950386`*^9}, 
   3.6210821911137886`*^9, 3.6210822775981636`*^9, 3.62109168373625*^9, 
   3.62109185767375*^9, 3.6211635079605274`*^9, 3.621164489751349*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox["\"\<III\>\"",
  3]], "Input",
 CellChangeTimes->{3.619961974405821*^9}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.6199597912964463`*^9, 3.619961170187071*^9, 3.6199612865464463`*^9, 
   3.619961479968321*^9, 3.619961705405821*^9, 3.6210811032682557`*^9, 
   3.6210819680825386`*^9, {3.6210820632387886`*^9, 3.6210820764106636`*^9}, 
   3.6210821911137886`*^9, 3.6210822776137886`*^9, 3.621091683751875*^9, 
   3.621091857689375*^9, 3.6211635079946995`*^9, 3.621164489790671*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "Head"}]], "Input",
 CellChangeTimes->{{3.6164067630287943`*^9, 3.61640676920541*^9}, {
  3.6199617119214463`*^9, 3.619961717249571*^9}}],

Cell[BoxData["Integer"], "Output",
 CellChangeTimes->{
  3.616406769743144*^9, 3.619958105999571*^9, 3.6199611702026963`*^9, 
   3.6199612865776963`*^9, 3.619961717812071*^9, 3.621081103291693*^9, 
   3.6210819680981636`*^9, {3.6210820632544136`*^9, 3.6210820764262886`*^9}, 
   3.6210821911294136`*^9, 3.6210822776294136`*^9, 3.621091683751875*^9, 
   3.621091857705*^9, 3.621163508045958*^9, 3.6211644898299923`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["String vs Interpretation", "Subsubsection",
 CellChangeTimes->{{3.640864137665161*^9, 3.640864149087036*^9}}],

Cell["\<\
In order to demonstrate the difference we will input a string expression with \
the keyboard first as the argument of the Head function\
\>", "Text",
 CellChangeTimes->{{3.6408641578878174`*^9, 3.640864266720825*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", "\"\<III\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6199618794839463`*^9, 3.619961885562071*^9}}],

Cell[BoxData["String"], "Output",
 CellChangeTimes->{
  3.6199618861401963`*^9, 3.621081103338568*^9, 3.6210819681137886`*^9, {
   3.6210820632700386`*^9, 3.6210820764575386`*^9}, 3.6210821911606636`*^9, 
   3.6210822776606636`*^9, 3.621091683783125*^9, 3.62109185773625*^9, 
   3.6211635080972166`*^9, 3.621164489888975*^9}]
}, Open  ]],

Cell["\<\
then we will copy and paste the output of the previous interpretation \
expression, i.e. \"III\", as the argument of the Head function\
\>", "Text",
 CellChangeTimes->{{3.6408642354229736`*^9, 3.6408642791036377`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", 
  InterpretationBox["\"\<III\>\"",
   3], "]"}]], "Input",
 CellChangeTimes->{{3.6199617400464463`*^9, 3.619961757437071*^9}, {
  3.6199618535151963`*^9, 3.6199618560151963`*^9}}],

Cell[BoxData["Integer"], "Output",
 CellChangeTimes->{{3.6199617416401963`*^9, 3.6199617467964463`*^9}, 
   3.6199618570151963`*^9, 3.6210811033151307`*^9, 3.6210819681137886`*^9, {
   3.6210820632544136`*^9, 3.6210820764419136`*^9}, 3.6210821911450386`*^9, 
   3.6210822776450386`*^9, 3.6210916837675*^9, 3.621091857720625*^9, 
   3.621163508063044*^9, 3.621164489869314*^9}]
}, Open  ]],

Cell["\<\
Now let us try the same using the Interpreter function with a string argument \
type\
\>", "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.6408642860002317`*^9, 3.640864324993204*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Interpreter", "[", "\"\<String\>\"", "]"}], "[", "\"\<III\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6199619158901963`*^9, 3.6199619565151963`*^9}}],

Cell[BoxData["\<\"III\"\>"], "Output",
 CellChangeTimes->{{3.6199619397964463`*^9, 3.6199619574839463`*^9}, 
   3.621081103338568*^9, 3.6210819681294136`*^9, {3.6210820632856636`*^9, 
   3.6210820764731636`*^9}, 3.6210821911762886`*^9, 3.6210822776762886`*^9, 
   3.62109168379875*^9, 3.62109185773625*^9, 3.6211635081313887`*^9, 
   3.621164489928297*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Interpreter", "[", "\"\<String\>\"", "]"}], "[", 
  InterpretationBox["\"\<III\>\"",
   3], "]"}]], "Input",
 CellChangeTimes->{{3.6199619690151963`*^9, 3.6199619801401963`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{15., {0., 15.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}]], 
         StyleBox["\<\"\[WarningSign]\"\>", "Message",
          StripOnInput->False,
          FontSize->35], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Message: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Enter a valid value.\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Tag: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"InterpretationFailure\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}]], 
         StyleBox["\<\"\[WarningSign]\"\>", "Message",
          StripOnInput->False,
          FontSize->35], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Message: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Enter a valid value.\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Tag: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"InterpretationFailure\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Input: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["3",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"String\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  Failure["InterpretationFailure", 
   Association[
   "MessageTemplate" :> MessageName[Interpreter, "invalid"], 
    "MessageParameters" -> 
    Missing["KeyAbsent", "MessageParameters", "Input" -> 3], "Input" -> 3, 
    "Type" -> "String"]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.6199619811089463`*^9, 3.6210811033620057`*^9, 3.6210819681450386`*^9, {
   3.6210820633012886`*^9, 3.6210820765044136`*^9}, 3.6210821911919136`*^9, 
   3.6210822776919136`*^9, 3.621091683814375*^9, 3.6210918577675*^9, 
   3.6211635081655607`*^9, 3.621164489967619*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Interpreter", "[", "\"\<Number\>\"", "]"}], "[", 
  InterpretationBox["\"\<III\>\"",
   3], "]"}]], "Input",
 CellChangeTimes->{{3.6199619912651963`*^9, 3.619962004780821*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.619962005749571*^9, 3.621081103385443*^9, 3.6210819681606636`*^9, {
   3.6210820633169136`*^9, 3.6210820765200386`*^9}, 3.6210821912075386`*^9, 
   3.6210822777231636`*^9, 3.621091683845625*^9, 3.621091857783125*^9, 
   3.621163508216819*^9, 3.62116448998728*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Evaluation of an expression with user-defined interpretations\
\>", "Subsubsection",
 CellChangeTimes->{{3.6199623686714463`*^9, 3.619962402687071*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"3", "*", 
   InterpretationBox["\"\<\[Tau]\[Rho]\:03af\[Alpha]\>\"",
    3]}], "-", 
  RowBox[{"2", "*", 
   InterpretationBox["\"\<III\>\"",
    3]}]}]], "Input",
 CellChangeTimes->{{3.6164074232264147`*^9, 3.6164074951577673`*^9}, {
  3.6210727132049656`*^9, 3.621072724397814*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.6164074360435143`*^9, 3.616407496868226*^9}, 
   3.6199581063589463`*^9, 3.619962423468321*^9, 3.621072717971377*^9, 
   3.6210811035495057`*^9, 3.6210819682544136`*^9, {3.6210820634262886`*^9, 
   3.6210820766294136`*^9}, 3.6210821913169136`*^9, 3.6210822778325386`*^9, 
   3.621091683939375*^9, 3.621091857876875*^9, 3.621163508541455*^9, 
   3.6211644902232103`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberQ", "/@", 
  RowBox[{"{", 
   RowBox[{
    InterpretationBox["\"\<III\>\"",
     3], ",", 
    InterpretationBox["\"\<\[Tau]\[Rho]\:03af\[Alpha]\>\"",
     3]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.61640762952779*^9, 3.616407709443524*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{{3.616407649308745*^9, 3.6164077107452803`*^9}, 
   3.619958106374571*^9, 3.619962425499571*^9, 3.6210811035495057`*^9, 
   3.6210819682700386`*^9, {3.6210820634419136`*^9, 3.6210820766450386`*^9}, 
   3.6210821913481636`*^9, 3.6210822778481636`*^9, 3.621091683955*^9, 
   3.6210918578925*^9, 3.6211635085927134`*^9, 3.6211644902428713`*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Storage of \[OpenCurlyQuote]3\[CloseCurlyQuote]
The Signifier - Realization\
\>", "Subchapter",
 CellChangeTimes->{{3.6408662498970747`*^9, 3.640866257567973*^9}, {
  3.640867695924409*^9, 3.640867736872651*^9}, {3.6408677834136667`*^9, 
  3.640867831931245*^9}, {3.6408680262261667`*^9, 3.640868030337495*^9}, {
  3.640870142695997*^9, 3.640870143133497*^9}}],

Cell["\<\
We will end our discussion on the three-faceted abstraction mechanism that we \
use for number \[OpenCurlyQuote]3\[CloseCurlyQuote] with the analysis of data \
types and encoding, decoding mechanisms to store various representations of \
\[OpenCurlyQuote]3\[CloseCurlyQuote]. First we will compare atomic and \
complex data types. We can view data types as containers of a specific type \
of content.\
\>", "Text",
 CellChangeTimes->{{3.6408680829654245`*^9, 3.6408683694148073`*^9}, {
  3.6408684107507453`*^9, 3.640868440302503*^9}}],

Cell[CellGroupData[{

Cell["The Container-Content Duality", "Section",
 CellChangeTimes->{{3.640870155515333*^9, 3.640870160945997*^9}}],

Cell[CellGroupData[{

Cell["Container (Form)", "Subsection",
 CellChangeTimes->{{3.6211636853356657`*^9, 3.6211636976169157`*^9}}],

Cell[CellGroupData[{

Cell["Integer Container (Data Type)", "Subsubsection",
 CellChangeTimes->{{3.616406480656982*^9, 3.616406488520295*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.616400584748583*^9, 3.616400587323032*^9}}],

Cell[BoxData["Integer"], "Output",
 CellChangeTimes->{
  3.616400587960531*^9, 3.6199580951714463`*^9, 3.621081090260443*^9, 
   3.6210819669262886`*^9, {3.6210820620825386`*^9, 3.6210820752700386`*^9}, 
   3.6210821899419136`*^9, 3.6210822756606636`*^9, 3.621091680970625*^9, 
   3.6210918566425*^9, 3.621163502766353*^9, 3.6211644858674235`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["String Container (Data Type)", "Subsubsection",
 CellChangeTimes->{{3.6164064941371403`*^9, 3.6164064997206*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", "\"\<3\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.616400589657559*^9, 3.6164005934981403`*^9}, {
  3.616400709052637*^9, 3.616400713923915*^9}, {3.616400793858451*^9, 
  3.61640079412197*^9}}],

Cell[BoxData["String"], "Output",
 CellChangeTimes->{
  3.616400806151032*^9, 3.619958095249571*^9, 3.621081090401068*^9, 
   3.6210819670669136`*^9, {3.6210820621762886`*^9, 3.6210820753794136`*^9}, 
   3.6210821900200386`*^9, 3.6210822757700386`*^9, 3.621091680970625*^9, 
   3.621091856658125*^9, 3.6211635028346977`*^9, 3.6211644859031706`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["List Container (Data Type)", "Subsubsection",
 CellChangeTimes->{{3.6164065349287233`*^9, 3.616406545694037*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", 
  RowBox[{"{", "3", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6164005983570223`*^9, 3.616400610395697*^9}, {
  3.61640072774839*^9, 3.616400729987818*^9}, {3.616400790725267*^9, 
  3.61640079124408*^9}}],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{
  3.616400611050271*^9, 3.616400730459523*^9, 3.616400812633684*^9, 
   3.6199580952651963`*^9, 3.621081090401068*^9, 3.6210819670825386`*^9, {
   3.6210820621919136`*^9, 3.6210820753950386`*^9}, 3.6210821900356636`*^9, 
   3.6210822757700386`*^9, 3.62109168098625*^9, 3.621091856658125*^9, 
   3.62116350286887*^9, 3.6211644859210443`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Head", "[", "3", "]"}], ",", "3"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Head", "[", "\"\<3\>\"", "]"}], ",", "\"\<3\>\""}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Head", "[", 
       RowBox[{"{", "3", "}"}], "]"}], ",", 
      RowBox[{"{", "3", "}"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], " ", "//",
   "TreeForm"}]], "Input",
 CellChangeTimes->{{3.616400762954795*^9, 3.6164007784356737`*^9}, {
  3.616400826796076*^9, 3.616400851265099*^9}, {3.616400885630352*^9, 
  3.616400891491609*^9}, {3.616406562081147*^9, 3.616406562399377*^9}, {
  3.619958214718321*^9, 3.6199583011089463`*^9}, {3.6199583602026963`*^9, 
  3.619958366562071*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[GraphicsComplexBox[{{1.7902871850985822`, 2.148344622118299}, {
    0.35805743701971643`, 1.432229748078866}, {0., 0.7161148740394332}, {
    0.7161148740394329, 0.7161148740394332}, {1.7902871850985822`, 
    1.432229748078866}, {1.4322297480788657`, 0.7161148740394332}, {
    2.148344622118299, 0.7161148740394332}, {3.222516933177448, 
    1.432229748078866}, {2.8644594961577314`, 0.7161148740394332}, {
    3.5805743701971644`, 0.7161148740394332}, {3.5805743701971644`, 0.}}, {
     {RGBColor[0.55, 0.45, 0.45], 
      LineBox[{{1, 2}, {1, 5}, {1, 8}, {2, 3}, {2, 4}, {5, 6}, {5, 7}, {8, 
       9}, {8, 10}, {10, 11}}]}, {
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["List", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.034782608695652174`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 1],
        TagBox[
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Integer", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"String", ",", "\"3\""}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"List", ",", 
                 RowBox[{"{", "3", "}"}]}], "}"}]}], "}"}], HoldForm]],
       Annotation[#, 
        HoldForm[{{Integer, 3}, {String, "3"}, {List, {3}}}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["List", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.034782608695652174`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 2],
        TagBox[
         RowBox[{"{", 
           RowBox[{"Integer", ",", "3"}], "}"}], HoldForm]],
       Annotation[#, 
        HoldForm[{Integer, 3}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["Integer",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.034782608695652174`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 3],
        TagBox["Integer", HoldForm]],
       Annotation[#, 
        HoldForm[Integer], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["3",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.034782608695652174`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 4],
        TagBox["3", HoldForm]],
       Annotation[#, 
        HoldForm[3], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["List", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.034782608695652174`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 5],
        TagBox[
         RowBox[{"{", 
           RowBox[{"String", ",", "\"3\""}], "}"}], HoldForm]],
       Annotation[#, 
        HoldForm[{String, "3"}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["String",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.034782608695652174`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 6],
        TagBox["String", HoldForm]],
       Annotation[#, 
        HoldForm[String], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"3\"\>",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.034782608695652174`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 7],
        TagBox["\"3\"", HoldForm]],
       Annotation[#, 
        HoldForm["3"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["List", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.034782608695652174`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 8],
        TagBox[
         RowBox[{"{", 
           RowBox[{"List", ",", 
             RowBox[{"{", "3", "}"}]}], "}"}], HoldForm]],
       Annotation[#, 
        HoldForm[{List, {3}}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["List",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.034782608695652174`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 9],
        TagBox["List", HoldForm]],
       Annotation[#, 
        HoldForm[List], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["List", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.034782608695652174`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 10],
        TagBox[
         RowBox[{"{", "3", "}"}], HoldForm]],
       Annotation[#, 
        HoldForm[{3}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["3",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.034782608695652174`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 11],
        TagBox["3", HoldForm]],
       Annotation[#, 
        HoldForm[3], "Tooltip"]& ]}}],
   Annotation[#, 
    VertexCoordinateRules -> {{1.7902871850985822`, 2.148344622118299}, {
     0.35805743701971643`, 1.432229748078866}, {0., 0.7161148740394332}, {
     0.7161148740394329, 0.7161148740394332}, {1.7902871850985822`, 
     1.432229748078866}, {1.4322297480788657`, 0.7161148740394332}, {
     2.148344622118299, 0.7161148740394332}, {3.222516933177448, 
     1.432229748078866}, {2.8644594961577314`, 0.7161148740394332}, {
     3.5805743701971644`, 0.7161148740394332}, {3.5805743701971644`, 0.}}]& ],
  AspectRatio->NCache[2 Rational[2, 23]^Rational[1, 2], 0.5897678246195885],
  FrameTicks->Automatic,
  ImageSize->{Automatic, 173.88888888888889`},
  PlotRange->All,
  PlotRangePadding->Scaled[0.1]]], "Output",
 CellChangeTimes->{
  3.616406564875379*^9, 3.6199580953589463`*^9, 3.6199583062026963`*^9, 
   3.619958367655821*^9, 3.621081090588568*^9, 3.6210819671294136`*^9, {
   3.6210820622231636`*^9, 3.6210820754262886`*^9}, 3.6210821900825386`*^9, 
   3.6210822758325386`*^9, 3.621091681033125*^9, 3.621091856705*^9, 
   3.6211635029543*^9, 3.6211644859925385`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AtomQ", "/@", 
  RowBox[{"{", 
   RowBox[{
   "Three", ",", "three", ",", "\"\<three\>\"", ",", "3", ",", "\"\<3\>\"", 
    ",", 
    RowBox[{"{", "3", "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.621093800814375*^9, 3.621093861689375*^9}, {
  3.621093914939375*^9, 3.621093943205*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "False"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.62109394542375*^9, 3.6211635030055585`*^9, 
  3.621164486028286*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "True", ",", "False", ","}], "}"}]], "Input",
 CellChangeTimes->{{3.621093909970625*^9, 3.621093912283125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "True", ",", "False", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.621163503056817*^9, 3.6211644860461597`*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Content (Value)", "Subsection",
 CellChangeTimes->{{3.621079037801832*^9, 3.6210790408721447`*^9}, {
  3.6210791363072805`*^9, 3.621079160978668*^9}, {3.6211637208669157`*^9, 
  3.6211637485700407`*^9}}],

Cell[TextData[{
 "Second, in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " the content, i.e. the value can be assigned to a variable or a constant in \
two different ways."
}], "Text",
 CellChangeTimes->{
  3.6355989339035053`*^9, {3.640868701370775*^9, 3.6408687667389393`*^9}, {
   3.640868819165697*^9, 3.64086884248308*^9}}],

Cell[CellGroupData[{

Cell["Symbol replacement (variable)", "Subsubsection",
 CellChangeTimes->{{3.6210791818896613`*^9, 3.621079185318158*^9}, {
  3.6210792669947596`*^9, 3.6210792705379047`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rule", "[", 
  RowBox[{"a", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.621079000208082*^9, 3.621079005270582*^9}}],

Cell[BoxData[
 RowBox[{"a", "\[Rule]", "3"}]], "Output",
 CellChangeTimes->{
  3.6210790071690197`*^9, 3.6210810906120057`*^9, 3.6210819671450386`*^9, {
   3.6210820622387886`*^9, 3.6210820754419136`*^9}, 3.6210821900981636`*^9, 
   3.6210822758481636`*^9, 3.62109168104875*^9, 3.621091856720625*^9, 
   3.621163503108075*^9, 3.621164486081907*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReplaceAll", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", "a"}], "-", "3"}], ",", 
   RowBox[{"a", "\[Rule]", "3"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6210794039890604`*^9, 3.6210794532546854`*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.6210794210984354`*^9, 3.6210794548484354`*^9, 3.621081090635443*^9, 
   3.6210819671606636`*^9, {3.6210820622544136`*^9, 3.6210820754575386`*^9}, 
   3.6210821901294136`*^9, 3.6210822758637886`*^9, 3.621091681064375*^9, 
   3.62109185673625*^9, 3.6211635031764193`*^9, 3.62116448609978*^9, 
   3.6408689255602283`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Symbol name (constant)", "Subsubsection",
 CellChangeTimes->{{3.6210792327066913`*^9, 3.6210793032039056`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", "3"}]], "Input",
 CellChangeTimes->{{3.6210793239017906`*^9, 3.6210793300842977`*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.6210793316762004`*^9, 3.6210810906588807`*^9, 3.6210819671762886`*^9, {
   3.6210820622700386`*^9, 3.6210820754575386`*^9}, 3.6210821901450386`*^9, 
   3.6210822758794136`*^9, 3.62109168108*^9, 3.62109185673625*^9, 
   3.621163503227678*^9, 3.6211644861355276`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "a"}], "-", "3"}]], "Input",
 CellChangeTimes->{{3.621079478215623*^9, 3.6210794851765604`*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.621079486371873*^9, 3.621081090682318*^9, 3.6210819671919136`*^9, {
   3.6210820622856636`*^9, 3.6210820754731636`*^9}, 3.6210821901606636`*^9, 
   3.6210822758950386`*^9, 3.621091681095625*^9, 3.621091856751875*^9, 
   3.6211635032618504`*^9, 3.6211644861534014`*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Encoding and Decoding of Container-Content", "Section",
 CellChangeTimes->{{3.6408701788200207`*^9, 3.6408701893180676`*^9}}],

Cell[TextData[{
 "We continue our discussion with two different kinds of container - content. \
The first one is an ",
 StyleBox["Image",
  FontWeight->"Bold"],
 " container (symbol) realized in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " as a raw array of bytes, and the second is a ",
 StyleBox["Sound",
  FontWeight->"Bold"],
 " container (symbol) realized in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " as a list of sound amplitude levels samples. Do notice that both visual \
and aural representations have not been assigned any interpretation."
}], "Text",
 CellChangeTimes->{{3.6408703453779902`*^9, 3.6408704074924707`*^9}, {
  3.640870485114813*^9, 3.6408705419125643`*^9}, {3.6408706745940433`*^9, 
  3.6408706978391347`*^9}, {3.640870785998121*^9, 3.6408708228880367`*^9}, {
  3.640870956286829*^9, 3.640870989331004*^9}, {3.6408710272694*^9, 
  3.6408710318392315`*^9}}],

Cell[CellGroupData[{

Cell["Image of 3 - Visual Representation", "Subsection",
 CellChangeTimes->{{3.621254655697295*^9, 3.6212546626255007`*^9}, {
  3.621261532180129*^9, 3.621261536317741*^9}, {3.62126158321959*^9, 
  3.6212615867316227`*^9}}],

Cell["\<\
This is an image of number 3. It depicts the Western Arabic numeral of the \
digit \[OpenCurlyQuote]3\[CloseCurlyQuote].\
\>", "Text",
 CellChangeTimes->{{3.6212554569933167`*^9, 3.6212554786098957`*^9}, {
  3.6212555830570602`*^9, 3.621255611025773*^9}, {3.6212556940101967`*^9, 
  3.62125571897857*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
JjW1uRvzoEKhADmFLupckRwsqGEZVaw6q5hb1GjkpZ7vlwLifTe3Zdbuszn1
N1vbu10etqenD+8uQqI/eEVlnrfr+IMrGqh0gyxJiU/vNeHlg7zQD8cHNfAj
z+ig3q/5btJXgYH7LEjC0ubhgiMuDkW9OOgfGMqoaHhs8REqpUMWfoWB46Qk
A/JGEmdZipR26u2S4lb0hno8vIf6b5WhUPgYIXoGpb9y6RsMfbLry5jF9Wj5
AD2EnUIz7LARv81BfwH1yakfpp3sw9vJ+4iFrxcu4eGquvv5xfnUmksy8gL3
7vsXbeQdfeRK0u2YDw5f7hr7VzB/SBmSDha+/jZ8AyMEF2098OCiarxiqsI8
oLQh4hSEhBSVIkNHvVebflwdGk8eMRTBYPhw6X+iUjBnS/HxZz8oojbckKWo
7iGGtLBHKCA8Lmn+ddal0Dg4Z/t6Y8HNxX70N716dpARe35vb2DNvoMNf7Yw
h1p1bpRHaKI9Am1AVl/9XnoTWSXHioXo5/YOhoT+kKcnpBeGrnuHml1D9bah
SuNQtnZo2+3BpJuhhaVXLt3Rh37fQTl8ufeLxuc/zqWWnEJ/7TCCBPJqkrz7
hiuftiVsOMMH8evpsWBB+jN9MHm/aWifbmiLMrTpdmhNW2jptdDC1tA750Oz
m0OzGgZfPjn4q6I7s5Mqai8oQ78viPX2D2wtP/WDZUXUkpMoRUz5nUqQQb3x
9jPrG52sGBo7Evj+0G5NaO7F0FvnQq80hv7j5ODPant+/AX7vVLHn+d0xe3U
PJ12bdKnTTGLj/716i/mbD68t+bC13VITmK9/JqsY99bWUEtPYnsTVaGw2My
SSMjbdiFQf3ZrWc2NDvGiARywvOlTnxqh27mtrZnU688ufHcpLWnJ648/viK
Y5NW1U/+tOHbG5u/vbHl6ZQrjy4/NmP5wdlbjy7NPuFixKHfEceImzTdNLy/
4+hfLK98ZNPlZwuZp3JcT+fSgKcwUCPHQ/BMLj1xly1203lGRDnYH58EMuDT
SnvMnKKn15+ektI6dUvbtJ3q+H2GhFxbQiGdUMwklPLxpfz0iuCU3YYnl1TP
2nFy7q6Tled1oXsdjJALYrAv6cDF3+46Ebus6qkdmhmVvQmlQkKZf3q5PyGM
QEKpP75UBMwo9z+Z6fnL9NbeAfQvJP743kDGrLWzj2+8Mi3fl1DMxRXzcaVC
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
     "], {{0, 87}, {87, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJydlndUVNcWxs+9d3qhzTACUoZehyZlAOm9Sa+iMswMMJQBhxkQ7IqoYEQR
kaYIEhUwYDQCEiuiWAgKFuwZJAgoMRhFVCy5o2slvry89/Ly/XHW756z97nn
fHvfta52UlZ4MgwAyCGgQzgnz10k4uRHYNAHj3wxPwlCwY+CDoDiFyQQZsEK
AGQKxaJwXw9mbFw8E98PYEAEOGAFAIebkx0c4RMpi/b39mTmoEHgX/TqFpBt
CK6z/EKZTPD/SZGbLRIDAIWiPI/Hz+GiXIhyRp44WzY/hTI9KV3GsOz8dBF6
QJRVZJzymc0+xXxmNxnzMoU8lGVnzuZl8mTcg/KmXAkfZSQI5aJcAT8P5Rso
62VIMgUov5blZvI5OQBgZO7oifncVJQtZUaJIsM9UZ4PAIGS8gUnfcFi/jKx
7FKeWdn5IkFKqphpxDVmWjk4sJl+/LwMvljMCuVw0zkiHtMzKzObI8wH4POd
P0lJ5i0TNdnOysHOjmVtbvWFUf918W9KVtvP9CLsU80gRt8fc38Vl9UAAHsa
9WbbH3NJVQB0bABA5e4fc3p7AZBH69Z+9Yv7MGT9kioWZztaWOTl5ZkL+Fxz
maG/638G/A198T5z2Xa/28P04idzJBlipsw3blZGlkTEzMnmcPlM1p+b+B8n
/vU5zML5yXwRX4hmRKNdJhCmoOUW8gRiQZaQKRD+pyL+w7Q/6XNfo6I1fgD0
JeZA4SodID/3AQyNDJCEPegK9HvdgojRQPblxWiNfe77T4L+fVe4VDbkCFI+
5XmGRzK5ElHu5zXZZwmwgATkAR2oAk2gC4wAC1gDe+AE3IA3CAAhIBLEgcWA
C1JBJhCBPLACrAVFoARsAztBNagDjaAJtIIjoAOcAGfBBXAFXAM3wT0gBaPg
KZgCr8AsBEF4iArRIFVIC9KHTCFriA25QN5QEBQOxUGJUAokhCTQCmg9VAKV
QdVQPdQEfQsdh85Cl6AB6A40DE1Av0JvYQSmwHRYAzaALWA27A4HwpHwIjgF
XgoXwIXwVrgSboAPwe3wWfgKfBOWwk/haQQgZISBaCMshI14IiFIPJKMiJBV
SDFSgTQgrUgX0otcR6TIJPIGg8PQMEwMC+OE8cNEYbiYpZhVmC2YasxBTDum
B3MdM4yZwnzAUrHqWFOsI9YfG4tNweZhi7AV2P3YY9jz2JvYUewrHA7HwBni
7HF+uDhcGm45bgtuN64NdwY3gBvBTePxeFW8Kd4ZH4Ln4MX4InwV/hD+NH4Q
P4p/TSATtAjWBB9CPEFIWEeoIDQTThEGCWOEWaICUZ/oSAwh8oj5xFJiI7GL
eJU4SpwlKZIMSc6kSFIaaS2pktRKOk+6T3pBJpN1yA7kMLKAvIZcST5Mvkge
Jr+hKFFMKJ6UBIqEspVygHKGcofygkqlGlDdqPFUMXUrtYl6jvqQ+lqOJmcu
5y/Hk1stVyPXLjco90yeKK8v7y6/WL5AvkL+qPxV+UkFooKBgqcCR2GVQo3C
cYUhhWlFmqKVYohipuIWxWbFS4rjSnglAyVvJZ5SodI+pXNKIzSEpkvzpHFp
62mNtPO0UTqObkj3p6fRS+jf0PvpU8pKyjbK0crLlGuUTypLGQjDgOHPyGCU
Mo4wbjHeztGY4z6HP2fznNY5g3NmVOaquKnwVYpV2lRuqrxVZap6q6arblft
UH2ghlEzUQtTy1Pbo3ZebXIufa7TXO7c4rlH5t5Vh9VN1MPVl6vvU+9Tn9bQ
1PDVyNao0jinManJ0HTTTNMs1zylOaFF03LREmiVa53WesJUZrozM5iVzB7m
lLa6tp+2RLteu197VsdQJ0pnnU6bzgNdki5bN1m3XLdbd0pPSy9Yb4Vei95d
faI+Wz9Vf5d+r/6MgaFBjMFGgw6DcUMVQ3/DAsMWw/tGVCNXo6VGDUY3jHHG
bON0493G10xgE1uTVJMak6umsKmdqcB0t+mAGdbMwUxo1mA2xKKw3Fm5rBbW
sDnDPMh8nXmH+TMLPYt4i+0WvRYfLG0tMywbLe9ZKVkFWK2z6rL61drEmmtd
Y31jHnWez7zV8zrnPbcxteHb7LG5bUuzDbbdaNtt+97O3k5k12o3Ya9nn2hf
az/EprND2VvYFx2wDh4Oqx1OOLxxtHMUOx5x/MWJ5ZTu1Ow0Pt9wPn9+4/wR
Zx1njnO9s9SF6ZLostdF6qrtynFtcH3kpuvGc9vvNuZu7J7mfsj9mYelh8jj
mMeMp6PnSs8zXoiXr1exV7+3kneUd7X3Qx8dnxSfFp8pX1vf5b5n/LB+gX7b
/Yb8Nfy5/k3+UwH2ASsDegIpgRGB1YGPgkyCREFdwXBwQPCO4PsL9BcIF3SE
gBD/kB0hD0INQ5eGfh+GCwsNqwl7HG4VviK8N4IWsSSiOeJVpEdkaeS9KKMo
SVR3tHx0QnRT9EyMV0xZjDTWInZl7JU4tThBXGc8Pj46fn/89ELvhTsXjibY
JhQl3FpkuGjZokuL1RZnLD65RH4JZ8nRRGxiTGJz4jtOCKeBM53kn1SbNMX1
5O7iPuW58cp5E3xnfhl/LNk5uSx5PMU5ZUfKRKprakXqpMBTUC14nuaXVpc2
kx6SfiD9Y0ZMRlsmITMx87hQSZgu7MnSzFqWNZBtml2ULV3quHTn0ilRoGh/
DpSzKKdTTEd/pvokRpINkuFcl9ya3Nd50XlHlykuEy7ryzfJ35w/VuBT8PVy
zHLu8u4V2ivWrhhe6b6yfhW0KmlV92rd1YWrR9f4rjm4lrQ2fe0P6yzXla17
uT5mfVehRuGawpENvhtaiuSKREVDG5021m3CbBJs6t88b3PV5g/FvOLLJZYl
FSXvtnC3XP7K6qvKrz5uTd7aX2pXumcbbptw263trtsPlimWFZSN7Aje0V7O
LC8uf7lzyc5LFTYVdbtIuyS7pJVBlZ1VelXbqt5Vp1bfrPGoaatVr91cO7Ob
t3twj9ue1jqNupK6t3sFe2/X+9a3Nxg0VOzD7cvd97gxurH3a/bXTfvV9pfs
f39AeEB6MPxgT5N9U1OzenNpC9wiaZk4lHDo2jde33S2slrr2xhtJYfBYcnh
J98mfnvrSOCR7qPso63f6X9Xe4x2rLgdas9vn+pI7ZB2xnUOHA843t3l1HXs
e/PvD5zQPlFzUvlk6SnSqcJTH08XnJ4+k31m8mzK2ZHuJd33zsWeu9ET1tN/
PvD8xQs+F871uveevuh88cQlx0vHL7Mvd1yxu9LeZ9t37AfbH4712/W3X7W/
2nnN4VrXwPyBU4Oug2eve12/cMP/xpWbC24O3Iq6dXsoYUh6m3d7/E7Gned3
c+/O3ltzH3u/+IHCg4qH6g8bfjT+sU1qJz057DXc9yji0b0R7sjTn3J+ejda
+Jj6uGJMa6xp3Hr8xITPxLUnC5+MPs1+OjtZ9LPiz7XPjJ5994vbL31TsVOj
z0XPP/665YXqiwMvbV52T4dOP3yV+Wp2pvi16uuDb9hvet/GvB2bzXuHf1f5
3vh914fAD/c/Zn78+BtCu/vt
       "], "RGB", "XYZ"], Interleaving -> True, 
     MetaInformation -> {
      "Exif" -> {
        "Orientation" -> 0, "XResolution" -> 72, "YResolution" -> 72, 
         "ResolutionUnit" -> 2, "Software" -> "Adobe Photoshop 7.0", 
         "DateTime" -> "2010:06:15 14:11:13", "Compression" -> 6, 
         "XResolution" -> 72, "YResolution" -> 72, "ResolutionUnit" -> 2, 
         "JPEGInterchangeFormat" -> 294, "JPEGInterchangeFormatLength" -> 
         2850, "ColorSpace" -> 65535, "PixelXDimension" -> 1862, 
         "PixelYDimension" -> 1862}}],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->Magnification[1],
   ImageSizeRaw->{87, 87},
   PlotRange->{{0, 87}, {0, 87}}], "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.621257499550866*^9, 3.621257502391205*^9}, 
   3.6408694655666213`*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         StyleBox[
          RowBox[{"Image", "[", 
           RowBox[{
            RowBox[{"RawArray", "[", 
             RowBox[{"\"\<Byte\>\"", ",", 
              RowBox[{"List", "[", 
               RowBox[{
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"List", "[", 
                   RowBox[{"255", ",", "255", ",", "255"}], "]"}], ",", 
                  RowBox[{"List", "[", 
                   RowBox[{"255", ",", "255", ",", "255"}], "]"}], ",", 
                  RowBox[{"List", "[", 
                   RowBox[{"255", ",", "255", ",", "255"}], "]"}], ",", 
                  RowBox[{"List", "[", 
                   RowBox[{"255", ",", "255", ",", "255"}], "]"}], ",", 
                  RowBox[{"List", "[", 
                   RowBox[{"255", ",", "255", ",", "255"}], "]"}], ",", 
                  RowBox[{"List", "[", 
                   RowBox[{"255", ",", "255", ",", "255"}], "]"}], ",", 
                  RowBox[{"List", "[", 
                   RowBox[{"255", ",", "255", ",", "255"}], "]"}], ",", 
                  RowBox[{"List", "[", 
                   RowBox[{"255", ",", "255", ",", "255"}], "]"}], ",", 
                  RowBox[{"List", "[", 
                   RowBox[{"255", ",", "255", ",", "255"}], "]"}], ",", 
                  RowBox[{"List", "[", 
                   RowBox[{"255", ",", "255", ",", "255"}], "]"}], ",", 
                  TemplateBox[{"67"},
                   "OutputSizeLimit`Skeleton",
                   DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                  ",", 
                  RowBox[{"List", "[", 
                   RowBox[{"255", ",", "255", ",", "255"}], "]"}], ",", 
                  RowBox[{"List", "[", 
                   RowBox[{"255", ",", "255", ",", "255"}], "]"}], ",", 
                  RowBox[{"List", "[", 
                   RowBox[{"255", ",", "255", ",", "255"}], "]"}], ",", 
                  RowBox[{"List", "[", 
                   RowBox[{"255", ",", "255", ",", "255"}], "]"}], ",", 
                  RowBox[{"List", "[", 
                   RowBox[{"255", ",", "255", ",", "255"}], "]"}], ",", 
                  RowBox[{"List", "[", 
                   RowBox[{"255", ",", "255", ",", "255"}], "]"}], ",", 
                  RowBox[{"List", "[", 
                   RowBox[{"255", ",", "255", ",", "255"}], "]"}], ",", 
                  RowBox[{"List", "[", 
                   RowBox[{"255", ",", "255", ",", "255"}], "]"}], ",", 
                  RowBox[{"List", "[", 
                   RowBox[{"255", ",", "255", ",", "255"}], "]"}], ",", 
                  RowBox[{"List", "[", 
                   RowBox[{"255", ",", "255", ",", "255"}], "]"}]}], "]"}], 
                ",", 
                TemplateBox[{"86"},
                 "OutputSizeLimit`Skeleton",
                 DisplayFunction->(FrameBox[
                   
                   RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                   Background -> GrayLevel[0.75], 
                   BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 1, 
                   FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]}], 
               "]"}]}], "]"}], ",", 
            TemplateBox[{"4"},
             "OutputSizeLimit`Skeleton",
             DisplayFunction->(FrameBox[
               
               RowBox[{
                "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
               Background -> GrayLevel[0.75], 
               BaseStyle -> {
                "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                 ShowStringCharacters -> False}, BaselinePosition -> Baseline,
                ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
               GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
            RowBox[{"Rule", "[", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, FrameMargins -> 1, 
                FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
             "]"}]}], "]"}],
          ShowSpecialCharacters->False,
          ShowStringCharacters->True,
          NumberMarks->True],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{82., {3., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{67., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Function[{OutputSizeLimit`Dump`x$}, 
              FullForm[OutputSizeLimit`Dump`x$]], 1, -1205073457170764433, 5/
             2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{78., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{78., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Function[{OutputSizeLimit`Dump`x$}, 
              FullForm[OutputSizeLimit`Dump`x$]], 1, -1205073457170764433, 5 
             2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{57., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{57., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Function[{OutputSizeLimit`Dump`x$}, 
              FullForm[OutputSizeLimit`Dump`x$]], 1, -1205073457170764433, 
             Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{99., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{99., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[1]]], "Output",
 CellChangeTimes->{3.621257503224997*^9, 3.621257547534824*^9, 
  3.621257624633122*^9, 3.621257681218273*^9, 3.621264544575274*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"img3", "=", "%"}], ";"}]], "Input",
 CellChangeTimes->{{3.621254783208961*^9, 3.621254783687696*^9}, 
   3.6212548374943647`*^9, {3.6212549236122828`*^9, 3.621254973821453*^9}, {
   3.621255041713172*^9, 3.6212550634774523`*^9}, {3.6212551342751083`*^9, 
   3.621255138625412*^9}, {3.621255326079464*^9, 3.6212553916855373`*^9}, {
   3.621257542650051*^9, 3.62125754479097*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"img3", "//", "Head"}]], "Input",
 CellChangeTimes->{{3.621255339456852*^9, 3.621255398776675*^9}}],

Cell[BoxData["Image"], "Output",
 CellChangeTimes->{{3.621255375848174*^9, 3.621255399726933*^9}, 
   3.621257693028306*^9, 3.621264544731048*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["8-bit Encoding", "Subsubsection"]], "Subsubsection",
 CellChangeTimes->{
  3.621257960690997*^9, {3.62125939780364*^9, 3.621259402987049*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"img3", "//", "InputForm"}], "//", "Short"}]], "Input",
 CellChangeTimes->{{3.6212574640043497`*^9, 3.6212574891144323`*^9}, {
  3.621257708531541*^9, 3.621257709616149*^9}}],

Cell[BoxData[
 TagBox[
  FrameBox[
   RowBox[{"Image", "[", 
    RowBox[{
     RowBox[{"RawArray", "[", 
      RowBox[{"\<\"Byte\"\>", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"255", ",", " ", "255", ",", " ", "255"}], "}"}], ",", 
           " ", 
           RowBox[{"{", 
            RowBox[{"255", ",", " ", "255", ",", " ", "255"}], "}"}], ",", 
           " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"<<", "3"}], ">>"}], "}"}], ",", " ", 
           RowBox[{
            RowBox[{"<<", "83"}], ">>"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"255", ",", " ", "255", ",", " ", "255"}], "}"}]}], "}"}],
          ",", " ", 
         RowBox[{
          RowBox[{"<<", "86"}], ">>"}]}], "}"}]}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"<<", "5"}], ">>"}]}], "]"}],
   BoxFrame->False,
   FrameMargins->{{False, False}, {False, False}}],
  Short]], "Output",
 CellChangeTimes->{{3.621257466508789*^9, 3.621257489620009*^9}, {
   3.621257695916683*^9, 3.6212577109777813`*^9}, 3.621264544780993*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"img3", "//", "ByteCount"}]], "Input",
 CellChangeTimes->{{3.6212583851444807`*^9, 3.621258390855743*^9}}],

Cell[BoxData["28907"], "Output",
 CellChangeTimes->{3.6212583918444157`*^9, 3.621264544833744*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"img3string", "=", 
  RowBox[{"ToString", "[", 
   RowBox[{"img3", ",", "StandardForm"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.621260158539448*^9, 3.621260200067976*^9}, {
  3.621260247683413*^9, 3.621260256034601*^9}}],

Cell[BoxData["\<\"\\!\\(\\*GraphicsBox[TagBox[RasterBox[RawArray[\\\"Byte\\\",\
 List[List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255]], \
List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, \
255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255]], \
List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, \
255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255]], \
List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, \
255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255]], \
List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, \
255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255]], \
List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, \
255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[254, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255]], \
List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, \
255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[254, 255, 255], List[252, 254, 254], List[251, 253, 254], List[253, 253, \
254], List[254, 254, 254], List[255, 254, 254], List[255, 255, 254], \
List[255, 255, 255], List[255, 255, 254], List[255, 254, 254], List[254, 254, \
254], List[252, 253, 254], List[252, 253, 254], List[253, 254, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255]], \
List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, \
255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[254, 255, 255], List[252, 253, 254], List[253, 253, 254], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[252, 255, 255], \
List[251, 255, 255], List[254, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 254], List[252, 253, 254], List[253, 254, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255]], \
List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, \
255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[252, 253, \
254], List[255, 254, 254], List[255, 255, 255], List[255, 255, 255], \
List[236, 249, 255], List[190, 220, 240], List[143, 193, 226], List[99, 164, \
211], List[73, 145, 198], List[58, 134, 189], List[49, 128, 186], List[47, \
127, 185], List[52, 130, 188], List[64, 138, 193], List[81, 151, 202], \
List[114, 175, 216], List[163, 205, 232], List[210, 234, 249], List[252, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[253, 253, 254], \
List[254, 254, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255]], List[List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[252, 254, 254], List[255, 254, 254], List[255, 255, 255], List[249, 255, \
255], List[181, 215, 238], List[94, 159, 205], List[29, 115, 178], List[1, \
96, 167], List[0, 92, 167], List[0, 94, 169], List[0, 99, 174], List[0, 102, \
177], List[0, 104, 180], List[0, 105, 180], List[0, 104, 179], List[0, 101, \
176], List[0, 96, 171], List[0, 91, 166], List[0, 91, 164], List[10, 103, \
170], List[53, 133, 190], List[136, 187, 222], List[217, 238, 251], List[255, \
255, 255], List[255, 255, 255], List[252, 253, 254], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255]], \
List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, \
255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[252, 253, 254], List[255, 255, 255], List[252, 255, 255], List[160, 202, \
232], List[51, 128, 186], List[0, 92, 164], List[0, 93, 167], List[0, 108, \
183], List[1, 122, 199], List[3, 130, 209], List[4, 133, 214], List[3, 135, \
217], List[2, 134, 217], List[2, 134, 218], List[2, 134, 218], List[3, 134, \
217], List[3, 135, 217], List[3, 133, 215], List[4, 131, 211], List[3, 125, \
203], List[0, 116, 192], List[0, 101, 176], List[0, 88, 162], List[16, 105, \
171], List[103, 167, 212], List[222, 242, 253], List[255, 255, 255], \
List[253, 253, 254], List[254, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255]], List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[252, 253, \
254], List[255, 255, 255], List[203, 229, 245], List[62, 135, 191], List[0, \
88, 159], List[0, 101, 177], List[2, 124, 201], List[3, 133, 215], List[2, \
134, 218], List[1, 134, 219], List[0, 134, 219], List[0, 134, 220], List[0, \
134, 219], List[1, 133, 218], List[1, 133, 218], List[1, 133, 218], List[1, \
133, 218], List[1, 133, 218], List[1, 133, 218], List[0, 133, 218], List[1, \
133, 218], List[2, 134, 219], List[2, 133, 217], List[4, 129, 208], List[0, \
114, 189], List[0, 90, 163], List[24, 108, 172], List[151, 198, 229], \
List[255, 255, 255], List[255, 255, 254], List[254, 254, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255]], List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[252, 253, 254], List[255, 255, \
255], List[150, 197, 228], List[10, 97, 164], List[0, 94, 167], List[3, 125, \
203], List[2, 135, 219], List[0, 135, 221], List[0, 134, 219], List[1, 133, \
218], List[1, 133, 218], List[1, 133, 218], List[1, 133, 218], List[1, 133, \
218], List[1, 133, 218], List[1, 133, 218], List[1, 133, 217], List[1, 133, \
217], List[1, 133, 218], List[1, 133, 217], List[1, 133, 218], List[1, 133, \
217], List[1, 133, 217], List[1, 133, 219], List[1, 133, 219], List[1, 134, \
219], List[4, 131, 212], List[0, 107, 181], List[0, 84, 154], List[98, 162, \
206], List[244, 253, 255], List[255, 255, 254], List[253, 254, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255]], \
List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, \
255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[254, 255, \
255], List[252, 253, 254], List[255, 255, 255], List[125, 180, 218], List[0, \
85, 155], List[1, 110, 184], List[4, 134, 216], List[1, 134, 219], List[1, \
133, 218], List[0, 133, 218], List[0, 133, 218], List[1, 133, 217], List[1, \
133, 217], List[1, 133, 217], List[1, 133, 218], List[1, 133, 218], List[1, \
133, 218], List[1, 133, 218], List[1, 133, 218], List[1, 133, 217], List[1, \
133, 215], List[0, 132, 215], List[0, 132, 215], List[1, 133, 216], List[1, \
133, 217], List[1, 133, 218], List[2, 133, 218], List[1, 133, 218], List[1, \
133, 218], List[2, 135, 218], List[3, 123, 199], List[0, 84, 154], List[67, \
140, 192], List[238, 249, 255], List[255, 254, 254], List[254, 254, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255]], List[List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[252, 253, 254], List[255, 255, \
255], List[134, 187, 222], List[0, 83, 156], List[3, 118, 193], List[1, 134, \
217], List[0, 132, 215], List[1, 132, 217], List[1, 133, 218], List[1, 133, \
218], List[1, 133, 218], List[1, 133, 218], List[1, 133, 217], List[1, 133, \
216], List[0, 133, 217], List[1, 133, 218], List[1, 133, 218], List[1, 133, \
218], List[0, 133, 218], List[0, 133, 217], List[0, 132, 216], List[0, 132, \
215], List[0, 132, 215], List[1, 132, 216], List[1, 133, 217], List[1, 133, \
217], List[1, 133, 218], List[1, 133, 217], List[1, 133, 217], List[1, 133, \
217], List[1, 135, 219], List[4, 130, 209], List[0, 86, 158], List[68, 141, \
193], List[244, 252, 255], List[253, 253, 254], List[254, 254, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255]], List[List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[253, 254, 255], List[255, 255, 255], List[177, 213, 236], List[0, 90, \
161], List[3, 118, 195], List[1, 135, 219], List[0, 131, 215], List[0, 132, \
215], List[1, 133, 215], List[1, 133, 217], List[1, 133, 218], List[1, 133, \
218], List[1, 133, 218], List[1, 133, 217], List[0, 133, 217], List[0, 132, \
217], List[0, 132, 216], List[0, 132, 217], List[0, 132, 217], List[0, 132, \
217], List[0, 132, 217], List[1, 131, 217], List[1, 131, 217], List[0, 132, \
216], List[0, 132, 217], List[0, 132, 217], List[1, 133, 217], List[1, 133, \
217], List[1, 133, 218], List[1, 133, 218], List[1, 133, 217], List[1, 133, \
217], List[1, 134, 219], List[5, 131, 211], List[0, 84, 156], List[96, 160, \
205], List[255, 255, 255], List[252, 253, 254], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255]], List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[253, 255, 255], List[254, 254, 255], \
List[233, 246, 252], List[30, 115, 179], List[1, 107, 184], List[3, 137, \
222], List[1, 132, 216], List[0, 132, 215], List[0, 132, 216], List[1, 133, \
216], List[1, 133, 217], List[1, 133, 218], List[1, 133, 217], List[0, 132, \
217], List[0, 132, 217], List[1, 131, 217], List[1, 130, 216], List[0, 130, \
216], List[1, 131, 216], List[1, 131, 217], List[1, 130, 217], List[1, 130, \
216], List[0, 130, 216], List[1, 131, 217], List[0, 132, 217], List[0, 132, \
217], List[0, 132, 217], List[0, 132, 216], List[1, 133, 216], List[1, 133, \
216], List[1, 133, 218], List[1, 133, 217], List[0, 132, 216], List[1, 132, \
215], List[1, 134, 218], List[4, 125, 204], List[0, 84, 154], List[153, 197, \
226], List[255, 255, 255], List[253, 253, 254], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255]], \
List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, \
255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[252, 253, 254], List[255, 255, 255], List[114, 172, \
212], List[0, 91, 168], List[4, 136, 220], List[1, 133, 218], List[1, 133, \
218], List[1, 133, 218], List[1, 133, 218], List[1, 133, 217], List[1, 133, \
217], List[1, 132, 217], List[0, 132, 217], List[1, 132, 217], List[1, 131, \
217], List[0, 130, 216], List[0, 129, 215], List[0, 128, 215], List[0, 129, \
215], List[0, 129, 214], List[0, 128, 214], List[0, 129, 215], List[0, 130, \
215], List[0, 130, 216], List[1, 130, 217], List[1, 131, 217], List[0, 132, \
217], List[0, 132, 217], List[1, 132, 217], List[1, 133, 216], List[0, 132, \
216], List[0, 132, 215], List[0, 132, 215], List[0, 131, 215], List[0, 130, \
213], List[1, 135, 219], List[2, 112, 188], List[18, 103, 166], List[223, \
240, 250], List[254, 254, 255], List[253, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255]], List[List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[253, 254, 255], \
List[255, 255, 255], List[222, 238, 248], List[15, 105, 172], List[2, 120, \
201], List[1, 135, 220], List[1, 133, 217], List[1, 133, 218], List[1, 133, \
218], List[1, 133, 218], List[1, 133, 217], List[1, 133, 217], List[0, 132, \
217], List[0, 132, 217], List[0, 131, 216], List[0, 129, 215], List[0, 128, \
214], List[0, 127, 212], List[0, 127, 213], List[0, 129, 217], List[0, 132, \
220], List[0, 132, 220], List[0, 130, 218], List[0, 128, 215], List[0, 128, \
213], List[0, 130, 216], List[1, 131, 217], List[1, 132, 217], List[0, 132, \
217], List[1, 133, 218], List[1, 133, 217], List[0, 132, 215], List[0, 132, \
215], List[0, 132, 215], List[0, 132, 215], List[0, 130, 214], List[0, 131, \
214], List[4, 136, 219], List[0, 91, 165], List[109, 165, 206], List[255, \
255, 255], List[252, 253, 253], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255]], List[List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[252, 253, 254], List[255, 255, 255], \
List[127, 177, 214], List[0, 94, 172], List[3, 136, 219], List[0, 131, 216], \
List[1, 132, 217], List[1, 133, 218], List[1, 133, 218], List[0, 132, 216], \
List[1, 133, 217], List[0, 132, 217], List[0, 131, 216], List[0, 130, 216], \
List[0, 130, 215], List[0, 129, 213], List[0, 128, 212], List[2, 133, 220], \
List[3, 131, 216], List[4, 124, 206], List[4, 120, 199], List[4, 120, 199], \
List[3, 124, 206], List[2, 132, 219], List[0, 133, 222], List[0, 128, 215], \
List[0, 130, 216], List[1, 130, 216], List[1, 131, 217], List[0, 132, 217], \
List[0, 132, 217], List[0, 132, 215], List[0, 131, 215], List[0, 131, 215], \
List[0, 131, 215], List[0, 131, 214], List[0, 131, 215], List[1, 134, 220], \
List[1, 121, 202], List[16, 105, 169], List[223, 239, 248], List[255, 255, \
255], List[254, 254, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255]], \
List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, \
255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[254, 255, 255], \
List[255, 255, 255], List[244, 251, 254], List[36, 119, 180], List[1, 113, \
194], List[2, 134, 219], List[1, 131, 215], List[0, 132, 215], List[0, 132, \
217], List[0, 132, 216], List[0, 132, 217], List[0, 132, 215], List[0, 131, \
216], List[0, 130, 215], List[0, 130, 214], List[0, 129, 213], List[0, 129, \
214], List[2, 130, 216], List[3, 107, 180], List[9, 91, 154], List[18, 92, \
152], List[24, 93, 151], List[25, 94, 151], List[21, 94, 152], List[17, 98, \
159], List[15, 118, 188], List[3, 134, 220], List[0, 129, 217], List[0, 130, \
215], List[0, 130, 216], List[1, 131, 216], List[0, 132, 216], List[0, 131, \
214], List[0, 131, 214], List[0, 132, 215], List[0, 132, 215], List[0, 132, \
215], List[0, 132, 217], List[1, 132, 217], List[3, 136, 220], List[0, 92, \
169], List[145, 187, 218], List[255, 255, 255], List[251, 253, 254], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255]], List[List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[252, 253, 254], List[255, 255, 255], \
List[185, 214, 234], List[0, 96, 170], List[1, 130, 212], List[0, 131, 215], \
List[0, 130, 214], List[0, 131, 214], List[0, 132, 215], List[0, 131, 215], \
List[0, 131, 216], List[0, 131, 214], List[0, 130, 214], List[0, 130, 214], \
List[0, 129, 214], List[0, 130, 216], List[2, 127, 209], List[5, 87, 148], \
List[29, 87, 137], List[51, 106, 155], List[58, 111, 159], List[61, 112, \
159], List[61, 112, 159], List[61, 113, 161], List[59, 113, 161], List[55, \
108, 153], List[21, 101, 160], List[0, 127, 213], List[0, 130, 217], List[0, \
130, 215], List[0, 130, 215], List[0, 131, 215], List[0, 131, 214], List[0, \
131, 214], List[0, 132, 215], List[0, 132, 215], List[0, 132, 216], List[0, \
132, 217], List[0, 131, 216], List[3, 136, 222], List[1, 106, 188], List[73, \
139, 189], List[255, 255, 255], List[253, 254, 254], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255]], List[List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[252, 253, 254], List[255, 255, 255], List[108, 164, 205], List[0, \
98, 180], List[4, 135, 219], List[0, 129, 213], List[0, 130, 214], List[0, \
130, 214], List[1, 132, 217], List[1, 131, 216], List[0, 130, 214], List[0, \
130, 215], List[0, 130, 214], List[0, 129, 213], List[0, 129, 214], List[1, \
129, 214], List[5, 84, 143], List[45, 93, 136], List[70, 118, 161], List[70, \
112, 155], List[72, 112, 153], List[74, 113, 153], List[75, 114, 154], \
List[76, 116, 155], List[76, 119, 159], List[77, 125, 168], List[54, 100, \
141], List[3, 94, 158], List[1, 132, 219], List[0, 129, 214], List[0, 130, \
215], List[0, 130, 215], List[0, 131, 215], List[0, 132, 215], List[0, 131, \
215], List[0, 132, 215], List[0, 132, 216], List[0, 132, 216], List[0, 131, \
216], List[2, 133, 218], List[0, 120, 204], List[25, 113, 177], List[239, \
246, 250], List[255, 255, 255], List[254, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255]], \
List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, \
255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[252, 254, 255], List[49, 126, 186], List[0, 114, 199], List[2, 133, \
219], List[0, 129, 214], List[0, 130, 215], List[0, 130, 216], List[0, 130, \
216], List[0, 130, 216], List[0, 130, 215], List[0, 130, 215], List[0, 129, \
214], List[0, 128, 212], List[0, 132, 217], List[0, 98, 166], List[39, 84, \
126], List[78, 120, 160], List[79, 115, 154], List[83, 117, 153], List[80, \
114, 150], List[78, 113, 148], List[78, 114, 149], List[81, 116, 152], \
List[86, 121, 156], List[89, 126, 161], List[91, 130, 165], List[34, 89, \
132], List[0, 114, 191], List[1, 132, 218], List[1, 130, 216], List[1, 131, \
216], List[0, 130, 214], List[0, 130, 214], List[0, 131, 215], List[0, 132, \
215], List[0, 132, 216], List[0, 132, 216], List[0, 132, 217], List[1, 132, \
217], List[0, 129, 214], List[6, 106, 177], List[211, 228, 239], List[255, \
255, 255], List[253, 254, 254], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255]], List[List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[254, 254, 254], List[255, 255, 255], List[217, 232, 243], List[9, \
102, 173], List[0, 123, 208], List[1, 128, 215], List[0, 128, 215], List[0, \
128, 215], List[0, 128, 215], List[0, 129, 215], List[0, 128, 215], List[0, \
129, 215], List[0, 129, 214], List[0, 129, 212], List[1, 129, 214], List[0, \
121, 202], List[15, 82, 132], List[76, 112, 148], List[87, 121, 156], \
List[89, 120, 153], List[86, 118, 151], List[115, 144, 172], List[148, 171, \
192], List[157, 178, 198], List[145, 170, 192], List[116, 146, 174], List[96, \
129, 161], List[107, 139, 167], List[71, 111, 145], List[0, 97, 164], List[1, \
132, 216], List[1, 130, 215], List[0, 130, 215], List[0, 131, 214], List[0, \
131, 214], List[0, 131, 214], List[0, 132, 215], List[0, 132, 216], List[0, \
132, 217], List[0, 132, 217], List[1, 132, 217], List[0, 132, 218], List[2, \
104, 180], List[195, 217, 233], List[255, 255, 255], List[253, 254, 254], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255]], List[List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[252, 253, \
254], List[255, 255, 255], List[171, 203, 228], List[0, 99, 179], List[0, \
132, 222], List[0, 129, 219], List[0, 128, 216], List[0, 126, 213], List[0, \
126, 212], List[0, 126, 213], List[0, 127, 213], List[0, 127, 214], List[0, \
128, 215], List[0, 127, 213], List[1, 131, 217], List[0, 104, 176], List[46, \
94, 135], List[93, 123, 156], List[95, 122, 152], List[105, 133, 162], \
List[187, 202, 215], List[246, 248, 250], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[242, 245, 248], List[174, 191, 208], \
List[118, 146, 172], List[98, 131, 159], List[6, 96, 157], List[0, 128, 211], \
List[1, 132, 217], List[0, 132, 215], List[0, 131, 215], List[0, 132, 215], \
List[0, 132, 215], List[0, 133, 215], List[0, 132, 216], List[0, 132, 217], \
List[0, 132, 217], List[1, 131, 217], List[2, 133, 219], List[0, 105, 183], \
List[188, 213, 230], List[255, 255, 255], List[253, 253, 254], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255]], List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[252, 253, 254], List[255, 255, \
255], List[137, 177, 207], List[14, 106, 172], List[23, 125, 195], List[10, \
125, 204], List[5, 127, 208], List[1, 128, 214], List[0, 132, 220], List[0, \
132, 222], List[0, 131, 222], List[0, 129, 219], List[0, 127, 216], List[1, \
126, 213], List[1, 125, 211], List[2, 93, 158], List[70, 108, 145], List[100, \
127, 156], List[107, 133, 160], List[210, 220, 229], List[255, 255, 255], \
List[255, 255, 255], List[253, 253, 254], List[253, 253, 254], List[253, 254, \
254], List[255, 255, 255], List[255, 255, 255], List[181, 197, 211], \
List[107, 139, 166], List[12, 99, 158], List[0, 125, 208], List[1, 133, 218], \
List[0, 131, 216], List[0, 132, 216], List[0, 132, 215], List[0, 132, 215], \
List[0, 132, 215], List[0, 132, 216], List[0, 131, 217], List[1, 131, 217], \
List[2, 131, 217], List[1, 132, 219], List[1, 108, 186], List[195, 216, 231], \
List[255, 255, 255], List[253, 254, 254], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255]], \
List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, \
255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[253, 254, 254], List[255, 255, 255], \
List[198, 220, 237], List[70, 141, 193], List[73, 138, 187], List[66, 132, \
181], List[55, 122, 172], List[44, 119, 172], List[34, 121, 181], List[25, \
120, 185], List[16, 121, 193], List[7, 126, 206], List[3, 131, 215], List[1, \
133, 221], List[0, 128, 215], List[10, 93, 155], List[86, 120, 154], \
List[102, 127, 155], List[176, 191, 205], List[255, 255, 255], List[252, 252, \
252], List[254, 254, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[253, 254, 254], List[254, 254, 255], List[242, 244, \
247], List[120, 154, 180], List[5, 97, 158], List[0, 127, 209], List[2, 134, \
220], List[0, 132, 216], List[0, 132, 216], List[0, 132, 216], List[0, 131, \
215], List[0, 131, 215], List[0, 132, 216], List[1, 131, 217], List[0, 130, \
215], List[1, 131, 216], List[0, 129, 215], List[6, 114, 189], List[213, 227, \
235], List[255, 255, 255], List[253, 254, 254], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255]], \
List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, \
255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[254, 255, 255], \
List[255, 255, 255], List[187, 216, 238], List[103, 168, 216], List[95, 163, \
213], List[93, 161, 211], List[91, 157, 206], List[86, 150, 198], List[79, \
143, 190], List[70, 134, 183], List[60, 128, 179], List[48, 123, 177], \
List[37, 120, 179], List[22, 117, 180], List[29, 99, 152], List[93, 124, \
156], List[120, 142, 167], List[232, 236, 241], List[254, 254, 254], \
List[254, 254, 254], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[254, 255, 255], \
List[255, 254, 253], List[117, 160, 191], List[0, 92, 159], List[1, 132, \
214], List[1, 133, 219], List[1, 133, 217], List[1, 132, 217], List[0, 132, \
216], List[0, 132, 215], List[0, 131, 215], List[1, 131, 216], List[1, 131, \
217], List[0, 130, 215], List[1, 131, 216], List[0, 124, 212], List[29, 123, \
189], List[241, 244, 245], List[255, 255, 255], List[254, 254, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255]], List[List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[254, 254, 255], List[255, 255, 255], \
List[225, 237, 246], List[165, 203, 231], List[138, 187, 224], List[124, 178, \
219], List[112, 171, 216], List[103, 166, 213], List[99, 161, 210], List[96, \
158, 205], List[93, 154, 202], List[89, 149, 197], List[84, 144, 192], \
List[78, 139, 188], List[92, 127, 161], List[146, 164, 184], List[253, 253, \
254], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[253, 254, 255], List[255, 255, 254], List[66, 138, 186], List[0, \
98, 169], List[2, 136, 221], List[0, 131, 216], List[1, 132, 217], List[1, \
132, 217], List[0, 132, 215], List[0, 131, 215], List[1, 132, 216], List[1, \
132, 217], List[0, 130, 216], List[0, 130, 215], List[3, 131, 217], List[1, \
117, 206], List[81, 147, 196], List[255, 255, 253], List[253, 254, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255]], List[List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[253, 254, 254], List[255, 255, 255], List[255, 255, 255], List[248, 252, \
254], List[240, 246, 252], List[221, 235, 247], List[199, 223, 240], \
List[181, 210, 233], List[158, 196, 225], List[137, 183, 218], List[121, 171, \
211], List[111, 163, 206], List[104, 160, 206], List[93, 140, 182], List[161, \
177, 195], List[255, 255, 255], List[254, 254, 254], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[253, 254, \
255], List[249, 252, 253], List[255, 255, 255], List[173, 213, 239], List[4, \
94, 158], List[2, 120, 196], List[0, 135, 220], List[0, 131, 214], List[0, \
132, 216], List[0, 132, 216], List[0, 132, 215], List[0, 132, 216], List[1, \
131, 217], List[1, 131, 216], List[0, 130, 216], List[0, 128, 214], List[2, \
131, 217], List[0, 112, 198], List[159, 192, 215], List[255, 255, 255], \
List[252, 253, 254], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255]], \
List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, \
255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[254, 254, 255], List[253, 254, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[248, 251, \
254], List[236, 244, 250], List[217, 232, 244], List[199, 220, 237], \
List[169, 201, 226], List[199, 214, 228], List[254, 254, 255], List[251, 252, \
253], List[252, 253, 254], List[252, 253, 254], List[252, 253, 254], \
List[253, 253, 254], List[255, 255, 254], List[255, 255, 255], List[188, 225, \
250], List[22, 110, 173], List[0, 103, 173], List[1, 135, 221], List[0, 132, \
215], List[0, 132, 215], List[0, 132, 216], List[0, 132, 216], List[0, 132, \
216], List[0, 132, 217], List[1, 131, 217], List[1, 130, 216], List[0, 130, \
216], List[2, 129, 215], List[1, 127, 216], List[29, 126, 194], List[235, \
238, 239], List[255, 255, 255], List[254, 254, 254], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255]], List[List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[254, 255, 255], List[254, 254, \
255], List[254, 254, 255], List[253, 254, 255], List[253, 254, 254], \
List[254, 254, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[214, 240, 255], \
List[118, 183, 226], List[9, 102, 165], List[0, 101, 170], List[1, 133, 216], \
List[1, 133, 219], List[1, 132, 217], List[0, 132, 216], List[0, 132, 216], \
List[0, 132, 216], List[0, 132, 217], List[1, 131, 217], List[1, 130, 216], \
List[0, 130, 215], List[0, 130, 216], List[3, 131, 217], List[0, 117, 206], \
List[137, 179, 208], List[255, 255, 255], List[252, 253, 254], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255]], List[List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[254, 255, 255], List[254, 254, \
255], List[254, 254, 255], List[253, 254, 254], List[252, 254, 254], \
List[254, 255, 255], List[232, 240, 246], List[133, 191, 228], List[132, 191, \
230], List[125, 187, 229], List[104, 173, 220], List[66, 147, 202], List[14, \
109, 174], List[0, 88, 154], List[0, 110, 180], List[1, 132, 215], List[1, \
132, 218], List[1, 133, 219], List[1, 133, 217], List[1, 132, 217], List[0, \
132, 216], List[0, 132, 217], List[1, 132, 217], List[1, 131, 217], List[0, \
130, 217], List[0, 130, 217], List[3, 129, 215], List[0, 127, 220], List[47, \
134, 193], List[242, 241, 242], List[253, 254, 255], List[254, 254, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255]], \
List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, \
255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[253, 253, 254], List[255, 255, 255], List[189, 212, 227], List[0, 80, \
143], List[0, 85, 150], List[0, 90, 160], List[0, 90, 160], List[0, 96, 166], \
List[0, 111, 183], List[3, 127, 204], List[1, 133, 217], List[1, 132, 217], \
List[1, 133, 218], List[1, 133, 217], List[1, 133, 218], List[0, 132, 217], \
List[0, 131, 217], List[1, 131, 217], List[0, 130, 216], List[0, 130, 216], \
List[0, 130, 217], List[2, 129, 215], List[0, 132, 225], List[11, 120, 196], \
List[200, 212, 221], List[255, 255, 255], List[253, 254, 254], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255]], \
List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, \
255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[252, 253, 254], List[255, 255, 255], List[164, 195, 215], List[3, 93, \
160], List[5, 129, 206], List[3, 127, 206], List[3, 129, 209], List[2, 131, \
213], List[1, 133, 216], List[1, 133, 217], List[1, 133, 218], List[1, 133, \
218], List[1, 133, 218], List[1, 133, 218], List[1, 133, 218], List[0, 132, \
217], List[1, 131, 217], List[1, 130, 217], List[0, 130, 216], List[0, 129, \
215], List[2, 127, 214], List[0, 134, 227], List[5, 118, 199], List[165, 191, \
208], List[255, 255, 255], List[252, 253, 254], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255]], List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[251, 253, 254], List[255, 255, 255], List[128, 171, 200], List[0, \
97, 172], List[3, 135, 219], List[0, 130, 214], List[0, 132, 215], List[0, \
131, 215], List[0, 132, 215], List[1, 132, 217], List[1, 133, 217], List[1, \
133, 217], List[1, 133, 217], List[1, 133, 217], List[0, 132, 217], List[0, \
131, 217], List[1, 131, 217], List[0, 130, 215], List[0, 127, 213], List[1, \
128, 214], List[0, 134, 228], List[7, 120, 199], List[155, 184, 205], \
List[255, 255, 255], List[252, 253, 254], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255]], List[List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[253, 254, 254], List[255, 255, 255], List[94, \
151, 188], List[0, 104, 182], List[4, 135, 220], List[0, 130, 214], List[0, \
131, 214], List[0, 132, 215], List[0, 132, 215], List[0, 132, 215], List[0, \
132, 216], List[0, 132, 216], List[1, 133, 217], List[0, 132, 216], List[0, \
132, 217], List[1, 131, 217], List[1, 130, 216], List[0, 130, 217], List[0, \
133, 224], List[1, 133, 223], List[28, 119, 183], List[169, 192, 211], \
List[255, 255, 255], List[252, 253, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255]], List[List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[254, 255, 255], \
List[255, 255, 255], List[67, 133, 179], List[0, 111, 193], List[3, 134, \
219], List[0, 130, 215], List[0, 131, 215], List[0, 131, 215], List[0, 132, \
215], List[0, 132, 216], List[0, 132, 217], List[0, 132, 217], List[0, 132, \
217], List[0, 132, 216], List[0, 132, 216], List[0, 131, 215], List[1, 132, \
217], List[1, 123, 203], List[6, 125, 204], List[4, 105, 174], List[150, 185, \
211], List[255, 255, 255], List[255, 255, 253], List[252, 253, 254], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255]], \
List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, \
255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[254, 254, 255], \
List[255, 255, 255], List[246, 249, 250], List[42, 119, 174], List[0, 118, \
201], List[2, 133, 217], List[0, 130, 214], List[1, 131, 216], List[0, 131, \
217], List[1, 132, 217], List[1, 132, 217], List[0, 132, 217], List[0, 132, \
217], List[0, 132, 217], List[0, 132, 216], List[0, 132, 216], List[0, 132, \
214], List[0, 133, 217], List[0, 121, 197], List[2, 100, 165], List[4, 98, \
161], List[22, 115, 180], List[104, 174, 222], List[227, 246, 255], List[255, \
255, 255], List[253, 253, 254], List[254, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255]], List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[254, 254, \
254], List[255, 255, 255], List[225, 235, 240], List[18, 108, 171], List[0, \
123, 207], List[1, 132, 215], List[0, 130, 215], List[0, 130, 216], List[0, \
130, 217], List[0, 130, 217], List[0, 130, 216], List[1, 131, 217], List[0, \
131, 217], List[1, 131, 217], List[1, 132, 217], List[0, 132, 215], List[0, \
132, 215], List[0, 132, 215], List[0, 133, 216], List[0, 130, 213], List[0, \
123, 201], List[0, 107, 178], List[0, 88, 155], List[25, 117, 179], List[163, \
211, 243], List[255, 255, 255], List[254, 254, 254], List[254, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255]], List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[253, 254, \
254], List[255, 255, 255], List[199, 218, 230], List[2, 102, 171], List[0, \
128, 212], List[1, 130, 215], List[0, 129, 215], List[0, 130, 216], List[0, \
130, 216], List[0, 130, 216], List[0, 130, 216], List[0, 130, 216], List[0, \
130, 216], List[0, 130, 216], List[0, 131, 216], List[0, 130, 215], List[0, \
131, 214], List[0, 132, 215], List[0, 132, 215], List[0, 132, 215], List[0, \
131, 215], List[1, 132, 214], List[4, 129, 208], List[0, 103, 173], List[0, \
90, 158], List[115, 182, 224], List[253, 255, 255], List[253, 254, 253], \
List[254, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255]], List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[252, 253, \
254], List[255, 255, 255], List[173, 201, 221], List[0, 97, 172], List[2, \
128, 214], List[1, 126, 212], List[1, 126, 213], List[2, 127, 214], List[2, \
128, 214], List[3, 130, 216], List[2, 128, 214], List[1, 127, 212], List[0, \
129, 214], List[0, 129, 216], List[0, 130, 216], List[0, 130, 215], List[0, \
130, 214], List[0, 131, 215], List[0, 132, 215], List[0, 132, 215], List[0, \
132, 215], List[1, 132, 215], List[1, 132, 215], List[2, 133, 217], List[3, \
119, 192], List[0, 85, 154], List[108, 174, 218], List[255, 255, 255], \
List[252, 253, 254], List[254, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255]], List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[251, 253, \
254], List[255, 255, 255], List[144, 183, 209], List[3, 96, 173], List[4, \
136, 225], List[0, 134, 225], List[0, 135, 227], List[0, 134, 225], List[0, \
133, 223], List[0, 133, 224], List[0, 135, 228], List[0, 136, 228], List[2, \
131, 219], List[1, 127, 212], List[0, 128, 215], List[0, 129, 215], List[0, \
131, 215], List[0, 130, 217], List[0, 132, 216], List[0, 132, 215], List[0, \
132, 216], List[1, 132, 216], List[1, 132, 216], List[1, 131, 215], List[1, \
133, 216], List[5, 121, 196], List[0, 85, 152], List[134, 189, 225], \
List[255, 255, 255], List[252, 253, 254], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255]], List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[252, 254, \
254], List[255, 255, 255], List[104, 161, 200], List[0, 105, 190], List[3, \
126, 209], List[16, 120, 193], List[43, 128, 188], List[70, 141, 191], \
List[88, 148, 194], List[89, 149, 194], List[62, 138, 191], List[18, 121, \
191], List[0, 126, 214], List[0, 135, 226], List[1, 127, 212], List[0, 128, \
213], List[0, 130, 213], List[0, 130, 215], List[0, 131, 217], List[0, 132, \
217], List[0, 132, 217], List[1, 132, 217], List[0, 132, 216], List[0, 132, \
215], List[0, 131, 214], List[1, 133, 217], List[3, 116, 190], List[3, 93, \
157], List[189, 222, 242], List[255, 255, 255], List[252, 254, 254], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255]], List[List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[253, 254, 254], List[99, 152, 193], List[84, \
144, 190], List[151, 180, 207], List[199, 211, 226], List[233, 235, 240], \
List[248, 248, 250], List[255, 254, 255], List[255, 254, 255], List[244, 245, \
247], List[201, 213, 225], List[94, 143, 181], List[7, 114, 188], List[0, \
133, 221], List[1, 128, 212], List[0, 129, 213], List[0, 130, 215], List[1, \
131, 216], List[0, 131, 217], List[1, 133, 217], List[1, 133, 216], List[0, \
132, 215], List[0, 132, 215], List[0, 131, 214], List[0, 130, 213], List[2, \
134, 218], List[0, 101, 173], List[48, 128, 182], List[246, 252, 255], \
List[254, 254, 254], List[254, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255]], List[List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[253, 253, 254], \
List[235, 241, 247], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[254, 255, 255], \
List[254, 255, 255], List[255, 255, 255], List[255, 255, 255], List[251, 252, \
254], List[134, 163, 188], List[13, 108, 174], List[0, 130, 218], List[1, \
129, 213], List[0, 130, 214], List[0, 130, 216], List[0, 131, 216], List[0, \
132, 217], List[0, 132, 216], List[0, 132, 215], List[0, 132, 215], List[0, \
130, 214], List[0, 130, 214], List[0, 131, 214], List[3, 130, 211], List[0, \
90, 159], List[158, 199, 226], List[255, 255, 255], List[251, 253, 254], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255]], \
List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, \
255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[254, 255, 254], List[252, 253, \
254], List[253, 253, 254], List[254, 254, 254], List[254, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[254, 255, 255], List[252, 253, \
254], List[255, 255, 255], List[250, 253, 255], List[109, 143, 175], List[4, \
108, 180], List[1, 130, 215], List[0, 128, 212], List[0, 130, 213], List[0, \
130, 215], List[0, 131, 215], List[0, 132, 216], List[0, 132, 216], List[0, \
131, 215], List[0, 131, 215], List[0, 130, 214], List[0, 129, 213], List[2, \
134, 218], List[1, 109, 185], List[54, 132, 184], List[250, 254, 255], \
List[254, 254, 255], List[254, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255]], List[List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[254, 254, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[252, 253, 254], List[255, 255, \
255], List[202, 214, 226], List[49, 108, 154], List[0, 118, 198], List[1, \
130, 215], List[0, 129, 213], List[0, 130, 214], List[0, 130, 214], List[0, \
131, 215], List[0, 132, 216], List[0, 132, 215], List[0, 131, 215], List[0, \
130, 214], List[0, 130, 214], List[0, 131, 215], List[0, 128, 209], List[4, \
102, 170], List[200, 224, 239], List[255, 255, 255], List[253, 254, 254], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255]], List[List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[254, 255, 255], List[254, 255, 255], List[254, 254, 255], \
List[254, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[254, 254, \
255], List[254, 255, 255], List[239, 243, 247], List[105, 137, 166], List[7, \
105, 172], List[0, 129, 214], List[0, 129, 213], List[0, 129, 213], List[0, \
130, 214], List[0, 131, 214], List[0, 132, 217], List[0, 132, 216], List[0, \
132, 215], List[0, 130, 214], List[0, 130, 214], List[0, 130, 213], List[3, \
134, 217], List[0, 100, 177], List[133, 181, 214], List[255, 255, 255], \
List[251, 253, 254], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255]], \
List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, \
255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[254, 255, 255], List[254, 255, 255], List[254, 255, 255], \
List[253, 254, 255], List[253, 254, 255], List[253, 254, 255], List[254, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[251, 253, 254], \
List[136, 158, 181], List[24, 102, 157], List[0, 123, 205], List[1, 130, \
213], List[0, 129, 213], List[0, 130, 214], List[0, 130, 214], List[0, 131, \
215], List[0, 132, 216], List[0, 132, 215], List[0, 132, 215], List[0, 130, \
214], List[0, 129, 213], List[3, 134, 218], List[0, 110, 192], List[80, 149, \
198], List[255, 255, 255], List[254, 254, 254], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255]], List[List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[253, 254, 255], \
List[254, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[250, 253, 255], List[244, 251, \
255], List[236, 249, 255], List[220, 240, 253], List[239, 244, 248], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[254, 254, 255], List[147, 167, 188], List[39, 104, 151], List[0, \
116, 194], List[1, 130, 215], List[0, 129, 213], List[0, 130, 214], List[0, \
130, 214], List[0, 131, 215], List[0, 132, 215], List[0, 132, 215], List[0, \
131, 215], List[0, 130, 214], List[0, 130, 214], List[2, 133, 217], List[0, \
117, 202], List[50, 133, 191], List[252, 254, 254], List[255, 255, 255], \
List[254, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255]], List[List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[254, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[249, 253, 255], List[243, 251, \
255], List[235, 248, 255], List[220, 243, 254], List[204, 237, 254], \
List[192, 233, 254], List[180, 229, 254], List[165, 222, 254], List[150, 216, \
254], List[138, 209, 253], List[128, 207, 255], List[104, 160, 201], \
List[198, 210, 220], List[255, 255, 255], List[253, 253, 254], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[253, 254, 255], List[146, 168, 189], List[49, \
107, 152], List[0, 110, 185], List[1, 131, 215], List[0, 129, 213], List[0, \
130, 214], List[0, 130, 214], List[0, 131, 215], List[0, 132, 215], List[0, \
131, 214], List[0, 131, 214], List[0, 130, 214], List[0, 130, 214], List[1, \
131, 215], List[0, 122, 206], List[31, 123, 187], List[242, 247, 250], \
List[255, 255, 255], List[254, 254, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255]], \
List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, \
255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[254, 255, 255], List[255, 255, 255], \
List[254, 255, 254], List[204, 237, 254], List[164, 223, 254], List[147, 217, \
254], List[136, 212, 255], List[126, 209, 255], List[118, 206, 255], \
List[111, 203, 255], List[104, 199, 255], List[97, 195, 255], List[91, 192, \
255], List[84, 188, 253], List[76, 184, 253], List[79, 157, 210], List[91, \
128, 163], List[177, 196, 212], List[255, 255, 255], List[253, 254, 254], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[249, 251, 252], List[137, 162, \
185], List[52, 112, 157], List[0, 110, 184], List[1, 131, 215], List[1, 130, \
213], List[0, 130, 214], List[0, 130, 214], List[0, 131, 215], List[0, 132, \
215], List[0, 132, 215], List[0, 131, 215], List[0, 130, 214], List[0, 130, \
214], List[1, 130, 214], List[0, 125, 209], List[23, 121, 189], List[232, \
240, 244], List[255, 255, 255], List[254, 254, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255]], List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[254, 255, 255], List[242, 251, \
255], List[144, 215, 255], List[93, 197, 255], List[89, 194, 255], List[82, \
189, 255], List[75, 184, 253], List[67, 177, 248], List[58, 168, 240], \
List[50, 160, 231], List[40, 151, 224], List[29, 141, 215], List[22, 132, \
203], List[16, 122, 191], List[4, 108, 176], List[45, 117, 168], List[92, \
135, 170], List[146, 173, 196], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[254, 254, 254], List[254, 255, 255], List[232, 237, 242], List[118, 149, \
178], List[50, 115, 163], List[0, 111, 184], List[0, 131, 215], List[0, 129, \
212], List[0, 129, 213], List[0, 129, 213], List[0, 129, 213], List[0, 130, \
213], List[0, 130, 213], List[0, 129, 213], List[0, 129, 213], List[0, 128, \
212], List[1, 129, 213], List[0, 124, 208], List[23, 123, 192], List[231, \
240, 244], List[255, 255, 255], List[254, 254, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255]], List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[252, 253, 255], List[255, 255, 255], List[175, 217, \
244], List[21, 140, 217], List[34, 138, 206], List[24, 131, 201], List[20, \
125, 194], List[16, 119, 186], List[15, 115, 181], List[14, 114, 178], \
List[16, 116, 180], List[18, 122, 188], List[19, 125, 192], List[19, 125, \
193], List[22, 130, 201], List[12, 113, 178], List[33, 113, 167], List[91, \
137, 176], List[111, 150, 183], List[233, 239, 244], List[254, 255, 255], \
List[254, 254, 254], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[253, 253, 254], List[255, 255, 255], List[191, 207, 221], List[101, 140, \
176], List[42, 113, 165], List[11, 126, 200], List[24, 156, 239], List[21, \
151, 233], List[22, 152, 236], List[22, 152, 236], List[21, 152, 236], \
List[21, 152, 236], List[22, 152, 236], List[21, 151, 235], List[21, 151, \
235], List[21, 151, 235], List[23, 152, 236], List[15, 143, 229], List[27, \
126, 195], List[239, 244, 247], List[255, 255, 255], List[254, 254, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255]], List[List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[253, 253, 254], List[255, 255, \
255], List[186, 212, 230], List[4, 92, 157], List[22, 121, 186], List[25, \
130, 199], List[26, 136, 206], List[28, 141, 214], List[30, 147, 221], \
List[31, 152, 229], List[31, 156, 236], List[31, 158, 239], List[31, 160, \
242], List[30, 160, 242], List[32, 163, 247], List[25, 144, 221], List[20, \
110, 172], List[84, 140, 184], List[93, 143, 184], List[165, 195, 217], \
List[255, 255, 255], List[253, 253, 254], List[254, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[253, 254, 254], List[255, 255, 255], List[244, 247, 250], List[128, 166, \
197], List[95, 143, 183], List[27, 112, 171], List[21, 140, 215], List[33, \
165, 249], List[31, 160, 243], List[31, 161, 245], List[32, 162, 245], \
List[31, 162, 245], List[31, 162, 245], List[31, 162, 246], List[31, 160, \
245], List[30, 160, 244], List[30, 160, 244], List[33, 162, 245], List[20, \
148, 235], List[43, 133, 199], List[249, 252, 252], List[255, 255, 255], \
List[254, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255]], List[List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[253, 254, \
254], List[255, 255, 255], List[216, 230, 240], List[14, 125, 201], List[28, \
154, 238], List[31, 158, 241], List[29, 158, 242], List[29, 160, 243], \
List[29, 160, 244], List[29, 160, 244], List[29, 160, 245], List[29, 160, \
245], List[29, 161, 245], List[29, 160, 243], List[29, 161, 245], List[29, \
154, 233], List[11, 111, 177], List[64, 136, 191], List[95, 152, 198], \
List[100, 159, 203], List[196, 221, 238], List[255, 255, 255], List[255, 255, \
255], List[253, 254, 255], List[252, 254, 255], List[253, 254, 255], \
List[254, 254, 255], List[255, 255, 255], List[253, 253, 254], List[155, 192, \
220], List[100, 153, 195], List[82, 144, 193], List[14, 110, 175], List[27, \
151, 229], List[30, 161, 247], List[30, 159, 243], List[30, 160, 244], \
List[30, 160, 244], List[30, 161, 244], List[30, 161, 244], List[30, 161, \
244], List[30, 159, 244], List[29, 159, 243], List[29, 158, 242], List[33, \
162, 245], List[13, 140, 227], List[66, 146, 205], List[255, 255, 254], \
List[254, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255]], \
List[List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, \
255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[254, 255, 255], List[255, 255, 255], List[245, 248, 249], List[35, \
135, 206], List[19, 148, 235], List[31, 160, 243], List[29, 159, 242], \
List[30, 160, 244], List[30, 161, 245], List[30, 162, 246], List[30, 162, \
246], List[30, 162, 246], List[30, 161, 245], List[30, 160, 244], List[30, \
160, 244], List[32, 162, 244], List[15, 120, 188], List[35, 127, 192], \
List[88, 158, 210], List[93, 163, 214], List[101, 170, 220], List[173, 213, \
240], List[242, 247, 250], List[255, 252, 250], List[255, 254, 251], \
List[255, 255, 251], List[254, 253, 251], List[225, 238, 247], List[146, 192, \
227], List[99, 163, 211], List[100, 163, 211], List[48, 134, 195], List[12, \
116, 184], List[33, 161, 245], List[30, 160, 244], List[30, 160, 244], \
List[30, 161, 244], List[30, 162, 245], List[30, 162, 245], List[30, 162, \
245], List[30, 162, 246], List[30, 160, 246], List[30, 160, 245], List[29, \
158, 242], List[35, 164, 247], List[2, 131, 221], List[103, 167, 212], \
List[255, 255, 255], List[252, 253, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255]], List[List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[254, 254, 254], List[254, 254, 254], List[252, 253, \
254], List[255, 255, 253], List[80, 156, 210], List[7, 139, 229], List[34, \
162, 244], List[29, 158, 242], List[29, 159, 244], List[30, 160, 245], \
List[30, 161, 245], List[30, 162, 245], List[30, 162, 245], List[30, 160, \
245], List[30, 160, 243], List[30, 160, 242], List[31, 163, 248], List[27, \
141, 214], List[10, 113, 181], List[64, 152, 216], List[87, 167, 224], \
List[92, 172, 229], List[92, 174, 231], List[117, 188, 238], List[152, 205, \
241], List[171, 213, 242], List[169, 212, 241], List[143, 200, 238], \
List[109, 180, 230], List[96, 170, 225], List[96, 169, 224], List[76, 160, \
222], List[16, 116, 185], List[24, 137, 210], List[31, 165, 250], List[30, \
161, 244], List[30, 162, 245], List[30, 162, 245], List[31, 163, 246], \
List[31, 163, 247], List[30, 162, 247], List[30, 162, 247], List[31, 161, \
247], List[30, 160, 246], List[30, 159, 244], List[34, 163, 247], List[2, \
125, 212], List[162, 200, 226], List[255, 255, 255], List[251, 253, 253], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[255, 255, 255], List[255, 255, 255]], List[List[251, 251, 251], \
List[251, 251, 251], List[252, 252, 252], List[252, 252, 252], List[254, 254, \
254], List[253, 253, 253], List[254, 254, 254], List[254, 254, 254], \
List[253, 253, 253], List[254, 254, 254], List[253, 253, 253], List[252, 252, \
252], List[252, 252, 252], List[251, 251, 251], List[250, 250, 250], \
List[248, 248, 248], List[248, 248, 248], List[247, 247, 247], List[246, 246, \
246], List[241, 244, 245], List[255, 252, 247], List[141, 187, 219], List[0, \
129, 221], List[34, 161, 246], List[29, 158, 243], List[29, 159, 244], \
List[30, 160, 244], List[30, 160, 245], List[30, 161, 245], List[30, 161, \
244], List[30, 160, 243], List[30, 160, 243], List[30, 160, 244], List[30, \
160, 244], List[32, 161, 243], List[17, 122, 189], List[18, 127, 202], \
List[71, 165, 232], List[82, 173, 237], List[86, 177, 242], List[85, 177, \
242], List[84, 178, 244], List[86, 179, 243], List[87, 179, 244], List[89, \
179, 243], List[92, 180, 242], List[88, 175, 236], List[79, 170, 234], \
List[37, 143, 215], List[17, 119, 185], List[32, 159, 241], List[30, 162, \
246], List[30, 162, 245], List[30, 162, 245], List[30, 162, 247], List[31, \
163, 248], List[31, 162, 247], List[30, 162, 247], List[30, 162, 247], \
List[31, 161, 246], List[29, 159, 244], List[31, 160, 245], List[26, 155, \
243], List[17, 129, 209], List[218, 229, 236], List[253, 251, 251], List[248, \
248, 248], List[251, 251, 251], List[251, 251, 251], List[252, 252, 252], \
List[252, 252, 252], List[254, 254, 254], List[254, 254, 254], List[254, 254, \
254], List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], \
List[255, 255, 255], List[255, 255, 255], List[255, 255, 255], List[255, 255, \
255], List[254, 254, 254], List[254, 254, 254], List[254, 254, 254], \
List[253, 253, 253], List[252, 252, 252], List[251, 251, 251]], \
List[List[248, 248, 248], List[249, 249, 249], List[249, 249, 249], List[250, \
250, 250], List[251, 251, 251], List[251, 251, 251], List[251, 251, 251], \
List[249, 249, 249], List[250, 250, 250], List[249, 249, 249], List[249, 249, \
249], List[248, 248, 248], List[247, 247, 247], List[245, 245, 245], \
List[245, 245, 245], List[244, 244, 244], List[243, 243, 243], List[241, 241, \
241], List[241, 241, 241], List[237, 239, 239], List[248, 244, 242], \
List[203, 217, 227], List[11, 129, 214], List[28, 156, 243], List[29, 158, \
243], List[29, 158, 243], List[30, 159, 244], List[30, 160, 244], List[30, \
160, 244], List[30, 160, 244], List[29, 160, 244], List[30, 160, 244], \
List[30, 160, 244], List[30, 160, 243], List[30, 161, 245], List[32, 152, \
229], List[14, 116, 182], List[20, 136, 215], List[61, 168, 241], List[74, \
176, 246], List[77, 179, 250], List[81, 183, 252], List[82, 185, 253], \
List[83, 186, 253], List[83, 184, 253], List[79, 179, 248], List[69, 173, \
244], List[37, 149, 224], List[15, 117, 183], List[30, 150, 226], List[30, \
163, 248], List[30, 162, 245], List[30, 162, 245], List[30, 162, 246], \
List[31, 162, 248], List[30, 163, 248], List[30, 162, 247], List[30, 162, \
247], List[31, 162, 247], List[30, 161, 247], List[29, 158, 244], List[34, \
162, 244], List[8, 140, 232], List[74, 153, 211], List[253, 247, 241], \
List[241, 243, 243], List[245, 245, 245], List[245, 245, 245], List[247, 247, \
247], List[248, 248, 248], List[249, 249, 249], List[249, 249, 249], \
List[251, 251, 251], List[251, 251, 251], List[252, 252, 252], List[253, 253, \
253], List[254, 254, 254], List[254, 254, 254], List[253, 253, 253], \
List[253, 253, 253], List[252, 252, 252], List[252, 252, 252], List[252, 252, \
252], List[251, 251, 251], List[251, 251, 251], List[250, 250, 250], \
List[250, 250, 250]], List[List[248, 248, 248], List[248, 248, 248], \
List[249, 249, 249], List[249, 249, 249], List[249, 249, 249], List[249, 249, \
249], List[248, 248, 248], List[248, 248, 248], List[247, 247, 247], \
List[247, 247, 247], List[246, 246, 246], List[245, 245, 245], List[244, 244, \
244], List[244, 244, 244], List[243, 243, 243], List[243, 243, 243], \
List[241, 241, 241], List[241, 241, 241], List[240, 240, 240], List[238, 238, \
238], List[236, 237, 238], List[245, 239, 234], List[65, 150, 211], List[9, \
142, 234], List[34, 160, 246], List[29, 158, 243], List[29, 159, 244], \
List[29, 159, 244], List[30, 160, 244], List[30, 160, 244], List[30, 160, \
244], List[29, 160, 243], List[30, 160, 244], List[30, 160, 244], List[30, \
160, 244], List[30, 160, 244], List[32, 149, 223], List[17, 118, 184], \
List[11, 129, 208], List[35, 158, 239], List[53, 173, 253], List[61, 179, \
255], List[64, 180, 255], List[63, 180, 255], List[56, 174, 253], List[40, \
160, 240], List[23, 138, 214], List[18, 119, 184], List[30, 147, 222], \
List[30, 162, 246], List[30, 162, 245], List[30, 162, 247], List[30, 162, \
246], List[30, 162, 246], List[30, 162, 247], List[30, 162, 247], List[29, \
162, 247], List[30, 162, 247], List[30, 161, 246], List[29, 158, 245], \
List[28, 157, 243], List[33, 159, 243], List[0, 127, 218], List[166, 197, \
220], List[252, 246, 241], List[236, 238, 239], List[241, 241, 241], \
List[243, 243, 243], List[244, 244, 244], List[245, 245, 245], List[247, 247, \
247], List[247, 247, 247], List[248, 248, 248], List[248, 248, 248], \
List[249, 249, 249], List[249, 249, 249], List[249, 249, 249], List[250, 250, \
250], List[250, 250, 250], List[250, 250, 250], List[250, 250, 250], \
List[249, 249, 249], List[249, 249, 249], List[249, 249, 249], List[249, 249, \
249], List[249, 249, 249], List[248, 248, 248]], List[List[246, 246, 246], \
List[246, 246, 246], List[246, 246, 246], List[247, 247, 247], List[248, 248, \
248], List[248, 248, 248], List[247, 247, 247], List[246, 246, 246], \
List[246, 246, 246], List[245, 245, 245], List[245, 245, 245], List[244, 244, \
244], List[244, 244, 244], List[243, 243, 243], List[242, 242, 242], \
List[240, 240, 240], List[239, 239, 239], List[239, 239, 239], List[238, 238, \
238], List[236, 236, 236], List[232, 234, 235], List[248, 242, 237], \
List[163, 196, 219], List[0, 130, 223], List[32, 158, 245], List[29, 158, \
245], List[29, 159, 244], List[29, 159, 245], List[29, 159, 245], List[30, \
160, 245], List[30, 160, 244], List[29, 159, 243], List[30, 160, 244], \
List[30, 160, 244], List[30, 160, 244], List[30, 160, 243], List[29, 160, \
243], List[32, 153, 230], List[25, 130, 197], List[14, 121, 191], List[13, \
129, 205], List[16, 138, 218], List[18, 142, 223], List[17, 138, 218], \
List[13, 129, 205], List[13, 121, 191], List[23, 128, 194], List[31, 153, \
229], List[29, 161, 245], List[30, 161, 244], List[30, 162, 245], List[30, \
162, 245], List[30, 162, 246], List[30, 162, 246], List[30, 162, 246], \
List[29, 161, 246], List[30, 161, 246], List[29, 160, 246], List[29, 160, \
245], List[29, 157, 244], List[32, 159, 243], List[13, 143, 234], List[49, \
142, 210], List[236, 232, 229], List[235, 235, 237], List[237, 237, 237], \
List[239, 239, 239], List[240, 240, 240], List[241, 241, 241], List[242, 242, \
242], List[244, 244, 244], List[244, 244, 244], List[244, 244, 244], \
List[245, 245, 245], List[246, 246, 246], List[247, 247, 247], List[247, 247, \
247], List[247, 247, 247], List[248, 248, 248], List[248, 248, 248], \
List[248, 248, 248], List[248, 248, 248], List[247, 247, 247], List[247, 247, \
247], List[247, 247, 247], List[247, 247, 247], List[247, 247, 247]], \
List[List[245, 245, 245], List[246, 246, 246], List[246, 246, 246], List[246, \
246, 246], List[246, 246, 246], List[247, 247, 247], List[246, 246, 246], \
List[246, 246, 246], List[245, 245, 245], List[245, 245, 245], List[244, 244, \
244], List[243, 243, 243], List[243, 243, 243], List[242, 242, 242], \
List[241, 241, 241], List[241, 241, 241], List[240, 240, 240], List[238, 238, \
238], List[238, 238, 238], List[236, 237, 237], List[236, 236, 237], \
List[234, 236, 236], List[239, 234, 230], List[55, 149, 215], List[9, 145, \
239], List[33, 159, 245], List[28, 158, 244], List[29, 159, 245], List[29, \
159, 245], List[30, 160, 246], List[29, 159, 245], List[29, 159, 244], \
List[29, 159, 243], List[29, 159, 243], List[29, 159, 243], List[29, 160, \
243], List[29, 161, 244], List[29, 160, 243], List[30, 159, 239], List[31, \
149, 224], List[29, 138, 206], List[26, 132, 199], List[24, 130, 196], \
List[25, 131, 198], List[28, 138, 207], List[31, 150, 225], List[31, 159, \
241], List[29, 161, 244], List[29, 162, 244], List[29, 161, 244], List[29, \
161, 244], List[29, 162, 244], List[29, 161, 245], List[29, 161, 246], \
List[29, 161, 246], List[30, 161, 246], List[30, 160, 245], List[29, 159, \
245], List[29, 158, 244], List[29, 157, 243], List[30, 157, 242], List[0, \
129, 222], List[165, 195, 214], List[244, 238, 233], List[230, 231, 233], \
List[235, 235, 235], List[237, 237, 237], List[239, 239, 239], List[241, 241, \
241], List[242, 242, 242], List[243, 243, 243], List[244, 244, 244], \
List[245, 245, 245], List[245, 245, 245], List[247, 247, 247], List[247, 247, \
247], List[247, 247, 247], List[247, 247, 247], List[248, 248, 248], \
List[248, 248, 248], List[248, 248, 248], List[248, 248, 248], List[247, 247, \
247], List[247, 247, 247], List[247, 247, 247], List[247, 247, 247], \
List[247, 247, 247]], List[List[245, 245, 245], List[246, 246, 246], \
List[246, 246, 246], List[247, 247, 247], List[246, 246, 246], List[246, 246, \
246], List[247, 247, 247], List[246, 246, 246], List[246, 246, 246], \
List[245, 245, 245], List[244, 244, 244], List[244, 244, 244], List[243, 243, \
243], List[243, 243, 243], List[242, 242, 242], List[241, 241, 241], \
List[241, 241, 241], List[240, 240, 240], List[240, 240, 240], List[238, 238, \
238], List[235, 235, 235], List[231, 232, 233], List[242, 237, 233], \
List[177, 201, 218], List[2, 134, 228], List[28, 156, 244], List[29, 157, \
243], List[28, 157, 243], List[29, 159, 245], List[29, 159, 245], List[29, \
159, 245], List[29, 159, 244], List[29, 159, 243], List[29, 159, 243], \
List[29, 159, 243], List[29, 159, 243], List[29, 160, 243], List[29, 161, \
244], List[29, 160, 243], List[28, 159, 243], List[29, 159, 241], List[29, \
158, 240], List[29, 157, 238], List[30, 158, 240], List[29, 160, 243], \
List[29, 160, 244], List[29, 161, 245], List[30, 162, 245], List[29, 161, \
244], List[29, 161, 244], List[29, 161, 244], List[29, 160, 243], List[29, \
159, 243], List[29, 160, 244], List[30, 160, 246], List[29, 159, 245], \
List[28, 158, 244], List[28, 157, 243], List[28, 156, 243], List[33, 159, \
244], List[0, 138, 237], List[84, 159, 212], List[239, 231, 225], List[227, \
229, 231], List[232, 232, 232], List[234, 234, 234], List[236, 236, 236], \
List[239, 239, 239], List[241, 241, 241], List[243, 243, 243], List[244, 244, \
244], List[245, 245, 245], List[246, 246, 246], List[247, 247, 247], \
List[248, 248, 248], List[248, 248, 248], List[249, 249, 249], List[249, 249, \
249], List[250, 250, 250], List[249, 249, 249], List[249, 249, 249], \
List[249, 249, 249], List[249, 249, 249], List[249, 249, 249], List[248, 248, \
248], List[247, 247, 247], List[247, 247, 247]], List[List[246, 246, 246], \
List[247, 247, 247], List[247, 247, 247], List[248, 248, 248], List[248, 248, \
248], List[247, 247, 247], List[247, 247, 247], List[247, 247, 247], \
List[246, 246, 246], List[246, 246, 246], List[246, 246, 246], List[244, 244, \
244], List[245, 245, 245], List[245, 245, 245], List[244, 244, 244], \
List[243, 243, 243], List[243, 243, 243], List[243, 243, 243], List[240, 240, \
240], List[236, 236, 236], List[233, 233, 233], List[230, 230, 230], \
List[224, 226, 227], List[239, 229, 223], List[100, 167, 214], List[0, 139, \
241], List[33, 158, 242], List[27, 157, 243], List[28, 158, 244], List[28, \
158, 245], List[28, 158, 245], List[29, 158, 243], List[29, 158, 242], \
List[28, 158, 242], List[29, 159, 243], List[29, 160, 243], List[29, 161, \
244], List[29, 161, 244], List[29, 162, 245], List[29, 161, 244], List[29, \
160, 243], List[28, 160, 243], List[28, 159, 243], List[29, 160, 244], \
List[29, 161, 245], List[29, 161, 246], List[29, 161, 246], List[29, 161, \
245], List[29, 161, 244], List[29, 160, 243], List[29, 159, 243], List[29, \
159, 243], List[29, 159, 243], List[29, 159, 244], List[29, 159, 244], \
List[28, 158, 244], List[28, 157, 243], List[28, 156, 243], List[33, 158, \
242], List[12, 148, 243], List[34, 141, 219], List[214, 214, 215], List[228, \
227, 227], List[227, 227, 227], List[230, 230, 230], List[233, 233, 233], \
List[236, 236, 236], List[238, 238, 238], List[240, 240, 240], List[242, 242, \
242], List[245, 245, 245], List[245, 245, 245], List[246, 246, 246], \
List[248, 248, 248], List[249, 249, 249], List[249, 249, 249], List[250, 250, \
250], List[251, 251, 251], List[251, 251, 251], List[250, 250, 250], \
List[249, 249, 249], List[249, 249, 249], List[249, 249, 249], List[249, 249, \
249], List[249, 249, 249], List[248, 248, 248], List[248, 248, 248]], \
List[List[246, 246, 246], List[247, 247, 247], List[247, 247, 247], List[247, \
247, 247], List[248, 248, 248], List[248, 248, 248], List[248, 248, 248], \
List[247, 247, 247], List[247, 247, 247], List[248, 248, 248], List[247, 247, \
247], List[247, 247, 247], List[246, 246, 246], List[246, 246, 246], \
List[246, 246, 246], List[245, 245, 245], List[245, 245, 245], List[242, 242, \
242], List[238, 238, 238], List[235, 235, 235], List[231, 231, 231], \
List[228, 228, 228], List[223, 224, 224], List[220, 221, 222], List[218, 214, \
210], List[52, 149, 218], List[2, 146, 247], List[33, 159, 243], List[27, \
158, 245], List[28, 158, 245], List[28, 158, 244], List[28, 158, 243], \
List[28, 158, 242], List[28, 158, 242], List[28, 158, 243], List[28, 160, \
244], List[28, 160, 245], List[28, 160, 245], List[28, 160, 245], List[28, \
160, 245], List[29, 160, 245], List[29, 160, 244], List[29, 161, 245], \
List[29, 161, 245], List[29, 161, 245], List[29, 161, 246], List[29, 161, \
246], List[29, 161, 245], List[28, 159, 243], List[28, 159, 243], List[29, \
159, 244], List[29, 159, 244], List[29, 159, 245], List[29, 159, 245], \
List[28, 158, 245], List[28, 158, 244], List[27, 157, 244], List[34, 158, \
244], List[18, 151, 245], List[12, 136, 225], List[180, 195, 206], List[230, \
225, 222], List[220, 222, 223], List[228, 227, 227], List[229, 229, 229], \
List[232, 232, 232], List[234, 234, 234], List[237, 237, 237], List[239, 239, \
239], List[240, 240, 240], List[243, 243, 243], List[245, 245, 245], \
List[247, 247, 247], List[248, 248, 248], List[248, 248, 248], List[249, 249, \
249], List[250, 250, 250], List[250, 250, 250], List[250, 250, 250], \
List[250, 250, 250], List[250, 250, 250], List[249, 249, 249], List[250, 250, \
250], List[249, 249, 249], List[249, 249, 249], List[248, 248, 248], \
List[248, 248, 248]], List[List[247, 247, 247], List[247, 247, 247], \
List[247, 247, 247], List[247, 247, 247], List[248, 248, 248], List[248, 248, \
248], List[248, 248, 248], List[249, 249, 249], List[249, 249, 249], \
List[249, 249, 249], List[249, 249, 249], List[249, 249, 249], List[248, 248, \
248], List[249, 249, 249], List[249, 249, 249], List[248, 248, 248], \
List[245, 245, 245], List[240, 240, 240], List[237, 237, 237], List[233, 233, \
233], List[229, 229, 229], List[225, 225, 225], List[221, 221, 221], \
List[214, 216, 216], List[218, 215, 214], List[195, 199, 200], List[35, 144, \
223], List[6, 150, 251], List[34, 160, 244], List[28, 158, 245], List[28, \
157, 244], List[28, 156, 243], List[27, 157, 242], List[27, 158, 243], \
List[28, 159, 245], List[28, 159, 245], List[28, 160, 245], List[28, 160, \
245], List[28, 160, 245], List[28, 160, 244], List[28, 160, 244], List[28, \
160, 245], List[28, 160, 244], List[28, 160, 245], List[28, 161, 245], \
List[28, 161, 245], List[28, 160, 245], List[28, 160, 245], List[28, 159, \
243], List[28, 158, 243], List[29, 159, 245], List[29, 159, 246], List[28, \
158, 245], List[28, 158, 244], List[28, 158, 245], List[28, 158, 245], \
List[33, 159, 244], List[18, 153, 248], List[8, 137, 230], List[155, 181, \
199], List[223, 216, 211], List[213, 215, 217], List[222, 221, 221], \
List[225, 225, 225], List[228, 228, 228], List[230, 230, 230], List[233, 233, \
233], List[237, 237, 237], List[239, 239, 239], List[241, 241, 241], \
List[243, 243, 243], List[247, 247, 247], List[250, 250, 250], List[250, 250, \
250], List[251, 251, 251], List[251, 251, 251], List[252, 252, 252], \
List[251, 251, 251], List[251, 251, 251], List[251, 251, 251], List[250, 250, \
250], List[250, 250, 250], List[250, 250, 250], List[250, 250, 250], \
List[250, 250, 250], List[249, 249, 249], List[248, 248, 248]], \
List[List[247, 247, 247], List[247, 247, 247], List[247, 247, 247], List[248, \
248, 248], List[248, 248, 248], List[249, 249, 249], List[249, 249, 249], \
List[249, 249, 249], List[249, 249, 249], List[250, 250, 250], List[250, 250, \
250], List[250, 250, 250], List[251, 251, 251], List[251, 251, 251], \
List[251, 251, 251], List[248, 248, 248], List[244, 244, 244], List[240, 240, \
240], List[237, 237, 237], List[232, 232, 232], List[227, 227, 227], \
List[224, 224, 224], List[219, 219, 219], List[215, 215, 215], List[207, 208, \
210], List[212, 208, 206], List[183, 188, 192], List[34, 143, 222], List[1, \
150, 253], List[31, 157, 242], List[29, 155, 241], List[27, 155, 243], \
List[27, 156, 243], List[27, 157, 243], List[28, 158, 244], List[28, 159, \
245], List[28, 159, 246], List[28, 159, 245], List[29, 159, 245], List[29, \
160, 245], List[28, 159, 244], List[28, 159, 245], List[28, 160, 245], \
List[28, 160, 245], List[28, 160, 245], List[28, 160, 245], List[28, 159, \
245], List[29, 159, 244], List[28, 158, 244], List[28, 158, 244], List[28, \
158, 244], List[27, 158, 244], List[27, 158, 244], List[27, 158, 243], \
List[28, 157, 244], List[33, 158, 244], List[12, 152, 251], List[14, 140, \
231], List[151, 175, 192], List[215, 208, 202], List[205, 207, 210], \
List[214, 213, 213], List[219, 219, 219], List[224, 224, 224], List[227, 227, \
227], List[231, 231, 231], List[234, 234, 234], List[238, 238, 238], \
List[241, 241, 241], List[243, 243, 243], List[247, 247, 247], List[249, 249, \
249], List[252, 252, 252], List[253, 253, 253], List[252, 252, 252], \
List[253, 253, 253], List[253, 253, 253], List[253, 253, 253], List[252, 252, \
252], List[252, 252, 252], List[252, 252, 252], List[252, 252, 252], \
List[251, 251, 251], List[251, 251, 251], List[250, 250, 250], List[250, 250, \
250], List[249, 249, 249]], List[List[248, 248, 248], List[249, 249, 249], \
List[249, 249, 249], List[248, 248, 248], List[249, 249, 249], List[249, 249, \
249], List[249, 249, 249], List[250, 250, 250], List[251, 251, 251], \
List[251, 251, 251], List[252, 252, 252], List[252, 252, 252], List[252, 252, \
252], List[252, 252, 252], List[250, 250, 250], List[247, 247, 247], \
List[244, 244, 244], List[241, 241, 241], List[236, 236, 236], List[231, 231, \
231], List[227, 227, 227], List[221, 221, 221], List[216, 216, 216], \
List[210, 210, 210], List[205, 205, 204], List[195, 197, 199], List[199, 195, \
193], List[175, 177, 178], List[51, 145, 211], List[1, 148, 252], List[24, \
154, 244], List[31, 154, 238], List[27, 155, 241], List[27, 156, 242], \
List[27, 157, 244], List[27, 157, 246], List[27, 158, 245], List[27, 157, \
245], List[28, 158, 245], List[28, 158, 244], List[27, 158, 244], List[28, \
158, 244], List[27, 159, 244], List[27, 159, 245], List[27, 159, 246], \
List[27, 159, 245], List[28, 159, 244], List[27, 157, 243], List[27, 157, \
243], List[27, 157, 243], List[27, 157, 244], List[27, 157, 244], List[26, \
157, 243], List[30, 156, 242], List[27, 157, 246], List[2, 150, 253], \
List[32, 143, 221], List[154, 169, 180], List[200, 193, 188], List[193, 196, \
197], List[203, 204, 203], List[209, 209, 209], List[214, 214, 214], \
List[221, 221, 221], List[225, 225, 225], List[230, 230, 230], List[233, 233, \
233], List[237, 237, 237], List[241, 241, 241], List[244, 244, 244], \
List[247, 247, 247], List[250, 250, 250], List[251, 251, 251], List[252, 252, \
252], List[252, 252, 252], List[253, 253, 253], List[252, 252, 252], \
List[253, 253, 253], List[253, 253, 253], List[252, 252, 252], List[252, 252, \
252], List[252, 252, 252], List[252, 252, 252], List[251, 251, 251], \
List[251, 251, 251], List[250, 250, 250], List[249, 249, 249]], \
List[List[248, 248, 248], List[249, 249, 249], List[249, 249, 249], List[249, \
249, 249], List[250, 250, 250], List[250, 250, 250], List[250, 250, 250], \
List[251, 251, 251], List[251, 251, 251], List[252, 252, 252], List[252, 252, \
252], List[251, 251, 251], List[251, 251, 251], List[250, 250, 250], \
List[249, 249, 249], List[246, 246, 246], List[241, 241, 241], List[237, 237, \
237], List[232, 232, 232], List[225, 225, 225], List[221, 221, 221], \
List[214, 214, 214], List[207, 207, 207], List[200, 200, 200], List[192, 192, \
192], List[186, 186, 185], List[174, 176, 176], List[173, 172, 171], \
List[172, 165, 160], List[83, 144, 187], List[4, 144, 241], List[9, 154, \
254], List[26, 155, 245], List[30, 155, 241], List[28, 155, 243], List[26, \
156, 244], List[26, 157, 244], List[27, 157, 244], List[26, 156, 243], \
List[26, 156, 242], List[27, 157, 243], List[27, 157, 243], List[27, 157, \
243], List[27, 157, 244], List[27, 157, 246], List[27, 157, 246], List[27, \
157, 244], List[26, 157, 242], List[26, 155, 242], List[26, 155, 243], \
List[27, 156, 243], List[30, 157, 243], List[28, 157, 245], List[13, 154, \
253], List[3, 144, 244], List[64, 139, 193], List[159, 159, 158], List[174, \
169, 166], List[168, 170, 171], List[180, 180, 180], List[189, 190, 189], \
List[197, 197, 197], List[206, 206, 206], List[212, 212, 212], List[219, 219, \
219], List[224, 224, 224], List[230, 230, 230], List[234, 234, 234], \
List[238, 238, 238], List[242, 242, 242], List[246, 246, 246], List[248, 248, \
248], List[250, 250, 250], List[251, 251, 251], List[251, 251, 251], \
List[251, 251, 251], List[251, 251, 251], List[251, 251, 251], List[251, 251, \
251], List[252, 252, 252], List[252, 252, 252], List[251, 251, 251], \
List[251, 251, 251], List[251, 251, 251], List[250, 250, 250], List[250, 250, \
250], List[249, 249, 249]], List[List[248, 248, 248], List[248, 248, 248], \
List[249, 249, 249], List[249, 249, 249], List[250, 250, 250], List[250, 250, \
250], List[250, 250, 250], List[250, 250, 250], List[250, 250, 250], \
List[250, 250, 250], List[250, 250, 250], List[249, 249, 249], List[249, 249, \
249], List[249, 249, 249], List[247, 247, 247], List[243, 243, 243], \
List[239, 239, 239], List[234, 234, 234], List[228, 228, 228], List[221, 221, \
221], List[214, 214, 214], List[208, 208, 208], List[200, 200, 200], \
List[192, 192, 192], List[184, 184, 184], List[173, 173, 174], List[164, 164, \
163], List[153, 155, 155], List[152, 153, 154], List[162, 152, 145], \
List[123, 142, 155], List[48, 141, 205], List[5, 149, 246], List[7, 155, \
255], List[21, 157, 248], List[28, 156, 243], List[29, 155, 241], List[28, \
154, 241], List[26, 154, 240], List[27, 155, 242], List[26, 156, 243], \
List[26, 156, 243], List[26, 156, 243], List[26, 156, 244], List[26, 156, \
244], List[26, 156, 244], List[27, 155, 242], List[27, 154, 241], List[29, \
153, 240], List[29, 155, 242], List[23, 157, 248], List[10, 156, 255], \
List[4, 149, 248], List[38, 140, 212], List[111, 140, 160], List[161, 151, \
144], List[154, 153, 153], List[151, 153, 153], List[160, 160, 160], \
List[170, 170, 170], List[179, 179, 179], List[190, 190, 190], List[198, 198, \
198], List[207, 207, 207], List[214, 214, 214], List[220, 220, 220], \
List[226, 226, 226], List[231, 231, 231], List[236, 236, 236], List[240, 240, \
240], List[244, 244, 244], List[247, 247, 247], List[248, 248, 248], \
List[249, 249, 249], List[249, 249, 249], List[249, 249, 249], List[249, 249, \
249], List[249, 249, 249], List[249, 249, 249], List[250, 250, 250], \
List[250, 250, 250], List[249, 249, 249], List[250, 250, 250], List[250, 250, \
250], List[249, 249, 249], List[249, 249, 249], List[249, 249, 249]], \
List[List[247, 247, 247], List[248, 248, 248], List[248, 248, 248], List[249, \
249, 249], List[248, 248, 248], List[248, 248, 248], List[248, 248, 248], \
List[248, 248, 248], List[247, 247, 247], List[247, 247, 247], List[246, 246, \
246], List[246, 246, 246], List[244, 244, 244], List[244, 244, 244], \
List[244, 244, 244], List[241, 241, 241], List[238, 238, 238], List[234, 234, \
234], List[228, 228, 228], List[222, 222, 222], List[216, 216, 216], \
List[209, 209, 209], List[201, 201, 201], List[192, 192, 192], List[182, 182, \
182], List[173, 173, 173], List[163, 163, 163], List[155, 155, 155], \
List[148, 148, 148], List[144, 147, 149], List[154, 149, 146], List[156, 147, \
141], List[115, 141, 160], List[56, 143, 200], List[16, 150, 235], List[4, \
154, 250], List[7, 158, 255], List[15, 158, 252], List[20, 157, 249], \
List[25, 157, 248], List[27, 157, 246], List[28, 156, 246], List[28, 156, \
245], List[27, 155, 246], List[27, 156, 247], List[26, 158, 247], List[22, \
157, 249], List[16, 157, 251], List[9, 157, 255], List[4, 154, 250], List[11, \
148, 239], List[49, 143, 206], List[106, 141, 165], List[153, 147, 142], \
List[157, 151, 147], List[146, 149, 150], List[149, 149, 150], List[154, 154, \
154], List[162, 162, 162], List[170, 170, 170], List[179, 179, 179], \
List[188, 188, 188], List[197, 197, 197], List[206, 206, 206], List[214, 214, \
214], List[222, 222, 222], List[228, 228, 228], List[234, 234, 234], \
List[238, 238, 238], List[241, 241, 241], List[243, 243, 243], List[243, 243, \
243], List[244, 244, 244], List[245, 245, 245], List[246, 246, 246], \
List[246, 246, 246], List[247, 247, 247], List[247, 247, 247], List[248, 248, \
248], List[248, 248, 248], List[248, 248, 248], List[248, 248, 248], \
List[249, 249, 249], List[248, 248, 248], List[249, 249, 249], List[249, 249, \
249], List[248, 248, 248]], List[List[247, 247, 247], List[247, 247, 247], \
List[247, 247, 247], List[247, 247, 247], List[247, 247, 247], List[246, 246, \
246], List[246, 246, 246], List[246, 246, 246], List[245, 245, 245], \
List[243, 243, 243], List[242, 242, 242], List[242, 242, 242], List[240, 240, \
240], List[240, 240, 240], List[238, 238, 238], List[236, 237, 237], \
List[236, 236, 236], List[233, 233, 233], List[231, 231, 231], List[228, 228, \
228], List[223, 223, 223], List[219, 219, 219], List[212, 212, 212], \
List[205, 205, 205], List[197, 197, 197], List[189, 189, 189], List[181, 181, \
181], List[173, 173, 173], List[165, 165, 165], List[158, 157, 157], \
List[150, 152, 151], List[147, 149, 150], List[154, 148, 144], List[156, 146, \
139], List[136, 142, 147], List[98, 140, 167], List[59, 140, 193], List[33, \
145, 213], List[15, 149, 229], List[8, 151, 239], List[6, 152, 245], List[4, \
154, 246], List[3, 153, 246], List[4, 154, 246], List[5, 152, 245], List[7, \
149, 240], List[13, 148, 231], List[29, 145, 215], List[54, 140, 196], \
List[91, 139, 169], List[131, 142, 149], List[154, 145, 140], List[156, 149, \
144], List[148, 150, 151], List[150, 152, 153], List[157, 157, 157], \
List[165, 165, 165], List[173, 173, 173], List[180, 180, 180], List[189, 189, \
189], List[197, 197, 197], List[205, 205, 205], List[212, 212, 212], \
List[219, 218, 219], List[224, 224, 224], List[229, 229, 229], List[232, 232, \
232], List[235, 235, 235], List[236, 236, 237], List[237, 237, 237], \
List[238, 238, 238], List[239, 239, 239], List[240, 240, 240], List[242, 242, \
242], List[243, 243, 243], List[244, 244, 244], List[245, 245, 245], \
List[246, 246, 246], List[246, 246, 246], List[246, 246, 246], List[246, 246, \
246], List[246, 246, 246], List[247, 247, 247], List[247, 247, 247], \
List[247, 247, 247], List[247, 247, 247], List[247, 247, 247]], \
List[List[247, 247, 247], List[246, 246, 246], List[246, 246, 246], List[245, \
245, 245], List[245, 245, 245], List[244, 244, 244], List[244, 244, 244], \
List[242, 242, 242], List[242, 242, 242], List[241, 241, 241], List[241, 240, \
240], List[240, 240, 240], List[239, 239, 239], List[237, 237, 237], \
List[235, 235, 235], List[234, 234, 234], List[232, 233, 232], List[230, 230, \
230], List[228, 228, 228], List[227, 227, 227], List[225, 225, 225], \
List[224, 224, 224], List[223, 223, 223], List[221, 221, 220], List[218, 218, \
218], List[216, 215, 215], List[213, 213, 212], List[208, 208, 208], \
List[204, 204, 204], List[200, 199, 199], List[193, 193, 193], List[187, 187, \
187], List[178, 180, 180], List[173, 175, 176], List[173, 171, 170], \
List[176, 167, 162], List[172, 162, 156], List[162, 158, 156], List[148, 154, \
159], List[132, 150, 163], List[118, 150, 169], List[110, 148, 172], \
List[106, 147, 172], List[108, 147, 171], List[116, 149, 169], List[128, 150, \
164], List[145, 153, 159], List[160, 157, 156], List[171, 161, 156], \
List[176, 167, 161], List[174, 171, 169], List[173, 175, 176], List[178, 180, \
181], List[187, 187, 187], List[194, 194, 194], List[199, 199, 199], \
List[204, 204, 204], List[209, 208, 208], List[212, 211, 211], List[215, 215, \
215], List[219, 219, 219], List[221, 221, 221], List[223, 223, 223], \
List[225, 225, 225], List[226, 226, 226], List[228, 227, 227], List[229, 229, \
229], List[231, 231, 230], List[232, 232, 232], List[234, 234, 234], \
List[235, 235, 235], List[237, 237, 237], List[239, 238, 238], List[239, 239, \
239], List[241, 241, 241], List[242, 242, 241], List[242, 242, 242], \
List[243, 243, 243], List[244, 244, 244], List[244, 244, 244], List[244, 244, \
244], List[245, 244, 245], List[245, 245, 245], List[246, 245, 246], \
List[246, 246, 246], List[246, 246, 246], List[245, 245, 245]], \
List[List[245, 245, 245], List[244, 244, 244], List[244, 244, 244], List[243, \
243, 243], List[243, 243, 243], List[242, 242, 242], List[241, 241, 241], \
List[241, 241, 241], List[241, 241, 241], List[240, 240, 240], List[239, 239, \
239], List[238, 238, 238], List[236, 237, 237], List[235, 234, 235], \
List[233, 234, 233], List[231, 231, 232], List[229, 229, 230], List[228, 228, \
228], List[226, 225, 225], List[224, 224, 225], List[223, 223, 224], \
List[222, 222, 222], List[221, 222, 223], List[222, 222, 223], List[220, 221, \
222], List[220, 221, 222], List[220, 221, 222], List[220, 222, 222], \
List[220, 221, 223], List[220, 222, 224], List[220, 224, 226], List[220, 225, \
227], List[220, 226, 229], List[220, 226, 229], List[217, 226, 230], \
List[215, 225, 231], List[213, 225, 231], List[212, 225, 232], List[213, 226, \
231], List[215, 226, 230], List[215, 225, 230], List[216, 225, 230], \
List[216, 226, 230], List[216, 226, 229], List[216, 226, 230], List[216, 227, \
232], List[214, 227, 234], List[212, 227, 233], List[212, 227, 233], \
List[214, 226, 232], List[217, 226, 231], List[220, 227, 230], List[220, 227, \
230], List[221, 226, 228], List[221, 225, 227], List[221, 224, 226], \
List[220, 223, 225], List[220, 222, 223], List[220, 221, 223], List[220, 221, \
223], List[220, 222, 223], List[221, 222, 223], List[221, 222, 223], \
List[222, 223, 224], List[223, 225, 225], List[225, 226, 227], List[227, 227, \
229], List[229, 229, 230], List[231, 231, 232], List[233, 234, 234], \
List[235, 235, 236], List[236, 236, 237], List[237, 237, 239], List[237, 238, \
239], List[239, 239, 240], List[240, 240, 240], List[240, 240, 241], \
List[240, 241, 241], List[242, 242, 242], List[242, 242, 243], List[243, 244, \
244], List[244, 244, 244], List[244, 244, 244], List[244, 244, 244], \
List[244, 244, 244], List[245, 244, 245], List[244, 245, 244]], \
List[List[244, 244, 244], List[243, 243, 243], List[243, 243, 243], List[243, \
243, 243], List[243, 243, 243], List[242, 242, 243], List[241, 241, 242], \
List[240, 241, 242], List[239, 240, 242], List[238, 238, 240], List[236, 237, \
239], List[235, 235, 237], List[233, 234, 236], List[232, 233, 235], \
List[232, 232, 234], List[230, 231, 233], List[228, 229, 231], List[227, 228, \
230], List[226, 228, 229], List[225, 227, 229], List[224, 227, 230], \
List[224, 227, 229], List[224, 228, 231], List[223, 228, 231], List[222, 227, \
230], List[221, 227, 230], List[220, 227, 231], List[220, 227, 231], \
List[219, 228, 232], List[219, 229, 234], List[218, 230, 236], List[217, 231, \
238], List[217, 232, 239], List[216, 233, 241], List[215, 234, 243], \
List[215, 234, 243], List[214, 235, 245], List[213, 235, 246], List[213, 235, \
246], List[212, 235, 248], List[211, 236, 249], List[211, 236, 250], \
List[211, 237, 250], List[212, 237, 250], List[211, 237, 250], List[212, 238, \
250], List[213, 237, 250], List[214, 237, 249], List[214, 236, 247], \
List[215, 235, 245], List[215, 234, 244], List[216, 234, 242], List[217, 233, \
241], List[219, 232, 240], List[219, 232, 239], List[220, 232, 238], \
List[220, 231, 235], List[222, 231, 235], List[222, 230, 234], List[222, 229, \
233], List[223, 229, 233], List[224, 229, 233], List[224, 229, 231], \
List[225, 229, 232], List[227, 230, 233], List[228, 231, 234], List[229, 231, \
234], List[230, 232, 234], List[231, 233, 236], List[233, 234, 236], \
List[234, 235, 237], List[236, 237, 238], List[236, 237, 239], List[237, 238, \
240], List[238, 238, 241], List[238, 239, 241], List[238, 239, 242], \
List[238, 240, 242], List[239, 240, 241], List[240, 241, 243], List[241, 242, \
244], List[242, 243, 244], List[242, 243, 243], List[242, 242, 243], \
List[242, 243, 243], List[242, 243, 244], List[243, 244, 245]], \
List[List[243, 244, 244], List[243, 243, 244], List[243, 244, 245], List[243, \
244, 245], List[242, 243, 245], List[242, 243, 245], List[240, 241, 243], \
List[238, 240, 242], List[238, 239, 241], List[237, 238, 240], List[236, 237, \
239], List[234, 236, 238], List[233, 235, 237], List[232, 234, 236], \
List[231, 234, 236], List[230, 233, 236], List[229, 233, 236], List[228, 232, \
235], List[227, 233, 235], List[228, 232, 235], List[227, 233, 236], \
List[226, 233, 236], List[226, 232, 236], List[225, 232, 236], List[224, 232, \
236], List[223, 232, 236], List[222, 232, 237], List[222, 233, 238], \
List[221, 234, 239], List[220, 234, 242], List[220, 235, 243], List[218, 235, \
243], List[218, 236, 243], List[217, 236, 244], List[216, 235, 244], \
List[215, 234, 244], List[214, 234, 244], List[213, 234, 244], List[213, 234, \
244], List[213, 234, 244], List[212, 234, 244], List[212, 234, 244], \
List[212, 234, 244], List[212, 234, 244], List[213, 234, 245], List[213, 234, \
246], List[213, 236, 246], List[214, 236, 247], List[214, 235, 247], \
List[216, 236, 246], List[216, 236, 245], List[217, 236, 246], List[218, 236, \
246], List[219, 237, 246], List[220, 237, 245], List[221, 237, 244], \
List[222, 237, 244], List[223, 236, 243], List[224, 236, 241], List[225, 235, \
241], List[225, 235, 240], List[226, 235, 239], List[227, 235, 239], \
List[228, 235, 238], List[229, 235, 238], List[230, 235, 239], List[231, 236, \
239], List[232, 236, 239], List[232, 236, 240], List[233, 236, 239], \
List[233, 237, 239], List[234, 237, 239], List[236, 238, 240], List[236, 238, \
240], List[237, 238, 240], List[237, 239, 240], List[238, 239, 241], \
List[238, 239, 241], List[237, 239, 241], List[239, 240, 241], List[239, 240, \
242], List[240, 241, 243], List[241, 242, 244], List[241, 242, 244], \
List[241, 242, 244], List[241, 242, 244], List[241, 243, 245]], \
List[List[243, 244, 246], List[242, 244, 245], List[241, 242, 245], List[242, \
242, 244], List[241, 242, 244], List[240, 242, 243], List[239, 240, 242], \
List[239, 240, 242], List[238, 239, 242], List[236, 239, 241], List[235, 238, \
240], List[233, 237, 240], List[233, 237, 240], List[232, 236, 239], \
List[231, 236, 239], List[231, 236, 239], List[231, 235, 239], List[230, 235, \
239], List[229, 235, 239], List[229, 236, 238], List[228, 236, 239], \
List[226, 235, 239], List[226, 235, 239], List[226, 234, 240], List[225, 234, \
240], List[223, 234, 239], List[223, 234, 240], List[222, 234, 240], \
List[221, 234, 240], List[221, 234, 241], List[220, 234, 241], List[219, 234, \
241], List[219, 234, 241], List[218, 233, 240], List[217, 234, 240], \
List[216, 233, 241], List[215, 233, 239], List[215, 232, 239], List[215, 232, \
240], List[214, 233, 240], List[215, 233, 240], List[215, 232, 240], \
List[215, 233, 240], List[215, 233, 240], List[215, 233, 240], List[215, 233, \
241], List[216, 235, 242], List[216, 234, 242], List[217, 235, 242], \
List[217, 235, 244], List[217, 236, 243], List[218, 236, 244], List[218, 236, \
243], List[220, 236, 243], List[221, 236, 243], List[221, 237, 243], \
List[223, 237, 244], List[224, 237, 243], List[223, 237, 243], List[225, 237, \
243], List[226, 237, 243], List[226, 237, 243], List[228, 237, 242], \
List[229, 237, 243], List[230, 238, 242], List[231, 238, 242], List[231, 239, \
242], List[232, 239, 242], List[233, 239, 243], List[233, 239, 242], \
List[234, 239, 242], List[234, 238, 242], List[234, 239, 242], List[235, 240, \
242], List[236, 239, 242], List[236, 240, 242], List[237, 240, 242], \
List[237, 240, 243], List[238, 240, 242], List[239, 240, 242], List[239, 240, \
242], List[240, 240, 242], List[241, 242, 243], List[241, 242, 244], \
List[241, 242, 245], List[241, 242, 244], List[242, 243, 245]], \
List[List[241, 243, 245], List[241, 242, 244], List[241, 242, 244], List[240, \
241, 243], List[239, 240, 243], List[239, 240, 242], List[238, 240, 242], \
List[237, 240, 243], List[235, 239, 243], List[235, 239, 242], List[234, 239, \
242], List[234, 238, 241], List[233, 237, 240], List[232, 237, 240], \
List[231, 236, 239], List[231, 236, 239], List[231, 236, 240], List[230, 237, \
240], List[229, 237, 240], List[228, 235, 240], List[228, 235, 241], \
List[227, 236, 241], List[227, 236, 241], List[226, 235, 240], List[225, 236, \
240], List[224, 236, 241], List[225, 236, 241], List[224, 236, 242], \
List[222, 235, 241], List[221, 234, 240], List[221, 233, 239], List[221, 232, \
239], List[220, 232, 238], List[219, 232, 238], List[218, 231, 238], \
List[218, 232, 237], List[218, 232, 237], List[217, 232, 238], List[217, 232, \
237], List[217, 232, 238], List[216, 232, 238], List[217, 232, 238], \
List[217, 233, 239], List[217, 234, 240], List[217, 234, 240], List[217, 234, \
240], List[218, 234, 241], List[218, 234, 242], List[219, 235, 242], \
List[219, 235, 242], List[220, 236, 242], List[221, 236, 243], List[221, 236, \
243], List[221, 236, 243], List[222, 236, 243], List[222, 236, 243], \
List[223, 236, 243], List[224, 237, 242], List[225, 237, 243], List[226, 238, \
244], List[227, 238, 244], List[227, 238, 244], List[228, 239, 244], \
List[229, 239, 244], List[230, 239, 244], List[231, 239, 245], List[232, 239, \
244], List[232, 240, 244], List[233, 241, 244], List[234, 242, 245], \
List[234, 241, 245], List[234, 241, 245], List[235, 240, 244], List[236, 241, \
245], List[236, 242, 245], List[236, 241, 244], List[237, 241, 244], \
List[237, 242, 245], List[238, 241, 244], List[237, 241, 244], List[238, 241, \
244], List[239, 242, 244], List[239, 242, 245], List[240, 243, 245], \
List[241, 243, 245], List[242, 243, 246], List[242, 244, 246]], \
List[List[239, 240, 242], List[239, 240, 241], List[239, 239, 241], List[238, \
240, 242], List[238, 240, 241], List[237, 241, 243], List[236, 240, 243], \
List[235, 240, 242], List[234, 238, 242], List[234, 238, 241], List[234, 237, \
240], List[233, 238, 241], List[232, 236, 239], List[230, 236, 239], \
List[231, 236, 239], List[231, 236, 239], List[230, 236, 240], List[229, 237, \
239], List[228, 236, 239], List[228, 236, 239], List[227, 235, 240], \
List[227, 236, 240], List[227, 235, 240], List[226, 235, 240], List[226, 235, \
240], List[226, 235, 240], List[226, 235, 241], List[225, 235, 240], \
List[225, 235, 240], List[223, 235, 241], List[223, 234, 240], List[223, 234, \
239], List[222, 234, 238], List[221, 233, 238], List[220, 233, 237], \
List[220, 233, 238], List[220, 233, 238], List[220, 233, 238], List[220, 233, \
238], List[220, 234, 239], List[220, 234, 239], List[220, 233, 239], \
List[220, 233, 239], List[220, 234, 240], List[220, 234, 240], List[220, 233, \
239], List[220, 233, 240], List[220, 234, 240], List[221, 235, 241], \
List[221, 234, 240], List[222, 236, 241], List[223, 236, 242], List[222, 236, \
242], List[222, 235, 242], List[224, 237, 243], List[225, 237, 244], \
List[224, 237, 243], List[225, 238, 244], List[227, 239, 245], List[229, 240, \
246], List[228, 240, 246], List[228, 240, 246], List[229, 240, 245], \
List[230, 240, 244], List[231, 240, 245], List[231, 241, 245], List[233, 241, \
246], List[234, 241, 247], List[234, 242, 246], List[234, 242, 245], \
List[234, 242, 245], List[234, 242, 245], List[236, 241, 245], List[237, 241, \
245], List[237, 242, 246], List[237, 242, 245], List[238, 243, 245], \
List[239, 243, 246], List[239, 243, 246], List[239, 243, 246], List[240, 244, \
247], List[239, 244, 246], List[239, 244, 246], List[240, 244, 247], \
List[240, 244, 247], List[241, 244, 247], List[240, 245, 247]], \
List[List[238, 239, 241], List[237, 239, 241], List[237, 240, 242], List[236, \
240, 242], List[237, 240, 243], List[236, 240, 243], List[235, 239, 243], \
List[235, 239, 242], List[234, 238, 241], List[233, 237, 240], List[232, 236, \
239], List[232, 235, 238], List[232, 236, 239], List[231, 236, 239], \
List[232, 236, 240], List[232, 237, 241], List[231, 236, 240], List[229, 236, \
240], List[228, 236, 239], List[228, 236, 239], List[228, 235, 238], \
List[227, 235, 238], List[226, 234, 238], List[226, 234, 237], List[225, 234, \
238], List[226, 234, 239], List[225, 234, 239], List[225, 234, 239], \
List[225, 234, 239], List[225, 235, 240], List[225, 235, 239], List[225, 235, \
240], List[225, 235, 239], List[225, 235, 238], List[223, 234, 237], \
List[223, 234, 238], List[223, 234, 238], List[223, 235, 239], List[223, 235, \
239], List[224, 235, 240], List[224, 235, 240], List[224, 235, 240], \
List[223, 235, 240], List[223, 234, 239], List[223, 234, 239], List[223, 234, \
239], List[223, 234, 239], List[223, 235, 239], List[223, 235, 239], \
List[224, 235, 239], List[224, 235, 239], List[224, 236, 241], List[225, 236, \
241], List[226, 237, 241], List[226, 238, 242], List[227, 238, 243], \
List[228, 238, 245], List[228, 239, 245], List[228, 240, 246], List[230, 241, \
247], List[231, 241, 247], List[231, 241, 246], List[231, 242, 246], \
List[232, 241, 246], List[232, 241, 246], List[232, 242, 246], List[232, 242, \
247], List[235, 242, 247], List[234, 241, 247], List[234, 242, 246], \
List[235, 242, 245], List[236, 243, 246], List[237, 242, 246], List[237, 242, \
246], List[237, 242, 246], List[237, 242, 246], List[238, 243, 247], \
List[238, 243, 247], List[239, 244, 247], List[240, 244, 247], List[241, 245, \
248], List[240, 245, 247], List[240, 244, 247], List[240, 244, 247], \
List[240, 244, 247], List[240, 244, 247], List[240, 244, 247]], \
List[List[238, 239, 241], List[236, 240, 242], List[236, 241, 243], List[236, \
240, 243], List[236, 240, 243], List[235, 239, 242], List[235, 239, 242], \
List[234, 238, 241], List[234, 238, 241], List[233, 237, 240], List[233, 237, \
240], List[233, 236, 239], List[232, 237, 240], List[232, 237, 240], \
List[232, 237, 241], List[232, 237, 240], List[231, 236, 240], List[231, 236, \
240], List[230, 236, 239], List[229, 235, 239], List[230, 235, 239], \
List[228, 235, 238], List[227, 235, 238], List[227, 235, 238], List[227, 234, \
237], List[226, 234, 237], List[226, 235, 238], List[226, 235, 238], \
List[226, 236, 239], List[227, 236, 240], List[226, 236, 239], List[226, 235, \
239], List[226, 234, 239], List[226, 235, 239], List[226, 235, 240], \
List[226, 234, 239], List[226, 235, 240], List[226, 236, 240], List[226, 237, \
241], List[226, 236, 241], List[226, 236, 240], List[226, 236, 240], \
List[226, 236, 240], List[226, 236, 240], List[225, 236, 240], List[226, 237, \
241], List[225, 236, 240], List[225, 236, 240], List[225, 237, 240], \
List[226, 237, 240], List[226, 236, 240], List[227, 238, 241], List[227, 238, \
242], List[227, 238, 241], List[228, 238, 242], List[228, 239, 242], \
List[229, 239, 244], List[229, 238, 243], List[230, 240, 245], List[231, 241, \
245], List[232, 241, 246], List[232, 241, 246], List[233, 241, 246], \
List[232, 241, 246], List[232, 241, 246], List[233, 241, 246], List[233, 241, \
247], List[234, 241, 247], List[234, 241, 247], List[235, 243, 246], \
List[235, 243, 246], List[235, 243, 246], List[236, 243, 246], List[237, 242, \
246], List[237, 242, 246], List[237, 242, 246], List[237, 242, 247], \
List[237, 242, 246], List[238, 243, 246], List[239, 243, 246], List[240, 244, \
247], List[241, 244, 247], List[241, 244, 247], List[241, 245, 248], \
List[241, 245, 248], List[241, 245, 248], List[241, 245, 248]], \
List[List[235, 237, 239], List[235, 238, 240], List[235, 239, 241], List[236, \
240, 243], List[236, 240, 243], List[236, 240, 243], List[236, 240, 243], \
List[235, 239, 242], List[235, 239, 242], List[234, 238, 241], List[234, 238, \
241], List[234, 238, 241], List[233, 238, 241], List[232, 238, 241], \
List[232, 238, 241], List[232, 237, 241], List[231, 237, 241], List[231, 236, \
240], List[232, 236, 241], List[231, 235, 240], List[230, 236, 240], \
List[229, 237, 241], List[228, 237, 239], List[229, 237, 240], List[228, 236, \
239], List[228, 236, 239], List[229, 236, 240], List[228, 236, 239], \
List[227, 236, 239], List[228, 236, 239], List[228, 237, 240], List[227, 237, \
239], List[226, 236, 239], List[227, 237, 239], List[228, 237, 240], \
List[228, 238, 240], List[228, 238, 241], List[228, 237, 242], List[228, 237, \
242], List[227, 237, 242], List[228, 237, 242], List[228, 237, 241], \
List[227, 237, 241], List[228, 237, 242], List[228, 237, 242], List[228, 238, \
242], List[228, 238, 242], List[228, 238, 242], List[229, 237, 242], \
List[228, 237, 243], List[228, 238, 243], List[230, 239, 244], List[230, 239, \
244], List[230, 239, 244], List[230, 239, 244], List[230, 239, 244], \
List[230, 238, 243], List[230, 239, 244], List[231, 240, 246], List[232, 241, \
246], List[233, 241, 246], List[232, 241, 247], List[234, 243, 247], \
List[233, 243, 247], List[233, 241, 246], List[234, 241, 247], List[235, 242, \
247], List[234, 242, 247], List[234, 243, 246], List[235, 243, 245], \
List[236, 243, 247], List[235, 244, 247], List[236, 243, 246], List[237, 242, \
246], List[237, 242, 246], List[237, 242, 246], List[238, 243, 247], \
List[237, 242, 246], List[237, 242, 245], List[238, 243, 246], List[239, 243, \
246], List[240, 244, 247], List[239, 244, 247], List[241, 244, 247], \
List[241, 245, 248], List[241, 245, 248], List[241, 245, 248]], \
List[List[235, 237, 239], List[234, 238, 241], List[234, 238, 241], List[235, \
239, 242], List[235, 240, 242], List[236, 240, 243], List[236, 240, 243], \
List[236, 240, 243], List[235, 239, 242], List[235, 239, 242], List[234, 238, \
241], List[233, 238, 241], List[233, 238, 241], List[233, 238, 241], \
List[234, 239, 242], List[233, 238, 242], List[233, 238, 242], List[232, 237, \
241], List[232, 237, 241], List[232, 238, 242], List[232, 237, 241], \
List[231, 238, 241], List[229, 238, 240], List[229, 237, 240], List[228, 237, \
240], List[229, 237, 240], List[229, 237, 240], List[229, 237, 240], \
List[229, 236, 240], List[230, 237, 240], List[229, 237, 240], List[229, 237, \
240], List[229, 238, 240], List[229, 238, 240], List[230, 239, 241], \
List[230, 239, 241], List[230, 238, 241], List[230, 238, 242], List[229, 238, \
241], List[228, 237, 241], List[230, 238, 244], List[229, 238, 243], \
List[229, 237, 243], List[229, 238, 243], List[230, 238, 244], List[230, 238, \
243], List[229, 238, 242], List[229, 239, 242], List[229, 239, 242], \
List[229, 238, 243], List[229, 239, 244], List[230, 239, 244], List[230, 239, \
245], List[230, 239, 244], List[231, 240, 245], List[231, 240, 245], \
List[231, 241, 246], List[232, 241, 246], List[233, 242, 247], List[232, 241, \
246], List[233, 242, 247], List[233, 243, 247], List[234, 243, 248], \
List[234, 242, 247], List[234, 242, 247], List[235, 242, 248], List[236, 243, \
248], List[236, 244, 247], List[237, 245, 247], List[236, 244, 247], \
List[236, 244, 247], List[236, 244, 247], List[237, 244, 247], List[238, 243, \
247], List[238, 243, 247], List[238, 243, 247], List[238, 243, 247], \
List[239, 243, 246], List[238, 243, 246], List[238, 243, 246], List[239, 243, \
246], List[239, 244, 247], List[239, 244, 247], List[240, 244, 247], \
List[240, 244, 247], List[240, 244, 247], List[240, 245, 248]], \
List[List[235, 239, 242], List[235, 239, 241], List[235, 239, 242], List[236, \
240, 243], List[236, 240, 243], List[236, 240, 243], List[235, 239, 242], \
List[234, 238, 241], List[235, 238, 241], List[235, 239, 242], List[234, 239, \
242], List[234, 239, 242], List[234, 239, 242], List[234, 239, 242], \
List[234, 239, 242], List[234, 239, 243], List[234, 239, 243], List[234, 239, \
243], List[234, 239, 243], List[233, 238, 242], List[232, 238, 241], \
List[232, 237, 241], List[231, 237, 241], List[230, 237, 241], List[230, 238, \
241], List[229, 237, 240], List[229, 237, 240], List[230, 238, 241], \
List[230, 238, 241], List[230, 238, 241], List[230, 238, 241], List[230, 238, \
241], List[230, 238, 241], List[230, 239, 242], List[230, 239, 242], \
List[230, 238, 241], List[230, 239, 241], List[230, 239, 241], List[231, 239, \
242], List[230, 240, 242], List[230, 240, 243], List[231, 240, 244], \
List[231, 240, 243], List[231, 240, 244], List[230, 240, 243], List[231, 239, \
243], List[230, 239, 241], List[230, 239, 241], List[231, 239, 242], \
List[231, 241, 243], List[231, 240, 243], List[231, 240, 243], List[231, 241, \
243], List[232, 241, 246], List[233, 242, 247], List[233, 242, 247], \
List[234, 243, 248], List[234, 243, 248], List[234, 243, 248], List[235, 244, \
249], List[235, 244, 249], List[235, 243, 248], List[236, 243, 249], \
List[236, 243, 249], List[236, 243, 249], List[236, 243, 248], List[237, 245, \
248], List[237, 245, 248], List[237, 245, 248], List[238, 246, 249], \
List[238, 246, 249], List[237, 245, 248], List[237, 245, 248], List[239, 245, \
249], List[240, 244, 249], List[239, 244, 248], List[239, 244, 248], \
List[239, 244, 247], List[239, 244, 247], List[239, 244, 247], List[239, 244, \
247], List[239, 244, 247], List[240, 244, 247], List[240, 244, 247], \
List[240, 245, 248], List[240, 244, 247], List[240, 244, 247]]]], \
List[List[0, 87], List[87, 0]], List[0, 255], Rule[ColorFunction, RGBColor]], \
BoxForm`ImageTag[\\\"Byte\\\", Rule[ColorSpace, \
ColorProfileData[RawArray[\\\"Byte\\\", List[0, 0, 12, 72, 76, 105, 110, 111, \
2, 16, 0, 0, 109, 110, 116, 114, 82, 71, 66, 32, 88, 89, 90, 32, 7, 206, 0, \
2, 0, 9, 0, 6, 0, 49, 0, 0, 97, 99, 115, 112, 77, 83, 70, 84, 0, 0, 0, 0, 73, \
69, 67, 32, 115, 82, 71, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, \
214, 0, 1, 0, 0, 0, 0, 211, 45, 72, 80, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 99, 112, 114, 116, 0, 0, 1, 80, 0, 0, 0, \
51, 100, 101, 115, 99, 0, 0, 1, 132, 0, 0, 0, 108, 119, 116, 112, 116, 0, 0, \
1, 240, 0, 0, 0, 20, 98, 107, 112, 116, 0, 0, 2, 4, 0, 0, 0, 20, 114, 88, 89, \
90, 0, 0, 2, 24, 0, 0, 0, 20, 103, 88, 89, 90, 0, 0, 2, 44, 0, 0, 0, 20, 98, \
88, 89, 90, 0, 0, 2, 64, 0, 0, 0, 20, 100, 109, 110, 100, 0, 0, 2, 84, 0, 0, \
0, 112, 100, 109, 100, 100, 0, 0, 2, 196, 0, 0, 0, 136, 118, 117, 101, 100, \
0, 0, 3, 76, 0, 0, 0, 134, 118, 105, 101, 119, 0, 0, 3, 212, 0, 0, 0, 36, \
108, 117, 109, 105, 0, 0, 3, 248, 0, 0, 0, 20, 109, 101, 97, 115, 0, 0, 4, \
12, 0, 0, 0, 36, 116, 101, 99, 104, 0, 0, 4, 48, 0, 0, 0, 12, 114, 84, 82, \
67, 0, 0, 4, 60, 0, 0, 8, 12, 103, 84, 82, 67, 0, 0, 4, 60, 0, 0, 8, 12, 98, \
84, 82, 67, 0, 0, 4, 60, 0, 0, 8, 12, 116, 101, 120, 116, 0, 0, 0, 0, 67, \
111, 112, 121, 114, 105, 103, 104, 116, 32, 40, 99, 41, 32, 49, 57, 57, 56, \
32, 72, 101, 119, 108, 101, 116, 116, 45, 80, 97, 99, 107, 97, 114, 100, 32, \
67, 111, 109, 112, 97, 110, 121, 0, 0, 100, 101, 115, 99, 0, 0, 0, 0, 0, 0, \
0, 18, 115, 82, 71, 66, 32, 73, 69, 67, 54, 49, 57, 54, 54, 45, 50, 46, 49, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 115, 82, 71, 66, 32, 73, 69, 67, 54, 49, \
57, 54, 54, 45, 50, 46, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 88, 89, 90, 32, 0, 0, 0, 0, 0, 0, 243, 81, 0, 1, 0, \
0, 0, 1, 22, 204, 88, 89, 90, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 88, 89, 90, 32, 0, 0, 0, 0, 0, 0, 111, 162, 0, 0, 56, 245, 0, 0, 3, \
144, 88, 89, 90, 32, 0, 0, 0, 0, 0, 0, 98, 153, 0, 0, 183, 133, 0, 0, 24, \
218, 88, 89, 90, 32, 0, 0, 0, 0, 0, 0, 36, 160, 0, 0, 15, 132, 0, 0, 182, \
207, 100, 101, 115, 99, 0, 0, 0, 0, 0, 0, 0, 22, 73, 69, 67, 32, 104, 116, \
116, 112, 58, 47, 47, 119, 119, 119, 46, 105, 101, 99, 46, 99, 104, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 22, 73, 69, 67, 32, 104, 116, 116, 112, 58, 47, 47, \
119, 119, 119, 46, 105, 101, 99, 46, 99, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 101, 115, 99, 0, 0, 0, 0, 0, 0, 0, 46, 73, \
69, 67, 32, 54, 49, 57, 54, 54, 45, 50, 46, 49, 32, 68, 101, 102, 97, 117, \
108, 116, 32, 82, 71, 66, 32, 99, 111, 108, 111, 117, 114, 32, 115, 112, 97, \
99, 101, 32, 45, 32, 115, 82, 71, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 46, \
73, 69, 67, 32, 54, 49, 57, 54, 54, 45, 50, 46, 49, 32, 68, 101, 102, 97, \
117, 108, 116, 32, 82, 71, 66, 32, 99, 111, 108, 111, 117, 114, 32, 115, 112, \
97, 99, 101, 32, 45, 32, 115, 82, 71, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 101, 115, 99, 0, 0, 0, 0, 0, 0, 0, 44, 82, \
101, 102, 101, 114, 101, 110, 99, 101, 32, 86, 105, 101, 119, 105, 110, 103, \
32, 67, 111, 110, 100, 105, 116, 105, 111, 110, 32, 105, 110, 32, 73, 69, 67, \
54, 49, 57, 54, 54, 45, 50, 46, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 82, \
101, 102, 101, 114, 101, 110, 99, 101, 32, 86, 105, 101, 119, 105, 110, 103, \
32, 67, 111, 110, 100, 105, 116, 105, 111, 110, 32, 105, 110, 32, 73, 69, 67, \
54, 49, 57, 54, 54, 45, 50, 46, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 101, 119, 0, 0, 0, 0, 0, 19, \
164, 254, 0, 20, 95, 46, 0, 16, 207, 20, 0, 3, 237, 204, 0, 4, 19, 11, 0, 3, \
92, 158, 0, 0, 0, 1, 88, 89, 90, 32, 0, 0, 0, 0, 0, 76, 9, 86, 0, 80, 0, 0, \
0, 87, 31, 231, 109, 101, 97, 115, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 143, 0, 0, 0, 2, 115, 105, 103, 32, 0, \
0, 0, 0, 67, 82, 84, 32, 99, 117, 114, 118, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, \
5, 0, 10, 0, 15, 0, 20, 0, 25, 0, 30, 0, 35, 0, 40, 0, 45, 0, 50, 0, 55, 0, \
59, 0, 64, 0, 69, 0, 74, 0, 79, 0, 84, 0, 89, 0, 94, 0, 99, 0, 104, 0, 109, \
0, 114, 0, 119, 0, 124, 0, 129, 0, 134, 0, 139, 0, 144, 0, 149, 0, 154, 0, \
159, 0, 164, 0, 169, 0, 174, 0, 178, 0, 183, 0, 188, 0, 193, 0, 198, 0, 203, \
0, 208, 0, 213, 0, 219, 0, 224, 0, 229, 0, 235, 0, 240, 0, 246, 0, 251, 1, 1, \
1, 7, 1, 13, 1, 19, 1, 25, 1, 31, 1, 37, 1, 43, 1, 50, 1, 56, 1, 62, 1, 69, \
1, 76, 1, 82, 1, 89, 1, 96, 1, 103, 1, 110, 1, 117, 1, 124, 1, 131, 1, 139, \
1, 146, 1, 154, 1, 161, 1, 169, 1, 177, 1, 185, 1, 193, 1, 201, 1, 209, 1, \
217, 1, 225, 1, 233, 1, 242, 1, 250, 2, 3, 2, 12, 2, 20, 2, 29, 2, 38, 2, 47, \
2, 56, 2, 65, 2, 75, 2, 84, 2, 93, 2, 103, 2, 113, 2, 122, 2, 132, 2, 142, 2, \
152, 2, 162, 2, 172, 2, 182, 2, 193, 2, 203, 2, 213, 2, 224, 2, 235, 2, 245, \
3, 0, 3, 11, 3, 22, 3, 33, 3, 45, 3, 56, 3, 67, 3, 79, 3, 90, 3, 102, 3, 114, \
3, 126, 3, 138, 3, 150, 3, 162, 3, 174, 3, 186, 3, 199, 3, 211, 3, 224, 3, \
236, 3, 249, 4, 6, 4, 19, 4, 32, 4, 45, 4, 59, 4, 72, 4, 85, 4, 99, 4, 113, \
4, 126, 4, 140, 4, 154, 4, 168, 4, 182, 4, 196, 4, 211, 4, 225, 4, 240, 4, \
254, 5, 13, 5, 28, 5, 43, 5, 58, 5, 73, 5, 88, 5, 103, 5, 119, 5, 134, 5, \
150, 5, 166, 5, 181, 5, 197, 5, 213, 5, 229, 5, 246, 6, 6, 6, 22, 6, 39, 6, \
55, 6, 72, 6, 89, 6, 106, 6, 123, 6, 140, 6, 157, 6, 175, 6, 192, 6, 209, 6, \
227, 6, 245, 7, 7, 7, 25, 7, 43, 7, 61, 7, 79, 7, 97, 7, 116, 7, 134, 7, 153, \
7, 172, 7, 191, 7, 210, 7, 229, 7, 248, 8, 11, 8, 31, 8, 50, 8, 70, 8, 90, 8, \
110, 8, 130, 8, 150, 8, 170, 8, 190, 8, 210, 8, 231, 8, 251, 9, 16, 9, 37, 9, \
58, 9, 79, 9, 100, 9, 121, 9, 143, 9, 164, 9, 186, 9, 207, 9, 229, 9, 251, \
10, 17, 10, 39, 10, 61, 10, 84, 10, 106, 10, 129, 10, 152, 10, 174, 10, 197, \
10, 220, 10, 243, 11, 11, 11, 34, 11, 57, 11, 81, 11, 105, 11, 128, 11, 152, \
11, 176, 11, 200, 11, 225, 11, 249, 12, 18, 12, 42, 12, 67, 12, 92, 12, 117, \
12, 142, 12, 167, 12, 192, 12, 217, 12, 243, 13, 13, 13, 38, 13, 64, 13, 90, \
13, 116, 13, 142, 13, 169, 13, 195, 13, 222, 13, 248, 14, 19, 14, 46, 14, 73, \
14, 100, 14, 127, 14, 155, 14, 182, 14, 210, 14, 238, 15, 9, 15, 37, 15, 65, \
15, 94, 15, 122, 15, 150, 15, 179, 15, 207, 15, 236, 16, 9, 16, 38, 16, 67, \
16, 97, 16, 126, 16, 155, 16, 185, 16, 215, 16, 245, 17, 19, 17, 49, 17, 79, \
17, 109, 17, 140, 17, 170, 17, 201, 17, 232, 18, 7, 18, 38, 18, 69, 18, 100, \
18, 132, 18, 163, 18, 195, 18, 227, 19, 3, 19, 35, 19, 67, 19, 99, 19, 131, \
19, 164, 19, 197, 19, 229, 20, 6, 20, 39, 20, 73, 20, 106, 20, 139, 20, 173, \
20, 206, 20, 240, 21, 18, 21, 52, 21, 86, 21, 120, 21, 155, 21, 189, 21, 224, \
22, 3, 22, 38, 22, 73, 22, 108, 22, 143, 22, 178, 22, 214, 22, 250, 23, 29, \
23, 65, 23, 101, 23, 137, 23, 174, 23, 210, 23, 247, 24, 27, 24, 64, 24, 101, \
24, 138, 24, 175, 24, 213, 24, 250, 25, 32, 25, 69, 25, 107, 25, 145, 25, \
183, 25, 221, 26, 4, 26, 42, 26, 81, 26, 119, 26, 158, 26, 197, 26, 236, 27, \
20, 27, 59, 27, 99, 27, 138, 27, 178, 27, 218, 28, 2, 28, 42, 28, 82, 28, \
123, 28, 163, 28, 204, 28, 245, 29, 30, 29, 71, 29, 112, 29, 153, 29, 195, \
29, 236, 30, 22, 30, 64, 30, 106, 30, 148, 30, 190, 30, 233, 31, 19, 31, 62, \
31, 105, 31, 148, 31, 191, 31, 234, 32, 21, 32, 65, 32, 108, 32, 152, 32, \
196, 32, 240, 33, 28, 33, 72, 33, 117, 33, 161, 33, 206, 33, 251, 34, 39, 34, \
85, 34, 130, 34, 175, 34, 221, 35, 10, 35, 56, 35, 102, 35, 148, 35, 194, 35, \
240, 36, 31, 36, 77, 36, 124, 36, 171, 36, 218, 37, 9, 37, 56, 37, 104, 37, \
151, 37, 199, 37, 247, 38, 39, 38, 87, 38, 135, 38, 183, 38, 232, 39, 24, 39, \
73, 39, 122, 39, 171, 39, 220, 40, 13, 40, 63, 40, 113, 40, 162, 40, 212, 41, \
6, 41, 56, 41, 107, 41, 157, 41, 208, 42, 2, 42, 53, 42, 104, 42, 155, 42, \
207, 43, 2, 43, 54, 43, 105, 43, 157, 43, 209, 44, 5, 44, 57, 44, 110, 44, \
162, 44, 215, 45, 12, 45, 65, 45, 118, 45, 171, 45, 225, 46, 22, 46, 76, 46, \
130, 46, 183, 46, 238, 47, 36, 47, 90, 47, 145, 47, 199, 47, 254, 48, 53, 48, \
108, 48, 164, 48, 219, 49, 18, 49, 74, 49, 130, 49, 186, 49, 242, 50, 42, 50, \
99, 50, 155, 50, 212, 51, 13, 51, 70, 51, 127, 51, 184, 51, 241, 52, 43, 52, \
101, 52, 158, 52, 216, 53, 19, 53, 77, 53, 135, 53, 194, 53, 253, 54, 55, 54, \
114, 54, 174, 54, 233, 55, 36, 55, 96, 55, 156, 55, 215, 56, 20, 56, 80, 56, \
140, 56, 200, 57, 5, 57, 66, 57, 127, 57, 188, 57, 249, 58, 54, 58, 116, 58, \
178, 58, 239, 59, 45, 59, 107, 59, 170, 59, 232, 60, 39, 60, 101, 60, 164, \
60, 227, 61, 34, 61, 97, 61, 161, 61, 224, 62, 32, 62, 96, 62, 160, 62, 224, \
63, 33, 63, 97, 63, 162, 63, 226, 64, 35, 64, 100, 64, 166, 64, 231, 65, 41, \
65, 106, 65, 172, 65, 238, 66, 48, 66, 114, 66, 181, 66, 247, 67, 58, 67, \
125, 67, 192, 68, 3, 68, 71, 68, 138, 68, 206, 69, 18, 69, 85, 69, 154, 69, \
222, 70, 34, 70, 103, 70, 171, 70, 240, 71, 53, 71, 123, 71, 192, 72, 5, 72, \
75, 72, 145, 72, 215, 73, 29, 73, 99, 73, 169, 73, 240, 74, 55, 74, 125, 74, \
196, 75, 12, 75, 83, 75, 154, 75, 226, 76, 42, 76, 114, 76, 186, 77, 2, 77, \
74, 77, 147, 77, 220, 78, 37, 78, 110, 78, 183, 79, 0, 79, 73, 79, 147, 79, \
221, 80, 39, 80, 113, 80, 187, 81, 6, 81, 80, 81, 155, 81, 230, 82, 49, 82, \
124, 82, 199, 83, 19, 83, 95, 83, 170, 83, 246, 84, 66, 84, 143, 84, 219, 85, \
40, 85, 117, 85, 194, 86, 15, 86, 92, 86, 169, 86, 247, 87, 68, 87, 146, 87, \
224, 88, 47, 88, 125, 88, 203, 89, 26, 89, 105, 89, 184, 90, 7, 90, 86, 90, \
166, 90, 245, 91, 69, 91, 149, 91, 229, 92, 53, 92, 134, 92, 214, 93, 39, 93, \
120, 93, 201, 94, 26, 94, 108, 94, 189, 95, 15, 95, 97, 95, 179, 96, 5, 96, \
87, 96, 170, 96, 252, 97, 79, 97, 162, 97, 245, 98, 73, 98, 156, 98, 240, 99, \
67, 99, 151, 99, 235, 100, 64, 100, 148, 100, 233, 101, 61, 101, 146, 101, \
231, 102, 61, 102, 146, 102, 232, 103, 61, 103, 147, 103, 233, 104, 63, 104, \
150, 104, 236, 105, 67, 105, 154, 105, 241, 106, 72, 106, 159, 106, 247, 107, \
79, 107, 167, 107, 255, 108, 87, 108, 175, 109, 8, 109, 96, 109, 185, 110, \
18, 110, 107, 110, 196, 111, 30, 111, 120, 111, 209, 112, 43, 112, 134, 112, \
224, 113, 58, 113, 149, 113, 240, 114, 75, 114, 166, 115, 1, 115, 93, 115, \
184, 116, 20, 116, 112, 116, 204, 117, 40, 117, 133, 117, 225, 118, 62, 118, \
155, 118, 248, 119, 86, 119, 179, 120, 17, 120, 110, 120, 204, 121, 42, 121, \
137, 121, 231, 122, 70, 122, 165, 123, 4, 123, 99, 123, 194, 124, 33, 124, \
129, 124, 225, 125, 65, 125, 161, 126, 1, 126, 98, 126, 194, 127, 35, 127, \
132, 127, 229, 128, 71, 128, 168, 129, 10, 129, 107, 129, 205, 130, 48, 130, \
146, 130, 244, 131, 87, 131, 186, 132, 29, 132, 128, 132, 227, 133, 71, 133, \
171, 134, 14, 134, 114, 134, 215, 135, 59, 135, 159, 136, 4, 136, 105, 136, \
206, 137, 51, 137, 153, 137, 254, 138, 100, 138, 202, 139, 48, 139, 150, 139, \
252, 140, 99, 140, 202, 141, 49, 141, 152, 141, 255, 142, 102, 142, 206, 143, \
54, 143, 158, 144, 6, 144, 110, 144, 214, 145, 63, 145, 168, 146, 17, 146, \
122, 146, 227, 147, 77, 147, 182, 148, 32, 148, 138, 148, 244, 149, 95, 149, \
201, 150, 52, 150, 159, 151, 10, 151, 117, 151, 224, 152, 76, 152, 184, 153, \
36, 153, 144, 153, 252, 154, 104, 154, 213, 155, 66, 155, 175, 156, 28, 156, \
137, 156, 247, 157, 100, 157, 210, 158, 64, 158, 174, 159, 29, 159, 139, 159, \
250, 160, 105, 160, 216, 161, 71, 161, 182, 162, 38, 162, 150, 163, 6, 163, \
118, 163, 230, 164, 86, 164, 199, 165, 56, 165, 169, 166, 26, 166, 139, 166, \
253, 167, 110, 167, 224, 168, 82, 168, 196, 169, 55, 169, 169, 170, 28, 170, \
143, 171, 2, 171, 117, 171, 233, 172, 92, 172, 208, 173, 68, 173, 184, 174, \
45, 174, 161, 175, 22, 175, 139, 176, 0, 176, 117, 176, 234, 177, 96, 177, \
214, 178, 75, 178, 194, 179, 56, 179, 174, 180, 37, 180, 156, 181, 19, 181, \
138, 182, 1, 182, 121, 182, 240, 183, 104, 183, 224, 184, 89, 184, 209, 185, \
74, 185, 194, 186, 59, 186, 181, 187, 46, 187, 167, 188, 33, 188, 155, 189, \
21, 189, 143, 190, 10, 190, 132, 190, 255, 191, 122, 191, 245, 192, 112, 192, \
236, 193, 103, 193, 227, 194, 95, 194, 219, 195, 88, 195, 212, 196, 81, 196, \
206, 197, 75, 197, 200, 198, 70, 198, 195, 199, 65, 199, 191, 200, 61, 200, \
188, 201, 58, 201, 185, 202, 56, 202, 183, 203, 54, 203, 182, 204, 53, 204, \
181, 205, 53, 205, 181, 206, 54, 206, 182, 207, 55, 207, 184, 208, 57, 208, \
186, 209, 60, 209, 190, 210, 63, 210, 193, 211, 68, 211, 198, 212, 73, 212, \
203, 213, 78, 213, 209, 214, 85, 214, 216, 215, 92, 215, 224, 216, 100, 216, \
232, 217, 108, 217, 241, 218, 118, 218, 251, 219, 128, 220, 5, 220, 138, 221, \
16, 221, 150, 222, 28, 222, 162, 223, 41, 223, 175, 224, 54, 224, 189, 225, \
68, 225, 204, 226, 83, 226, 219, 227, 99, 227, 235, 228, 115, 228, 252, 229, \
132, 230, 13, 230, 150, 231, 31, 231, 169, 232, 50, 232, 188, 233, 70, 233, \
208, 234, 91, 234, 229, 235, 112, 235, 251, 236, 134, 237, 17, 237, 156, 238, \
40, 238, 180, 239, 64, 239, 204, 240, 88, 240, 229, 241, 114, 241, 255, 242, \
140, 243, 25, 243, 167, 244, 52, 244, 194, 245, 80, 245, 222, 246, 109, 246, \
251, 247, 138, 248, 25, 248, 168, 249, 56, 249, 199, 250, 87, 250, 231, 251, \
119, 252, 7, 252, 152, 253, 41, 253, 186, 254, 75, 254, 220, 255, 109, 255, \
255]], \\\"RGB\\\", \\\"XYZ\\\"]], Rule[Interleaving, True], \
Rule[MetaInformation, List[Rule[\\\"Exif\\\", List[Rule[\\\"Orientation\\\", \
0], Rule[\\\"XResolution\\\", 72], Rule[\\\"YResolution\\\", 72], \
Rule[\\\"ResolutionUnit\\\", 2], Rule[\\\"Software\\\", \\\"Adobe Photoshop \
7.0\\\"], Rule[\\\"DateTime\\\", \\\"2010:06:15 14:11:13\\\"], \
Rule[\\\"Compression\\\", 6], Rule[\\\"XResolution\\\", 72], \
Rule[\\\"YResolution\\\", 72], Rule[\\\"ResolutionUnit\\\", 2], \
Rule[\\\"JPEGInterchangeFormat\\\", 294], \
Rule[\\\"JPEGInterchangeFormatLength\\\", 2850], Rule[\\\"ColorSpace\\\", \
65535], Rule[\\\"PixelXDimension\\\", 1862], Rule[\\\"PixelYDimension\\\", \
1862]]]]]], Rule[Selectable, False]], Rule[BaseStyle, \\\"ImageGraphics\\\"], \
Rule[ImageSizeRaw, List[87, 87]], Rule[PlotRange, List[List[0, 87], List[0, \
87]]], Rule[ImageSize, Magnification[1]]]\\)\"\>"], "Output",
 CellChangeTimes->{3.6212602578041887`*^9, 3.621264544929904*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"img3string", "//", "Head"}]], "Input",
 CellChangeTimes->{{3.62126018355663*^9, 3.621260185825799*^9}, {
  3.6212602160124826`*^9, 3.6212602194019623`*^9}, {3.621260262307302*^9, 
  3.621260265785857*^9}}],

Cell[BoxData["String"], "Output",
 CellChangeTimes->{3.621260266524391*^9, 3.621264545039695*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"img3string", "//", "FullForm"}], "//", "Short"}]], "Input",
 CellChangeTimes->{{3.6212602696705503`*^9, 3.621260303663822*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{
   "\"\<\\!\\(\\*GraphicsBox[TagBox[RasterBox[RawArray[\\\"Byte\\\", \
List[Li\>\"", "\\[Ellipsis]", 
    "\"\< 87], List[0, 87]]], Rule[ImageSize, Magnification[1]]]\\)\>\""}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  Short]], "Output",
 CellChangeTimes->{{3.621260274249037*^9, 3.621260304494605*^9}, 
   3.6212645451067057`*^9}]
}, Open  ]],

Cell[TextData[StyleBox["64-bit (double-precision real) Encoding", \
"Subsubsection"]], "Text",
 CellChangeTimes->{{3.621255944905735*^9, 3.621255987889719*^9}, {
  3.621256604161913*^9, 3.6212566113467607`*^9}, {3.621257274193736*^9, 
  3.621257291057466*^9}, {3.6212574348981533`*^9, 3.621257448858363*^9}, {
  3.621257880979044*^9, 3.621257908386791*^9}, {3.621258426586541*^9, 
  3.621258452426255*^9}, {3.621259394074888*^9, 3.621259407099579*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"img3", "//", "ImageType"}]], "Input",
 CellChangeTimes->{{3.6212559172912283`*^9, 3.621255921119103*^9}}],

Cell[BoxData["\<\"Byte\"\>"], "Output",
 CellChangeTimes->{3.6212559220065727`*^9, 3.621258470918468*^9, 
  3.621264545115004*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Image", "[", 
  RowBox[{
   RowBox[{"ImageData", "[", 
    RowBox[{"img3", ",", "\"\<Real\>\""}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"20", ";;", "40"}], ",", 
     RowBox[{"30", ";;", "45"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.621255401760786*^9, 3.621255407826911*^9}, {
  3.621256553156459*^9, 3.621256567578076*^9}, {3.621257739192585*^9, 
  3.621257768928248*^9}, {3.621258027228272*^9, 3.621258157601334*^9}, {
  3.6212582585903463`*^9, 3.621258279027356*^9}, {3.621258351236258*^9, 
  3.621258360748*^9}, {3.6212584906372833`*^9, 3.621258592405794*^9}, {
  3.6212586624235907`*^9, 3.6212587935251217`*^9}, {3.6212589907171507`*^9, 
  3.62125901408191*^9}, {3.621259069751257*^9, 3.62125913574757*^9}, {
  3.621259169140835*^9, 3.621259169620264*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 21}, {16, 0}}, {0., 1.},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Real", ColorSpace -> Automatic, Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{16, 21},
  PlotRange->{{0, 16}, {0, 21}}]], "Output",
 CellChangeTimes->{{3.62125852265366*^9, 3.621258594546344*^9}, {
   3.62125866493747*^9, 3.621258794178505*^9}, {3.621258995727148*^9, 
   3.621259015971348*^9}, {3.621259080190289*^9, 3.62125913696253*^9}, {
   3.621259170955194*^9, 3.621259181241125*^9}, 3.621264545162911*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ImageData", "[", 
    RowBox[{"img3", ",", "\"\<Real\>\""}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"20", ";;", "40"}], ",", 
     RowBox[{"30", ";;", "45"}]}], "]"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.621259152878557*^9, 3.6212592694673157`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.00392156862745098`", ",", "0.5215686274509804`", ",", 
     "0.8549019607843137`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.5176470588235295`", ",", "0.8470588235294118`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00392156862745098`", ",", "0.5215686274509804`", ",", 
     "0.8509803921568627`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.5176470588235295`", ",", "0.8509803921568627`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.5137254901960784`", ",", "0.8470588235294118`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.5098039215686274`", ",", "0.8470588235294118`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.5098039215686274`", ",", "0.8431372549019608`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.5058823529411764`", ",", "0.8352941176470589`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.5019607843137255`", ",", "0.8313725490196079`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00784313725490196`", ",", "0.5215686274509804`", ",", 
     "0.8627450980392157`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.011764705882352941`", ",", "0.5137254901960784`", ",", 
     "0.8470588235294118`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.01568627450980392`", ",", "0.48627450980392156`", ",", 
     "0.807843137254902`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.01568627450980392`", ",", "0.47058823529411764`", ",", 
     "0.7803921568627451`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.01568627450980392`", ",", "0.47058823529411764`", ",", 
     "0.7803921568627451`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.011764705882352941`", ",", "0.48627450980392156`", ",", 
     "0.807843137254902`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00784313725490196`", ",", "0.5176470588235295`", ",", 
     "0.8588235294117647`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.621259155744794*^9, 3.621259270597534*^9}, 
   3.621264545214015*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Base64 String Encoding", "Subsubsection",
 CellChangeTimes->{{3.621259357113113*^9, 3.621259414634638*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"img3b64", "=", 
   RowBox[{"ExportString", "[", 
    RowBox[{"img3", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Base64\>\"", ",", "\"\<JPEG\>\""}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6212570822178288`*^9, 3.6212571102010508`*^9}, {
  3.621257145176446*^9, 3.621257234514411*^9}, {3.621257814611758*^9, 
  3.621257828187364*^9}, {3.621259426987957*^9, 3.621259429635695*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"img3b64", "//", "Short"}]], "Input",
 CellChangeTimes->{{3.6212594359201813`*^9, 3.621259442449463*^9}, {
  3.6212596873321342`*^9, 3.621259714016184*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"\<\"/9j/4AAQSkZJRgABAQEASABIAAD/4QEkRXhpZgAATU0AKgAAAAgACwESAA\"\>\
", "\[Ellipsis]", \
"\<\"cZooqiRpWk20UUxCeWKXy6KKCbCh\\nKkCUUUwHBaXFFFIpCiiiikM//9k=\\n\"\>"}],
  Short]], "Output",
 CellChangeTimes->{{3.621259537429503*^9, 3.621259549831723*^9}, {
   3.621259688486401*^9, 3.6212597146554337`*^9}, 3.621264545419733*^9}]
}, Open  ]],

Cell["\<\
Another image for number 3. This one has a connotation, because it depicts \
three fingers which is not a glyph for a numeral.\
\>", "Text",
 CellChangeTimes->{{3.6212610874599123`*^9, 3.6212612078284483`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 99}, {54, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{54, 99},
  PlotRange->{{0, 54}, {0, 99}}]], "Input",
 CellChangeTimes->{{3.621260997741644*^9, 3.621261043485403*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Speech sound of 3 - Aural Representation", "Subsection",
 CellChangeTimes->{{3.6212630226925297`*^9, 3.62126302975604*^9}}],

Cell[CellGroupData[{

Cell["MP3 Encoding", "Subsubsection",
 CellChangeTimes->{{3.621264289108903*^9, 3.621264291364415*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"snd3", "=", 
  RowBox[{
  "Import", "[", 
   "\"\<https://ssl.gstatic.com/dictionary/static/sounds/de/0/three.mp3\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6212630374388*^9, 3.621263067179133*^9}}],

Cell[BoxData[
 InterpretationBox[
  GraphicsBox[{
    {GrayLevel[0.9], RectangleBox[{0, 0}, {360, -164}]}, {InsetBox[
      GraphicsBox[InsetBox[
        GraphicsBox[RasterBox[CompressedData["
1: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
RdkrFtkV+BxlY+ZzsRzyPa5TNuYUSBp/4tlS3IiFqjL/hM1deJvuqnBrZz9U
ltcZDDzoweK1iNGZHZ2IPkEt6FPuxnttu0kmsy7od4l9sX3TjntCp3nYfRvR
m/60N3VHOS7t+yp86Eozpi5keYq1tGPUqfTjQmQXAhuCdwhYd2ObRljVwq8u
XFY3P57v3o0fQ743nxZ2IH/OgcK7txXXxfOq+NLrYVvna7gvuBWm33U+nPJo
hoGO2CFLrjaAY8U+wZfNYH9cY1It0YyfIg7DTMta8PlI9aeMt41415S/6ZB+
PcZpR1vqiqmQZDOsK/lTBv8fW9vlZZvQ9MGxRMumHutPvQtrv1qNrzNGVaxP
qRDiaJDAKBUue4s+7eKrw/bpPn7e5TVYs3vzFoe0Sgw85Ss/N1MNHTfjdoaE
SgTyHx21VivFS4E8pVGVHCRVtOoI3s9C6ZZ1wfJaubhfG7Ki7EMKflhPy7Gr
F0LfzKzKLasYm6vE3KaXjl9Tf9Vn2hUj7NvhFkv2PNS6t/DdbcnBdseiAhGu
PGxS0P7CfyofRuEfNnku5uDMuYkH123iINX01cTJJw1da8W3V1sXoC38MK8c
JRXDRZle13gS0b16XNyuKwNRPh+vu5tmwb5ruV4CSzKqm34V/12WA8/s6Z/C
f1LAKCnE+TsoA7+VqhZ+KySBmvLQ+9fuPAxKGyzbLpmBBhdOdf6dyZj22nsi
ij8LIhTNkg0GCSjr2nPB+WjMP3dJvBKvxCvxSrwSr8Qr8Uq8Eq/EK/FKvBKv
/xOvPNGy2ate6f/n+mI5Q9V7d32U/joTKSD5EDc53jT9emyDX/E/Wv1v+GLC
yJFDlz4QQ+aTt1q/ROBmSOMeM704bL9aXF4QVQDeo6c7z7lXwUVl8KU8VwVM
2bPb516Xwq0vj97kdwE66IbOzj+sgexP45ED/nW4XVRz4LRgDWoeH/bW56qE
dasfTVylAio+di4jpyshcd2/ecuyGtBtiX1UEVkJebsT254crwSP3sZR2oUK
3JvVD3zuUoumd9c3xY/XYEAqtKi5pAzqPE+ZbcWrUf/QhxJ2pwJbfhi8OL2l
HidNn16j0FFhlukoqn25C5H8vcz6jjRYUz2mmyXb8GGHkZPp/U4w3roxsUqi
B2G/8mK77HsxUHNgwwblXkjZ3/vQy9mDJ9d62hoyO1FhEu1nt6EV5X4vfj/z
aMWr1zWlpfNt2JXfF89Y2YFfmWM61Vs6IKAuVGCR0Im1DqLyJwzaYT19QvjY
1SV3QcPyvTdbEcixsHZXRDMeVAhONNnU4EaHZOVzs2bQOYf+usLUhIvFOuEz
h9tRe/BCtbI6FeySqXvpftFwmTnypd31pe+VFZr5U70SL5wbDO3iaxEtxuLE
q16N4Qcngh7M10KE4ctvVZYy2Btb9RUkFsAGby9ybStHaIfGn8DaMvAb3XG4
vq8c5xzfruF0rICFEm/qH8ZyTCM2wIu1BOzvXlXwnChCKfuBcm/nTJg9O/DL
PLsAfrbaPhZCBZA3zPyk5JiDZd9PdyzEFWG2SKs+V6MIfL5XN+u0F2Hc+FpG
4t0C6Jnv9HLSygCH313bOpM8TGwtUt3CmYflPFYmt9NycYu9ZvD8oUxwBRRf
t6Al4YYLr4FbaxZ0rZIeOVSloFR7H+ewRxpSS24Njjcm413QTYlnI2n45vQ3
44FRBgYOphWy2ibjk+3C8njGVLSepraet81FLRPvV1PFNMSEn+Qq3ZcLb4+k
ktf78hB983NuYHYajh4pq/+Vkojj67wt+c0yML/dLK6PlogPz6kbFpkS/rlL
4pV4JV6JV+KVeCVeiVfilXglXolX4pV4/Z94vSUe6Wqfev8/V6fx5zKbMu/D
OTXEpc5QA38kKfR/173AVMM61wfLfSBS/SyaKe8NdrOUssXxfoTa29vPVK+n
YO0d6R9/RzPx4GqAq5dnNWoq3Rs/CZVDl8ObIc6+GA5044/vs5Vh6K9KbuPZ
Sgy/ejS/Y6IYbsWcUqukqegfNHc5XEXBPVc1Q46ecghpPJW9ZVSFs8qTyvxC
VXB09vi8IbAMd0TOntw2UwatghK3O/01mIuU+0C7UQW+gxZurRepmPzaXcmo
lQv3qtYzJ5MokE8+4mRnXYKErZQNFLs6BFudi/sSXo+tAStbKZVtuP5kcxbr
k3bYHpZdOCVXhQcch/qv2rQj5E7Fet/Gblz+cL8tTrQblgVBg1JLx/Q09rKN
k11oPSdvfW5VFz7w+mx+e7Yddt93Jtb8bMXhc4ecT9m04kCKxyrdliYcdhSf
dlo6z1GlaY6f3G3o9jsUujm9FZFyGX9bmtrw5BydOvufFkgp2PbL5FLQlB9K
94yzEVYXmgp8BlrgNz0czbCnCZ8fqM02urVCx8zz82VNGiwm9ynqxNZDK8/7
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
jNasZCM15oyNey4bbXeHZaTi6Hg/cHTImMLNN+8HjpSlUlG9aNUl611MDMy/
4jd9z0bugjMLCIlMxAqnvEzg9qW4rK0j28UakKi6YGynFgsEnaAZJ79KHL3n
5lOYwcIvnxR/8nfuXjhmp/y5lwmBzR8ERFY1YEu8g+BHySZENsuSaTLN6Dvn
3Tsz1AROgm2/rwAbPz85KFYzGVgTpqS3vbgGzfz8DgeUmHDpYioEBtfg/KxA
VEYgGcULBb1ljtRg0dEo+ouPFIgcjhOfnatCuNrh6NtvayEx/C5T4xYDHwsZ
KTkqLNRbHKFUlLDwau75yh71euSUJIrZxzTg+YuV0xvNOCjzm42fdG/E3D7B
0+eGW7Ev9JL06NlO/JmyVzSc78CQNk/mYHcLgkduLc4O7UDUhHC9xK42KHOi
K+61NeJKPaFCcWktOJNxV9J4mmBvnOBKIdfDZ24ktay1ETdGy72mdOuRO7fZ
qtetAUlfm6JER1oAztz4is8NuBCyMKK8kY2sSOqZudhGjAqfXWU33Y6DLndT
yvrq8dmG9HfVc+73WFnFH3GNjXiBKet5MSbCN7r2bfnDwgVxnihxRg10bmBO
L6UWGsZ/K9a9J2ORmne6DTeHyjFvFzVz97jKAUlLPdUKpOuE+envroLBKTWq
bA0Fb2uDi8y53hMfaS66dpiNbZ713e7fCKgsEVwTIF+JEXON1RsbyFi3dbdF
064iXH305n2qTiV2GI3tNNal4BvVQt5+Lzfvvl2nfO4r1++XpwJ7G6qxRyfu
2nY+OvRF+855GRai1s1aVWMxEYkOvUptn6kIKozZkn+VgmrrqkOt3ypAwJaT
7K2luLVG73KqTT4uCJw/4Hzin9d/Xv95/f+SV963U9Yxl03/c9ObXytZQcQU
JoxAWep6G/Dm90+Rwv0Q9rrJQ/3XB3x2zcmpG03El9GcH+ecUpC56/aETXYZ
Unykxh33UhEdzXs8NKICgjTv8KkFtWCv2W0jd7MWJxIuiq+mUuHrsMdT1osB
levnX+8ksuHqs2Xj72YGHjR1rNPZQMNmgrTluScMgPQ+nMeGgUfL7udYcN+7
TKcdeet5GPh2QNJO41QDbCc/O/CbchBBCVu7dLABPwVLRVOsGbjTYxtMW8bG
93ipowyuj2bxkutP7lRh3erPwp1LuDlx29IXzz+zIBdzSM5MqgnxCbcr07j5
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
vSrp6PPpZnwwmphIetyKtT3JC8/uaAV1QU7aoBAbGRvIPtZL2qDtENbxQ7YN
5wuuJX4z74KFl/MD5bBOHGZ+7bSybIKpjqgU0aEZBTkrWQkpzeCpPqASN8BA
Z3cssXYl1+WGvk8T0404GGl18A+3b/KLdSUf7SRj48LWW9YLmMBemWgDzWrw
j3zvcvOvwSy/eGSEeA2OlcgmX7asx/WXWxNvr2OiJVFkn5cRE+u+nHIL9SBB
/JC7bkpHDY4ISZsFrKPjT2Lipaj7DOykf0oT0aRiM2HCzvtpDTT3zld78dKR
VFJw8E1FJdpTD3jPX6OhdX6n8eNNpTjT7Olsw18O2tO3xk6KVTi77HjX41dF
GLhi7l/qVIFzQmvirRYT8GqkfFT1ZjFuXFn0KGJZPvw+Xe/15+as2tRpB0ve
EhzV3KmldCEbF0puzC9fVAGp1RvZSkp5YF00vRvbXIDvh/wv/t5WgMedUcO7
JUtxf8fx7FOV2Xhd+6fb06EQzz5d3vknIhv2Ej7v3hjnYNigPSI4NxPrvs81
CoRkIcdhIfOcciL0svVLF/GnYdHnsuthXhf+c1O+bZ/cfqsLyAzYptNx7xbI
RT87xqb94Ji89KUtLQQPhTRWr49PRK/oZ77+2GR03DGgdr/Lh9fF2RVyB8ph
ICd51b6oCl+XTX1LfUqA05oe3hIDMiwaL/gdP5yOLbwX1n52S4W5Y1aLmHAa
jkdui9XspWIs3D7o+HIGmAsNAxzsmbjgoCwHDh0jCJzf6VAL5ft8s/yyVdgl
eLJi0ScyTjv9Mlfk4c6etzN+QdV4dswgW3c5DTndvKwjd2gwJWjeVTlRjdnQ
1N2i2ymwOrNoRsORgnuE5/YjRBqUbrhRQiTZ2HP93dOZ/Y2gSjoOrlZjY6u3
Y8WTOwyoP82q+GJHwXlmx0pabQ1Cz6UP/9hXi8G7h3ZculOF0iktvmfVZFSJ
JQsobqrDonljBVYcE+IPMr4uu8+E7sag4cPcnCl87TKn8VsDzsd3563Z3goj
6uG8iZlm5DWar7qp0Apts4CFXf7tyP3BkdSTb0dckvCKXssWZGxPevH3SBes
8l5zdCPbkSrp9DX0Tye6S9mULzc68F3zOnEwtAlbiXwre98QcSLV1XbXERYW
yhRv23WrFV3v1wYOmdajPi9zMrSNDb+HB8REBhmQUzAK+15Px5Gb58kO35gY
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
vn+sL97Y62CYBuqdY7qmvkQIpYxLmZzIw68PWQEcSjkYu8slVuaQDmdzRdaq
PQQ4qL89IceShZXFCBaVzCRsV+75vsU5F9z5ze9spYkw4uKND96XDVrZlOQ3
ej5cUJ734mzIRsC5Zafpa9lw655d2z6fhyQ1cym+nDw0iG9/3mSSg48lJ8+A
JwX751w4RDMScKRMuHrpbxre1LLMWP1IhyLvMfekuhxw5Yhx3zDNxGXi4rp8
eu4eygxhDjyfjgcKk8W0hVyoDWryPnTOhvOOYjtP1hJs6/MK1hOvxPuqsSGn
Mgouzl//N/ObgtVJt59uKuXIc7zFu/CSipbGZdvLTRSYbRr7c3u4GhxyWwp5
lOj8wmZo33uyAIoHJoVoe2pwtNNrS9LDKtDKnZ+vpJeBu19jXwhTNfIErXXd
PcpATYstIl0txK8hqvKEXSXmPh33H2eoAiH0mH3klQq89JXddVesEjssMsRd
pkux6OjCNZqei3wK96XznYWwSxnODUsjY0hOnGnjdAEeu0f3n6bvtk/M2Jxw
k4yIn6w1dgpp2GMb1nVxUxbi1lifNrzMQ69FzI4z8kWo2xZkcsiKgIitp1cL
6TzCusbGLzGUg4Mpr2rdUgnYbrarlOWY7n9OK/LWz+lRdSG4SaDW28ENipvU
u0VyX6LU8m+p3XgKomUaZ/hep4NnrZVvUCgX1l85zondKUPOn5i5IDYKhFkv
HTh3vgFN9rta1h51QXct9+CmoR6saZ0T13Nqx7viKNbbl5qwcOrlQ59UGpJV
rppET3fgQW5s9b8bDXi8Km9qnNSH2NjxHhtRGqQdmXnnktvh0aTyJL6Rhq64
V88crbrx9se3uqSODmz+fORR/M8m6Dy8kzXcSYND3mVLkncXnvuT5i21aFCW
EZRMMmuHdPyS4OmCLpBnnuaViLTCI9Rgz8PTdSj0HHFS3FoOuSxecv0QEZHz
o2oMeUXwD/V06FApwKzJ9b8N18jIZ/rXW3EqG+8vsus3UYn49q/ld+RrErSk
9LPEc+k7K1T+qp1TFhaEv4003yUh2JN0eOJfIbJoQ/qmofT7ML7bZdWUBAml
xgu/q1OQmfX5jcgnMgpCSkZbvAswJnR90ul5ATY1KkmrxRWifE/uR+9DBDw5
eCLrt0oRjLmNe3n5SQgsLrpcdy4TPy5U9Dr9IaAi5Endn81kvGRBRsC7Qux+
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
          "],
          ColorFunction->(Blend[{
             RGBColor[1, 1, 1], 
             RGBColor[0, 0, 1]}, #]& )],
         AspectRatio->Full,
         ImageSize->NCache[{
            Rational[32, 49]}, {0.6530612244897959}],
         PlotRangePadding->None], {0, 0}, {0, 0}, {0.6530612244897959, 1}],
       AspectRatio->NCache[
         Rational[6, 35], 0.17142857142857143`],
       Background->GrayLevel[1],
       Frame->True,
       FrameStyle->GrayLevel[0.75],
       FrameTicks->False,
       ImagePadding->None,
       PlotRange->{{0, 0.6530612244897959}, {0, 1}},
       PlotRangePadding->{
         Scaled[0.017142857142857144`], 
         Scaled[0.1]}], {180, -35}, ImageScaled[{0.5, 0.5}], {350, 60},
      Background->GrayLevel[0.9]], InsetBox[
      GraphicsBox[InsetBox[
        GraphicsBox[
         {RGBColor[0.325101, 0.364492, 0.820256], LineBox[CompressedData["
1:eJxdWwVUFc8XRsXuBBWwuxALMT67E0VRKTvxhwiIIooNFnYiWJQKSNmCRQjS
Xe/tvsdLShHEQv6z++bJ+zvnnsO55zJvdmZ373z3+2Z7rfvPdGNDLS0tU20t
Le6vuulbBVc3us/AwM1f381/IdS+Pu9b/vW73J5EbBP+//9t//odHrsTs//n
/53++t3OVXY9V7n3n/6uf/32xsHtjIPd/vod+d87/NfvNHA9saP//P7xv74u
39z/Gc/jr6/XLKl7s6RT/4x/5q/f8/uhHt8Pef5zPefq5+dws73DzfP/XN+F
+usrdexY6njxr9+Zv95L9f6GJcQu/3P9V/76OoWDiV39Zz7X/vpdlzcmdv2f
+dX73T8Ju30S3vhnvjfr7+eMF3ozXnj9M/9bf/0ery4ZvLrkXe/z6+FTvx43
xrW7Me72P+tT73fI7ts+u++df9ar3u/YgWt3/1m/er/ToroOi+ru/rOe9+rX
72Rpx5Ol9/5Z3/v16xmb1yk2T8Pn19u33m8Y17lhXL2vw6+/X70/OaLL5Ih6
X5e/H/71/r47Ovvu1Ptd+fsTUO8/Oav75Gy9342/X4H1fqVL10qXer87f/80
/OFbuw3f+qD+/vH3U8PftqL7thUP6+8nf381fL/pen7TH9XfX/5+a/giQ32R
YdA/97/e72HAteB/nod6v+fqlj1Wtwz5533R8K9873Hle72vel4e1/sK+3YK
ew2ff340/BOKdicU9b7qeQqt9/vZtO9no+Hzz5eG/z67/fvsel/1vIXV+2sX
dli7UMPnnz8Nv+59h7r3Gj7/PNb7nW6ZdLxlEv7P86nhTwjtOCFUw+ef13q/
c96ATnkDIv55fjX8Pd6d9nhr+PzzXO936cy1yH+ebw0//FTn8FMaPv+8a/hL
GxJ78s/zr+FXOHepcNbw+fdBwz9T0eVMRb2vej+e1vtDNukM2aTh8++Lhv+x
UOdjYb2ven+e1fubl+luXqbh8++Tht84QbdxQr2ver+e1/v3pnS9N0XD5983
DX/q065Tn2r4/PtX73cXDusmHPbin/dRw3e93831vobPv5/1vl53rr38533V
8J+f7/78vIbPv7/1vv7KZnorm736533W8KsP6FUf0PD597veN7hYrXexWsPn
3/fX9f7IHfojd2j4/Puv4aeI9FNE9b4qH0TV+7arDGxXafh8ftDwW6YatEyt
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
4jvy/3tEhj1nC5Ex2iKdGB55uZxa+oqleC8dfT27rnsXTPoX7jUt3JuOyx9H
hd4+y1L8l46RwS2nBPRlkMFtr1fT0aEkrENL8vyq8GA6wqad3PSaG39IpOmQ
yHQ8bnk6Mug9S/FhOvx2jByeOpyMn843eBSt89lB1k+FF8nvdTbz7P9TgGX7
Ppvu+5yOlwbDdgaFsBQ/puN5pMxl1A4BMnq14Qx71+x5H7xDRPFkBgxis5sV
mpP+H4cQy0CvLqZ2Bv+JKL7MgMTznCg+VIBMu7kZxHDQ22ntw0csxZsZGBef
uUWpw2C5LrehZ8Dnt0nH+etYij8z8N60UY+b5P3PjD6aQQz3loxddvsMS/Fo
BnJbz23bTy7A8s13l22+mwH3P3WPzx5mKT7NgH7L8RvDRwqR2eZNBjFENY7o
buHAUryagRnaU2KCnYVY/qRo2ZOiDByPc5rVrrGI4tcMjIgpPNp5B+lv+SuD
GAZcdvvxUcxSPJuJ+b1Dz998SvpzcKFrJto8yGjobk/G5/FtJm512NFi02oB
sh6NzSSGgsvMkMQ2Iop3M3H5xFu7gjtFMFvOtUxSN2/Lyewkovg3Ew5DGu/Y
10mIrF+7Mokh/tSCufr9RBQPZ2LJpIjjc2Wk/z3P5fc8MzGk5YuLZuT5V+Hj
TJjeOi7vGkf6zwvKJIZtZaIblq4sxcuZ+KPXuVnVBQHMKhOWVyZkwnKkj2FI
KEvxcyaGXytNGHeZXP91HqAgeHmd2+ZIluLpTOTuSzUuOCiE2dQmxLKw07nm
cLMwluLrLHxrN/DdEiUZX96HMzTO26szfDVL8XYW1sdvuXFisRArznEJNQvP
0gYWbA9iKf7OQoNeOp+SnwuQPc46ixiUW8JXWhWyFI9n4azojHWrlCKsEO43
E+7Pwr5hLn7VUSzF51l40/SDhc52IbI5+HMjC+Gj3OcefcZSvJ4F81tzbqxM
Iv2HPzMb/iwL26aHfew/V0TxexaSS+BgP4r0z+IbBsVqPyxqJaJ4PgtNty57
1Pk26e/61cz1axb0Hm0wn2Ylovg+G/k/WqU2jC4Cn07bZ2O66Z0HX8eKKN7P
xo2XM9emfCP9Pw0nlo3QuwGpJVUsxf/ZcNuW9nPWZwFydi/IJoYTSsd2gwQs
rQeyMeR7u6kiRoCV3TnAlY3YWEH3ZYEsrQ+ykbCrs/+8vqT/uxPZxHAj3yFN
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
Lru5iOo9cpwQrVl/sJqMz5X77eToJQqa0zZMRPUfOQJ0G3scXkjWn6ODeshx
JnNJq6njWKoHyWGloxtSPpYFl03NhpP4CoMGaCyi+pAcIWfcm2cohNg7aJLz
oElyRPp3tkw/ylK9SI6ZUsvXTdKEGF8737h2vhzlM/RPefdWn6+TY0js4tJo
bQY/OHp+tRwRizoNbd2QpXqSHKbmm36akufz+f2tz+5vJf/fWH5kCanjVPqS
HJ8+bXpj/4rBXmeuyVGtNca1cyJL9SY5ZjjmvnRdymD8ghPGC07IUeixwP1G
hfr8nhyVa24ufLutCD+4dHpFjm/Xo/uGWDNUj5JjQNBRI7crhXj+lQOocmgd
emfubSak+pQcJysH32jrQebPwdNwOV6G2vosDmapXiVHYJTlqSm9WYy/yQkC
ciwoGXblZ6Zav5Jj044GU+5ps/jBH18h/XfMKi+ay1I9Sw7XJc9qpjIMnk9j
nk1j5Eg6tMfsCdT6lhyvZzVr2xZk/l24hCrHsUydN09L1HqXHGsyJ5yY+Iys
v7LWWEnqRnbbfxuvjlOfP1RgSMKe7xZNyPq/bkVMAcOtomthJF+o9DAFHqw6
pF+kQ9afkxu6K8B+7HL+VKhaH1OgufU35eoEMv7GwcQUiH493X6gL0v1MgVu
T1uzoPqVECbjuaZA0HutayPk6vONCjQ8UOeCEgF+tprzo9UcBRRP2ji+GM1Q
PU2BXS4usrjJArzg0ukKBVpNzmywYoyQ6msKiE1evLeaIMS+CA6gKnBRu0NW
pSNL9TYFfs5yNNtsx8KEg6cOZPxbbg1I4Uj1NwXOfX6xsetnBj/XcAKHAq4b
PQzekf9X6XEK3FtzanifWAYvuHL/ggLe/z0+8emH+rwlub747nuShjLY1+jO
3kZ3FAh07d8h8C1D9ToFcvXGzEr3JfPn1OUQBfw9Kn/P660+n6lA64gFLx0b
kfEfRP14EKVAG9sxBd5j1XqeAjusV691mMTixYGk5weSFDgZfupTv5Ms1fcU
2L3i6uBFwWR8Xj5RoEfN72+ODizV+xTYbD9fEjmcgUn/kvH9S8j6zIpl/0So
z38qMP/50JCAaiF+/uCaAjlbF8+OXcxQPVCJtfqjqvOaCfEiqRkxJa4q+r4M
HqY+L6pE+16pJ287kvXn0qmOEuXCLTrlIobqhUq43N90K6WcjO/IAVQlfqWX
7VjvyVL9UIlWD2xNjycy+MXB0zFKpOzfdNzZmqV6ohIGaXEndMIYvNTjBBsl
vNJCfOYUqc+jkv8/ELLw5xUGLly5b6rErby5KSeqGKo3KhHtdPaGoEKICR/W
mnxYq4T7FaHcwVN9flUJx0Uu9gEtyPgcfWqnhHbkwqJenxiqRyqxOajpGIc8
Mv72gy+2H1QiOCBGL6AvS/VJJRjfl61SpWR8nN2Hs+T3mhlvC+jDUr1SiRG1
Zo5CVwYT+IJfiXkPO3hs7cBS/ZL8XlTpXsfPQvySPvwpfajEk3lHgwwJXlbp
mUoccHXd8jlTiJcvuKZEi/W2LXBSrW8qsefS58hb+kK4nP247+xHJR4fn2BR
1Jmheie5nnljrb1FZP68PK9E1fCwk5kmLNU/ldiYPL/VY3K9v8ZwAFWJvAzo
3bViqR6qhLC62QHDAjJ/Dp5+U2IDdFw/DmCpPqrEitqv17Mekflz6pN2CTy2
B61YSNZDpZeWYObFsV16jifz5wnUErCZw23Lgxiqn5ag5d0hb+6MIut/tDex
EmwYaqz/m+AblZ5aghXmsnVGLgxecfTpyBJc/JZjb5ukPg9cgm6li1rWkudn
/9ApLkOnlGDTqQUlT1mG6q0lEM5/2xZRDCZqLZ6gtbiE4DmFdlWR+vxwCRS9
t1peI+v9m5O3LEsgSC7qGqhgqB5bgkuvbhvWriDj++946b+jBCURX3rOfK8+
b1yCH0V5ft4jyfguXCvBjr2vZxvbMVSvLYF459dEl/Vk/MUnJyw+WYKpzUXS
gUHq88nk/6Mnd69bRMbn0ul1cn3GNR2kBE+q9NwSMDNy3ifvJeN/4wBqCa63
XFgSE6M+z1wC646NA6IIvtjPwdMnJZDdqt3XOJuhem8JdpoisxO53onenKBW
giO2MyPaC9Tnn0vQOfeqqN91Mj5//KsEh3uslU8j66XSg0uQHp/65fhtMv5M
8cuZ4hLycAza3j1GfV6axHt1uJlL5rOfo08ryf2rXW7ZheQ/lV5cAouJs+K0
yHwmlmkRK0XKvmW/tgerz1eXYqi7R5ETqb9/v2lLrBQ1Tz3Xlp9nqJ5cioPd
QzJNyPvDy3UGpYhxnetXHao+j12KhpmOPpPuM3DdMmz/lmGluO9Y89uQ5B+V
3lyKMc0UQb5xDCZN5FopvqRbWduUqM9vl6LNsLImoy8yqG07/3fb+aXIHm+Y
v4W87yo9uhRvxowvOLqVwWsuna4qhfeDNXoWN9TnvUvRbXfp0JSWZPynHEAl
13vZesjc3QzVq0tRu2Ds119NyfgcPN1TCuHPHiN+Xlfr16UwSjFoWXOEjG/F
CYSl+LWif61TGkP1bDLfPV/t2hN885or9y+X4pi9rHl6I7W+XYo7aXGts8j9
dG1yf3+T++R61y6Za9eWpXp3Kbp2m9Ci41UyPkefhpVi8L02K2zy1OfPyfxt
8i3zzpHxg97+DnpbioQvtYZtyPxUengpBraUXz96kIzPHy8uRUDy3ZSi8+rz
6qWYf/JIrRepz1x5+bEU1kf9fhwj+UCll5eiS4SXo/c9Mv6g8omDyksRebKl
pVeo+nx7Kc58M5fuJL9X+5trpSj5PbqRD4mr9PQy9LA5evMiifOnk1uWYbfS
WPyc7F8qfb0MxrtuHt9H3l8+nXYrw/nQacvOkPVS6e1l+OTbL/PyAwaTnTmA
WoavvSdk2n5Un58vw/4p+2MEZP5/OHhqXIbZ5XvCd5L9XqXHl6HD5WG/Zp1h
ENWDEzzLMGtoTULHN+rz9mVoPb619eWjDA5w5b5ZGTpqb/LfT94flV5fhmLv
O73F88j4cRsmxW0owwfDgWaNr6jP55dh1NqmEE8g43P06e4yOMVm3z5A5qvS
88vgnrn2i7UzGX/n4dc7D5ehdOFKo55v1Of5yxA7euTi8U/I+Jwcdb4MS/OM
Ah8qGar3l8Fmp/6lIWS+k/kPzsuQtD7oZ8NS9fn/MrL+H4e4kfX8owiuVQSX
odV453fdyP+rzgOUIdG7r5b4Ghn/NdfKYJtx5E9OqPp7gTJ8WbTcwITM58B5
TpAqQ9W2wu4tST2rOi9QRvD1qREG7mR8/nhLGVYN6fPezEf9vWEZ1mXHJK4j
6/fHmAOo5PcdYr5c9lGfJyiD9sjxjhZnyfgcPP1RhviOdytPfFB/j1COir3W
W8KekvGZpsTKYWxyFgXk+VadNyhHyovw/Ym+ZHyu3O9SDtFiL9/WJD/yxw8M
yiFsMG9ipCODuhP9/pzoV47A1YO85j1m6HmEcgwfLPJ4uoVBNEefji6H+diz
ZnNPq793KMfsBfmjB5H96eCI6QdGTC9HQX559mJ/hp5XKMfV5bkXPMl8wMlR
puW4u7LV15u56u8jyhFi2bTSgMy/jju9aFOOHoWfN28m+VV1nqEc794MmvRw
Fxn/wX9RD/4rx63K0tWcjqs631COtjs7Vj0l+fHgAa6VY+iiUf/9DGToeYdy
LGtSF3ea7B8qQaoc/Sx//+oSqf7+ohzp7+ZuriH4qo5Lp17lMElKGLItmaHn
Icphs7rkXE+SX6N/cAC1HIcqDB55vlR/r1GOfZ0swieS5+EgB0+fl2PRpf8K
/cn9UZ2XKIed+aTjU8nv40785Dvx5Wh0f7Ld7ij196LlcAl/MO0VyU91/PHJ
coxdYd0vMJyh5ynKsavD0sXV5P5Hz5FGzZGWw+HHw3SzG+rvQcqRWfRFtJ/g
uYMcfVpdjjEH3gYo7jD0vAWZn8zOOZH4KoG/Almluo91yPqpzl9UYNuo2cZe
JM7LUR0q8Mvqmq4NeV54eNqtAg8Dl+e9JPvfm6tcwV8BvRaL1qf6qb83qcCV
20YFKSTuxsn7hhVgBu7oMojEVec1KhDQ46aQ+35pCrhWAZPFk0uifdXfw1ag
4WqHX6mkvxYvSFWg6fZv85qT/qrzHOR6pGhRQq7vDZdOLSrQYM610vt+6u9Z
KpC3Jtj2PYm7veAAagXcs34p9pDfV533qMAIWRcBN/8pHDzdVwHf+5f23/FX
f39bgZcm0xz2k/ystc6jbq1HBTLiv+YfJP1V50EqwCpn7z5Erv8NV+5fq4Cz
H+Ozylf9vUwF3lgZhZiRuFtz/4PN/SuQ0l4nKIA8L6rzIhUo2/G0/Wtu/hx9
GlmBnG3J9u6+6u99K3DCU+d4O258XuCvwHBb62Z+3Pj8eZIK9K3VPcRy4/PH
80l/w4BXQ3zV3+NUIKboSNOVpL+bOVfwV2BG/pIhqdz4/HmTCqRbt23nwI3P
yftfyPW7hbs8//t9cQWk8vTImrv15xamjqx5UEji/wNR9sFK
           "]]},
         AspectRatio->Full,
         PlotRange->{Automatic, {0, 1}},
         PlotRangePadding->None], {0, 0}, {0, 0}, {0.6530612244897959, 1}],
       AspectRatio->NCache[
         Rational[6, 35], 0.17142857142857143`],
       Background->GrayLevel[1],
       Frame->True,
       FrameStyle->GrayLevel[0.75],
       FrameTicks->False,
       ImagePadding->None,
       PlotRange->{{0, 0.6530612244897959}, {0, 1}},
       PlotRangePadding->{
         Scaled[0.017142857142857144`], 
         Scaled[0.1]}], {180, -100}, ImageScaled[{0.5, 0.5}], {350, 60},
      Background->GrayLevel[0.9]]}, InsetBox[
     StyleBox[
      TemplateBox[{
       StyleBox[
        "\" | \"", FontSize -> 14, FontColor -> GrayLevel[0.75], StripOnInput -> 
         False],TemplateBox[{"\"0.65\"", "\" s\""}, "RowDefault"],
        TemplateBox[{"22050", "\" Hz\""}, "RowDefault"]},
       "RowWithSeparator"], "DialogStyle",
      StripOnInput->False], {355, -159}, Scaled[{1, 0}]], 
    TagBox[
     TooltipBox[
      TagBox[{
        {GrayLevel[0.9], RectangleBox[{5, -158}, {29, -135}]}, 
        {GrayLevel[0.3], 
         PolygonBox[
          NCache[{{13, -153}, {13, -140}, {21, Rational[-293, 2]}, {
            13, -153}}, {{13, -153}, {13, -140}, {21, -146.5}, {13, -153}}]]}, 
        {GrayLevel[0.5], 
         StyleBox[
          LineBox[{{5, -158}, {5, -135}, {29, -135}, {29, -158}, {5, -158}}],
          Antialiasing->False]}},
       EventHandlerTag[{"MouseClicked" :> FEPrivate`EmitSound[
           SampledSoundList[CompressedData["
1:eJzsvXtQTW/4N7wlCUlIQrGTQ845h2QhhLARQtgICbVLCGFRCGEj5PjdCCFs
CjllIeSUjRCSrRwiFEJOeX8+n/X94+udZ555Z96ZZ56Z1kxzzVr3ve7DdV/X
5zrc99o5jAscNMFEoVCU+p8/wUVRcpVcJVfJVXKVXCVXyVVylVwlV8lVcpVc
JVfJVXKVXCVXyVVylVwlV8lVcpVcJVfJVXKVXCVXyVVylVwlV8lVcpVcJVfJ
VXKVXCVXyVVylVwlV8lVcpVcJVfJVXKVXCVXyVVylVwlV8lVcpVcJVfJVXKV
XCVXyVVylVwlV8lVcpVcJVfJVXL9X305J/+fbe/v+s5u/70X/n8e39+X6q/+
vP/qz+uvcp+/yn3+Klf/Ve77V/n/7vL4/zjf6X/Vn/5Xf8Fy+f9qXfzd/lse
/L+Zv///Yv7/vu/1b39u/6V/r+O/z2cm/6dcDP/rvcj/lv+/Lq+/nof+W/+v
cTv/xYd/1329TMfJ/a+Ty2U5EDfL5d6kYkzyf+//LZflQtL9l4/Stn/b/5cP
MvX4637if9tRqGQ696/5Cf9tXxkn32vk9/fJVORzY6xcHvJXfzKfxE3/8plU
+OcvOVjr9t/+9svPZ8jzi/7v+hp3J/9nPuJWufxfOfpX3uaRSgly/YWkVsly
+VzSUEke5zK5XtB/5UFaL5cvkZ/vlOkKuZ2l8jgi/uWL23/mFXeB9F8+WV2S
319Jargk82UNqctFud8Y3vtdkech802TKo8nXm5HLlfo/pLHOfJ78jiMO+Xy
A/J7a+T+j8j3vjKNIhXkdQ8xkKrl9nNvkVrp+dwjRS4/KPNB7kfc9C9f5fkl
yM/l/sV/5Tjhv+1l3iPVyuPSHJPn8a8cZsh8PMfnGQ/+7Vfm2x7e686Qfn8m
t3eBNOMFn2uSSJu/kucrlxv3yP3Iei9cl9s9IY/nhDweuX9JbsdwnFSvl6lc
nvaa9K3MR+kTaYy8zpffyeM/K487X+5fnnfkZ9KCk3x++AOp731Sny+yHMty
oI6X5U4i9bhNqk2V23vJ94quktrdlecZLa/nebnd26S/TM6BKk/x/falu3Ae
V1i+9ydpwV2WRxvk9ZTnE/ZB7l/m261frO8k96N6xudRnI8YWor9pcpyYJUj
8y9LlpvDpPPkdo3y+uiySd0f83m8zPfG8nw7yHybLvNrv9zv12+ynL+Wx5Mm
r5Osb12/kLrI/HB5K5fL6zZHbsdD1nNpL8uj38rlcr1zP5L/M48H8njKfmN5
sjxeo9zOVLldUZ7f/BzyZ3VZ8EfMLk0+LZHbmfCR9bvJfLkty81JmSYWyvcV
uX4azkv0MGM7/+LFBVkffOX2n8v8kn6SbuQ8RNfyLDfKemdnznat5f57Ui7E
M2Z4LmywZnn8G5Zbyv0a2I94XV733gV87yPlTpxhwedzXrCfbJlPEW94HyDP
o0cptC9+L8t+bvBeUbOY9f3kdRjwMVnmkyw3sr5+oxyI5eRxOBtZ7pxIWrci
x1NH5ksnzlM01mK/1SqwP90PtnesgPS+kfV+yO26P8W9tN2K9Z2Je8JKK5b7
y/1KMv4Fyu/VqkTqdE1e799sv6bcj/IGn9+T5dVK1ocYBfs5YkLq/kvGCXld
rZ+ynmkm6V1ZH77IOLmtQO7vK+ktmX/1iuT1kGkfrrPiYW3y4xDlQxpRmePW
FrJeglw/tAKfT2V/kgPlQ2xTlfJSpzKo1IRUCK/O+umf+f45eV0d5ftp5iw3
l+XqOtdBzJPlwYn9idtkPt4rI/NFltd/cfWuzM8JsvwMK8K9ULoKx6Pneit8
uV7CqrqkP+3x3LiiAecxuQqe6xKU7G+XzO/r1Aupp/z8DeVbfFaD75lQjoQZ
9uTfo5q41/dyZr9xMi6+a8n3c3M5PjtHjm9Ubb7nXYP0V2O2+7ga2/3FfkUl
+ar45zvHdU3m2zHiuzCU41E4kl+q2NYsjyT+WRW3ZrvBTuy3K/khdWvK9h9y
vYSV8rrq5f4uyvajHuurXZ3k+VPfC1ZxnlJKdVBd2WYs71CH/S9rwverK1nv
Y332U8GR5ZZ5nE++jHuLZNy6R7mTTjVke3m1QK3ecB66CPJJUazgPHaSf7p+
jdhuCucjfeF8NW/asH7MZbSrDKEciN7UN7En5y24UZ4VDTkfsVEZthdgC6pc
RnlRyHpizOrC+cyuyfG97sh5nrYlPcB1l86wPal+Q77vwfriNPav7srxSW2I
M8YeHdhuGtfHuV4rvufTifW0VfFcG99GxpmXsj23IX9Cm/B5Ddpvo00zzieZ
49blO3NcdvI8zeR1qsJxSZF1ZT3gfAUfG9wbTrhy3G8a4XluLYHjSXDge1vb
sfxFcz4/3J7zOcl1V7gQZ9QDOB5hdwvcu5TuzveeUF+t7vA9xYdi4u1o8l/x
ibgkKdmeuIV8UNSU9WqGXM8vl/UqyPy2o31WT6M+qSc4cN4htIOGffI65VCP
xcqUV0Vn2U4NIF8VD7iuCr96rH+1GusPMuV8fcl33VnKt9GHfFK0Ir6rlrIf
YzW2b7QhDijPyuvYinzWxcnyvV62GwPJN9GU+qgeTTnXLSQfpCDOR92T6+Y8
kv2Imyj/qq/kp/itEmljeR529EN0AdRrxWnqk+Ipx6F0Ib+U5+qyvjvlTHO8
FZ5rWlAejYPdQT0yunE9O3A9BW1nrudN6q1iPPkiLaPcKVs3xr1TZYHtFbrg
ud6TuFLg1IfzSKGcqCzYnyG3LZ8byEfvUgMp94s5/7jDfVluJcuZ2o797WQ/
ioUtuF5u7E8b6sL612gPNWPast3tPblebTjOWCcV27ldH9S2niy3i+pxXOc7
8P2Eluy3jzzvAOKXczL7UTyhfogrOD6F7yPi9IOOMl/Yv6IS+ax4I/udb/hc
cub8pbPuLG9Hu6DJd2W/fsQLqRJxrWCM3I5oyvkkdeO65XL+0hYZLy5xXnGl
e3M+67tz/UI6cz13EO/85vXA86JJ1H+dXF7kSv7a5ao4vssj2d8xtv92iTfX
N8eD4zxC/fFWUH60S3qxf0u2L57guia5eaDel2qTQHPL9wdtmjkE5XZa1nOp
1p/v2VMfo1ZPQL2jdnxPu0Ze//rUc+cFXbmONyaBWpqM5f3tAZznSa5vUX+O
S7rDeRb2H0Z50A8BtR01lPO8THlRPOgKGjNmOOVjYUfQjMp90I5rNx/cRzxU
kzafwnVaEALqF0q+K9zoPxv6svznPS/yY+40vLenyWRQj3OU96k+o3nfjOPa
E8n5aMr5gA6aPB7Pr20gX4wbKW+ps9huQdNhoFWm+/F+0zi+H0R/wphDPUzf
PhTPzb96gkbmc719TcZQTi5T7opXkK9hdUZx3b9yHZWP2K+Fgu+t8QwD3ama
DnpssAbliXGcd/ngcXhuldEJNLQe5XfOcX/2d4o4lXtpFp4nt+Z7wjvqvd6C
8hUT7kX5rDUQtPa7ieTnYE/c12/Iccz5RHk5E0j5imzYm/1f9sX9gG7zqBff
KD8/r4ZSzny4nptDWe/adX/Q0IVc1505wRzHbK5v1OyJqO++MhD0wnyup9dB
Pj/yne2emjAf9MYD8F30f7MY7/v3EkEzTlDubbtxPCHL2W9uHucn1euH91fY
aahvzlM5zwaUB+uOlN+adSaw3SPTQL2GBuF5Qa1FoIlPvEG/buT6SOlq8mfi
ZNBh8vyey3rhdSWE4+7Ie70N8WDmPM6ndd+FoBv3cFy6POJh7E/yT/FmDOXM
pR/oklnsr6A37UxMzbnknxnWSxzcYSHKu+0nX1SVeqHc4gTn5zF+JPn1ejDu
mwaNor5eH0E5z6FeWp3hvOtbzsTz1jERoMY31H//qgHU56pc17rfqCcDqs8g
n86Q/+OPLgFVbxrE+dyajfL42uw36xb5f/8N39NIXVDP7S7XoVucL8vvYN6i
fY+leP6pXBj5rqTcZF8mn60dKTcfZ/uBqtu5od69OfNBn3XieM9dXQB+TTob
jnqlC9Ge0MJuDcobT2O9EUfZfvkKXO8Jsrzps4gT6lLtQFMjies6e44j05Xt
GjtRn3KVM6mn1yjfVr0DUL/OTs5jxJOpoEVzuA77J1OeIpZTj9NmUY6bOc9g
f5W5zjo7rk9MM+JK7lnKyfSGrKd6RX080ZLym/SY7Z+sw3VRTqLe/DDn+NIH
hoLP87atwPPkQ1h38UzwIq7LRpQrdp3BeokPfJfivbnWlOep+2fh+bg4EfdX
7pEfTiZc/yWZlF/nO8Q/d2/iVZxuJWjpy1xfzW/aa4844vm9wdPxvHsM16V4
wBzQt+ach0KLfIlYPWgl6ketpz6Z1IpE+ZeagaC2kZS/3Im0U9fKjMV4m39d
jPsJAyiHh3KI27EXaCeSC4hD4knqne4z8T+zLtdlxU3Khasn9d/tEPnRwpLt
BYvkY6c1HG/QNOC8KCqp/+OKMR/xRoVwjvc1x7nOTbYLOsqJ5jxxobUFx9Nn
HeVA8WQ53jcL5jysIrTk39y+XN+maE9KurcGz18kU96nL92I8u9tOE+bniw3
jKO/vH425et/DBPl+Rbn+TOP8qEIoX5JR4AbYpPGWEchvelaPI/vQ7uqes1x
maRDPv5nIhyXIZB+Vvfs2aBHV7FdJzVwXAivsBbtFhrBJ7HFbfa/xED7fNif
8rXoFuXK/sMC0POmcylfTbiOxdo5qNcyWNYDgf2Km+Evi5U3cB1+foafIK59
tozj6A+8FjcbV1OPcvm+ciPjj5Q06rFyOfFBYUG/LCSO8x5ZSNw03wW5EK81
oV50jJkH2j+S970UbL/lDK671oV4pYtm+9IX+t1XsrgeVguIn+uGob5YTUm5
GT4xCvTTGsrdlrXLKQ+Zst1vSFzW1aP91+norysGNEc7l84Bt8Sqi4hfESYY
v/RwygbUu1aT8macQ/t5X6Ae3rmO56J0WqRcWy9BucqbemKrAu6J3Xosw/Nu
DtTPiYHjUR56inqVeYh6/jEAuCeuWLMC70n30a5kGAh8Flc/xbgEyzeU82VV
Od4pttT3uA+0H3oDn3ttI17/yCDepAxm/5lzgNvi0uHUy6w2sB+iqivX43YM
5VWXR//BV0G91loA98V51yGP4nIr9CP99llPfY6FPZQO74pGuwXDKW9PKq+l
fPSEXRGTDrLfG8cpL+X0lNO4T8SRdrMoByFvgM/ixiLKS6ua9M8mluJ9s7Wk
BwL43so+xH+nUrAL4rIN9JfsKwNfpcnWGIc0LnIz3hvUBnyRLPI53tCv9Af3
1gT/FTbV6X9GXmSccUQfiftGTuS/0QR2R4yowH4sX9JuX7ShnB+tRb0s94by
02r8FDyv50j77yfxvsMA2pPcJpADcetQ4Ijo35Ty9OYSx5si27eRP9GftPDN
Bswz1494MWQO5SDkCP3uxA0c55T3QZCbpk84T6NJezwf3jca9O4Pyqdta8rt
wEeUlwkV2F+cP+2rthnlYIchGP0Vlue8zfOx7qKqA8YpnSzF9a7xiuNxtRyE
+7Nv1oGWLyDODN+2Ge/1GQB9FRsGU/7sJ69HefVQ4KL4tANx6lcX6lvOB+C+
onkz4mDQKIxX3DwKz6UTueRHPdUm0I/HaccH7GB7v9VsT7jAuEJ/n/6PxWfq
3xc911/hAPstLmm5GuVX52PeQraG8i7eZN6pdwMtyqVRtAtP6jCeKTg2GvcH
E8nfM/e5zmdS1qHdx0uJ+/Ub0P44dUW8Ij6qzPIcA/gifF1Mfn68S3/BejDi
S2PP0zs4/obQQ+G2Au8prh0kDpyfTHuZUYNx0OGblMvJ/tSro8W0n8tacZ3m
BFF+PWvT/04MI5871OA66/bQX5s5hngc0J44qO+LdsUHlTBP8YqIeUmPrLeg
PCOa/viHNtQfnySuR+JBxlNJs7iOtkvRj+hyl/gw14z8UlSk/DluJB7HvWCc
siuFftf09rQ3r2OBb2JGLtfn4hKMU+z1nu8ZhRF4fugi7cM4M/rN4mnmwaq8
J9+O5lHupf7E9Zw0jjstmuP9FUh5qJtOeyw8Z3yj/MJ7TV/4n+LCkeyn+WLE
K+LzMPp5m32IO22WQx/E9RWJ95fsWW57YDDGXUdNfTBP5LhmXiKetHaiPFkd
oLxWffUPnqeMgn8j2dsAFxTSR9pVvzzYG9EkNwL3t9vR7819xzh3yzrGU7py
tPuzJnC9X30hbiWa0P8Ys4v23vQy/QFNBvwj8bsN/Z6CYNr78dfp9/h2IZ4U
d0RcImzqwHU5dAN8l0ZZUF7fTyd+u65FHkFwNYc+iQtD6KfVeMF6rb9RPu47
Yh7i0kqryJ8azK9E/4J9Fk/uisLz6Bu0sweX055c6Mv6BX2JN6+0kDOxazTl
0dyD+hFwhvYvuT/kQPynOvRDvB3JeqKmKevPAh4oslZjvkL7kdTTzr6MI8t/
on5n5NPvaJDFcQVVoBzd20e925MF/13Y2Zo44FuW/o8iCvsZon44cFwc9ob+
4LJy4Lewttk21LMYCHlR9B4LvFN0q4Q8kRjci7jWPpjr2zgecizMv0C8am3N
dQ6T2O7vhsTHFg+Bv+LXc3x+PI38fvoZ8ik23EO56FOR8YXOmThxYwvnW6cq
/bI9Btg3Se9BeRykht0ThsZt5XubgDNi2FPKxdI4jEs4/Zzlrp8pr1Y3Sa3H
QQ4lcRT1xu7eNjz3GUp+Kh+uAk1O43zLt2K+zGsj5StqEv2M3g0WkE8dKB+2
vsz3NVsh++lV4D+L55eRP27Fcp5uPPMgv+PpZ0tfsD8m1FqyEeMpVwn8FQtP
kn+p6yk33bfRH9tmR7vaaz3juc+dOG+rXPQv1nWOwfyXXYYc6SYs3YnnU5pC
D3R+92Opxz+Ai6LWLQbvfzvLcXZ+BXyQWm6BXRdb2kOuxG+2XNdFBygPGXcY
h+h6IK8hzqzO9SwYyzzIMxPig2kA7c18BfReWnSLfsi7POCqsZ3zfrS7yhXt
qz1DON6k6ZSXlfOBu+J0DeXBN0LOe95nP5mmwEtpxnj4JeL78/ALxMZ9wE/J
6z3XuaMt39esR7wmXT5LvyXlDvNLZQcQn+qtoX9ukU//atsl8j3+LeRErJYN
f0oa7A75kgwi/aF3DtA7UToJXJXqbaXdsvhAXB2VRTz7smQr6OEq8KfE+XNp
V3J9kU8Qa28FvojqXcSXlUr6p95zmJcp3kOct5+4BfcNGsO/lIyviXP1VgNP
hY636Se5+zKPe/sycadpMPHoewLX5b4p1ynrI+RAmFgH81FftIOcKB69xbx0
nz7rUK/dVcijNO4Q9T8sk/GvmI24UxyfznWzDsC4hWESx7X5IfRBOtiE7czU
Qs+MLi67Ia8z7KHfyuzuu1DusZHyeK0c4naxtWIjn3ejnk1Nhp8hem4Drgkz
2mDcgjQIfBc0XqgvjPyMdZb6+XOdMlLod5T6IttLZ+Cg5HIWeiO+3Uy5SL+9
HTSoCLgv/toHuZK8LalvDrWxnsp1A3fg+UAr+lujw4ifNUTmKUKSINdCg2uY
t9GzGPMTxzyhnT7YFbgjKhbTT/vwg/Iw3YL5AGfrPXhumsn1fHeFeL3ZEvZB
ODiUuHFqONfj5mbGncP3sv6iCvQjNdUR94r3B/N57D3kb6STKtrJxFSOf+LS
XaBpV+FXS6tlP3xtpTmUqyuoJy14jHZ0lW7Rfyx9E8+FSbGQd9EphXZoeTHx
VXzcE+PbcYL4utUafoLk78p13doS7YulwjE/oZsX1yt5C/1PwwX6Q7PcoV9C
pSzq0fF45D+EMlVYv1kV+uu3jcA3ZXs95XjfaeTfdCMf7MZ7F5oA36WwBuR3
xBXG+UkfaL/nX6JeHHUBHggZX2lPnq+DnBjX+mA9xf6PoIei+Ib+RZIL8Wis
C+2V6MX9WK/v3EfxvkYcyD1Bu7HgHcdRdSn5ML4+5iNmCsvJhznE55438J7o
1UKH9wYnML5RfOJ5ieyRtAeuB5mnVF8hrs1+R7vWvB3trFVf4o71ReLdl37A
MzGlFu2BWyLtzcTFtJevx3GeKdOI7733rKaeVGbcOMQMfNc6Bx1BuViTcW5E
0T68f/UH/efGQcTDHbOIM/XOUb8MgYwTQipw/F02EO+Gj2PcecyB8jtoB3Hk
n9b0d879Znx24ydxZKR4gHLrgHuxaDbjr9xs5hkGZAFXdY83Y1zio+OYn9BY
JB/Tkpn//HCR+pvuxnFtHsi8z20l/b9G5SkH87qz3TcL6Q/usmd+5Z+1XB/V
Xfo9RWVof+aZUT4q0/8QvUIhh9IVm39Q3m7RJsjN/j2girFu8NuFh53ptzWN
ov3dFAt5FTZ50A7b0N8R2y8kniga4/yg6OXPuMH6I/WwSTb1qMkL+PPqce2I
w6VOM95uOYn6+yaF9vbGffLvlkrOxyYxXiloxX2iG/sR16p33MN8pXGm1L8Z
YcQj3ytcvzo3mJ+ttI/5sQ2fiZ9CPM+rJB9jueYG7Z2VI+tt/838hW8E+pU0
GrSrbuYAvolNDtCP6G+NfI5g2o643+/BLsr/IOSdpKDKrGcZBL4qO9vuRbu7
2xLnL1Wjv7G0HMpFgy9wT3F2GfW0xX3490LFePpjRxfS/1Z9w/61+LLFds47
Hv6gZJZGPyDcC+MQbDsAD4XqjlhnRf5jyL/4Kp3299Fe7guMKQN9MnbOpL51
fsb1u2K2E+VX+8POKBavB54KFQZz/WKaEL/mdKbftrw9n5snw59Xb/2F9REr
PmR8O7GI+d5vK5g/SXQdDuoyi+cBxtsTF2qVot7tDKL/o6hN/zcsgHn0kIrA
S/FcNPPzVgPY/okN3AeZPoj+Rl4y8ySrf5Lf7w4BR4Tls8jn7AWIS8W+esrL
rZu0T/crMH/fpTPqCS8iWV/bnPis7Yx9HmllVeCC2KAh81x23YFj6pWtybcq
7owneonkf4wz/ZDjBuiPdPY3+6vqwLzQnATIh8KvGvBffaw1+CntsKM8Hk8l
v7+I1ItefsBTxYJi5t16OBJHjloGcT2qMq594yvvy3ZinsLZk3npADXjCOVz
5hV2vqS/ti+H9rAwhuvR8jzjzNWn2H7Dz8z3NuoE+RMnBGMe6uSV9C9W7+Z6
vPwOP0GKdoAfoVg8Enis3qIifwxnuJ/nIHCdT24lvk65CLwQ+8xAv0pxNf2C
keNRT9lvBP20GB/GM01taG/OzkA8q7YtzfYr2cGOqdeNoN3dWgZ8UOe83M1x
ezLvvjyb84mXaH++dmH8cd2BdlTnhnM3QnEg8SyvB/OHsUn0r+9bwC/Q1V7F
edr5Ei+X1GV+8NMG5kEqtGP++uJP2rcizzhQ9+t8Xv48/A+xnivtQFB54sDW
invwfL898N643i8W/U3dQb38fBH2S/xV/xDG5VcOeKpMyME8FXX3HIDe/gzF
OjlXMxzF8wa7kA9T1r9CP2/mN/L5QCHWVYiWx5faCPJotBPY3uvZ9GtrdjqI
ctsmmJ84I4d2NqgO9eXDNcxDeVdiO0NnE8+O2xAnrdXMM2SL2I8Tsz9B3nQV
G8BOSq+YDxC1C/ehvrI68hbCohUYrxhuRvvZVAt5Foo+YP7ClBEYh/bya8zT
+Psx5EXqqQYflDYfaCdN1kPexe550E+1cgj8NelUO8iP8G0P8bDTMKyXtDOC
/XUS6Z8Ff+K6OfkgnyloJ9FfqpQLHDI2SmN8kfmQ/rGdE+O6oQ0YR6aOpD/p
2ID2u9FH4vm9QZBXXQMPjFf3TUU/f0g3jFt4miz7vXb0I6YX8H3Ttehfsh9E
u/8rknFpkzz6T6PcmP9qF057/Xg849TQZPrJPadRb/2XMc+xuZC45V8R51VE
hY+cJ77B/NHP4dyfcTrAcwRpdfGeONCRcU0dF/oJY/+hn+JQC/kJocV4+lPX
dcy7+JSTz9sQHxS/WxFnvz5jvmPmC+6rZzMuVbRw577o9RHUPwcL+l2WNvRj
pS7Yf5aupHG8W4NoT6SDyHeICwZCzoQOx+gPPhoCORMUx1l/1kvwS/odQ/tt
uID5K3270K6+SaGclxsiy0EC/RV1APNkwjLyd3x55llaj2Vc3cWdeNIgA/kY
yfkU8VwRjnNHotdIlluNwr7T/9hx+mOvQ9GOeN2NedOMPZSflt24LzSvr5wH
EOivpJalnc8sTz94SRPK2bzlrLcnEvt60u/LsHtS8+FYJ+HtEOKmYg3OX4qu
RurZoyjGGWUaQw5F/82IQ6RBP6HXupc29CenDyAeJQxnHHXlCvkXKBA382OY
B+njwPMUPg7gq/BMT/ld6Qu+ijPZjxSygvPXxMLeCStm0H9rvJX+mp2Bdtei
JfUqvwXlO3UscEWcnUA/48Yt6lXbOdz/mKZl/FA0F/gvnnYh7r8cSXus/eFO
vaffqygSuM5rPtDeej4DbhiVpcEfdbaCfo9/Fcq180v6ISF5zJOc8QY+iW+S
Ia9SgbmM2z3o76baEk+vXYU/qBi9iH5plVqMw2JeM175uhPzFydtoX8zMw95
bCn3LOW+Wzf6BbadaUe77Ia8SkVD6X9mF9PfbN+SfvImm4Ool9yP+Pq+LfHY
vRnmKzSrAz5Jy22An8LxDsT1/K6wRwrXe/RPBoyG/hgveCOfJln/gzhFrBOJ
dRdc/JkXLZ3PvG+9JOLO2d2Ui4YTmO+sakk5ncQ4REpIJp9eOiHelqquAO4J
kY7E4ex23C/w20K/Y/012lmhAnFndDfixqaa9OdmT0ccJU1OZzx0hTgojB1M
v/nyJ8ir2KKI+NB3HuUmag3zntWmMh953Il22dgE5y3EhTbEjb23mK9x7cy4
yvIs5d98FvRFUdeK/JvuzHWqkQ99EF6U5jxjyjEPl7yc+uY0h/s2ikY87/qr
jXxuzpHtlA9inkazkfx/O59ymHaZ++EjPlAOovIpv/cXUB5T85l/ShgDfTP+
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
9OMb1Pu5VQHqqawN3EmcUQntxCUzD6xbeIF5jnFL6D8ED6d+zz4I/YycdA/4
oHlVHeP1Ns0Hfhgtd4JqK/TBfMw7OBA/te/wnler72hHEzaKeZOtc9Gf5rQt
45kXFUDV2SPw/HnFxsyriMl4L/RbDtpxCqxBPB7njfYzwp0Yf12IIV8tp6P/
oo654L/L7qHAEWPOBeZrr+dwX/t6Ec+h7O4F/zT3Vxj0Q0qex/2Mm2GQB7+I
SMhh0Qwn0qaPID+KybTjYu/KqC+eSoH8WZ0eDKoLPgm585gTxHambYZexy05
DX3XF+mBJypbc+BJyNRl8DfSezYGXngMyQeNK7gPmlnrGPDGtctU4MjWAUOA
I+n6Yvglnp4/gFNtNl4AjsRsTAXueW/pDRzRN0wAjjgZ9jKeabIWtMDJk3nd
02egdwVVptIfMeuMefqVzaE+7TwEfXD6kcu4Z35d5rvXaqDnwkpbnksZlgn/
Ql3bjecBlgrwTxSd5xHHF7fCOiie+1/gOnFd1DUOoVwYp4OfIgTn8/vbCXdx
bkyzoznyL853K6Pf0Ed3mK9NCGD+Z2E81sPDvwLGr9lvyX2o0V7EES97zEf4
GIb5JHUMZFz4sB9wSbmyDWiqwRLPk9otYv53uwXW12rkaLSvyxXRTuikkVhX
nWo748xV9txv378H9WzbP8P7woSDGKcurgfiON376sTdbQn8vfKW+Tw3pe+D
eTu3uQY+hAZW4f7PFAP3eb1awP+PPJwBqr5wkPY73o7y/v0e/ZaPq6AfSb1H
ww4XrdsK/fGKnEd73XYa/fdqzPvGvytHHKklAg/CHp0FPqiXzQVu+P54ABp2
zA54Uu+CK6jU9y2ex9q1AHW1qYX3nLqmob2irkugz/WEIPTj/tEH/cZ8sWIe
6MAEjC81xZL7LMMWMH+yzhFUaFGf+1zzGzPO2+iBeUSYTOI+1xR3tFf05Rbj
FI0C/RQ4nGDcNyKP8eBQ+heqvh/QTqj5PLRrqDCFuPtoEf0it7HAidRRzYHf
BT1qQz5VyyrBzhl6XIWdU4Qt5/m5NXshlwWLgrCu4ksXyk1iHciHdCeW+YNz
DtCvIksv6KGyrR60yCEOz1W35qCe34o7kJuiNTaUtww73Cfp4yHHUbPGM+6Y
MwX6nvhiEPS/6VwN8yc+s4EPZ+5fB16E2rvD/4gvsgCN+qhAuffJAdjniW57
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
DvK+NumnsSNWzcWP2oXzumbxgsPh9Z1k/VWu1pL5Ye7YjryLO4+xAyp7ZZ1N
jR4uvFJZ25B9ApqNg2/8s5J+qN8vgLjB2ccEv6M+JCCnZMn58Ixxghf2CQOk
v63cbsl75Ce+IB4kcwv8ZvcRafeM6UN4z7boR/n9Kkh7OzfbL/+XstpXnue2
4JtIp8AOIi0n3ZB+sLpXyLjy7Yo93WM28SThralP0mWl5MlpI74LXii754hd
KLxve+KbBmbLvKj/rRlxXCeIuwgM2SjHziMZ/zaPb2JX1b2R+zXWw4nDb2kq
vNBE811+D/87hTj0WRNkfoeeSxS95GCrX8b/yS5xDq+k/b17Zf9PZjVfJsfj
Mnu8kHlbd8BTGf+RpoIT/u2Im0i1xQ9rtWQwvDLkkkjFj/wY2+rYOa2n3QHX
iuA7Xvp8+f/tVtVFuu7KERxSN7CW6wwltsp8t2pWHj/tZDv8uX9CpX3sX5iy
jq2ogf9791P5TstxpfDflPNkfN7KlmOTfWXw71x+i/3oR0lpv9zImcT3zfkr
fETJiiVfavIAGRfWQxSZJ6EfGzOO9p6V+WMTZi/9bWPuLfPPyyOTPJGyq7Cz
Re1iPa+dKPWq1e2Xkd8+vgZ1uUZcpM6NPfwm/bRB7Bq5fVoKPrR59U30FNv3
pUQ2HV9Szke3Mxf5u99M4SeWe4IF17a/CGS+97IWfPC9eFbGs7HdfvJSsrqJ
PqF4WaG/rOmFXWbLO3l/26rj5Dt/N/GV5yi/kuQ7E0+NFxx1cCIe1/q6j/As
+/B5xd99gjjX+AjiFp6elXxfh0j261Pdni347DC4iPHp2ViOrdxjmPe3HSWe
TLe9i/AK3Zon+FvHHBeczXdLgB90Lkk9Te038u9rv6a+39RbggvmJTdL/2vO
NRTcsGy4Rfo/dMNiGR9maWfl/3Qjk4R/5JZ/Lfhhsr6z8Iz0SFf5bqtFJaWf
Q0v6kcdUo1DOZ9yqIt+r8d4CX/xEHoDxqJW0s2pinIyXqL2tBTf8q93CPhQZ
j77X67CMl3MdiWMuWv6e/IcyISJLd39EnsWY2+i9e2diF/sXCm586ivjSCl9
ReqRG4qeUGfnc7zogdoyJ2Te5x/xEb6W2vwteXtxASLNhl0SHmK+L0z0ddXe
XoK3+rwimU+6q3nYQWyWyrwYWjAY+2GPYFnXY2MvCa/IfRok8zfq0gbBA8X0
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
KdNOyjg+/iqefMbO42W81tjjKvcntqggOPjNslB406hZ6SLtG9yQ/xn60lHG
v86EvEFN4yjWZ8dy1JkzvhW8Kn2x+PqvrQVPtZM8BL+a3tor7z33yAvBXf2h
BfK/Vr6lZf6ok08TXzNskrRP7KSF1K2cYiP6jK/TLfRM7WeZP1Y7eoj+E/XE
VeZZqEovUtNuHHqR9zv8WHtXi7/a8Hc++0t7niHPrk0Z6Z8U6w2id+Seb0Jc
WZMIxsvEAOIOThAPpa5iITK/2iTqlHb1lHFi2SiNPJqJq6m3U+2zjFNtyfMy
LopChjPOOs8kPjbvtOiV2j5q6knmlA+X72p1TPi01UJz+b7UQ12RYeCG5m4W
9V9jqVtlsBwl65hJ6BX41t9bxNPk1CYeT2eKHr2olfSbzawz+A1L7ZH+0r7q
K8e5kw8Tp2VaDhxafVzGo9kRJ9ErrcY2xo8WsRCe5rdO1ivfKlPxJxgbEu9k
PlXypXVDvcWurn/emXqWp6vLd5tZnCIOp1o89le/dtJ++a9j5dh8x3mRvjnY
Ze37GbHTVTolODY3VAde3LlCPMzhcuDMIuzW2fXGkn+4Fl7lPNtZpM36VLk+
MXiYSKfST8l/bHdb5O8zxLVEPYwBz1qWEZwyJpBH4HyM+g4Oc9aix1kvkvlZ
dOaG9LdZQFvyIvqPk/626aOWcZThPAJ/dnkj8Xa7zmGX3DwUnEg7R3yHe2X5
bod+E2mf5i+wL3R8KXqVPvoNdf/uFcm6mR9QBvvcbw/4aI1b8jyH9vjfU27X
kOfqsiPIT3e5JvzVYU83eT8T1yny3g6JSwR3w+duh/9NRK90ODWNfI3e7amr
uWQOeLr+EPUuX3rKc3JfP6MfKz7E/xnQUdZxo2mGjGNd+TCZf4Zfp9mXQ9+K
+zr3Jp55Pv2rVJki9bMN5e6TnzTxheCCqvpTGZ9eukOCk7pzE/HDJrzBjlzl
klxvO/UD+HHIUu7TV02T8W7WYKZI20PPBG+a+lOHId2EvGrN8Ofi189ugV64
Xe8pz7E5cURk0QBrOe82vppcZ3ohjvp2vWbIsWWLJPItV90F927FC96tsf4k
56PXPQT/9g8U3PPxeAF+NidOKPXYMPzSdzMFT3MnxhGX67ED3nLZh/Wh8TPi
Cfa7yjx3mPlL5qW2ZTfqvB1h32CzoN7wobFJ2E2aJck4Ce+2VM6HT42j3nGl
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
V93JZ6hZRd431WOK9KvS0pF4brdN7K+8ejXx819m0s/149iXMO+qxLcqpyNl
PxRjiX7s05trj907/oLwM4djTYmbKPQjj3VslvSnxr+sSLW/uVyvrp4r/adW
dotfRclMlP7Wr89iX6gPAxkX7t2K9aO7xfuCnqTezcnZ7M8SUwE9JKit5LWo
vWOYd7emEi/QsSL7pNa7LvisWTGEvADDR4nLMEZ0Q+oyqQ86NxO7Wqfhgrup
z6+T154+hroM9gPk2MpbwS5XP4nfO6qoNxSUx+/rFnE8rKHge2LUOMHjosWR
2Fd2KOTDV5nD+nZwrfSLakEp8S+orTzIc9rfWex+vifRg6PW95frbVp0k/41
s1iHPnHcWcatMr0y+2RO+bhAvv/EHolX0RiGED/6cYG0o+HnEvJyswLYR6vj
fQ9pvy/Pxb6hd86RfjB3p56Mvix1X3Wj7MVvFOXxiTqsd5tg1ytgPw0ldyx1
G953EhwNmeYgOK/J/E588d8k/BWlTlNnwNRa/BHJz2NkfQg0zRc8DtkxRI4t
x32lnoWnCXUs/E/L/T4P2McoqmEjeX7UgVS5zmQG/q1Ys7bE20ZQNyslcQl2
iQ5Rcr8h4B9+4n4lhf/5TgqlnvW6CdSliliBHv489izjnd/1RwrwB49ZL+NT
o5qEP+dmeeroz40We5DOJ439uaMmsO9ez25ybNBlwRc6rheeom8WTBy5vryM
G8N4cNjqzyjqKEzoJHpV/lTsHTbDnzJeNq1CVgKv9WvjZH6nPplNfHphExkX
qqre1C07NRR7Sd4T6nX2HijP9z0wV643pvcQe1f4OHBN8XSScafxrU8cpfYI
728+FJw4oPAdwzXk9Xq+5nfDWFknDG5f0e9uhrJPbcET9rnNmA6/CpvJviZ3
4sCZQUvYB3TeJPb/LGkWLDJULfEBWo9IGdfGja/hc1Fq4ny0xH+rf3cQPmb4
MUl+N6zSwgvrO8r8Vi1rI/NJ+dFRvif1wWnBP2NMK/wyFvvRM3SPpT9UuxXs
29Ony/2pF77Kec1nU/w53t+wj795JfPON3g09+Vcp25q5AD5XW/6Fb564Rr7
Zb4zyPhQ3LLFnmj4foP65z3WwcOSvpMPv/Qu++FeaE1ewbmp4F21K+z33XeN
xNtreztIHo+q0XbiO/7rTX7stO/sN3OuOvvNmE0THNU9dce/8+ayjGPVi/2M
+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
6NFR2pvCwRvTrKYX/h/EWAkJ
            "], 22050], "Preemptive"], PassEventsDown -> Automatic, 
         PassEventsUp -> True}]],
      DynamicBox[
       ToBoxes[
        FEPrivate`FrontEndResource["FEStrings", "playText"], StandardForm]]],
     Annotation[#, 
      Dynamic[
       FEPrivate`FrontEndResource["FEStrings", "playText"]], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[{
        {GrayLevel[0.9], RectangleBox[{34, -158}, {58, -135}]}, 
        {GrayLevel[0.3], RectangleBox[{42, -150}, {50, -143}]}, 
        {GrayLevel[0.5], 
         StyleBox[
          LineBox[{{34, -158}, {34, -135}, {58, -135}, {58, -158}, {
           34, -158}}],
          Antialiasing->False]}},
       EventHandlerTag[{"MouseClicked" :> FEPrivate`EmitSound[
           SampledSoundList[{{0.}}, 8000], "Preemptive"], PassEventsDown -> 
         Automatic, PassEventsUp -> True}]],
      DynamicBox[
       ToBoxes[
        FEPrivate`FrontEndResource["FEStrings", "stopText"], StandardForm]]],
     Annotation[#, 
      Dynamic[
       FEPrivate`FrontEndResource["FEStrings", "stopText"]], "Tooltip"]& ], 
    {GrayLevel[0.75], 
     StyleBox[LineBox[{{0, 0}, {360, 0}, {360, -164}, {0, -164}, {0, 0}}],
      Antialiasing->False]}},
   ContentSelectable->False,
   ImageSize->250,
   PlotRange->{{0, 360}, {-164, 0}},
   PlotRangePadding->1],
  Sound[
   SampledSoundList[CompressedData["
1:eJzsvXtQTW/4N7wlCUlIQrGTQ845h2QhhLARQtgICbVLCGFRCGEj5PjdCCFs
CjllIeSUjRCSrRwiFEJOeX8+n/X94+udZ555Z96ZZ56Z1kxzzVr3ve7DdV/X
5zrc99o5jAscNMFEoVCU+p8/wUVRcpVcJVfJVXKVXCVXyVVylVwlV8lVcpVc
JVfJVXKVXCVXyVVylVwlV8lVcpVcJVfJVXKVXCVXyVVylVwlV8lVcpVcJVfJ
VXKVXCVXyVVylVwlV8lVcpVcJVfJVXKVXCVXyVVylVwlV8lVcpVcJVfJVXKV
XCVXyVVylVwlV8lVcpVcJVfJVXL9X305J/+fbe/v+s5u/70X/n8e39+X6q/+
vP/qz+uvcp+/yn3+Klf/Ve77V/n/7vL4/zjf6X/Vn/5Xf8Fy+f9qXfzd/lse
/L+Zv///Yv7/vu/1b39u/6V/r+O/z2cm/6dcDP/rvcj/lv+/Lq+/nof+W/+v
cTv/xYd/1329TMfJ/a+Ty2U5EDfL5d6kYkzyf+//LZflQtL9l4/Stn/b/5cP
MvX4637if9tRqGQ696/5Cf9tXxkn32vk9/fJVORzY6xcHvJXfzKfxE3/8plU
+OcvOVjr9t/+9svPZ8jzi/7v+hp3J/9nPuJWufxfOfpX3uaRSgly/YWkVsly
+VzSUEke5zK5XtB/5UFaL5cvkZ/vlOkKuZ2l8jgi/uWL23/mFXeB9F8+WV2S
319Jargk82UNqctFud8Y3vtdkech802TKo8nXm5HLlfo/pLHOfJ78jiMO+Xy
A/J7a+T+j8j3vjKNIhXkdQ8xkKrl9nNvkVrp+dwjRS4/KPNB7kfc9C9f5fkl
yM/l/sV/5Tjhv+1l3iPVyuPSHJPn8a8cZsh8PMfnGQ/+7Vfm2x7e686Qfn8m
t3eBNOMFn2uSSJu/kucrlxv3yP3Iei9cl9s9IY/nhDweuX9JbsdwnFSvl6lc
nvaa9K3MR+kTaYy8zpffyeM/K487X+5fnnfkZ9KCk3x++AOp731Sny+yHMty
oI6X5U4i9bhNqk2V23vJ94quktrdlecZLa/nebnd26S/TM6BKk/x/falu3Ae
V1i+9ydpwV2WRxvk9ZTnE/ZB7l/m261frO8k96N6xudRnI8YWor9pcpyYJUj
8y9LlpvDpPPkdo3y+uiySd0f83m8zPfG8nw7yHybLvNrv9zv12+ynL+Wx5Mm
r5Osb12/kLrI/HB5K5fL6zZHbsdD1nNpL8uj38rlcr1zP5L/M48H8njKfmN5
sjxeo9zOVLldUZ7f/BzyZ3VZ8EfMLk0+LZHbmfCR9bvJfLkty81JmSYWyvcV
uX4azkv0MGM7/+LFBVkffOX2n8v8kn6SbuQ8RNfyLDfKemdnznat5f57Ui7E
M2Z4LmywZnn8G5Zbyv0a2I94XV733gV87yPlTpxhwedzXrCfbJlPEW94HyDP
o0cptC9+L8t+bvBeUbOY9f3kdRjwMVnmkyw3sr5+oxyI5eRxOBtZ7pxIWrci
x1NH5ksnzlM01mK/1SqwP90PtnesgPS+kfV+yO26P8W9tN2K9Z2Je8JKK5b7
y/1KMv4Fyu/VqkTqdE1e799sv6bcj/IGn9+T5dVK1ocYBfs5YkLq/kvGCXld
rZ+ynmkm6V1ZH77IOLmtQO7vK+ktmX/1iuT1kGkfrrPiYW3y4xDlQxpRmePW
FrJeglw/tAKfT2V/kgPlQ2xTlfJSpzKo1IRUCK/O+umf+f45eV0d5ftp5iw3
l+XqOtdBzJPlwYn9idtkPt4rI/NFltd/cfWuzM8JsvwMK8K9ULoKx6Pneit8
uV7CqrqkP+3x3LiiAecxuQqe6xKU7G+XzO/r1Aupp/z8DeVbfFaD75lQjoQZ
9uTfo5q41/dyZr9xMi6+a8n3c3M5PjtHjm9Ubb7nXYP0V2O2+7ga2/3FfkUl
+ar45zvHdU3m2zHiuzCU41E4kl+q2NYsjyT+WRW3ZrvBTuy3K/khdWvK9h9y
vYSV8rrq5f4uyvajHuurXZ3k+VPfC1ZxnlJKdVBd2WYs71CH/S9rwverK1nv
Y332U8GR5ZZ5nE++jHuLZNy6R7mTTjVke3m1QK3ecB66CPJJUazgPHaSf7p+
jdhuCucjfeF8NW/asH7MZbSrDKEciN7UN7En5y24UZ4VDTkfsVEZthdgC6pc
RnlRyHpizOrC+cyuyfG97sh5nrYlPcB1l86wPal+Q77vwfriNPav7srxSW2I
M8YeHdhuGtfHuV4rvufTifW0VfFcG99GxpmXsj23IX9Cm/B5Ddpvo00zzieZ
49blO3NcdvI8zeR1qsJxSZF1ZT3gfAUfG9wbTrhy3G8a4XluLYHjSXDge1vb
sfxFcz4/3J7zOcl1V7gQZ9QDOB5hdwvcu5TuzveeUF+t7vA9xYdi4u1o8l/x
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
2ID2u9FH4vm9QZBXXQMPjFf3TUU/f0g3jFt4miz7vXb0I6YX8H3Ttehfsh9E
u/8rknFpkzz6T6PcmP9qF057/Xg849TQZPrJPadRb/2XMc+xuZC45V8R51VE
hY+cJ77B/NHP4dyfcTrAcwRpdfGeONCRcU0dF/oJY/+hn+JQC/kJocV4+lPX
dcy7+JSTz9sQHxS/WxFnvz5jvmPmC+6rZzMuVbRw577o9RHUPwcL+l2WNvRj
pS7Yf5aupHG8W4NoT6SDyHeICwZCzoQOx+gPPhoCORMUx1l/1kvwS/odQ/tt
uID5K3270K6+SaGclxsiy0EC/RV1APNkwjLyd3x55llaj2Vc3cWdeNIgA/kY
yfkU8VwRjnNHotdIlluNwr7T/9hx+mOvQ9GOeN2NedOMPZSflt24LzSvr5wH
EOivpJalnc8sTz94SRPK2bzlrLcnEvt60u/LsHtS8+FYJ+HtEOKmYg3OX4qu
RurZoyjGGWUaQw5F/82IQ6RBP6HXupc29CenDyAeJQxnHHXlCvkXKBA382OY
B+njwPMUPg7gq/BMT/ld6Qu+ijPZjxSygvPXxMLeCStm0H9rvJX+mp2Bdtei
JfUqvwXlO3UscEWcnUA/48Yt6lXbOdz/mKZl/FA0F/gvnnYh7r8cSXus/eFO
vaffqygSuM5rPtDeej4DbhiVpcEfdbaCfo9/Fcq180v6ISF5zJOc8QY+iW+S
Ia9SgbmM2z3o76baEk+vXYU/qBi9iH5plVqMw2JeM175uhPzFydtoX8zMw95
bCn3LOW+Wzf6BbadaUe77Ia8SkVD6X9mF9PfbN+SfvImm4Ool9yP+Pq+LfHY
vRnmKzSrAz5Jy22An8LxDsT1/K6wRwrXe/RPBoyG/hgveCOfJln/gzhFrBOJ
dRdc/JkXLZ3PvG+9JOLO2d2Ui4YTmO+sakk5ncQ4REpIJp9eOiHelqquAO4J
kY7E4ex23C/w20K/Y/012lmhAnFndDfixqaa9OdmT0ccJU1OZzx0hTgojB1M
v/nyJ8ir2KKI+NB3HuUmag3zntWmMh953Il22dgE5y3EhTbEjb23mK9x7cy4
yvIs5d98FvRFUdeK/JvuzHWqkQ99EF6U5jxjyjEPl7yc+uY0h/s2ikY87/qr
jXxuzpHtlA9inkazkfx/O59ymHaZ++EjPlAOovIpv/cXUB5T85l/ShgDfTP+
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
9OMb1Pu5VQHqqawN3EmcUQntxCUzD6xbeIF5jnFL6D8ED6d+zz4I/YycdA/4
oHlVHeP1Ns0Hfhgtd4JqK/TBfMw7OBA/te/wnler72hHEzaKeZOtc9Gf5rQt
45kXFUDV2SPw/HnFxsyriMl4L/RbDtpxCqxBPB7njfYzwp0Yf12IIV8tp6P/
oo654L/L7qHAEWPOBeZrr+dwX/t6Ec+h7O4F/zT3Vxj0Q0qex/2Mm2GQB7+I
SMhh0Qwn0qaPID+KybTjYu/KqC+eSoH8WZ0eDKoLPgm585gTxHambYZexy05
DX3XF+mBJypbc+BJyNRl8DfSezYGXngMyQeNK7gPmlnrGPDGtctU4MjWAUOA
I+n6Yvglnp4/gFNtNl4AjsRsTAXueW/pDRzRN0wAjjgZ9jKeabIWtMDJk3nd
02egdwVVptIfMeuMefqVzaE+7TwEfXD6kcu4Z35d5rvXaqDnwkpbnksZlgn/
Ql3bjecBlgrwTxSd5xHHF7fCOiie+1/gOnFd1DUOoVwYp4OfIgTn8/vbCXdx
bkyzoznyL853K6Pf0Ed3mK9NCGD+Z2E81sPDvwLGr9lvyX2o0V7EES97zEf4
GIb5JHUMZFz4sB9wSbmyDWiqwRLPk9otYv53uwXW12rkaLSvyxXRTuikkVhX
nWo748xV9txv378H9WzbP8P7woSDGKcurgfiON376sTdbQn8vfKW+Tw3pe+D
eTu3uQY+hAZW4f7PFAP3eb1awP+PPJwBqr5wkPY73o7y/v0e/ZaPq6AfSb1H
ww4XrdsK/fGKnEd73XYa/fdqzPvGvytHHKklAg/CHp0FPqiXzQVu+P54ABp2
zA54Uu+CK6jU9y2ex9q1AHW1qYX3nLqmob2irkugz/WEIPTj/tEH/cZ8sWIe
6MAEjC81xZL7LMMWMH+yzhFUaFGf+1zzGzPO2+iBeUSYTOI+1xR3tFf05Rbj
FI0C/RQ4nGDcNyKP8eBQ+heqvh/QTqj5PLRrqDCFuPtoEf0it7HAidRRzYHf
BT1qQz5VyyrBzhl6XIWdU4Qt5/m5NXshlwWLgrCu4ksXyk1iHciHdCeW+YNz
DtCvIksv6KGyrR60yCEOz1W35qCe34o7kJuiNTaUtww73Cfp4yHHUbPGM+6Y
MwX6nvhiEPS/6VwN8yc+s4EPZ+5fB16E2rvD/4gvsgCN+qhAuffJAdjniW57
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
DvK+NumnsSNWzcWP2oXzumbxgsPh9Z1k/VWu1pL5Ye7YjryLO4+xAyp7ZZ1N
jR4uvFJZ25B9ApqNg2/8s5J+qN8vgLjB2ccEv6M+JCCnZMn58Ixxghf2CQOk
v63cbsl75Ce+IB4kcwv8ZvcRafeM6UN4z7boR/n9Kkh7OzfbL/+XstpXnue2
4JtIp8AOIi0n3ZB+sLpXyLjy7Yo93WM28SThralP0mWl5MlpI74LXii754hd
KLxve+KbBmbLvKj/rRlxXCeIuwgM2SjHziMZ/zaPb2JX1b2R+zXWw4nDb2kq
vNBE811+D/87hTj0WRNkfoeeSxS95GCrX8b/yS5xDq+k/b17Zf9PZjVfJsfj
Mnu8kHlbd8BTGf+RpoIT/u2Im0i1xQ9rtWQwvDLkkkjFj/wY2+rYOa2n3QHX
iuA7Xvp8+f/tVtVFuu7KERxSN7CW6wwltsp8t2pWHj/tZDv8uX9CpX3sX5iy
jq2ogf9791P5TstxpfDflPNkfN7KlmOTfWXw71x+i/3oR0lpv9zImcT3zfkr
fETJiiVfavIAGRfWQxSZJ6EfGzOO9p6V+WMTZi/9bWPuLfPPyyOTPJGyq7Cz
Re1iPa+dKPWq1e2Xkd8+vgZ1uUZcpM6NPfwm/bRB7Bq5fVoKPrR59U30FNv3
pUQ2HV9Szke3Mxf5u99M4SeWe4IF17a/CGS+97IWfPC9eFbGs7HdfvJSsrqJ
PqF4WaG/rOmFXWbLO3l/26rj5Dt/N/GV5yi/kuQ7E0+NFxx1cCIe1/q6j/As
+/B5xd99gjjX+AjiFp6elXxfh0j261Pdni347DC4iPHp2ViOrdxjmPe3HSWe
TLe9i/AK3Zon+FvHHBeczXdLgB90Lkk9Te038u9rv6a+39RbggvmJTdL/2vO
NRTcsGy4Rfo/dMNiGR9maWfl/3Qjk4R/5JZ/Lfhhsr6z8Iz0SFf5bqtFJaWf
Q0v6kcdUo1DOZ9yqIt+r8d4CX/xEHoDxqJW0s2pinIyXqL2tBTf8q93CPhQZ
j77X67CMl3MdiWMuWv6e/IcyISJLd39EnsWY2+i9e2diF/sXCm586ivjSCl9
ReqRG4qeUGfnc7zogdoyJ2Te5x/xEb6W2vwteXtxASLNhl0SHmK+L0z0ddXe
XoK3+rwimU+6q3nYQWyWyrwYWjAY+2GPYFnXY2MvCa/IfRok8zfq0gbBA8X0
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
KdNOyjg+/iqefMbO42W81tjjKvcntqggOPjNslB406hZ6SLtG9yQ/xn60lHG
v86EvEFN4yjWZ8dy1JkzvhW8Kn2x+PqvrQVPtZM8BL+a3tor7z33yAvBXf2h
BfK/Vr6lZf6ok08TXzNskrRP7KSF1K2cYiP6jK/TLfRM7WeZP1Y7eoj+E/XE
VeZZqEovUtNuHHqR9zv8WHtXi7/a8Hc++0t7niHPrk0Z6Z8U6w2id+Seb0Jc
WZMIxsvEAOIOThAPpa5iITK/2iTqlHb1lHFi2SiNPJqJq6m3U+2zjFNtyfMy
LopChjPOOs8kPjbvtOiV2j5q6knmlA+X72p1TPi01UJz+b7UQ12RYeCG5m4W
9V9jqVtlsBwl65hJ6BX41t9bxNPk1CYeT2eKHr2olfSbzawz+A1L7ZH+0r7q
K8e5kw8Tp2VaDhxafVzGo9kRJ9ErrcY2xo8WsRCe5rdO1ivfKlPxJxgbEu9k
PlXypXVDvcWurn/emXqWp6vLd5tZnCIOp1o89le/dtJ++a9j5dh8x3mRvjnY
Ze37GbHTVTolODY3VAde3LlCPMzhcuDMIuzW2fXGkn+4Fl7lPNtZpM36VLk+
MXiYSKfST8l/bHdb5O8zxLVEPYwBz1qWEZwyJpBH4HyM+g4Oc9aix1kvkvlZ
dOaG9LdZQFvyIvqPk/626aOWcZThPAJ/dnkj8Xa7zmGX3DwUnEg7R3yHe2X5
bod+E2mf5i+wL3R8KXqVPvoNdf/uFcm6mR9QBvvcbw/4aI1b8jyH9vjfU27X
kOfqsiPIT3e5JvzVYU83eT8T1yny3g6JSwR3w+duh/9NRK90ODWNfI3e7amr
uWQOeLr+EPUuX3rKc3JfP6MfKz7E/xnQUdZxo2mGjGNd+TCZf4Zfp9mXQ9+K
+zr3Jp55Pv2rVJki9bMN5e6TnzTxheCCqvpTGZ9eukOCk7pzE/HDJrzBjlzl
klxvO/UD+HHIUu7TV02T8W7WYKZI20PPBG+a+lOHId2EvGrN8Ofi189ugV64
Xe8pz7E5cURk0QBrOe82vppcZ3ohjvp2vWbIsWWLJPItV90F927FC96tsf4k
56PXPQT/9g8U3PPxeAF+NidOKPXYMPzSdzMFT3MnxhGX67ED3nLZh/Wh8TPi
Cfa7yjx3mPlL5qW2ZTfqvB1h32CzoN7wobFJ2E2aJck4Ce+2VM6HT42j3nGl
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
V93JZ6hZRd431WOK9KvS0pF4brdN7K+8ejXx819m0s/149iXMO+qxLcqpyNl
PxRjiX7s05trj907/oLwM4djTYmbKPQjj3VslvSnxr+sSLW/uVyvrp4r/adW
dotfRclMlP7Wr89iX6gPAxkX7t2K9aO7xfuCnqTezcnZ7M8SUwE9JKit5LWo
vWOYd7emEi/QsSL7pNa7LvisWTGEvADDR4nLMEZ0Q+oyqQ86NxO7Wqfhgrup
z6+T154+hroM9gPk2MpbwS5XP4nfO6qoNxSUx+/rFnE8rKHge2LUOMHjosWR
2Fd2KOTDV5nD+nZwrfSLakEp8S+orTzIc9rfWex+vifRg6PW95frbVp0k/41
s1iHPnHcWcatMr0y+2RO+bhAvv/EHolX0RiGED/6cYG0o+HnEvJyswLYR6vj
fQ9pvy/Pxb6hd86RfjB3p56Mvix1X3Wj7MVvFOXxiTqsd5tg1ytgPw0ldyx1
G953EhwNmeYgOK/J/E588d8k/BWlTlNnwNRa/BHJz2NkfQg0zRc8DtkxRI4t
x32lnoWnCXUs/E/L/T4P2McoqmEjeX7UgVS5zmQG/q1Ys7bE20ZQNyslcQl2
iQ5Rcr8h4B9+4n4lhf/5TgqlnvW6CdSliliBHv489izjnd/1RwrwB49ZL+NT
o5qEP+dmeeroz40We5DOJ439uaMmsO9ez25ybNBlwRc6rheeom8WTBy5vryM
G8N4cNjqzyjqKEzoJHpV/lTsHTbDnzJeNq1CVgKv9WvjZH6nPplNfHphExkX
qqre1C07NRR7Sd4T6nX2HijP9z0wV643pvcQe1f4OHBN8XSScafxrU8cpfYI
728+FJw4oPAdwzXk9Xq+5nfDWFknDG5f0e9uhrJPbcET9rnNmA6/CpvJviZ3
4sCZQUvYB3TeJPb/LGkWLDJULfEBWo9IGdfGja/hc1Fq4ny0xH+rf3cQPmb4
MUl+N6zSwgvrO8r8Vi1rI/NJ+dFRvif1wWnBP2NMK/wyFvvRM3SPpT9UuxXs
29Ony/2pF77Kec1nU/w53t+wj795JfPON3g09+Vcp25q5AD5XW/6Fb564Rr7
Zb4zyPhQ3LLFnmj4foP65z3WwcOSvpMPv/Qu++FeaE1ewbmp4F21K+z33XeN
xNtreztIHo+q0XbiO/7rTX7stO/sN3OuOvvNmE0THNU9dce/8+ayjGPVi/2M
+wqLZbwrwy/K+hx+shJxDF02sA9YmWFybLY/jDog1b6L1E9uDQ90vs+8uEXe
jHr1cvL/7fTy/6rRH5kn176z/8QflXyHeuco8gbmvmRf2QoWU+W7fdxlP16t
sT373rTLFv5tOOoi/N04OJ5xsLyf9I+mQgC4fT1f2l8df13Gr7LEg/YffVCk
PtdR+iX86BjpR5UlcakOg7Pwo8w/h70xl/jg1JhZMh/N5iHDFzTi2LMVx3et
RKYO7SHXq6fkMo+f7sHelfEGv3GJbyIdghcy3yyJQ9aW1Ii0GnUKHubcVaRD
0iB5H4eb3ZmPU/rz3o8L5b3NNL3ld9/KE1mXTL3kPTRz3hS/h5HzDg5yrPl5
gTiE06+xyx1sAO4knmS/0NLkJxn/PBEZfon1xMG6OfUO1z4mfvH2e7nP8OGh
zG9Dlg3+lA2zGV8p74iLbFcf/1YPT+ELyvoZxXkhu2SfVc2VZjIeHN6yr5zD
8BEyDg37qgjfy2+Qhl4e1ZR4nzUBxfV8HUWGTpmCvm5NnfBc913ES9wKw9/4
YpTgvP1n/N2GI3bFdVevgP+nqYPqfD2Qusor3UT6/jrDevGK+DH73B3Uz9pT
yHm7GXK/5ef6Ip0bVKK+SN+L8r+xLah7mHLkMvVf51FvKaOlOfx14RCZZ9rM
ndT/WHOTOPHqXjLvzDbHke/RxJ583c3j4bX9xk6WfnhzEryskyx6puqBJXms
U7ZIvzh8Zb85w5va4E/Ra5kH+n9v6M/kJuQxJXnIeEh96ITdLusqfp3U2sJP
wuPc0UeONkePPBaJvjDYSLz8rPeM3y/Tiavvup/682GlsHv/ekW9FO1oePNT
NXLKahlHxoAn1E2aHcn+wSWTFos0ez5ApPJP8vsVv5GsH30OB4lMfzRK2mOe
N/WlX6wmbuHjcPDvQp7EWSgdz4hdzPAtQPx/mlt25Au09BJ8NK6rJnxIc30w
9Yz+pIpURWjkvCp9LvuLtd0leoTu5znsa2uOgVdGC/F3arf1EP1B6/OG/bpU
jXxElryCvl0+i/3LX+5nv9EB37DreJxjv/mjraiDUlgoOKaOZL3SVviGv+Df
eTnWqTxl/dB1SBG+rkkbR3740GfSv/mlPOlnj6XwwM3tWK92meKvvb0O/2ZS
tkhd76PM9053WXcMFUVqGjfCvvY3iXyGG5PIb2vOfvBKqMcw+d7ZKexrkjGJ
/dfXNZor8kYI8blvtxAXs0YNz1TRrtpU8q1UYxRpV+Ojv5zfTV0/bUs76Tej
bzb9NHH5IeZzKPlaSwwi1T1rE9+4qqVItcMp6S+lwAU/rzKdOO0BEcyfOpdk
nKh1y2S91DrNk3huJSmVdSfC20m+d+wc9hH+5YqdJ3++8DRD6Dl43KBR0r5W
LSrT3tHP5Dh13jU5dgibhr2mDbxK27kGdvj6xMmEa8rIvHLOSyZO6dEe4osu
bxMZdRd7ev5HnUjLyUf5/Ze93GfSZLXMT+fhfbH3ZRnk2Hce9qPwztjLlMZD
iBtxOc0+s9dtiR9f1Yq8pD4p5O+Ge5JXeaQ379PehDjdWd6sFz1aUodnA/tG
aNqvJa4qKFnWBcONmtTLKPWX9avlZvluff8A2qFSVeoGLGoi4zZ8QnNpJ7PH
XeBRR6exvg37KNdpZ03Fj5qQCR+ctVuk8eIg5kvjn/C70VqJr9euZj8d7amL
2OlWHBHeoIRfF/6oPDfIuFT3qyTjSrX0m+gpKVbPZd1Q32hE3VbnOOrEJY0X
/UhjdJT5rn9aTfA4yi+TOIZWl0WvyG8ZIvhv9SaDer65g6gT+8efuAXfetTD
nHiE+I8t6ewbuOGdXLe9BHmWgYlDsFN9WCp2qqhueXKs+bJa9Brnc2dYZxL7
UBd/82VZp7LXrCIO3zOOfKqNbYgHe3Vb7vNK0ct6pzv+Tq4Pr6uwT0fH8SJ1
bVXkNXZ+j5508DJ19ha0Yf810wGsWwXvpX20MTvx1z7JxB+4CfuXw8tDwvc0
PY7IPDQeqIx9pcvGOXKfbS/Wq7p92G9qy1NwrKUi40H1+ZrMK7OSB+DPkcX7
pUZux64ynXpyUfbED6e6qcTuZRi6TqT+d1uxdyibd8v411d7IeM6PGc99tOh
2+W+jJNX8dctdyRfqV0N6vtVqIZf7LITdZ5PLJPn5HZqgf9u9A/8au5R+LGy
JqCfbZ0nUn95JfUiKj+UY2NbC+Kjz13m+5pHij6kW7AeXv/HGxzZcgq7Q++h
jOsa38jn3F5O+K52xXQZ91q3RbI+asMakc+zdqysJ0qbvRNFHisMkvb+5CJ2
N222B+vQvLrg8xqdrE9Kbhupv6UM7IM9Z0+9MHnugN3sO2VsqxFZ5iZ4uHSH
5P0oU/zErqc0iFkh73l3lPBvjaEj9pSyU9DD9uJvUup0YD1f25j3LSrLd2ye
KdLQw170OLXjY65/nMX6t3wndZ5/7QcvmgdjLz04G/3ubmn2WX9ZlvcvmCh6
ocG1BO2zOUhwQ9V5CetomT/of+9s0EO93GX/dvW1A7J+qyPJpzR4VqUeSvP+
fPe5uc5y/fSOC0UuGwXv6mYqPFeTNVXWK8ObbdQTcZ8Jr6haSaRqHPWbdO1b
in1MdcNN1iPNsd1yn65RDnbOYW7cf3809+tvEqc06B77Ef8IQR5WYzebvZb6
lc3HiJ9LWdGeda3UGsk3VC/vJfZMVQUDvNuvHPbN6ZdlHVYG7CJP5lFZ0bvV
Q5/KvDQM3836PmU9dqPjn8lbOuQr541f8tDvt/ZAf87eS3xUjeXwzdjD1KHZ
XCxvzCBOzc+TPMGLPdFTfl6FF05l/3RDBHHRviYz2Y+n80t4a/9SrDP6YyJ9
u+MnSXWfJzL/iRvrT7tL8n/Ger7YyeYkw2cq1UYfXP4KnNnyXY4N064Rx+NW
nBen9xGeqV23j7xRm78jpR2ne8s8VK9oDk8L/SM8QBn5TfindvZ/whu0e3oy
btaECQ/VTlgk805b9gLz7dZVbznOO8A49Xdjf+B7v6grfFVLvf/pDeFVFd6I
PV0dYcV61ykEP3lEV/TYuk7gSYVBMq4NyeXl/Qx1y8r76pYYZR7mrxiHXrvo
A7z8lSLtrq4ZQL8MssGO374GcRsjl7OejrBAH9y1X/BJ7ZYu40DZ/knyyrTb
nq+V8VdqPOOpz2GZF9rGO8X/qv2wnvNxe+HdhgbYcfdMRq+55yh+E02lOaLf
hdfJwI9tNgW/0oBq7MvnUSjrjZnBA3/SIRfi4i++Zj8w9xXEXd47hV528Sh1
s2eNkHXXpn8W+zIEPqa+20/qFSorz7KOWlPP3fzCUrlfW5N9Z3RKFPHX83yx
S1rNJ24pnrra2r9m1Gl1/Y5emvyCuMPazfjd/rx8l2HfXuERmlYXsLt4WVEf
weEX8d++ptix829Leyplt9F+t7fLfNP9FwAPr/Ba+sHhkA313GPmobfNN2F9
8VuGfeBQE+JGvYfK+uPf6oCsW7m16wg/9F+YSv13/V9447r2+AXOnCaOJNVD
rrc6pMjvNt+Ia9ZmfaCe+fpN8M8N4cRZfXeDV95RuL/daFn/8juVlvfIb7CL
eRo3Fvta8+kiHb4UMI4nTmOcuQ6W9VCTvhp7Yndf5kPWTXhdL1/8s2Mqa6Sd
Vr3DjtBFC3/3LhR7q9q7tNj7DavDsb9+rST4qCmXJTioqxNP+99ZgT7dJpl4
iS4mgtOGHAv8dQPsqd9S9x7+pB/WgtfqKbHof9XWIR+o0FeWzEHP2J6MPc7Y
TfZl0y6+JHGBilv5aSJDPk6R77hVZr58l3EF+z/mrIcX9cuD5y5YSdxgYivs
Wn5tmZf2ptQ9m1dFxoV263PBAYfFBbRj1D9ZN3WtAtDznppSR/BDlsxzVZku
8A2zi+iDcSXAaafOgovK9Fy5ztgwmHXYKwD7rWlF9J5mN8Gr7ingQW494h3H
ZwgPMMw/RDxbZT+pw6PuPUHWSbX5PvpnRX30wCdb0BOnFoh+qJ1yU/pRXfav
6HP6xRWwA52tjP1jzSDsiGvZp1fZEMH6WVRZ2t1oEyH9qXlJXJz63zP8sd8q
Cd5o4r7Kceq3xuybV24W/PRsWcZB50scN5tKvZ5uA2WcaPIj0S8jT3F+ZL6M
C1XaFflf9cSB4P7fX6Lfq/WZ8JK4jtJ/6vy65IV8uki7HFkneojB4iHtV94B
PfzXc+Jy0m5gZ3/8UOa1ess87I/GwfDf84Wsf59+iHTww06t7xyLPe7DK9G7
VPvMmI/V3sp89H1/HP/UlhHg/+J+rL8DsBvmD6beu7KZ+HLtjbZyXjOQdVs7
Oh//4NQwwR+D51EZd4YMHfaJ99Hsq/EoU8aLcqcQe8WQm/CvkyNYbz//YL2d
2gv7TavX+IuvpMJb/QtG8nsQvM5pAPbxbuuw9zYYDC/e6oe9vHU64ymqDPWX
mlSkPq7b9zny+/THrNtzvsAbZ5+E14yrK78rjdYUx3ekdJDfG/SV9VfTZDl1
ZIqW8Z2RFYnPsO2DXUt/nP3NJreX/jIGDOd7K7HfmSanKvGPEZ3xl5fH/mo2
sz9xevGu4OZY/IlaKxP2Rbr0h3lu15F5/ro89p6iYPwRKfXkOamddsp7GOfl
Yn8t1RSefb+8+AX0f2/LfPFtHUw9iST854bpY9DHDJcC5Hp9eb77wEHBQc3j
Ava7smXdDG3ciTrtXtfZZ+LXJuqOV3Znn8WXH9nvJBp7q/HrLFl/M64NYZ+J
2Amif36xPYAeanhNXWH33vK7ldtVeb7JsmvEV/Q6y34rfYr37zNzRp/e1ZN6
ww3WU4fIuwx22pc/sLOupQ6j/fxW6KuF2fJ+lsdLiDQ/dYC6G1Wi2N9l9l/y
6ro9FXzQZdzi++2nsk7UbYwd8P1RwX9tlfbIE4msKyfGyfhVfz9LHE+fmdL/
+usnsFuMvci+tfZR2IFSFpA3MXImeu1Fd/xCFzvJODJTiNc0f+mFnlnqLfHx
vhrqN9RPJP+jIAY8eFSX9X7VW9b/Oe1Yb//FYHex+U78aItz1JveWobzvVfh
33BcDs5sbUh+bqsz6KNDEtBDly9F3zoWz3G5GHCqQRPWkRspzKcVecJTtNpf
6HU7Sgp/UdRtHEQeV2P/1N/Hjtv+PHn5B/aKXqs0VkndGeVvVcm/ULbNQC8Z
OnCWyCJL1suzz9BXDaqhcj75m5/IdidknVEOtpT5rL0QjH31YQXep14n8Cah
H/FNxr/w+WFrZZ6rawVz/skJ4fUaVXuZf8bzmcJDVOcbs87+tQPXDtQiXqCi
HfFXl01YXy3C0DfyWC81MZ053mNk3/SPGpnfDgHDma8rbpA32MUo67HKuybr
78jX+Cf/dSdOa9+HOJ7/Gf/j7WSet5B1Q5ncRfi/5t427GSL9mFfuG0l761+
londNjQS/+GCasS95URKuxhG1kS/c42GZ416VxzncVGkunoG61ZQB/iXkwP2
9kdPseuaVsUucOg1fOzQG1nXtcHPRO8xjOlIXPulS+By/SXwsYYqeG9dT+J7
On1jfb31gn08qx8TqZ5wAbu8RRbr7uvvcn1+5hXqEBqPCT/Q//PDT3l/QyLz
97ucV7c9hD6dFYId2bsv/CHSRvAxvJUp/stmadx35wnxbGPaI51MsGtVrkE8
1+lBxBGtnyDv67t6KXlxR6rK81LfVKc+rP9p4vMrLeE9Cz35Xrun6Oup5YQf
KsHm4v8y1PyAH2F4e/yho4/CL0x/cd2sCPRIo2d/xnlX8vv36KTfDI7T4GFz
i+1E8YeJM2zmx/l7y2Td07VRUx/s2nn8LW770SvVDvDBIYXo0bPisbu8nyQ4
lX/ypuCFujn5svrxG+EdE8vAJzavZl20PUq+2NEn+MPvG7AXB+cI7qT26QAP
cbfAH5m0l/gY9Xr8Q613gWfl6hAfXuIH+v+rw/AdLxf8RSZ7Oc4z4r+ctQl9
dnpX6g0v7YS+n+GEP7P9D+Jl7yej7z4bzbxZ1Qmem9SY+IywJPjuj63kFy9z
hresnC04Z+i+QXiu+u1o9iG8YEd858jWsg4YB+8GF527kgdnUg1evDOXeVW2
A3jTzlxwyPD2FTzw0iD0nkPB/L/5ZuyjWReJY/hqlOco1gOwY3t52Yu8Eyb1
MdQ3y8n7qBzm6vj/5eDygomMgxVVsSs8C8DOdy0Z3K0bhl+qxyXiMezbUxdU
/546K7puYjdUH1Sx7s2oR33Lsstlfho64z9Tdbst80LzV0M9zLI7GMc5R+HV
t+1kPoT/mUi8Xu2voufnV4mknlTZb9QR1NWR+aaL3UNc4Jan2JenkccXO6cu
8UdJ7ckPbNFYju2jqf+gPv2IOn+D6rJ/b/Az6hIXHZXjIp8m1N3yGCf3Zbif
Fpm7lbqyzn6O1PuMvSD3pTrVEJ6g9Pwo7+ubdpT3HUEcucOv9nI+NThajg2l
15JnfbYKeUzD/uGPOpFMnFX4LfhXmSXEH4a3pT0X2gpv08Zuwm5iuUbitbQz
OtC/MW74d/edlHGibmsp41L1AzuW6jTrjeFRKdaLYPQ6dVf4uj5wBPNjSBZ8
tfAV8zgnSuaR+n4X+O38+XI+P9GdeXe3MvWFdjPffa9M4LoKlZh3IR3wL1oU
EKfWbQV8OS+M9SnBh3n2pwrr09tiua8z+yVaK9h9O2qwq12tjz37xUbGpfpL
VWmPC2W8RPqvFz+CYrNlnsjD91iHwnqw7pQzYufuUCD2FHXETdaf2RcFXw0F
3uL3UxpmYg8NGkz8YNhz2j3Cmuev6cH/xdTm+ENp6gvNT2a9mzSQ9e6bUeL0
lcmViF96+AD+Ubos826cJfsWFlRnHr8OlHmprlgO3rgnHbv5vWXo1yMuwa+U
L/CAKU2Jxzw3H5wudEBPCNVhHz9cCj4R4Ur9lukz6PfGs8HxpibEv2zbRT+l
w0Pz7+Txe5EVfLXaC+yJ7dPR1/o0ov9uBcJ3pg+FB35ohf10Mvt1KNkOvHfg
Yb6zvTvxovW/sQ45LMXO7zIJfvEhTXBIGzwN/PHpDK/r11vqcCvJl2lPk/bI
Fn1p/3MNwael86VOqPZfW+xltvnEd3oV7zNbwiDzyPCzIvbwuquoi+O7kP3f
2/shm15Fb7f/S9zUpebYa04tl98NU7fKfeqSLjI+dKeM7OP0uBf2/sGFMn4M
bnW5v1007+PTi/GRe03swobhkWKP18Zv5P43heDiuVXEDwTvhw+0iibuMqOR
5B0YXlbDjrVkjvy/ossHJ1YU4D/36I8/u/ZP7F8nmnB/8hv+91473ivGArvL
oBKM/z4DiY8tl8L3WtB+hlE+IrWHPuAHX9OduO1RbYpxaAJ+pHKT8Ss1uyZ2
cu285sw3dSP8JfePyjxQWu/HD9uoNfEam4rt5YZ81q8uTeCTB7aJH0mJ90Sv
HzWecVJmMuNonCPzRVlGfJFSlePCk+j1w0fgr3i9GXupqa/MM43jY3Cy+mb4
juNUePntKPBn0jP8VLuawIeve/DcZfvRu8+vI1/k+x34v9tg5mXuTZ63ORb9
YL876+3Hz7xPhyes92fGwMtaYTfXnj/LPDixivV+5F3sRLYf0dudb3CcN17W
Z6VSDv7rjen441yTxF6obKi1iPljRRzkrAj4+flD6F0ni9s5ZzT3N3qDneX4
Xuq/jTpDv4y+Kfcr3suwAzhoOousM0xwV9vzlPSL1m4CvKFXRfk+44818Brr
5tIf6rPT4CWai/Cihb34zoQG8Jxbq4V3qprCi5QA6rGpL/cX3NB02opfbuZh
7Calv4CTMw9gP0vwwH52uAt8xrcf68beueCUfyg4VT2X/vSrhv2kZwXGxfDR
2JH2KtJuyrefjLOg1fI/xpOL4Gs3iJ9S0gZRvypzguCApkGI8Btty7aiP+g+
XMEucLM/ddOtrnjIfRZLBK90rxzx8zl9EDujoVp94Tuq3hWFH+ibx4leEd73
pugJumbTyLf9g51TFV6DfSa2FtffyzUhHuHhEPL9UiLxL0Q4iMy40xQ7zNN4
7Da3SwpfUSXexv+gi6BOggP7WOfqud/XPU54j6XpOXjQs3vs16Q7Rx2rwKvU
59h1D772fCH758xcJ3zHyuQ4deHtHsrv+ic5wteUdOqya56hD6lid5A31Hs1
fssRWdjLx1Vj/V17EL0n5rXgp9b3J+2qfMbO38EgflfDMy/48tdD+ItLfaSO
z8d++HndW+DnGx6A3lyhEXaWVfgFVc83iDRz0hAXasv+FVr77cTBaarjn7ib
JvxGc+EQds8dQ0Q67BmF3dUSu47S9Cb60dHvsi7rMn1FaltGIm1miTTeqkB8
VuB/rOdBi1k3v/sx7jsG4u9/FY9d0jyJeTN8OON0y2P8/w164idYp8Zu8mEf
x2eOEifnW2a8yEtG/Axtm9COw2oJT9F6LUNOfC/rp7I6g3wIk6bwHLMJE0Se
6o39Ze4k+E7Dbch3CfAt52qTRd6pPF3+7/oI8KW3h/BUZfdp7Cuh/4Fn1n3J
r+u6BRzMtse/sacz59sp6FHrbuPn6BwJPq87A163tAR3TdORi3Lhuf/OYX+x
jYKXjCz2849pih1rTTvi2mZ3xR8cdBc7y5y68NP/qsCrWo6BLzfpwHMGlpDn
q+JYL4wfpmP3GTFR3suY2Au7ysdCwSHFqx162hHsxYaIieBXxUvg19AW2J8u
9UEP//0KPP0RAv5+HQwP0rwErzf5gccp58F7txdeIkPvTWPe2OKfPtJe/Epa
lR3r/oRk4g/tuqO3jemJf8VihvS7Onk6dSpm58GPxumJEzj4WKTyIRAe8rEa
vwfcEX6gXjpaeJLWojJ8aKgLfOZmX/iHQv1T9YD2yJ6fhHcZTNrgBzv5Gn7t
8orr83qxf+mp9Vx3zSDPNcQ/k2P1yS7F+TwxXHf9AHw9OIzfJ3vynFgr3rf8
YfSm4P78/uo2168cBS/6lCbfYQi34/3P1+B7PvvRHi6WfOfk3ZzPdoYv7V4P
H3pgzrFJGH6GpA7486zMwavWc+GfxkXEAayrSj9s3Ya95nEz4mUituLXcB4I
z/3hwXxa9l3ybJSozsy/2BOOItWuM2W8DPDFXmpsJfNLe+EPdp8D5AkYZrXC
Tje9M9Lgxvqb/B/xpZEO+E8uORYfW1LfZsYB7ILzclh3Vx1kfM++Qt5s7RLF
47kx/OalnUidt5E8j5pNmY+VpmJnGbeceaU+hJ3S2gM7Ro2/rPP6wcyb1Pv8
33UL8O9YS64r7Iq9NG4EcnyxH/K/ldgzR5HXa7DK4XleBfAQ84/wkDo7sc8M
vi56iOprLnrlxKrCC4zh6zkubwOPOLIL3tLnmLSP4bAZ8zJo1nr5PTebvJPZ
XWhv/UrqajZIww81PpTrrfPgXVN04KChLvpMwpfZcv2VdcX27rLM70OV4G+X
PeDFI9/Cx155cbzxAbiqPttOpGnSVBkP46ajD1XvBD5fnUE89IXz4EdadfA3
NY143LUZxCE3nwsOWCWTz1zBRuJQlOE1xC6vDZ0Pnw/uCI7orbD/7CgHztwN
4P7ftzhfZTl6dkY68dZBfdEzrE2Yhz79yUv5eZ95tfY86/s5HfrH5mzyQF8V
Co/S3SnOd99XC35guEKcdcfdYi8x1hyEvtQrFj980/nESy2dK7zC2KIKdTir
1BEZHt2aPMMqBWLnNT4+LudVL8lfUa3UYC9+fYN9H7a7iMx/4UK90Vn1hccY
LyUJD8s/6yVSbz8HO3GfG3Jd6v1D5MM8CKW+3qDD5L2Yr+D+0OPUS8kMIN6l
RYL8btXlM/mN11zwQ5/K4f9nF79HVBB5kGdLUndlWz7793yKpI7B2hHEkfS1
I45hdCj70aROY7+vPxbku5a9Szxb+l9wz/EK+p7tWvTkbYHgW/WP6HVvDN4y
flqUFfuFYXII43zdRsb9f72wy3TPQw7vw++tjfhNnn0FJ6otYV/Tq/fBkTJ7
iSfvFoQd1TqX+fviPHn5WWbYr+ZvIM78ej5yvg58aGDBej9ZxXp+phT7YPd9
zvOqeLL+1t4P/381C3kiEP1s9W9w7mMzeH7sTnDAPAg9rwJxbdpIX+KnVpxE
DxzVHf1h5F/itD7bo9/8wU9iyPgjuKH+Mhe8jT8Bvh5ZyO+fTZF2t8GXO1VZ
/3f/B25/cJT2066sQfsWPAJ3zqxFnxuWAV9a0RF9MtcKvhSN/qg1A/+ViTN5
7qBwcD67A3JyEtft2w7/UO4hqzaQ/lJPdiJOsurM4ji0DOw1jj15X5N2PGf/
Nr5j7U/uv0D8m7pkbLG9bhLnd7jzfym3kTENOP8gAb6XXZnnufsxbq7P4v2t
vtGOV67yPwG7aE+bVN7H0wN9OXA469vnDrSPyUXare0EeJTldPB6mgN1GWzP
wKMvpPN/Zw+A1w4daOeAYj4d+Zi8wrwJSNOjyFIjwFP/3eBrdS3HR+4Xx8ce
CmQ8d1og8ud1H9ojBn0wxQccv9N7msh19uTH+yfjz0xxHch7/wPfPzwD1/1e
I9dn4N/s8BPc/xgicQrawX2IK1yfAL+PqA4+D40SPFbf24MdM/0Zds+dhdh3
es6TOBztxaHCZwwt7Yl73boInN77EPzeNRo+9n4U/PBHa+FjhkvZ2J2uR3P+
sRP87koQfK1BLMeT4vldfxNe2bKYJ2ZXFX1PM8Qf/dnbkniN3GXwtq9a8jFe
WmKfcrwEXqVV5b20P7HbtcuFpx0iL1kbsgj+9Ws//KvUOuyySnfxqyl18K8p
5u3gxVOWYC/+UGxHjjk+XWTaY9p933LaO60Cx7lv1NJPO8thFzkxhvX8U3n2
S8nqg/2qfEvW/6Qi7MCdM7Ej7P2JvjYrDrvnoTDG++gnzDPnQeBBqdqMb5N/
+GMvpGH/Gp+GfWhMDvN0dUlw4J4J/tuUlvxuXRE78nUL8O/XPcE7Y7nf6CMH
LoBrM7uJ1IzK4Lwr9SYNe56ApyU6o3/VmA2u3kjAbmPrx3WlfoLrS/Avq7bU
Aq/PtIffbRqDfeb4ZuqH3OgO3p/hPs3kB9iLn1UF/y3ngc/vvmOHi7TBfjMy
D/0+2QWe934ndr0+bVhnXlnwPa0ngo9zdoA7Bf3Aj6tjab+YY7Rb/TBw5NtU
7GsbJ2OHbDKN+Ty5P/Hd1rPIF1m8gH5dVIXr2rwYK7JaAXn0z5rCj75vRO7o
SRzRol6S16gMuU9c249nMh4NxyejR1isJs4tJZr99hYdYl4+j2D8th0u89ew
4w7zdG0c63WZRPSypYEy37RBA7Af94pinhWlYs9W/nBfVKw8R13HnHzM2muY
R9UuyHzUVWjFPGzA/uGGA/fRxy4e4v6tY7jP8yXz7WxxPY0SY9Dz3CbKfcac
POLLwx8ShzfXHZ5WtQD/ljv2a8O4b+BA7jzi1jsWx1WGZ2MPKteXeLvGeSKN
ESH4F79PFn6oqjYLGelEfIBxDflhMyYSX2w3g/0e86oiE6bDk/SO7GtSvQl1
JhyXEyd4qQLHJ3oQV+9OnL0xqCR+/h4/Ob+kMbL8aPhmrUTuO9mKuIKRTpzv
epd8Iquu5KmtmsM+ipl1qPvoM4E8xGA/4ktvPMWP8KydHKtb7CDPsKM9fPfb
THAx/jU4fboPfM03k3FivhF/Q59yyHU1wb2GXqwHuQrjcIuRuJobk9E/Rhiw
u3cewLr2cTj+qq7Z2G2qfSMuZpcHMnos62nGHObViiR4Q+5D4nMnlGSe/hgi
UuVpSfzMwTLM49KPmLe7K8O7JrRGfwzXg1NbDwsOqJR05Kyl4MO0weBF7wRw
KGQYeQfVX3DeLhW9bi28z9gde7KqVAZ2mWD8o8qFLK6vXQR+TaVege5WDvrt
oN68T8mzfEdKbXBT7w9ffHcHu1RQFrhz5S/f/eIYcbCVA8gniQ2FL6pK0z6H
LOFHb5rBlxJOUk+m/W1wqfQjpGd5ztfaCE9yvck60OEidYKiemH31OngO2Mf
whvfFtuTLlVj/UhpxO8bJtCfV7Px899YDN6Vmo8dUVWd+PJ/tvR/xe6sY8ae
/B7YH34/+id6basOXDflOv6AnTXgQZZbWN8cl7Iebq/J+AoYgB47yEnGmXbe
Gq5/lsC4846EX9lGcp2jJevmOw/8RvrF2L3etOJ4ejfs9hbrkVNTOV9uCbyr
/z2u77WaeM5vLRjve8phN1PuwLdMJoLf+Q+wk76pDx8z956AzJA6V0pofl+R
DqO6isz17ifzqPIn7DQlFPD/ez94xEsT7KMr8/BPjnDleLQ9elXaVvxkB+yx
15W/xXz1rAHOPxwGT5u8FLwtjAZ/h2jA/cuNqGPjskikoWgixy8vw5OG9QCX
7c+Br1M3wqvOF+9T1LMK+H6YfCBtuZ/gcRf209E0OoIcm0zcxuZjyAZ/0c+1
3QWvjUe/c93C4awbT2/D+1rt4n9H3GNdePme41bLsd8llWRd+TEXXtluJetQ
iB67wJ7P4NrJXvC4ZwHwVzMV7bR2Bfa2BsfBtZsT4L0hi7Bfq/7Dfq2km0t/
bbzjLnL9bOwwdboyPv79YJwN6MS4/LiZ9d2kMvMjy4C9vUF55tPnjvAF5Rh2
7EWW6H+VFnF8xZ7527qz6I3q29uwP03ri19/HfuT63RI9SPq6OuGzgEf97UA
d67eBRdbNaGu34kAzm+Jg8+d3sjvUeRfG0t/4/es0uDX8APFz1vC9erT6LXN
L8OnhlMXw/iqAvj2/j641VcFf1rnj957JAT8GrQBv1hkG66fF8t19iPgWV/C
0HNtXOBb5jpwqFYt2uf6LvBvlzW41/E7el8bS/S9A7PRwzY/wn/pc7g4Huki
PLlhDPawpWacD7mN/+4E55We9ejHUwOK/R7bwYU71sx3q0bMb+8p6GG5z4eJ
NJZBz4quL3X8lPxKneS8mVc/kdo9w+X8keb4u0vPwY9f8wF2sQrrGX/JD+B7
RyMZh2u3E7d+tp/4VQzdyIcyqL3hdaXPM44f+zOOL3zBX/7MyHqtIS/eMN+J
ef/lNvkSY/ywN98ult+2Mz9m1AYn3H3gkxU3owfVrM68cb5M/tnmMeDKl3Tm
2dkArlubyXXdO/Hc2YPRjxY4IW3SOF91Evcn9ud/3c4yTy/2kP83TIW3GsoF
ERdWKpD3H9+K6yq84ru6F2CH32UFTpm+QO75i52wV1/4cHrxcwL8wblx3cCZ
xJXwxJ4O1BdL/gqumY8Eb5KbCs6oWriDVzVKEGc56rrwKWNzX+Sn35yPNRKH
5bOVeNI7N7GfvVwCH9OFwMOsu5PvM8dA/OlahX1hP8bD4+4cFN5mqJWFv7dx
H+LGk/S898KDcqw5c4E4zuQufIfpNvjd50dcp88DjzP6wevTn8L79u8E/yd3
kX7RppbDr/D8EuPn31Q5r07IoX80Dem3ru8Zl07zHES+V9BrKp8D97ruR58Z
WJp5c1xHHTefF+J30jZaybo8m/mmjvqD3lqpOnxmzWJwIjUYvHt7EH/sz1T0
0YrW4MCxl/jtW+zBrz7CSXBHNfMS+KLKhld5lAXPHN3Jt5i5GN4V+hjc3N2T
uI8XC5GVBhfzSVv4ZutN4OI6N+InL08AR4Nfgn/vuoGHdZbC09KfgE+TbiOD
1HyHH34B9fIVyLOvuL6zF78f+Yne3XQE+nnCGvBsRFX42q/iY8/jyCMtsDtl
JMLLaq9gffnlgp3KZx08bMAy+NfCIvw7PS+hj56pQP+U/YOdSTUJvrVuEv1z
+LlIra4WvKtkf9a5GHPsUPa7sD+dXI/9Kb8s+wDmnWJdvFsk+TNK01PIz7e5
P/gf4+WzKcfLFnD/onXwKO87HHt9E/+GctMRPla1LrjcJIb3mZ6BHDOH7/nX
he+47MLzP/3jvs6LOE69C57PWMg4bXgZ/vk3FF7qsRT8r6Kwbjf/TjvsGsz/
5KTTPrZ6zoc0Z5wHBvG8H9hptIvuw0dD0+GhjStwv6MV76FOwa9S9wftN9tI
HOLNfsjBbWnHNu1HidS+6SPzTDefurEf2+Mft6iLXcmJunvaNd1lXmqT9okd
SnvzAnxwQw+O+6YS1zbZlXUnaBvz/uph8D7qMThewpV48HNvsB8EVQI/J+LH
1I46CX7O/Yz87YLd4MFE7GuhNvCwGUMEZ7SW4+Fp/TZw/Lg1/tOfs7AnzL7K
//29h3Tez3MnZcLjHPtz/Rt7/qftGN7j2UvWG6ef4FLJ86x35U+wDpouBs8y
L7A+TpqGXqu+xe9fVayzJ9vit7Ipiz77uw35Hk2H4yc97iR52kq+oxpZuaf0
SyL1WxT/n9QPy1vJeFXPZl6Fb6ffb3ZkPITdYVx9aMw8PKVjHI25hd7y9Czz
tfdm7M3249Yzny2Z3y/Rz9TJemTtCOa7bjGyf0fkCHBAvbcx+DCiCvzJsg24
cqSYd455D45cboS9O+0ZemDjifCnvjnogbnLuO7GUOT4PVzfYSTPb9IdfNLe
h9deKcHvZQrQ837cQL9z/oXccYLvu0z8liHMhPeJzuN/NUW0w+5StNf0e8jA
eszXLwby25+Ox37gW1wnKOstfC+yI/+ryUCGPERfXbyH/104EPv85IpIhyTw
sr05+nBF7P/q7HK052J33qdiM97jnjfz3LiP9/m6gX4aQnurk7WsZ+f9+f+W
xfaQIUMYF5suMc9fzEG/LB8Jft0qAG+XFcdp7GqGnVD9E/xcMQ9c0CajL76Z
g/2+YVP0wmqjsScbX1qJjMgDP8wP95Xj+k+5fm9v/LantsOf4hvDi0ruZR59
eggPHdKvuH7iMOILWraXeaK1as18urMTu36VCcRJeL3Dfu5Uh3lcVBm+53Bl
WfH7oreubU18UEXyKg2/iEtXnxmOnbHFRXAiuB12wSt64kWHDiT+s89vvvO7
FfbP0gpx2Dd+F+e3pKO/9lxMXMbcSeDbwvXw7OlHeZ+6I/m+mGM8x9EXXFy9
Gn7cZy34M8IMPrlWC16VKA2OFLrj1+5hLd+j9oYfGSJGgE9Lw7mv/Sb4l+lL
5Gxv/BirfuI3zVnA/2zy4fkX9oJ35sSzaFXFcfyet/FXFzwkD2LQePjjhPvY
R/+tht+tN1J/tflh+N/BcOGFukfR2EEtqAui7d4InprcA/54piV6/M+36Nf3
98nzNCvrwod9i4hHzo3gf2L88NdoZ9Fvp4LRw3PaEd/82I5xdbYbfv3oPsT7
1ilH/7+8Cg732QZuj6/A8bEy4HGyuQvz56es21p9cV22yQHMiyOv4Q9VRxDv
MGIs8+xBOOt500bM61L7mI9mieDg1UPolzFV4JFmj+Fd64agfxZ1I67eZin+
Rcvh8NJx8fhBfn2Fv3kY4G9/NuDfDaLOmvrCd2Sl6GIeOAaeGt2I+8985ffG
HXmO+QDye4rzfdT6f+i19h95H/MHSNtM4kkO7OR4wg5k/oDiOF9v/Ju3y4On
504W+0lz+O7AGPC8nxc4t524W22Zrhy7kpesTEtjvYn2oP3Km4NjSlf05Yxi
O9+VVPTpq7nYN3q4cX73QHDSwwVetPEq693hrfDQSSfhWT7R6OGel1kfv/9H
//5uh3RtBH9qGshz1mbwnCHFzxs3meu6voPX1VsEP/SuwvnvAdwfXnx//xHw
tfPF/piTmYyjewO4r2QY53cNA3+7OSLb3+H380eK9RwjuD2nB8ffAuCZe+Zx
/tBH9J1pZeHB0R/hsxb14AmuauyEliGjRSY3lf0zlNgW5FtlPx0r4995N3an
7m7E0xxfBg57eMJTKnngX3yzD39iQSTzJvM5OBmXwHx7+LmY53QjXmz/ZuJr
Al+Ad3WmoO8VFvOiNm3gjWlH4U9uncE795usDxY70L+dZiG/GNH3Vy7g97ym
+IW6NUF+L+D3Z9XB1achyK0DweWhQ7EDvJ3PdT3NeE6HPvDTQc34/xuriYfL
/sj6o9+GnDgY/DDRgu+RW3jvvZHgzuwOrGfHetAO2Z/wb6fqsZ8eekw7bfnM
secR7K6Hc2jPuF7E0a2b6CmyqcVokdFJ9FO47SSe3wxe/tSa4/DPA0W6riVP
2d4wSWRZc+zCc4OwI4+pxDh5OoH4mJRrjBef9+gJC63hCxUXYH++mcw420V9
KaXfUWR8CDKtOuPypRvX3R2C3l3qLXb0rauYHyOCkE+CGOe9C5lHv5x5Tun1
4G7DYj/zhY1c37gG8+jBaPD261Tm2aO5/P7tJTzmmiNy7XTud/iIfDCc83NX
8z61FiK/fOe5/0oyX0uYMx/jejJPk4rj3LrW4H23/EY2ded/G67l+qVeXG9b
k+N+VYp5VCjflRVA/kJLc977gzfv83YQz585ifsiV3Cf1RTm96cTtGv5+eDB
ssp8T3rx/dcX8R4VdMTXWg5GH1h5mv4b68v/L2lBO/9/w4usfoT7/B2Qb/LR
Y3c8hved/MD4mPga++PWbMbNo2mse5nhtFtOIbjbph14Wv5y8XsMxV795Zej
SIc/8Mjv62V8aI1L+G5Dd9qjbjH+vsvnfVfM4Dvyp6Gvqk4gjXuQzu+RY5y4
bmEx/mX+hzzbl/N11zCu/zajvln9b+CfzmyESG1NO9olJOfC/4TheQeZP0oE
+m9KBvPJ8j+O9dfgteGv0Ivd+oKPt4rwn7Qagd10cTB42LQXOFl6N3n/r33g
w5UTmOdf9OjPrwPRlw9MAQcDdoGTJyKJ7/g8EzypVg8es8IS/8ufIeCry0mu
C7QnXqaPKTh5PhO8e9wdfDsxBXw6nsv9u8x4nv415z+kYX8Lvgsuumwivv7l
TH7PegWOVxzMfU/8eP9xWnDO3gL5tSr45nIGWbqYjy88TLsssaCOat5c6igc
6Uj8sK0X649nCDxZ1xJ8jBxNu+lmqqS/ftejfp3y5a3d/4T1CqnfpTyPATcj
MumP5q1Zt2q1ZT2z+E0eQXQE/fYtkf4Z9JD/Kf2D/pvxj/c7sZDnRZeCdy/t
hx7jwrqmnb6bdjx2gu8M6kt7LG1FOy1eRn/O7cN6Z+7JOtHjDu3ZfD3PmTKN
67cNZj35XZr15clKxoVhOXaUOYeRsQfo98KbjIvj87n/Unhxnbd/fM9xFXLs
IdYXt3TGXc3dxHX0GkA7ZdxgfFbvyvpeI43fx7nQDxt74mdIWYffwSwHnqzb
3EdkdinWJ7fz9MPE01xv0pp5YnKZeRNaFx6y/Q9+jOMF8BPf1qxT9d8xTw3/
uC50HvYPjZZ5aNOE/7Uuzq/sqoaPFxxg3ivlwR11Xm+R4Sm2Iv3T0UtvVKf+
o2k/8KNvGM8xfQK+ed/AzpgWXRxfMBb808zH/2IWzHs9TMRu+Hgt+PI5hes/
jAB3TpwDf995If17cN5yrsS/KyU9+J95Zpxv7grubghj/RxgAQ62K8W68W0R
60OQDhyPc2VdeD4N6dmPdWPyatan7F6sD/V+gbP7zbj/gx+yqx94O6chOP65
mPceVCH/a8tzCp+yLoxqAa6X3cv6cf//ajrzuJry/48fe5qLmNBYclGpUCGE
cBFiQgghuWJorGmyF8cypmmMIaGfbUJDlknWSbYzJskyaihC09ysaaExIb7h
N4/zfM9f78fn3M/6/rzfr/fy+ZxzF9H/PLGH6zoy/jeSN303n/VsPsX+eMg9
pJM2/F5jKfuV1hz+N0qDH7Z78T+O+sGXfZ/DL88BQexvorVOVZ+aujyY6nGu
7bmU/Q18xf7kWPNegkltrNcLNX2O/r0gr1b5IUCnxoNjdZo9k++vmJ4N1Knn
RfJwxsFDdKp8/ESnagx5kHVfBunUsB/a4gb1y6dhJ0wTnZhvgx5Q28+Qn3HI
Y+Zc8nhW4/1Yz03q273l/qRhH3IeOhl9mG6Fn7Z/NXwJiYJPp0zI5/Vp2Fdb
L/Qqpif+3szdyOeFI/B5ijt0gyc0ZRD7lJsFbeBO/8fvi3/Yh7LPKfSlSWf2
qfVC5Hod36dRIqRdvUU8H83/ZSs3Qmm3JU7y9AtZh0Mc89y3FX1VD7PPnz+W
8a6zPucbjGfJpl3cf3hRDn+8S6BnfwM/jiXw++Iu1C/4inFrfuQ7slWJ1L8+
D32uMECrYsai5+XD2Zev+K5PaOIQnXqFIl8JKvuWZ49/Heg2lP2NeazbIbWb
yE3JeJ1GtgX/KhqLnBX6Ih93yZeVD0XeNtQDP329kKeeP4Oj0X/zHbEfIuX7
QVewlztGYM9yiokPrO5A849i10bZY/eS6kM/SB6udxn2LkzuGQx8S3lyF+zA
hd3QzXnYvasNoD1WUa+0D79/PY72xztiJwZPhb6azfOIWOrtsaHcfCH97LZj
Hhd6QUPtsLPVFtD/jmHYmz0boHcm0a6oL3zI7sV9lVXyfaRYC3amUSp+Q2ku
/Kmqor7HIcqVx+Cn7Qjip/g4+G4u7gId6cS+tO0B37bq75so3r3BCcte9rWo
lOf+V7rqVAviPo3pK+Qnewp2wbocvT2xHHmLMINH8Y24d6tUq4GcLkOu/K8g
p/u6I7djXdHrnCTRnyTsS5uDPB+1F72Jd0GPSocxbswjnlvkf6xKbmFH/ucD
vbgdHH97HxxOjUe/CnbQPtYavY88we9d3mF/zkQRd71bL3nlOPA+5x32qsxE
/fmRlKePxW4c7UNcdWYxccKYyZTH74Yer0Pc8LiAuGbNJuzVeMmn7PsTezWn
H3bH5nfs1eE18p2X9uRl4jg/VGNHYo+U/axzXijzGoQ9U4fJ/Xe/q/RzM576
n+2m/7pPsFc7n4FfUS3px6YZ87AuovztRsnLlIKbCVXgbP5O9mPJNXAsKwS6
3IH99TrA7xH3oco78Mf/DnKSPQ85So0YocvXeRfkPfkBcf7i0bxP59wsEPl+
wn2PvLXc8woYyT2QsnH4cS809LAleXTlWzv0sSgNvUgKAZ+MC8CrhdnoVWQG
+vNwNHpYMAO//U06ev7VCPp5uFu+W5KNfgUMBr+SotDHwWfR7+kN9Dy8WkPD
Tx4+GD/1Qj387dBb9BPfCT/08jK9nerbAP911lP8XptL+L0OfpSXdyQOWfoJ
fnCfU/jVLln42QcGEr9cW8j9kfa/4Y8fu8TzTVXkgUyunDeW+XCvY98y8kXJ
+eSTpjtzL8RQyPteHfw5JxjWnvse3QPJ/688SXv1NfXc95KXv2hLftr+FHn2
GY05f3BM5rzT/jz1c/+i/OM1zjNC7tNfw4G8j9aa+zFK6Qbm96GU9yB++sB9
ifR44r6vvuYcxKUffIjIhj9u30HrS1x5VIU2lLhmVgP2Ja0V+9RmEvufsoD9
9F+EvPhXEa/dMoDjjkZwOvcV9ubYbeTB4xXxdE4R9xHfjQC/vBqAU9lzsKeB
HtjZnLP4b9570AvfZcTrylD89ps/gE8Dp6F/3z8A1w72Rm9fRoBnkRn0kx2D
fa6qwj8Ycwy9PnsGfKr3Cn/6123g1oDq/B7xDeN4ncQPWTmE8vMJ4GrwH4xr
3RActKoLbq2rBGcSL4Bfys/gy4m64Mt2N8ZbdxI8+XQseFojETyLnsP53sgb
0Jj7nAP25DsYqiWb56cbkv++UZ/zxYfkzZUbz8mff4jVzwdN6n/fH/Ek377t
OHSw5OMLd5J3Dwzk/LbfEsq28l6o7wPaWw0lb98yBPqPhXNbQzvqXZNxT9Rk
HrmG76U9+XuvldA9H5n3kDJov9Xk77+MYl23ppCf79kCe1FtAXZidIi8v8T9
XKU4BP7l3YW6bIHOH8t+VD5nfwK8kQubMexf6hvkoyqK8oPx+J3245FLyzzk
MnEk/qJHEX6eXRx+YUI48mS6+Jku10nTxd8LAI+T8vAXvFqLnzfoU/TnLH6G
9hP+x6gG4LnHY/B2oSd+jNN8vg/h/xd6ln5pIvq6nvqxify+oT+/nzdQzhmD
vp2KgTq5QDN3QbfESfzuhX3It4cWZ/A8bRB2xvWy+J3if/r3g47qhr5r06gX
sRU86OZDPsXPHuq0hOeWUvzRm6PxUwNDwfUJJ8GH78T/6/eWcr4zdOYu6jl+
ib976CZ24WEz7Fh0fexOE0f8xUXDsC/rPtJfxFX6cR1JO9UNXPpVgc74jefj
QqFuPaETxS+dcof2c6tRrnkLO9imM/dedoykfOouNNURO5pQB7/b3IrnPnXg
x66D7NvZHPj9yJd900bxvcmzK5Gf+O7Iz+xGEgc8hqauJy7Vlrrqche2mfhQ
9dG/b/tvXPpRjzsSrlFW7YiLK1eTN0n4oY3+fPZc/AovB/wM9TJ0XSI4adpA
HK2dtmG8KOJRq6bIv8886s3eDo5aWYHHQRX8HtqDPFCL9fi5SWbqx/Vg3NLl
5Ovih3Hu5BcLvR1EPy1K8ZetWlA/Jakz87xSk/lta4S+e3Kv1Xc79mTbC/Gz
/8aPVuyp77+1r74Ou7RBOs1eiL9v6dFW/935I/khJeSFzj9TeS/kpU8fnebt
G8o+xLA/hp3QDauJ4xYrwSJ30MA26GnVdPb38CLK0c+g+a7IwbRa6FHyAPTK
9Qz61GQFenM2g/KHAuovDYLOtqDnw8OhFc70c2w47TYMR99evxB5CwVnFvcg
75HZkbyE18d+yMVb4k9lEvKj9H+v579NU211viS499Vph7bk7wNdwcNpzckr
LKyD/+oaTrxt6svvqht2e08o8YTbCuIZH/lfln0Dwdu1Ljy33gLeGiWe8eyO
H10g9/Hq/wIuhyzh94wqufe0RvxnjXrVvcD1mc/oN/wc40fORp58f2YdVhpy
E1cDfzy6BfWv9oX22c14bvVpv6MHcmqagp/iPwr5VsvoN7MP8udhTX+7ljIP
5+2sM+Az5hc/g/yV3S7ax0UzH49M9ND3Kesr3oz/8bEG/sjO+sQXsx3k/t52
1h+fzHwsS5jHFg/m3TiWfEzdt7RvfoD450M4fktxA+JJn8bwIbER48f0Qw/j
JsLXo2uIWxYdwX5usoVW9mUfW6ygvuKQrcuPzUzyaprExUk/gxOjZsCH4KP0
l3AU/qQ8JO8VUU48c+MT8HLsGeQ6W+4bhT2lnwhv+rmaAZ+V2EpdXp1+wH41
6U17u2W0969Dvjn/LfypuZ59Mq9l3QY39sH4tbtOwyIlr/cG/T57ljhGc2R+
YavAj5SWzCf1GvsxqBtxefx8/NS8D8RRu95iD/KjsRtaF/AltQP71HIF+6yu
Y10OV9jP6DngR+Zc7GaBPfpdmYvenyjxF70lj+DXjvXY57IfNq3QP9P8lujX
HvhzaAx28sov0IPe+B0VPZHvX8MlTu0JTToCnq5LA1caDqZdiSt2cfqv4ExK
LPGnsTvjr9tMf5bozvCtNfi4z539mTmQ9r/3xn5PDIEe/h47nFqIPS3gfxaU
Zm7Mf8av2OXFRdzn2qVw7uL1gHgwcAW09iHiltFpxKkbVsv5xefct9o/k3Oo
8bHEPQdtOGdJnsy5/nZXzl82NeX8LXc85ypdo6G/mriv4HiXdkcv8p3jTI04
casz8Vf9esRjwY+Iw7ocJ970bMw5UMYB+m/oQTy6Wb5ntc1Mf8dqcP72fiDz
WrmE+j/Fs+6t44mL36/V42e17DXlv+yI36pPhh+H5H8LWzsRJ/cOII6/egl+
p21nXybMRM52fwefU7bjZ/35G/xue0fyB61pd7CQfTFd7q5T30+x/5qnPXJY
Hf83dDx6VPGJfA9oIzR/BfYp8if8h8iJ6LXFAXzy34ydMVWQ1zDPB1eUi146
NW8k7xb3EnlP3gV+7yxEfod+g34NsKbsvRg9LfYCj4sV9HBaNfSv1nZwc7Sc
T3RMJ89zrinxWvAbypVVxBXpT6EX3Hme7Ew8OSWYOG+v3Kf0m0DcsnYQcd45
3jNUI28Q15zdTh6q/yfQaufkPDyH+o1bc++z5RDiwwFp0AOroT1fEScN60i9
tk3IbxVxT0IteQx1lPvAk2T8zY0o33enXJJCvXvtoU6Hmc/XzEv1min3N7iX
oSRYEec++ZG4t2FfnmvboXUcoWVBxGVV1sRlo47Bt7Ao+DwhHNooC3t1/Tp2
prE75fTJUJ+pPI9Kxo51OMC+Vsj39e33YleeJIDL7+OwUyv9kIPDA9nfADk/
qWpPu7gL0EaZyEHkLeTotTVyot1DTjLkfQNnsZ/WU2mXfon65jPY79Se+A2z
C/GHPDuAhwYH7H96J3DSMoFyUXvxqx3A28VvkHetK/cTrE7K+cJtvmOprKmD
3jV0hY4UfXD01GlC53bQEz2hyzi/WjyXeCN6B/Zp2jjs2qMF6Kf/YfSxhR/1
vNdgZ3yqKOfsIj5JaEM72x3YI9+OYkdisAd+I/F34wzUb+FO2bADOxAXjn3L
XkecHJ9G/+nujF/ZmfnlPST+yT9EP2Ex9JM5hN8Ta9I+eit+ec4U+olbBi1P
kvsZeYzb4TvmO3QEuBXzDru2/gHlmn3hw+Io7H+8K3n+NXLfKjOM+p87EZeW
7QQnV/4f5Yo2/B5dm3l5JIN/+bXhS3pj4tppU7F/zXpAw3tg75qNYR7WZuob
T0LjDdAJQcw/I5N6PnznSqnZjHkcCQGXr3eD5n2UuHu4nL9nwc/wf/CPLm1j
3oVzsOut7kIvxtFf5SHswhPJ453vAG7fa8s6bb/g9x3fQCPa8XyLN+UbQyU+
Fnv+/Bb9FF1mP5Jqsk/axMEiL/D9+lTml6fhN+V8R/snNxnfvwFykO2IP6ad
Jb+ibHbU9cP4Eb1IaSfyYEBeMjPoPzWHuM6/E/5TRSv0024v/mHtf/Cv0/9G
j/eFQM/+KvFMS+xSpgl9N0yF3hsIPlzLBXd2z8Vv900Ev+7cBLeGteZ3dQ24
YfWSdm5+4NZcwbmS49iTOgPAzV7DKH/IJe95bhP9doplnI4e0OVZtF90TvKT
Vdij23vB66/Pg8stXtLvpoX05/UN7YYNpd91JbR/dJL/pw+6KfcIosDzDrbY
RXMj6r1xpZ1vM9b5OAPcXZ9I+b/339+vpl74HahlCc+zBoPP9XeAw1bv8AdO
xMDvmwvlvCsVPG5xDf4tNFD//B74VzAYO1AayT6qD/DzbdLJJyiuntAi8ijm
MPx2nyf40flu4LNR8iQb3vfSabQNcfTNUvTQIQZ/6fkl5N4wG7nc0F3OE03k
T7QM8DfwM+odc0fPEr/Fvxq/hLxWt17o7aguyHugH/Judoam+aFPLrdp/6UR
f2z4Mu715H+NXzdrOv7a5cf41du7yvmv/O/MsE6M49+W9nYKfmO3hvjFX/4O
dSjl+eFh+NHNKsifeWfS3iD9bxrLuDe/595TZQz+6d3l9LNW/NRced9pRAHt
/c4JDtai31dZ8GFmHvXajmAdaWWUb7owXvBocKu/8LNyEXgY/xvl51f4vdZN
+m2QSr93BlF2KuT3VbnsX/G32K9geb/twWBwKi4A/AmywLe/02mXOIz9Ma1C
Diw1OKdTK7G/5Qex03lTyC+ZT7vrz206US8wCrwzlhB3Wr5FzurLue46uZ+R
7IlcV95CD45NAH+ehEE9v8cPaXke/TIEoMdF0+V9HzdoWgf8074l0AePee70
gvqhVyn/pIIvSQHo+0X8NnWofG/7hXyv+/426qW0QX9HdwJ3Uq9AS6qhz5P5
HzPl2VHosnLotoHQkHbgg/1V1lfkJfcrNvJ9SHU1+Bz6iLx75RbyhzVPo6e+
5ZwXRV6UPFcn7N1dM/vUuwnylXUK+e9ygOd/HIKan0MHvYTmiRxufIC8j21B
XNXXlnvbx7eKPuRwXnnrNPX+by/x5ZxfoLnzoL2nye+pun6oJ5bQT/53ch/v
JXpb9wbjVgVJfJyHPPqpyKfhKfP7fRn1rv+BPNfrix7NLkTukwbgB6Vs6abz
xTiX9wXj35H/NNzlfniwK/Jdvz24MkrykIYZcq+8N/eVvObjf8Y76v/Lo3ic
89Z/vz0UPVnniR4cHI9++G5BX+yPo4/5C/A3VLHTRZPAR6uu5EW+uM38m/Me
qeLSB759GMM6fWqxb69LqN+tmHEafMG+9koCD9Z6gA89S+F37HtocDzPX/Sj
/01htBs7hH42Noav2UsZxzKL+RS0ZPxL3cDZCZPAXdsbrDvpF/JcYRnkU7VL
+Nn+k8m3G/fwXK3bTacmb/AgYR9+/uEO2CWPVeTZzmegx5ez0PsfAolPEuX+
wJti9ORVV+ifnXj+Mgt7ad5N/GR/Gj2uMRE9n/oS6j4EPf+iEL0zp0GjRqK/
t0egr46XeN79PPRRGrjSdxn0+8vS7gPldZKPrJTvxG87ybqe7MGPalKE3Y7/
i/U5WVO/gxmcM2QRt4dNQ+/XjCMPoExEry1NoZVR/B5RF5zc8YR2ll7ET4ZG
+G/+a8XOX5H7dvdf6nnJ8vfgiM118oD2XsyvqAzcMX/FfOLt8S+cHjDvY8nQ
5EmsS5lLO9vO1Es2EP/d0ti36c7sj3U01NiF9Xr50X+bevIdjzb4J9fm0u7D
OOrHrWc/v0mnbH7A7+ar7LeNvK/dSfJzlV3pP3MGtMwg8fB16vX7jX06uJp9
29KQ54Gf4jcZ89i3oPvwIWgVz/dk0F/ybPrbncI8dixj3l7RrCP9Ge0rJ8Kn
i92hVhb685tKf7M3s//mJvAroj92LW8/z3fcpX7lGtrfvoR9KwqmnLOVcdZ8
jp+c3lby/K3of5c7+2OojXzYuZBHVfzZ78CVyEt2Zzk3+JF+Mzbh55ljAoVv
yJ+6hjyWepHzsDAX4nG7ptwH9L/O/c3sWPJPYRXkP5VpVXo+Wt3I+YqxNzjh
bSCu7OOBv2DXnXjMFEscohqoH/gt/uWJr4lXfEPBZTUYu2DbCntQIfnceGvw
PKCM/s5OZpyUyeLHNCGOen0cnLe4Yh/X74KWL8NuPJK47qXEXQFR9Ov1DDqq
UOKxLObhM1ze/78IrW9Ff1oj+un2DfYrei7z2BFCOe4w/Vy1op9tDWjf4g3t
p5l4bppKP9UP0C6oMfNYexf+HRzL+ktDoVcDqR8m76tpD+FT8jDGW9OVdh5b
4GtQf/IaEWbi9CZfMs8ncv5dOhw6PITnQb7EjUpH8NziTfyQ8hRcN1V2RF7c
6us0YaYz9asb2b/afL9J82qPHg+knfp7M/o5x7mtxwHiE22RA+NUa0M/Gbas
q3Fr+iu153ks9w+Ulv/ocqcstejUMot2pgHMQ/OWeGQWeVpl9Afqv3wJ/VCN
eR9sx3p+4/xPWVabeWyQc0LFDerqotOEoeRjjfLe978bCh1TDzpD+p8u8flM
7lcax0LVNpxPKFacTyu9qKeFNad+zUecR56Xeus5/1aOdIBPUzjH/TcARe4n
cW+zchj6FPYV57gJjzsy3gzuW6rO5KeN4a0pz/uUchsP9kGTfS10of+fJd+2
oin9rP5E9q8e9ZpQL8yG9sqjV7rdsVTBdzVA5OYQcYDatCHrC+E9loTX4MmG
1fhrSrQCrUJ+lHDGV0fJfXdX5qGsN9DvIAe9vtlZ4k1P6Te3nfRDf5obcqMF
kh80urlIv/A74QD5E48f8R/V/fBZ8bvDe1G3kD//Ata1+JG8l+Em+9+ScdSn
8FPpkMv+360AF/3smP+l9rQbJPnK01BjbeZlSmuMXuyBnzZDRS9ey35PrAWN
fKP3m/CM/tTTzEuZ9lTnv1azqV7Pkidyk4WcmT9Fv5SKP5jf/+hHMYg+acXc
B7hOvwl3oEr+TdZR0oR93ylyG/aB8/PljuCMc2+dRheIPzhO3idLAx+M09gf
dYAN7ce9RW8foK/m08iLOUnk9g7yYhnQlv27DL9MXSmnzINPlhGSH+4r86pd
jfrLRZ8s1FcC7iGffcEjZUEjqf8Ovs0RuR9Sl/k7yfqPlbDOmk/0+ZonIz/m
IsGFaIv+u7m77FPS39RPK4PGIc9h9qxPOQW/1cPIjTFR5L272NFw7KrHafIv
lnLmpR5DH5Qy7qlYnOG79gNU6WwnuHAEuR3A/FOCOI/00MBBy27mbXZiHcoG
8FPzZ38ss9kPy8/IpWJTCH/+gF/mn4hTlc/QG7Wd4N+qJqLn1tDK6jy/rgif
cuGHpQi5834D334Hjyz10GN1dHXk7D74ZmqGPHjMYP6mRPDEVLch7VIEz1bX
lnE07gVNQh60jcitOg7cUiJ4b04dIPjsnK3Px8ZX7hVVgUd24ZLHsJH7QUtE
zlaD49pwkdN36G1CM2fqmcBZcyn4lOAvcnGN/VVSzjN+D/RZNdanvznIuxoP
XmuN6Fc9Uof2y/+Bf3Y8N/3AfqtdmkN/boU8Rcm6I+BnwgjRC+004xvT4Xtn
nlv8yMcY89hPpfFH7E8A+2mqJbjdmnkluCMnymHWpd6X8WcyvuLPvRq1BXJq
GsN7SMpb7L7qJHasP+2UJi+Y12fsn8ki9jBXcCmA/TEWMq72h8h5Ae2MW8C1
hGvIs3E8+m7MRU7MeVAlxwpqyz0pNa0V4zUVPb8HHimWg+BgJus324Nj2mmh
SeTZ1XrorRbDfE3h4vcUix9QKHw4IXg0sxnzfIw90ZLxb9TW2Aeju7S/Kfba
Af5orYW/y9AzU7rM11vs4eJ3zPsG95j+FUT6CRa8OCx87Ch+1Bn0SjEfo/6P
5cjVAnm/bArzsDyXdX4BvqhjwVO1h8w7XeS1i8jnPORdqVYFXiisS23HPLVx
2EebauC29hYcNj0H38x7xT78Df6a2oqe9cWvU6NEPpyQa5secu9vPfxJ6Ma+
m/4U/3HVQ9YX8ho6W/C+OXKodQY/lJ/+x/oV3mPSjom+2mEvNHvkWCl4iFx4
ws+E+mJP3cE5LRP5t2jif7SHn9pR5Ej5Ut6jO1WLslMR45qfQ22Lmecg8FKt
I/tUAh/MzwWPt1BW2gveeZSirztlnOl14UsQ/priIuN5sC9KIPqtWN0A98/w
fp5iln2cRFmbgf9pjgcnEoIF34LFTz5KnkH7QvZ5v8hZMfZUdZd6zuy76Zbg
xj3R+yOixw0bQB/AD81V5hMu/XduIfIucl3+qcix+EN38CdUD3BUPYD9USpF
ro0XsasLRS8PCJ9W0K82EnlWVuNXmkL+0w/0Tf0P/1ZWsK4bLdmPJfh/6hv6
Mc0UvC4QOdv/lvHzeb9e2QFflGrggeJwi+ed8SuUbWInU0Ved4vdeiZxwFIr
ymFixx7R3jRA+H9Q+lVk3RXYV+VEDv054Y8qL2RfFmfBFwX5VrNEXtrKvMvv
sN5fxP/PEHkbif5Y7mF3FY8n1N8kfk+o4HkU/FYXyr71l/1pIPZ9ieBXM4mL
/if+fyh+rPq78L0YXDYeRL/VIHBb6yxyUKs27arLPPwExz2OSpyH/6IMYnwl
8w/Ka0RPLOipEix8nYXcmcpkHz/Hnqun2Q9lPetUbcXv6Sx+3ij4bnKEL1ql
6NFR2pvCwRvTrKYX/h/EWAkJ
    "], 22050]]]], "Output",
 CellChangeTimes->{3.621263074266644*^9, 3.621264546516212*^9, 
  3.622796537191428*^9, 3.640870276881544*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"EmitSound", "[", "snd3", "]"}]], "Input",
 CellChangeTimes->{{3.621263086208103*^9, 3.621263090483128*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"snd3", "//", "Head"}]], "Input",
 CellChangeTimes->{{3.621263137513698*^9, 3.6212631401953506`*^9}}],

Cell[BoxData["Sound"], "Output",
 CellChangeTimes->{3.621263140930408*^9, 3.621264546700674*^9, 
  3.622796549905691*^9, 3.6408702773141613`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"snd3", "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.621263171141343*^9, 3.621263174686627*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         StyleBox[
          RowBox[{"Sound", "[", 
           RowBox[{"SampledSoundList", "[", 
            RowBox[{
             RowBox[{"List", "[", 
              RowBox[{"List", "[", 
               RowBox[{
               "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
                "0.`", ",", "0.`", ",", "0.`", ",", 
                TemplateBox[{"14384"},
                 "OutputSizeLimit`Skeleton",
                 DisplayFunction->(FrameBox[
                   
                   RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                   Background -> GrayLevel[0.75], 
                   BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 1, 
                   FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                ",", 
                RowBox[{"-", "0.00005928054451942444`"}], ",", 
                "0.000013921409845352173`", ",", "0.000015564262866973877`", 
                ",", "0.00013080984354019165`", ",", "0.0000990740954875946`",
                 ",", "0.00011708959937095642`", ",", 
                "0.0000665523111820221`", ",", 
                RowBox[{"-", "0.00008933618664741516`"}]}], "]"}], "]"}], ",",
              "22050"}], "]"}], "]"}],
          ShowSpecialCharacters->False,
          ShowStringCharacters->True,
          NumberMarks->True],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{82., {3., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{67., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{67., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Function[{OutputSizeLimit`Dump`x$}, 
              FullForm[OutputSizeLimit`Dump`x$]], 178, 15253140828594910328, 
             5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{78., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{78., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Function[{OutputSizeLimit`Dump`x$}, 
              FullForm[OutputSizeLimit`Dump`x$]], 178, 15253140828594910328, 
             5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{57., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{57., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Function[{OutputSizeLimit`Dump`x$}, 
              FullForm[OutputSizeLimit`Dump`x$]], 178, 15253140828594910328, 
             Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{99., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[178]]], "Output",
 CellChangeTimes->{3.621263175133329*^9, 3.6212633284825773`*^9, 
  3.6212645468153677`*^9, 3.6227965520227876`*^9, 3.6408702774655285`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["8bit Encoding for Sound Amplitude Levels", "Subsubsection",
 CellChangeTimes->{{3.6212644457325068`*^9, 3.6212644621644707`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ListPlay", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"snd3", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"4000", ";;", "10000"}], "]"}], "]"}], ",", 
    RowBox[{"SampleRate", "\[Rule]", "16000"}], ",", 
    RowBox[{"SampleDepth", "\[Rule]", "8"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6212633619203987`*^9, 3.6212634589884*^9}, {
  3.621263490283214*^9, 3.6212635179934473`*^9}, {3.6212636802466583`*^9, 
  3.6212637466677027`*^9}, {3.621264401550213*^9, 3.6212644241155863`*^9}, {
  3.622796578500454*^9, 3.6227966347143636`*^9}}],

Cell[BoxData[
 InterpretationBox[
  GraphicsBox[{
    {GrayLevel[0.9], RectangleBox[{0, 0}, {360, -164}]}, {InsetBox[
      GraphicsBox[InsetBox[
        GraphicsBox[RasterBox[CompressedData["
1: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
m4Wg7pTkp3IZ6E3ZE/1jEx3/5rV6X8kVYaudT4MkTzGqT4fSHuQX4VQabdHs
SjG028tl3g+XYHyd14GjAky8txyYlnrGhPLVVcIym1hYeJfcfoKHhWZGwylr
KhPNp2y0vVNYqNa3uNFjXQYR3yaJpWtLcaovu09JOQ/L27u2u2sz4UIxGl/6
uQyXN2QeWvKtDGfFK+qjfzDxZovicbGQdkgX6nH94LTimsT930k1HPRO713h
MsTBKrqoA89oPa5E+tc3SLVgjVVSnsDFBni9fWx0JrgJa179U936rRU2dqu2
/DNrB5dN13rnBA6ETvXvNk5pwNgqf993qf+/z7KOdSKyGcyNY3d9tBvxhnXG
0rq2BuHeMyeybjQjYeFwmix/Kzy0HnDbirZhSUIBqZTIG+OgGr11LdFnD5Z5
Z2hxsCg689OV4FGj10vuUQ5xILj9Nkv9Gxu8JfSvyelNIN37+egtqQlCrUu/
PM1gQ+Bnjqvo1xY8l78wPzfTiNklzk3S/xohO+X7cQnBo9omOla8RnXIKFZx
HL9dBx7jnw8CEmvQwrvUTexGGSwPn/mUbVaAcw8L13m30GH4JrYy3yAX+n+K
MkIJ38iaLJwf5C/B1jv7WXH9TMy/CRjaN8mCsN+MRKkcCzzl6sNbNxWDre/l
EtFfiKo0/ris//IxsZw7bPscHTusOXdMlxbj/g4xFUXhUpzYdow1zFOK3n/2
ndQnDHTe0/bWli+C60f/Xxv/5aPt5bN463QyDPjvSOv8y4PAA+fE3TcKCA7N
4D3lQYHZIcb9A4SPamcfGYkLyEWiN63D4kw8SD9rNqwnU7Hy6vcYMSMaVrZ3
7ftH8NC9Tk2OMMFVDtJuit13E3Dp5K66v0IM7H+/t1OnjIl3CSXxjX0lUH+U
M7HMgARGxMVnBialyA3Q2S5axISYjVXwob4iXOpz0m4MZyBiYPNKt2YGsjmG
t9vc8nHd651y9AM62jwcrQqIuSHYEbxN8TMFqcnqu5obyBjRjpb+pJcLk/ZE
rB8ggyP5y/820Utb1C6twS4Kzm2L6fGPJqNo3a/QoZAsrHx/MPW7NOHJfhIq
Ymwquu8cD5tiEp5rUxSTYkpwf32PkpULFaHlWW3Ui7mY3izrH07wn4vgjcb5
bhIOyrHEKm7mYcOzGLbIQj7G/97dnUh4d9HH8NZ6oXz8s39npz6fhwfDpUNa
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
XMyv3fUjYoIL42sZI018NlzpQeP/+/uHEO2lzN0knypPJucrs0keG01lubHJ
HLy5ctbNlgbP9hViSUMMNN8498zhHgc38ud8uyLPRfiOtKsDP5jYdCGdGeXG
wiqudbfhacLft3ItnQw5WGMSQ1EjPuuidX/vB+K52/v6ExnHGWAc/mhi28FA
77IrZk/MWPAUSE+ubWEgp1nFnSnGQHhxjxE1k/BB+kCUJuECXX8NTaNBFiRv
H4yc48WGRLpL6AIeGyITMT+q41mw9HnWebCVgZexCyLGjpP+fOsU5LuRBdGX
51rzDYg/1pyoneHAgWr3+W6WhQDXvIt16ZcEMHoroqgRy0Wl2eJtVywZUPy1
5Jce4TRnObdD+/YxsTw4e+62GDK365ZPvxvGwE1dg+4Fz1lwmLhmrvuOA+XQ
ngNvr3LRlec5qC/HRvyda+q1ecVoqmyTT+gXgn/6h+PdzlrsNbxUc6JGSM7j
+fmlDaUY6XmW6FlRhVulA61KBUJ4zS5RMtGvwmaFL/tX/qiGvspr5fYykpNt
ijLPmaUQLt5z5CTh3m3LGnZaejBxgHes/BjJjT8PfxnvI17SdlXmaI4aG9pN
3ywrNNlQlrpg7WZL+sjT7lwnOY8ff1s6dj9KhXqaz+YFI1lQvRlzfjeTiVw1
0VW9e1koEj04mkzmQ/PJ8tJ31gwcor1fTfdnwrS15N91WeL/N5VsGohHezqf
cqsyZmGW8y9mzncmOP4hY4vjuailrWU+ZfAgUvw8qv4u2V9y4z7/6yvTjgm5
oVAm0iPVK+9c58EmZtT/YgAXW6rsHw5PsBAcrBW11ouL3zpaJ6a8eGjqX7tZ
gvB+v+jHYDW9VFhflp5gT6eC8/qFWfd+kq8y3bLtSzNw2LJIOaWEQc7jxPww
Uw6mJfCe/ivhguNyocjRhorYV0c2p1whufk0pWnbCzbeXto4cUCbcFH5M1dt
OsmTygHLxqpMbKu/8/fP6nR8SOtaYP8lDdESIulTzXQYlxxvyY3JAmssUt9s
y/9y79foiwNUtI7seZ7VwcKu78kG/n+5mH630+z4Hy52+8xrFlvMhoHRxPi9
yxRUr3FI9NxL/r/ejJNH57Kw5vw76a2RbJzzunlHTZOBG0p9grxJBt5remWr
f6dCIbuzaumWDMz8tXroX3wqVhy/cslxkoLKBe0x5sTjpnZW8atPsiH39c7w
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
Od8=
          "],
          ColorFunction->(Blend[{
             RGBColor[1, 1, 1], 
             RGBColor[0, 0, 1]}, #]& )],
         AspectRatio->Full,
         ImageSize->NCache[{
            Rational[6001, 16000]}, {0.3750625}],
         PlotRangePadding->None], {0, 0}, {0, 0}, {0.3750625, 1}],
       AspectRatio->NCache[
         Rational[6, 35], 0.17142857142857143`],
       Background->GrayLevel[1],
       Frame->True,
       FrameStyle->GrayLevel[0.75],
       FrameTicks->False,
       ImagePadding->None,
       PlotRange->{{0, 0.3750625}, {0, 1}},
       PlotRangePadding->{
         Scaled[0.017142857142857144`], 
         Scaled[0.1]}], {180, -35}, ImageScaled[{0.5, 0.5}], {350, 60},
      Background->GrayLevel[0.9]], InsetBox[
      GraphicsBox[InsetBox[
        GraphicsBox[
         {RGBColor[0.325101, 0.364492, 0.820256], LineBox[CompressedData["
1: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
pEsObCb75Rs1/Ck4c9i35VoqDxsBoGHe4VE+tuVkP1MgnQrP8oSFPYgeEs7j
UvFyncujYBK/qXwemIrOu942PZ3dIPKmVPhfdR3dzp2Hr2I5T0jFP33fTW/z
2fldKn4uc+tmGs/hOAVgqVgy+rC5BfEjnyiPSsWhi/YxSy5wsFLIq02p2N2N
H9mH+EOBT6Vi9uo9r/16cTCiGzgV/Q50LcjSlSOZ8qpUbL7VT8mFxEc9arhT
cV3NumXMdV48H0zF2hvdQ4ZP5dGJJqRUlGlZGriR5y3wrFRkxnfwVCf6670C
L6Wlov6dpVJya3aemAot72eGzps5UDsoS0V714b1I0k+nUUNcypM+w3sYE7i
TTwFUKn4XLmr6Mkydv6YCsnu8pUlzzlcpQckqTiONpYF7eRoT3lYGn7/UUmZ
oUL2s8IudEtDWPHjW4aLePG8Mg047bX6OvGL66jhTcPk0ikGJhcZL0vD6s2B
C+7f5jGdBqw0HPWsufPehhfPN9PgPLLQZddJDlROLkvDq0V2W1ysGE9Lw4Gj
yQeDyXpoQxNwGkpPaz7cfF4unoemod8/nZeX3teB4gGnNCyorTaOOkr8Od3A
adjzs1L5M8kfwnE6GU8Xj8N/xjH+loaX4epd3hC/ERGueKUh4vIivWqih7Vo
QkpDy+JCn03HeFD7m5OG13xp7q/tnHjemob0nzbZX1pz2EuBaBr04x82zkxm
vC4Nt4Jz/GZ05rGMGv40WAeNbX/1IDufTcPGZzv6py/kQO3Rf+mwejd4aTVZ
73coz0tH7ZjTemNecuilCFca6dB+nDMxL4nxvXTcfxAVs5y8v4UeEKRD5nS8
xIOs552U96XjOzdmj9Ipsp8V8nl2Om5u5IY6FLHz33SMKvPct4qspxzFcl6T
jh5Xu8h1evAiD0yHzqQNV6JW8LhNgWQ6bidFqVs0sfPidOye/1/Ugno5qLxy
TseH4zHmW9Zx+E55YToMu07vf+Eqj610A6djfYXbt7bz2flyOuT9HvssXslB
sPvpcN7tqPXyLIcMASjidpdYu+0kvtP0W5QO/de5ZU8N2Hl0OlZO3OSgRj6v
qwL3PU3Hg3F/jOLJ/qbp6GU6qiIkV+fOJftZYQc/pcPxY+qQXbPZ+XU6Fq12
fYr9PKopEMxAF7vZT93yGY/MwIyJeZ79ozmk0AOrDJwdMub9k/PsvDsDJSsM
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
lXa0ES/y9jLY1R6VXSR6XeDtZVg9e23yveWs/7oMA0auDJ3UxHi7FAd7zNiP
OrnI26WI8Tl8u6aG3b8hRetzNqufhLP6SCkcMuWTJY6Mt0sRf238ehUNTuTt
UuTsfrn0uBW7D0uKIfs2B5RY8iJvl6J+XPjS5SfkIm+XYnlq0lWdvHqRt0uh
ZrvnsG8tu99DivFxFzdr3uNF3i5FcWRZwzmSfwTeLsXv6W+CpF05kbdL8chv
l/qhY4y3S7F4vM2yLAtWfynFzU7WreJT6kXeLoXjA327ws2cyNulKJkaE9R/
SIPI26Xo2btikNlZ1m8uxXx5z8otrRlvl0Klk9X0mSc5kbdLkaLRy2ziEXZf
nxRTbre6n/WH8XYpNKeObdkykBN5uxSSLlPd/hC9JPB2Kaqr97srH2D3k0gR
pOswWL9RLvJ2KVwXSLx+KTPeLoW3Zneltr6cyNulqJg0yCNiW73I26Xod2jx
/OSprP9diqd5Wo9KvBlvl0L+04PXa+RE3i7FmuaC+tRKTuTtUow5v7uPcSgv
8nYploV1b5rznRN5uxTTk3hpR5KfBN4uhfXGXsfHXWf3pUgx9l6Y+Zcmxtul
GLF7zNrDEk7k7VLcPnAoonMnXuTtUrytMox84MzhJRVY5Hmk2TywnyIXebsU
ShZ5PV6NYrxdCtme6gMrJ/O4TAO0FMOrUtJ3gvF2KfSTQnQV9Y0Cby/Hzr6F
tbOucZhCJ7icPMdt1wqI/xd4ezlCxzRv0gtlvL0cWa56/axteLHfvxyJ/Z2H
D37PeHs5Ok1+mKQbzHh7OTZ5pjibkfkU7nsph1qxz14nC3Y/QDmWee4eanVO
LvL2crSsbyz5RZ63wNvLsS5gSUyGHS/y9nIs79rTrzd5XgJvL0ev1l3m/SD+
QODt5YgaajO5J8kPAm8n/z9ap3Z4FuPt5TCxHOUStY7dP1COuG5/ns+V8iJv
L0ftrP3K1STeC7y9HI0bc/dVDJWLvL0cPZ02Sz+51Iu8vRzHvCfYd23F+tvK
MfWo5bc2H3iRt5fjX937whaifwXeTp7nOfP7D/oz3l4OsyLjv3UHGG8vR561
Xm6P+4y3l+NQ9qyUQ2C8vRyV377tateR8fZylKk1qs4rYby9HDLjXStX/mH1
tuWYpW23rK8t4+3luCxp1a39XsbbyxFm/iJlajzj7eR57zm4YtRFTuTt5Rib
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
Md9MQmnDNpS5/FrMw5HQ+7UZC6514pGfIKFNjRQ7en42wgtY++i1q57gxyMP
jZ0PLiXKhhWL+TkSOr86akzLB2L9T0LSF2Mvdh8q4P5cdrzrpBzI6i0+j0BC
PUsFtBKCRF+QUPBb78tdW4n5DBLKvxn6InmYgPt5WXvrEebz9b5YL2Sfp606
acFmMZ9HQtlbZiQMOscjz0FCsq8+G1yuix4hIeWdVp0Hf+eRz8a+73/RmGvE
PB/Wfm4f8zhwWsx/kFB6+ZZDBniL9wtL6O6PtqerHxbz3CS0t2Zv74+XRL+Q
kHarX5kXnmJehIQeGIa/2NNXvL9YQrPsXRv/qiPWIyXk3SQlTV9DQF6QhHbs
uPDRm80vnfkSEnJJqH96wXFxfaGE2t561j1VJ+bFsfM589KaZDb+d+YLSejl
gb+NB1UW7xdi5+sk6fIuU8X7lyV0VPLS5NdQzJeT0Irp2jKnVovrESW0Z/nt
NuPvCMivYO0xMss+5qAJ9zuz8zPe2GDOeAH1TglFb3jw95aXEflFEipTNCcu
OMeIvAsJxW9b2/0q62+dniKhcgf+PvQKE583IaHGg0OaR7QT844k5DMo4cqD
dLE+ys5/F/8avdaI91Ozv5dllLX/z2P/A3kJDek7KbY5G785/YX1d1Yft6Nq
AXkaEgovvcTjxFoe919LaN05fZFHmFhPlVKN+kI1cykxT0nKxo+u9+6y+Zcz
f0NK6nHHxjQ0iPdrS2n9mZ4fM4xinp6UhEhZUZuRAvKXpGQdrNn3Kd2I+quU
+MHHLmY/MuL+bildLl291McgMX9PSnPLLvxTVy/mO0upvSbn+LfaPPI9pHRl
ZH6N1u/F+8GltKSJz7KTJcT7o6SUm+rCe88R852kdPronqjAdmIeiJSOj0p0
G7BV9CApNSr5ZMUXg5jvJ6XeN98/vn5JzIOSUkhaYhlrNzE/REqBX6/l/O/+
/Nn/eZGUSj/ISu/HrufOPEAp5Vds/f1xKXG9ppSq/Eo68vwlj7wRKRUPqxJ+
75Z4f7qULrRfXXGMm1gPltLHoIBOr5sYkTclpW9jPiwd3oxHPgn7/b43h3xi
7d+5vlNKmUfrS6auFvMGpTS/3b0VfdqI+VTseMhD6/eobsL9Wmz/BLTYtTpc
oEf/eZSUBuirx0hniPmEUnI/+212X624HlRKA4/8K+/HxpP7/6svS6laID0b
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
2uDtGrJFV7gU422Ht2uod9WfvZoH2+HtrH3M63nWn/3t9HbWnlYWf9lfxg5v
Z8dvqaMB18IGb9eQ++4liz8ctcDbNaSf1uV9/+l58HYNxZWyzbLcFfPcNBSS
65kb6KWDt2uodr/4wGZsHuv0dg1tPlZ62o7jCni7hgZ3t2wJWC6Ht2tozFyP
15695PB2DU1+s+F7+fNyeLuG/O52u7h6lgLeztpTzFtFg8NKeLuGvu+p2auf
FwdvZ+fn7CMuD7eq4e2snwxKCW7WRANv19Dsu4tn1WTXEae3a6jbzPhvZfQq
eLuGUvct0k3zVMDbNbRyET9HL0jg7Rq6o/p8yjQ3G97O9kd3l4pzh2bC29n5
XCG7SH0tHd6uoQcnB227xz+Ft2toQdgQ3/HRafB2DbuOujaw7LwPb2f9+Kns
0v0P3oW3a+j84ZMX2xy+B2/XEF+9R96wgkfwdvb7jjmCKsxNh7ezzwv50+/O
t9fwdg21C4gdNywrF97O+qNS2y63/SWDt2vI93C8+UyqEt6uIZeaiR4P2fjA
6e0aelftffC5+2p4u4b+DQq6E+KpgbdraNkie/Dr0hp4u4aCVUtqXWTjBKe3
a+jy9SV/pA4O3q6hostmv87dOXi7htR9P6fZ2Hze6e2s/wssnlquswrermHn
wdGqH16q4O0aKjdkuuyanxrezs6ffVffVG+jhbdr6KP3pbe1kvTwdi3lXC1z
t2Iz8fmGWtKlR2r+DBTg7Vr6HuLSMayTuL5dS+3e1N85vVQevF1LQ+9MNY6+
lAdv11I106uLfdzN8Hb2/nrauGseZni7lvp9dduTfyYP3q6lVQEBHSoeEde3
a+lrz45juw0S17drafuKafWjSvDwdi01m77I1vaeHt6updGe3+/f57Twdi2t
2WOeuS9YA29n12nPGR8jOQ7erqUBz6q36LBfBW/Xkilozvyr15Twdi2trByb
NzdQCW/X0tv4R3+HdFTC29n2uMwOO3NVCW/X0rOAtLezQlXwdvb7NyyY6f9X
BW/X0pW/j7rlTOLg7VryDgud4rmIg7drSTW3oX79Ug7ezva/9POTsHscvF1L
6T28RvRj43ant2tp3dXimceL1fB29v1nDxZWi9bA27XUv/qgruVYP+n0di15
BO9ffpeNo5zerqW/Jnu+q5qDt2sp4nPtCk1iOHi7lq6/3B36i80rnd6upcLM
4x5VWXt2eruWppY6u+7gLy28XUsdpxVU3ewprm/XkmPk++LPdXh4u5b8JaNb
e9QS4O1s+yt86NHNzQRv11Kvaa3a+H8xwdu19NEjatSzlDx4u5a+3K4878Zi
M7xdS59CxrQv9LDA29n+DrEUnrlsgbez9jRvfGiZqlZ4u5a67fxaovsoK7xd
S+a8Tbqba63wdi3tL2c+tJ9dz5zerqX3Wwv6upe3wdu11DXjte5pjA3erqW4
WWUn/zCL3q6lUj8Kg270s8PbtTTNfdmNqHN2eDv7/pSMhtu/2uHtWrrq197v
UncHvF1LNzn3UQ+3O+DtWlomkZ5/8MKBvEMtra9VZmzKUwe8XUs777daX3et
A96uJeW3R0U3OjiQp6KleVsDzy4p7YC3s/2XEnR6oMUOb9fS3FqNAr4a7chH
1FKDS9HS8Dw7vF1LwcvSB9RNscPbtSSJq5y+qY8d+SusPcQOiRt3yQZv11LF
c7J2B8ra4O1aqvV2ZMGomVbkKWppzjR96rE8C7yd/b4gY6VlBy3wdi1lNIy5
sGmJBd6upey0WcsGzrXA21n72LXxV8ZmC7xdS1sjjnQwPrfA27V0Z0yVbf3c
rfB2LdULu7PySqgV3q6l+6vqOHxvWeHtWqqgHTnsUzkbvF1L5Tbs+XQryAZv
Z7//V/Onr+fY4O1aKphS+HlxqA3ezvoXZUCjvk1s8HYtVfcvqHM6zwpv11Jo
0PFZ/aVWeLuW5ivqJ/z7a4W3a0l7eO3tSDZ+cXq7ljKVM5Qt2PjZ6e3s9XlP
b2Ww8ZLT27VUuUOrL5fP2uDtWsrvOnCKbIAN3q6lJMWLKQ0fW+HtOnp/f/ft
/qz9O71dR9L6oxIOVbPA23XU98foNxsu5MHbdfSuSeCEXa/F56nq6E7JOw9f
+Brh7TrKKzHcJeikBt6uoyHt+5WdWayEt+toltnXr2K+HN6uoyuPc06nDZXD
23Vk9I5ZX/qyHN6uozlf3Gq/OKuAt+so5Nn21AcflfB2tv2zfq/aMYCDt7Nx
U+WRv+IOquHtOuofNO3oKjYucnq7jp7uOeT4xMY1Tm9n318hZvD1Tmp4u45o
Xb/yzRYo4e06urgy5u94mRTeriOvFd5lPxdlw9t1VOP4pPmbA17C23U0NDFk
zei5z+DtOgr3vJS1xfUxvF1He7fPsydVSIW36yhlqN/Sz+qH8HYdlfk7cUnW
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
TiJvZ2CZ1/FvG0WJvB3vRzadEt5c/T0uA/U61q+/zl4mb2fApi1z+UqYTN7O
wL0OZ7+PEmTydgaWKOuPaswU8nYGar4osR10ViFvZ6D3wwd7O39SyNsZOFVy
80PdPwp5OwNu27JN20Up5O0MTI5ObXbaWiFvZ0DqM3DMokvq73sZGDv6cbp/
lUTejvExI6jaJB+JvJ0Bw+Lo0LCFEnk7A8zyikYVwyTydrwuMHh4bZpE3s7A
VPPXib/dJPJ2BgpD45ztgiXydgbydcGLZl+SyNuxPfM/un7F99d7OwN/3+xM
2i2K5O0MrDnmUX3WYpG8nQGrju0mbOXV3w9jfIzUTLl2Sq23z8Av50bZ2+0E
8nYGurTb0NJ6nlp/n4HMoyO6btwikLczULp7/utHkWo9fgaemM+av2SiSN7O
QOCLD4Hun0TydgbcG/L5D2dJ5O0MRHf8/bNONYm8nYE2Pfq9f7ZXIG9nIKDM
4UqUI0vejp8/e9KKhFnF5O0MHA8yq/c6Wf29A8bnxx7uru1SyNsxP3zbPND/
+DvydgY6LHSaOdD8PXk7A6NftPUrjEglb8d41fQfOK5fJnk7A+bdj3aO3JZD
3o7X2W+NKmcUkLcz0ML+rPm2x+r5uwz4vy5dm4fzrt7bMb63Bx1YFMyQtzMQ
U/l9cI8Y9XwvbJ/53x8/OFRE3o75ac+jZtsrM8nbGXBo4Pr89Nt35O0MzPTb
NG3FpkjydgZet3NcdGt8GHk7AxavK9wL5t0mb2dgp/PXHT6DHpK343idf/rO
AscI8nbMbwc4qy550eTtDLStP7XrtM/vyNsZCH/jU1TXIY28nYGRc992eKDJ
Im/H+K/zLKO7Tx55O7ZH1wP5X8sLyNsZaDlOd9NmbCF5O8av6Y5p5gH55O0M
vOwQNXSlUy55OwPDt3T6VpieTd7OAHu4Z9GxD1nk7QyMP9Fk9DN8/tN7O45v
cY7zx/BM8nbMVw+kdxGWGeTtGI8u46wPWaaRtzMQvPfFzdoDU8nbGbiypV4r
k2Fp5O0M3LJzr1HmkEnezkBXoeJo2DjV23E8/A0M6PG5mLwdx6+5Ybg/5jm9
t2P7Lkl2XTyHI29nwLjqSUjlZ568nYEjPe6lTsoTyNsxX65r+/16iUDezsD0
fouGJvzhydux/xpsLzeZqJ6fgH/3G5rijPO03tsZsGwytU+xrpi8nYFxj2ae
63Yvn7wd48n69xGNSS55O36/g89bRTfMJW/HeB8cs30m/vt/nBPAQEjH1QU/
pqjnpeH4Ch0/ZT+Oa723Y39UPvx+9Ybq7QwULX4xekFdgbwd8+mO8/6mvQTy
dgZGfNckO5rx8O9xPwTnl4gjEXf6s+TtOB8O//ku7oh6PjK+vunafhcM1Pqv
DGzf7pDzbWAWeTvOd60GTG/qnUrejuM3Y9bl3E6J8O9x8D7OF8PCx7mZJJK3
M1A2tE+w/cRU8nYGbA9urmaQnkHezsDtgWt8F7mpv4dhoOftCDiwRa0fy8AF
f6vs690KydsZ+HbF/oS/byF5OwPdB5V/cv1bQN7OwKy4pM71b+STt+O/tx42
/7//P9J7OwMbOEuvNRnZ5O14P6YR10JqZpG34/znlmZQIyqDvJ2Bx5/Oj2tg
m0Hejv3tNH2C05cM8nYGEs0HG/ZZlEXezkCjvD8NDlvmkLcz4Ktp0bd0Xx55
OwPHXOuMca1fSN7+X78+m+sVXUzejvmm6hX/MFlD3s5Av5e5Y/Jw3tB7OwO5
Lo5PH9xnydtxfKxcdvBFI568nQGD4Yc3dl8qkLfj+70OzRqzQfV2zAcexRkp
krofkIGnFjsK3l8UydsZMDl2LPMx5n+9t2M+s6vX16qSI2/H++3RMeJ7JEve
zmA/3Kr2dBJL3s5A8tTrXQJfs+TtDMxfsdI8wYAnb2dg78Yyu2mFAnk7zue5
/oOsWsrk7QxE6Lhxnz115O0Yb70Wz66sWUbezkDniotTrPI+krer5wp9Im//
/2u9t+P888cr8fbQMvJ2BgY7G3+2SdCRt+P95Hl7Cwtk8nYGnD+cr/u8l0je
jp+fEeLZ24knb2egwbAlZ3xcOfJ27A9hsWh8Xv29EeZD8/YP+gfz5O04n/u5
571xV+t9MXC5y2cm74ZM3s5A01Hhsxx66sjbGejYdN244mAdeTsDW0/3MW02
W0fejvPvr14zF+9UyNsZqJOtm7FirVofDNcTpwM3L14pkbfj/b6c0+qHvUje
zsJaywmDg0ar9X5ZGPGoSY3ZHdXfM7Hwx2dNN/fNHHk7CxfyrobV3sqRt7Nw
NOttkscfjrydhfVl+25fvsyTt7NQ/cZzaSrDk7ezUCNmYVJ8PE/ezsLpC2NC
Gvvx5O0seCfbZke9U+uPsfjc9rdO71UCeTsLFo2feDneFsjbWdizOcZi71qe
vJ2F+i1g+B9ch+m9nYUDY4JONbcuJG9nYYqjqYmfNpO8nQVlfUL3qQWp5O0s
vK6oNsSydxp5Owtd/ScYLtJkkLez4GnPrrTgs8jbWTj8OCx/5MFs8nYWwlaE
mS1xzCFvZ+EnhEovTPLJ21n4mrcpNOJSMXk7C0aD2tSuflj1dhY+vHm5+nRd
1dtZsEkxbH3CpYS8nYUOjYeuqDLIIW9nYfXQbq7hl5PI21nY3u34aquzMeTt
LFhGNHh+78Vr8nYWuo9o73t4eDR5OwtPyn8VjE6OIW/H9zer+6zO7Rjydhas
r0QOW/wklrydhd7b9iR/yUsgb2dh5ML85o/K0snbWTCesHrs8We55O0szMvy
mLfqXCF5OwtjDEfub7xMPd+EBYfwAVncPtXbWSj7tWRf/ee55O0YXwM0kUde
ZpO343N73qdvux5kkbezcLHrwv1jLmWSt7Mw0WDD1LCf6eTtLASlfzXN655G
3s5C7f79HWYlppC343WZe058k1TydhYW25s2vTcwnbydhSP5dQvDcX31b/ls
zYKm6Xr3ga3yydtZ8PrQxnhW72LydhZc1gfP8P6gnl/OgpNRDXEHrhv13s5C
46N7a09czZK3Y/ynTYi5/5KFf8ur6Sy0H9k9cf8SlrydhXud6kincZ2t93YW
rpgPzxlTQ0vezoKZqUHSkOsl5O0sQFXX3hs7qOexYF6evdA28HQR/Jt+bVjo
Hxxi9juqiLwdv9+P74U7vYrJ21mYNXNpp9cm6nktLOzcvyD7h6t63iILef3m
Tv87UvV2FrhWr6zdPnHk7fjvS8v2utYWyNtZCP1b/uuITq0PzUJMi0cbL7mr
3s7C9z2HR4YsYMjbWVjaWVNY8VY974WFevGlOT2S8snbWVj+aEWcyZJs8nYW
3OcW9atRJ4O8nYVrLhP9I8pTydtZWHlYWTPbL5W8nYW2zs3bNPVMJ29n4Ver
UmffOtnk7Sw02PzU7dFCtX4dtv+T1uP9QtTzHjH/ZT1LCrxbSN6O7Vm+37D1
wELydoynugEb9t3PJ2/H/OkQ9NhOm0vezsLNC95rss+q9e5YKP7wfPOGsxnk
7SwI1ddUq5uZSt7OwgaT+JPz5WTydhzP60ecNjuZQt7OQosI221WJWnk7fj+
Nkm2BguzyNtZaPoXkitqqedJspAQfCugqHYheTsLd5hF2e2DisnbWfALODDg
6Q0NeTsLDVvsjbueqSVvZyG+l++TGriO0ns7C1tSt3i+w7jTezsLvuKv8gK8
L7234/ho9bycwzjTezsLg8pNbXphnOu9nQVpTeGOOf4seTsLA19+sW3QlSNv
Z+HLwmT/gDsceTsLbxtFtLM058nbMX8syj9a/k71dhbMex90kFwF8nYWnpca
3XnlIpK3432yPRpHv5LI21mwKgs0OlNLIW9nYX7Pe69sWuvI23F+/O2x/reo
I29noeaVua47NpWSt2P/cbdWfrxZSt6O/f8tPne/ayl5+3+/A2ss+37Ukbdj
u1xY8/N+Kx15Owv2u6fOqdNVIW9nwe5yTJ+h09XzdvD9X1abMOetRN6On/83
NfHebfX8HRYuXzcraaeRyNvxetzP9NdTZPJ2Fqqyh3bfXi6Tt+N4KtFW3r+h
kLez0HrS2sNrq+vI21mYdF4ynScp5O0sZJZdDXdcppC34/h4MzOufJFM3s7i
+qx0WrOWan0SFpYN/Pt0cy2RvJ2FmevG7/s4TyBvZ+HRr7bDsgp58nYWVnHX
Aiuu8OTtLLyS10esC+XJ21k4Fu0/8WYKT96O4//LyMnOhgJ5OwtFh26150+r
9U1Y2N3r9qgjy0Tydrzfn9li9XoSeTsL2blzUryt1POBMP/BiQPeRhJ5O7a3
33XfOb4ieTsLHR/dHOP7SyBvZ6HTBrOXJocF8nYWtr1zC+/3S62PgvG67UbH
yTYceTsLBb/XtRhYR0vezkLA61M9Wl3KI29nodlCp6tzh6STt2P/Fg7dsnBu
Enk7tlf7p/vnvEslb8d5IcSk+I5rDnk7roc6e305ebaYvB3H467HkWPnasnb
cR2+4KjfpG+qt+N461Vrjxte672dhWoT4hckP9eSt+N4EDrMibfSkrfjemWI
ZUrggxLydha0GV08mr3KJW/H9uvHnms0N5G8He/ffesF25gw8naW1t/Vqum9
/f+v9d6O42P5FinlzSPydmyPkwcsJiTFk7dj/qtja+I4L528HdcDbwekS0lZ
8C9d6Vios8P+7d92ueTtuP66M7zRYCf196LYnxWrrKK+qfXVsb3mxZudnVtA
3o7v/zsv6kGfXPJ2FvpUzvYa3CoD/oXzV4wnLmaO96j35O24PhmUEV57WSx5
O47nD00y5tyPJW/H9a2v/cXOpxPI23E9GueX/6l1Gnk7ju+VMV8uB2bCv69b
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
SabbnXzMePJ2HI8+5VXxyzjydmz/ygvtapkw5O0iNHV3NLu+voi8XYTdJtlb
XJvnkreLkGXX2v9MXA55uwiB49OCmo0oIm/H+THd1uBcT5a8XYQ/lscXvcF5
TO/tOB83mROViuNI7+34+X0u77rcmiVvx3W3x+Hu67ur9WRwnX77xaFbFaq3
43jdOulnZ+N48nYcHzHOLuULVG8XwXpL+RPvnWp9cBH2fgsfutOygLwd46Fe
Nt/dW/V2ETZ4vZu7tG42eTv297y/8drZmeTtIlgufbHaySaTvF2EZstdjZ+n
ZZC3i9D54PkZze+mkreLsD54onbSnDfk7Ziv7Y+X9DR7TN6Ofz/h8DmZf0ze
jt+nYt7njxPfkrfj/aZtdM9qlEHeLoLGx2L73JY58O9xIUGE+EcnKvYOzSZv
x/58diHmTHgaeft/dZJs2t0blkDeLsJ2w2pTP054S96O13vW7W2X/o68HV8/
PdCvhU8i/FtOpotQunvEyaYJSeTtmD9zmXo2v5LJ2zGe69UJZS6mkreLUG+N
ErXdLZ28XYTQpN5Jd5dnkbeLYHohvWqBVS55uwgNfKr6P+ubT94u4nPgzkH9
9heQt2P8Te301+xMIXk7xsvzeXLG80Lydpx/HhdsKmYLyNsxD9391tq9RgF5
uwgXGz+M47X55O24fvu2eJS2qIC8XYQMlwCHOe2KydtFCBiS+bHDEQ15O87P
52bnv5G05O0iLNAk1OjemSVvF+Fo+rpmhaM48nYRis+WeL75yJG3Y/563bHG
nHyOvB3n96he709+Y8nbRXCtmhJ+/gpD3o7tzTS48V99KL23Y/uVNb1+3UNL
3i7C3WV/mqdeYsjbRejZdXEvuQNH3o7rnc/He6UsU70dx0PNZjuGyaq3i7Bo
/haD4T6qt4swas9Xk4FxHHm7CP2656TKIkveLkLlsg3G99uqvwuQYOOrCdUy
rRjydgkOdjAyPL9QS94uQUnmgTobZ2nI2yV41uJjRDdHdX+7BFedN3An+ELy
dglSzfY03lhSSN4uwdQaxzxm43pD7+04r8XYt7JpWULeLgEzvO66imol5O0S
2Iz+brimQRF5uwTDTjc0PX07j7xdgjXuVZPauGeTt+NzXeAloV1KJnk73r99
hu/Mxpnk7RLUttwydlK/DPJ2CUa/NTXL/JZG3i7B+hjtrXmWaeTtEvh89NsS
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
9+AJebsC3e8ObDeQf0berkBcRErppOuvydsx/8T+3OM+5g15uwLJdSb3OVL8
Fv5Nv2sUaHG7bbfxW96StyvAlba45BAfS96uQI3JZqc2xkWTtysw87PSTUqP
IW9XoNHBjmd8e74lb1eg82CXN2nhCeTtOH72vlE6RyeRt2P7RCQ/amCcSt6u
QGMjy4G6QWnk7djezlc7Snnp5O3YPvdv+SevyiJvx+/zd9OExc1zydvx+9z/
fdduZD55uwJpFQO3mDcoJG9XYEdNS4vso0Xk7Qr4TbsSXHJFPS9Vgfgj38Ud
uSXk7QpMGrA8bvRrDXm7ArujTpsPPaV6uwLuD2z7Ws1jyNsVcLq0crDDcpa8
XYFlq+ymJnpx5O0KrFq54PSzIzx5uwJKW2/j1t0F8nbM/49d+n91F8jbsb+Z
Lg+XnBHI27F95sfluq0VyNsVeBI08oa3k0DersCxzscWhvsK5O0K+Df3HBgf
KZC3KxAYvL7AXBTI2xVo3f3BugfjRPJ2jN+KGdDokUjergDs2Hj8viyStysQ
fmLc6u74PKz3doy3YHHaV5wf9d6uQHmnbFezbJ68He/vuJG0xYAnb1fg97dN
Ay++4Mjbsb1t8xbP5zjydgVSUh1mdqjkyNsV8NzX/njn0xx5uwIvi2SbHzh/
6L1dgcQvPyKvPVHrtyuQ2+jN/G/NGPJ2HN8rx9X1j9WSt2N//8oZdey4lrwd
++PvmqTYmlrydry/9puaDW2sIW/HePnYfvb52sXk7QrUtm2p3LpcSN6O91fU
bsvknwXk7Th/OY+erTwrIG/H/Doj9M0ejwLydgU2XHxX8sW0gLxdgb3fW59P
XJdP3o7zZd6Pjd6ReeTtOF5C3gS4jcojb1fgu4XF2pshqrcrsG160uMGSg55
uwK2Zxs1r7s0h7xdgVOFQV1LbXLI23E8PopbfvRzDnm7AnXqTfRhrPLI2xVw
sIpv6cfnk7djvszYfHJTnULydsz/LUITnluq9WQwnzUrm9M1p4C8XQHD+Um7
lq8pIG9XoE+Fwd7WtwvI2zEft/501a95EXk7fn/XUZ90Q0rI27F9pg5tuNBT
Q96O64vyV+JvMy15O+bDbzf2j1+tJW9X4MMk6zYPfbTk7Rj/c4e1aVRfrSej
wNtqJgFz3zPk7Tifn2oXNNSXJW/H/C3tqRzRlyNvV+DvrkuLe+/lyNsx31wO
3BL8lCNvV2BeInffr5FaT0aBrrufjzt5hSdvV8Doh82eaRME8nZ8fcMrw2Nj
BfJ2BZYusLVs9FM9L1WBCwYxs+78Vc9LVeBNpxfzG9cSydtxfEVP+X3OWCRv
V+Dd+FmGnKVI3o7xbec7Z/wSkbwdP//xy5GWDiJ5uwL5tavNPbxSJG/H+Wzt
9SOm9iJ5O86f27x3pdqJ5O24PrQa8lKYJJK3K9Bz4r2btqYiebsCWwvn5P9X
X17v7fj32XuOXlkukLcrEDElbatlHE/ejvnS5bzv0uE8eTuuJ/9u8a6N413v
7Qo8i07vsTGeI29XwMI7Z+BKXB/pvR3nk2cf7UPx3+u9Hef/26Fx+65z5O0Y
n9fKcrYbcOTtOF77lT35PZGFf+nqtwKrfznU/BvKkLfjfOU1eoG2N0PersD7
hs9nBGWo3q6DT+ZXvnCPteTtOjjWossL/6da8nYd9HHrnN83VAv/wrmmDsIG
v67p7a3Wk9HBzui/+6oOq/VkdFBZb4ff5Zla8nYdBJybbvu3XEPeroMFbFn5
kVsa8nYdHH60tHuXkxr493Ub6GCFacKI2ic05O06qB575tbHEA15uw42Hqn8
vV6nIW/XQVLbHV0399KSt+tg+IuLSxLnq/vbdZAqdn5vd0hL3q4Dz4DdAXsC
tOTtOlh1cN/zQV5a8nYdhC6avXePo5a8Hd//neN4/8la8nYdBI+89bPHZHV/
uw4Grdi34J2LlrxdB9nmi3uzP7Xk7Tq4PXCia9pjhrxdB20fv/YYdowlb9dB
k+6uE50GcuTtOpgxZse758s48nYdDDV0d7EoYcnbdRBbdHhzeb66v10Hhs3N
1o39pO5v14GDx0zfO+la8nYdnFCcjv537oTe23Vw0/jUxw/DVW/H9vjc1rXT
JJ68XQfmYtpx35E8ebsOpgyb8N7rD0veroMXo85NcsB40nu7Dhow9paRGRry
dvx+z9vGtb2kIW/XwcLhI0qH99WSt+tg97lGCcNfasnbdRDjfenriDta8nZs
r7U1Dq6J0JC368B2+crQu1uLyduxf8cqzWr1LCRv10Gd6UsNF6QXkLfrYEvs
brZ1QCF5uw727EueWL96EXm7DnSj3SoqKwvI23Vwo2Fyq4WWeeTtOpg+wrfu
2H3qeak6GONt7SuHpJO36+B3/+jl5u3Tydt1UPpxcrXn9TLI23WQf8Lgwc70
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
Xhc=
           "]]},
         AspectRatio->Full,
         PlotRange->{Automatic, {0, 1}},
         PlotRangePadding->None], {0, 0}, {0, 0}, {0.3750625, 1}],
       AspectRatio->NCache[
         Rational[6, 35], 0.17142857142857143`],
       Background->GrayLevel[1],
       Frame->True,
       FrameStyle->GrayLevel[0.75],
       FrameTicks->False,
       ImagePadding->None,
       PlotRange->{{0, 0.3750625}, {0, 1}},
       PlotRangePadding->{
         Scaled[0.017142857142857144`], 
         Scaled[0.1]}], {180, -100}, ImageScaled[{0.5, 0.5}], {350, 60},
      Background->GrayLevel[0.9]]}, InsetBox[
     StyleBox[
      TemplateBox[{
       StyleBox[
        "\" | \"", FontSize -> 14, FontColor -> GrayLevel[0.75], StripOnInput -> 
         False],TemplateBox[{"\"0.38\"", "\" s\""}, "RowDefault"],
        TemplateBox[{"16000", "\" Hz\""}, "RowDefault"]},
       "RowWithSeparator"], "DialogStyle",
      StripOnInput->False], {355, -159}, Scaled[{1, 0}]], 
    TagBox[
     TooltipBox[
      TagBox[{
        {GrayLevel[0.9], RectangleBox[{5, -158}, {29, -135}]}, 
        {GrayLevel[0.3], 
         PolygonBox[
          NCache[{{13, -153}, {13, -140}, {21, Rational[-293, 2]}, {
            13, -153}}, {{13, -153}, {13, -140}, {21, -146.5}, {13, -153}}]]}, 
        {GrayLevel[0.5], 
         StyleBox[
          LineBox[{{5, -158}, {5, -135}, {29, -135}, {29, -158}, {5, -158}}],
          Antialiasing->False]}},
       EventHandlerTag[{"MouseClicked" :> FEPrivate`EmitSound[
           SampledSoundList[CompressedData["
1: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
sbcjqPXSHJyOD6OZFs9m4woWalumhn5vpuGZX6TdwXMUlA58KzIeR8QbDhd9
Nbd24v/9V01SfRueOV1zOt+pDa98JaC/bhteK14+1dvZitExEXfKE1rxv8vX
j/Ltb0NpG/4XG3rbUEZvC2+6WxsefNMZ+1G2BY/KXq7NFmjAZ26Ova+jq9C1
/WcA76oCbKXMarVGJ6La2xH3ZtcQuDb8xHPj8RwQa6u80LKuCs5theuK6Y1w
Mt9F4OdMB7TKEw41FBFB/xCXzlXBHtDL95fgWk+G/76Tv53x7oHfhBXFY04k
WHft4eOa9E5YaWRhWrW3Aa5RRUlv7IqA3VJbLG4dAL02p0KCurPQ+tQvr8/u
VfgmrYI34WYjMj8K3uzJb0O2eRy/rwSnI+ZOFIeTuzD61trU8fwuHJO6X1Uo
1oWpCuGHLeM7sPX2WrGW4Ta0+l0hSLzViqdM7FrySS14K6I1Y5VlK4bLppex
1rVjVXtCl/vvTtzpmvQf9TcBsWBrEE21G18KFBybCyej8zmHtcqFVBx8H7ZV
clcflr0zfWVxqA9X5ly+SiihYtRy23/+Yz24I0rofRObgJX6TwoSbzXjM5V+
neBzpVi793fPNhNb6FEMMdqCpfDExrzEIrgJyoVCmjPdumBv16nmiKskyOAr
sBH37YFN85ZjRDEKxBLtFbdzUUGsI/W4IoMC8WnxZ7PXUUBW16LxnjEZTC1Y
H/XNyOAvKmMT+oYCjDSF7JuifWCW/GDdeetByM0OOlblxABuEX4KSYsFEUGq
mRd4h2DQ113+xYth2GhStXpH2gj4GfkPqimNgnOC990SoVEgkQ2Zx7xHwH19
4jre0mGIVOY5sPkfx0dC1O7amA9B+8z40Rd5bPiVXLNBYJwFPDbbvpycY8Jt
7WY7NV4mOLVOf95yiQHvfDorf+1kwNcxP9m/wgzwu28QRquhw9/J1oz7ZBow
Hv6p9hwcBGtHi3UdroNwnyxPH/42CLDCtTRVkg4/jul5xWxnQFGE/JLPQQYE
iLnpLNfS4eDq27tT62kQZkCst8sZhJ2UsiIr1wHoFjYvCORwaWTP9zllRSpE
tpw+/N6mB3wu2c8PdBJBynXI+Oq3Lpi2EgSl6g5YE7xf8WBkMxSmmxGuzVXC
G97O2wfMdaFUnWumxrUag2TIz8UsuxB+nzuaLd2DuzvIBtbvyJj3RyC/kouM
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
KdcjPrUPNm5dnuoZ7odHRt5rwm/QoK1x4ytBXY7/rTrfcIaLDoJ1lcbpUf1g
O3fo/AOHPngdsm5rsncfCGrHaP+cokIMY3wP410PDL1Tyb9yqRNcnCSfhL/K
B6kz20VXXCrDjTMGK5yEW9G1cOXKyyeb8EbmIctrxHT0XX5u7FXZCHtTa+wU
0/tgYCJuQ14MDVwOrDa9odANd7Iddh80joGXDyhDx6QJeDTHz++GJQ13anyb
D/+PiUaxAdF5TXQ8YH/I0HVhEJn9R93eVNBQ/KzpkctbBjGoqcBy+y4KMmJJ
+5L2ElB91OL/dHSe8Vz97x9PSAqVUkpDRaUlIRFdZiozSSJ8RdmSVURIRhnZ
K0X23ntdH3vzmfZeJSkhZfb3+9963zg3zuPxvs77+Xq+bpxzcuSed2JCkuIR
HhoN9V9Kb5VoH8XAXra/QhLTmN97cv6e9XcszqI7mKb5DX3M5um3bUzi94dT
KSyKY1h8P27k+MMRFH36QLXo3gi+jTtpEnN8FGUFR489YRvFvWUXGvZeHsHw
S54C5+lH0M5K7KJh1AhKTB3PpbWMoD7LUYtP50ZQ75te6cOyQUwr0K6Z59js
Y2+UFdPuk/FD3+qH8vMNyMDz68yQQj4eWjbMMrxnh/rOk7bVKqFg4aJ8UtNI
EwufnAntOBGPbf5RBTxjifhVIzN6y4Yndn6YEUw8/xnGTnw7IvY3H5J11S8l
sxFAb4cWx4mUBmi54/X84Jt2KFQ+rHboIBkIu+rrJHSoMHDh06kMGypc1BO8
unKUAp2CEecGT5BB+8fk9w1VEmRKSLKuf2mHxh4+M/mRejhnYv/P2rwceBl3
vuGuyoKaNeICY0wC7GZam9rDmAq6pTK916UyIMTyX2hrUwT05MjORFyIRvLy
u4efljNx/y0r80hCLh5wO0P5pl+EVvTeq+ziBIz9SfnPuK0J4831288eJmPH
a9a0P5VdmFaSprOw1I0p3dOpbB1dyMe1T++bKQ0fZj4T+nuYiq/fvNfZ00dG
NrFF4dpYMrbuM+nUCqbgA7Wv2UOZVAzbHe4Z8paGHqJviXbRm77Z9E/ozkUK
tnl8yebvbcUfgs+kBgQJOBchYPXGOAP/8tUQb3dZ41n2dIfF/R+gX+kvfdvG
Z/hu5/ZY7k8snL8aBTp8n+HnvQHpiTfxUKL11vD8mUyYYQjYntldBq9kpRsZ
jjVAfbZ0Zih3Bxz00CGm3iSDrSvzmYvBNCCEMcXetOwFPi6/l3RSg6CvpBYY
+H0Y1P61B8G1ESge/lEo3Dm0eW5nxx1bBoD7jF2wzrZBEL/14KvzthGYiYwy
ku4YhYO/rkRszxiDd+czBtW8x8ArbfHowb+jcMZ38M2WiFHQq5KI4RkYhdF4
39c+r8ZgYX3L7+d2Y9BtZ6p1Q30UVD5W/DiwOAwfh2ddP94ZAovCN0pmdweh
TffwN9W6AbBT8Wl1mRgAeRtPjea5AXimYy/GojwAP1pdieybHIo0qTwvMd0H
L6flGk539cDM3solgmwXxEU5vhjMoQFdAWf+o33dMGifHtBR0AMqpc3Pvhzo
g3EOSSnNpD4wKnB5ulu9FzxdVz20/usGNu1D4a0nu+FQkp/9yfM9ECJ1YOgF
sQekHHxMfV72wnyCnsjrTV7tSbtzruxAP7w6M/AreWiTu+7KSK+76Vkheixj
v/qBmzup52BTH6isbSEK9nWB4Jpp2pP1NshotNedy3OGKq9Ci0jndmS/w8z3
toSG5fWqJ2fvt+PlfOJw3bZsaHv3923ynR4Y5X1b+9t7BG5hlIDEGRrwDnvM
lq0W43zNmRmVP8N48yNZW75xEst/unwNCBzHe8wC4uea+tDmxfn/Ph0j48gO
Z31HRwo+tdDwuF+86SU3Zg/5HejHeweP3GWfpeEyRx3jjiISqhjw88pIbvah
JZc/x93HUNFoy1kutxnc+TaEpefvT/TNYL6jYfsdb+2qYd6xMY4Kt3eGYmUv
OrXS0vTf0FB4yb3oxn99SPefMaM24yjm2/HejCkaQ+7nzSW2BqNodK76UM/K
EP7gPLnj49UhtCvdYfZ43zDavjlec898CDPmXuSFyPTj/d95vNvudKHsjucm
BqYk3Gtjbybl3oaiWiyxDEyNuC9OjqOuqBS5SiMjOV1NYdeqc9K1pVyYVgwb
LnmUCxqZmgm7Ov3geHk5fVZrMmbEsanXi+cgf7LdwumOd+hkcNBMni4PKM/f
z52+VwMi1h4avz60wJ/tyLy0gwxsyvXHh1O64Eeki5iXSi/I7IlQvKffA+5F
lZzi5yiQyMEzpSHUCHHt8k9D3hdB5BN9AdH0TFjIS1Y0qy+AK6nLj6XZq+Ft
bDSX12ITBN3yfXbNtxOE6GWvbbwkQUoYo5xlFRF8lH5Fn8ltgiUdlrzeC7ng
YaPIbyRbgA6Gz6khBs1Y9lYtkJNIxPtM7teuSJMw6wo98pR1YO13L+V0hRbk
yLqsup7eiIqC2ooHpBrxe/d/phWOzVic8+1Me3QH/hNZvCefQ8ZSmVDG3XJd
qO53oKu4tBdt9BMmJWUGUDMm0UV79yAmGCcPTJT04xN7Nola4ibfGut28Nwg
of9VpXcKC7XoLgmcKfwFmHAkN+UgRw4mG33TWW4rQfpnLj0eh2ux8dCHcw7e
DdjJ8kqYd7QGm5xCnMdFC9BIX/ea35Qt/qDQXXp2NAfu0RhVL9cRIPynbz5/
VjNsu8GvUP2GBF4fOOP8Bbog0P/Y/sV3vWDzyfziA88+iLKKdp2k9sK2IXaj
9ws94M+SlTXU1wN5sur7V+z7gDddjz366RCES3zrTZrc5ExsUPis+ASwKNDq
jgVMgvAez5zgj5OwMe/ibhQyAZ/GQwsSL42DjXAz1UBsDI6ty4twUEdB+g4/
q3DFKBg328z9Whrd9Lu3/lkxY2D0aYe4k8E4tA7+NC6sHQdLvabfvjfHIfu8
oxZr+ii8LblAZ5s1BGmZlStstn2wXU/XpHBHD3zzezBzT6gbVvy7Vs51dIF9
RehPuytdsFb09vfdBRpkjnwdOZ7WBRucrbysI93wUyBwh6V4D3gH5fb5TG1y
64O68xEuKvyRqxMtFCRB8EeBQHJ4J/zKX/RaPE0EmkJJy1ggEWykUnjZzDph
/t6ukFaJdlgfNb+nNdoOuiL+X1JniXDwpa9882EqrNL9tZJm6gbVj94jvNrd
MNs9L6u0QoVnoQnJxEkyDOuc91g6TgEa2Vrj5mMqrOw5sXErjAo/6/dKM7uT
YFqqS3v5DwGWDzD9EfxQgMEhMrV8eZ14wDxf/Yc1EW0Yx/WLTxehrYbTwGP1
Zvgj6sf7x3QAtNgfa/DED0LHfGZlbl3TZj673rfSbcUF4Uen+elHsdFA5rn1
r3G8JfC46rjiMKozjC6MspHQd/p2r/RGDULlvnnn5GaUYPdvVJml4JN9dXhL
qxstSVGel+92Y5X+yZqIhz3IVSurMhE/hMXUDj9djUn8TXhPX1z0DTP4R9j8
Pb/haPffbh/tCVycfGOpP9aLx3oUhJ7QSPhkr2z07kAKRpb67f/mO4AXRxSr
zo+PoVGdw1mWhxNIL93ycmn/OMZeTfvPMX8Ur9R0HVo7NIoOqwOsfa9HsCzC
yVeuYwiXdo1+OvqnDz+ujhrniNPwkA5rV/F8B/rstvCTkmvEtCsUCaN/1aim
c+fLIZdyLPd5z5jBV4YyMT9b0qwIWNp4jp5pqRa3Pn523PdFHVYxsgbGeBNQ
uM1Z2UghCwlvXhVdqo0FP3HEfz5VIPnnyA/WPc1AX1xcfe8PEWaV7vWtVFHg
fJx9/iUTCvA6r2wTy+iE2L9sq06LdZBvcUj44oFSuJFIuDjUXALqOlPdKkN1
4FTGqvzuJRFCi3pTuN1pkJt0hqc5oRvKG99UtRp2AXiflMvkpIBx/gHNQ9AJ
ozdbuzRoTRDc3cVtdbQGRDnt7H6nFMLvbLVpM60QOKH+s+ikbipWVdVHf6eU
4ANOLSEKQykGE7VFyza5oeukt9Vd4yPerWMtOTAWg+OyBlN7Pxbjh6Sg/ZNK
zfj7vQ//wC8yOir8ptH0u3CMk/rTbLQbG8LqWB0/9+JZznlHg30DeM3Rc0nP
ZRBv7Bo/HKzVj3UxpsUPTKn4TFPpOVtQA4rFlpowJhVht6jGW4p6BYopcynG
WbWi4pSrOEGKikLtrzt0x2lYUDZ/KoiVhCkR5IZZLQI++0cfO91mD1N18HBN
vARefz2UVX2+Fo5UnMwz928CqcUvLgnLbeDiUOwV0tsJ15SKi1hUiBCjmy1d
19YJJoIbqeKznXBY3L4+gEyC7QZmLML+NKiH3qiC45u+ISz3bLvDEJRIfNXY
+DYCgYlkW8kvm9yZF/iaDGOQ3fR4uxvvGCgtkZT3bnpV8IP56G86o6DYEbhg
tjACkZbcTCW+I0C7lZheJzgCr5afDp88MwLfj//I/Rg/AhEJ0+raH0Yh5qX1
q+nMMdj30Ptt+blxWLQWaX3oOQbtG8yZlKoRmPzVtJGTPgDzPWwiYt3dcE+a
lmYrSoWdOezbFFrJMBClf/SdCwV0NSwNPx+mwd6XtOgUjS7Qt5wnfBHrAhcu
d0naHSq4xss3yHiRIF63/Hl4XwfM0P3h3VrQBk+GKXXZhBbQCGP98cGoCXoM
G95Tehvgwejw9YKcRth+jdHUwrINjottYYhlIYOb5qkD1YVUqGT6ub1qmQJH
qiKCQ+lJkOtpum6T3A5GevaDseEd0FMRsVyUS4Y0399rFh7dcL9n2/FLVZvc
FRtmeEXrg9z8/l69zV5ZE3Xqt4BPN3ie57xypI0G9veWdO9aUUGBw5IvjkKB
xmqv+CUaGdp1tZJmdhHBYsY6kp+hATy0cL+MUybY/ien7xGZiu2a7AtyRzLR
56yN+n3bQvj500F5SxIZPFLr7qz69cHIqQu7H/5vvm63r/I9SAON+eRd4Utk
NFIq6py3Gcbzje5nj94awGk1OtVOZyJKXVk/cswLUSWFJM3gXYNpr2irt6bJ
uKThLClluJnHtUcGrdSGUPtQj9C5lD58qGNi+2pnH4qUr/wrcBlB5jNxn8jN
k3hAz5PIzDyNQ5bMhdn+X3B1m/KVE5u98NrN39M5Qf3Yumt569atA8hjN+jV
qz6GYkHWfLt/TOFWt74G9uKv6LiXuKog/AWXOxY/LapN4OqOgAqvjjEM0Uya
63MZx23Xi199fDGBqjN5UmnR4/jqnBJfPXkEN5KCtwoS+nCNY9RHV4iG6v78
dzj9yZi/femmnCAZrx76lZKyi4xBe7plFK6RsDEkbuidIhH3FJutZJ/qwBdn
q43cUpvwe0jhFkGtSnQY5jPfs8UNnSIblBh6y8D5lFexQl4T5NaShEua2uGG
hE/2z39toHN9f7XERBNwxEdVyqnVwZa12+td8dVgKekZ3B5YAzmhb+mWVZpA
ftT4uspmXsKptTcJLV1AbvxLsPPug0Qx9hNCw31wdtTxnmXVZg6+mk59EUIG
8X299oTuVpi57/CW+2Yj0C3LkP/5N8DCs6fNVLcG+O5YoVzyth4CN5AvK7AW
9Kt41zgdq2E88kbTuRoCcH1u9qE+IYDi/ZdTnDMlMJ6X9l/HYgR8C7Te9ycw
F+V/ivxKiqzBxD1KPQsJDShkyCOxb9OnPMZMVKrcK/EigVslfbEcz+9Nt922
Uotx5rvSTF3b8FlwU8bNLSQsEOPI4skg4vADYaP3f1qw8uh+G/mCWryi3Cc4
bVCNzfm0u1ec6zDQWP/Pu8dNmETJYln71oSVXoW3B1jq0UPL+WjN0QqkWyhM
eKGQjszJXHqzEe+wKC87yUctAAr4FGP2Z6VCywwjr/G/Itg/8LaPab0KIuk5
qp6XVgNh0f9uo1AtmMvsbO5xr4e43THhpjtboGa+yUTRjAh2ul7Cd2gUiLou
4TX/lQYtB19tt/fvgvUwUkEbpQteER32fH7WDVF1w7Ziz3tAFHNW/PN6YTCd
bdKyuA/OJ7W8brrcD/plrwjVz/ohIsUsKJBuAK4bx7BzBg2AmGhDOP+1ARj1
c5z6vaMfvrMfvt/Y1gtfS//q+Kz0gFI/19PVwR5IK348khPZC67yt7T3bnpj
idDU8UuFfdCPiTbBS73QqJk+URbeA1eytlU9CO+CceXDBrn7qLDvSaPIzh4S
3N/zrZjoT4R361G6LMZEiNQtz1njJkFWvgzFk4EMh007yu+LbPaCYeO1WUcS
hMmybtzUIELV0HaZyt2d0DD4SlsQO6CzYlhX6Hon3B8QpOYPdAKb/7WMF1eI
cOaaIttetU3fX9WU7vraCTmXs5pvV3UAWeG8xdePHRBWx3muU5gIQqayJ57K
kaEm3TyuWI0Gez7Z+N4Y6IaLdeH9+VPdYEmvrn9+hAY7zbnaF7WpYHqqNmHL
HhqcJ8zwKuzrATceIYs7ggMgyXTzJUfsEKRUyRyckRgE3qnZY69Te+H7VeP0
eNZu2JEQSPZT6gL1C79mol53weOdAepb87tA6cRS6iovDYzfrUtk9hMBF64e
btvXCMnO7oPPTSsAw1iPDC+nwY+SS7bfX/qCeEKuy5HkSFgZlUgN8M2H7gbH
HO3BCmCRLFJ2YSmCT2Px8SfYY7Bwq8r0VeZ2LKR+ltv6vQ8FH4l+lxQewc5n
f+OfjQ+i7NxHN+u7Pcj2r/NHiiENLfjDTggwbXpd07hup8gwMj4fF/c9PY7S
8vJWNXkTWJtuFDjYN4H7+K6qi3pNYvBXXv1Ld76gOdu2nhiOaZQj502elprG
aykVVfySX/Do2y0ubdYTmKVq87T2/jjW/WzT7Ds8ib2Mr0m2hl9R78bupG/u
39D74fprr4xpzHczunTTcAr/3nxxXX5mDOdUlLW7T4ziR8HjFlanNlftCo7+
wlFki/Kw49UaxTNrtKt7Gobw+3HpBdWbvUj/fq9nzhoVF1X39DhYkzH6wb/L
SSFE7Nd3t9tW1I6BHQwvBP2bsfqGnfWV/bU4/qlRWWJ/Ec5dqM3b+jYc71V/
pTfySwWdsqK6Y9eqYZ59zHGuvxm86A/+PczVAbP73CITGzqBVPbR+0VsJ1Qx
iA1N7+oARfl0Mc71dlg+/OPTgjcR1l/kuD9uJ8P3gXMtanE0qDSqGl3364Xx
3Vt4lM8NwjWV41+YVIeAcYVkVjE8AE1Hvysl1PXCnOnXzu0DNCiW/WVzehcF
klXIISenycAz3J0sI0eFVs+vRPcfVMj4ffa55WUqRC57c/97QAYfspHHhbRO
2Ma5u0ySvRUMZFzu/mZugvOlvAGHyXVwP1mQFG6H8PKxR9iLqDwg7xShP90e
BJSXbd5WxDgcLdoXVJ1UiE4BNSvSUZUo3hYsML6TgNyXRD/aECtw1IZf6MWu
Ihz+c8RXYVseBs9fRapJEZL4qyVFGGpwtS+n6sTRVvT/lCnhoknCg7yEHacK
N/NYtvt+6BMS7s5y80mrbcPwhznnje/XI1Omyz5pqwp8MplVFXcjDxU1NMPb
BTKR/4tB/URrLrp+0fh6TKwUL5Q5Xv1kgfiwySvUNK0SvTSv/7Zmy8XxZw+k
X75wAWM+tlp/rgI47PNOsFuBADy3BliOhdXC+hfvEnXJejjreEqVqboB3Kni
mTsamuB73dG/PPtaYe1P5UH5gnbwl5ZpJQ9v8vTNd7oLQxQwSCu6Bv1doBH0
z+7Mqx6oCJI9Hf2uByaODF7Uqu8GcY3r/nuFu2GbwmyJw2aevag9uKRl0Qta
1zgdf27rh/OLs4E1r/tB40rWp6vX++GUVU563p8+OLqQHngouQ+MvJ632Av0
gfbxl6zT1b3w4L/tuVtv98Kf/WunRSg9IHFau3YyqAeYXfbPFe3sgaZR3pMu
77pAikOmLuglFU5Gi7AnMlMg/54Wv/mmL2aT40/fV6LA9ffpUhub3jhfvN/I
T58Mlvauj/MPE+HS2/uFyVfaYJ9iVsStwRYIY89LtelohXRDgUNrUu1woHpP
8TvNduj+sbTyt6EV/I0NOun9WsAieHD/wp5WqJN/dWNdrg1iLgunz4u0g2LZ
7JQtfQewsR42EGbsAIa2B49/DbcBw6Tr/tnzbXDXdU3dp7ANHK/XuzUut8P+
DzIBMY+JcNjZJu5SGhlmVn5PDzBSYe+H0NG5hxQoZbjUyLyTDE9O7xcz8CcB
Q5/v9Wp5Msh9S3Hd5kaFKiFtaueRbkhsMKt8c6Mb5q7rbxl+ToXHBUcp8k9J
IHsgu/pyaSf4CVaJGyt0gPlbombc73Z40SdsIk5uh+Rb/fy3z7eC2khCioti
AygGaGe+r6wGR3eRNLxVDPqvElVa115Bfggp+Et/IT5fpdZ+KqvG2XI26X9m
1ahoU+aUsKsU2Rq97mftysPkSmt9M51K1B03ufjYtRPFyi9cHG7sRevqQLqR
Ta5yizn0idONYjiXuK3+yRFkkHfmqDMbwn8yYXh7dQi/HJRR5lwfwRZme4OZ
6jF0i2Aty7k8gQ4T4Yeee0+i652jMuFCX/CBnYcg4dg0nm7YfkP17jd0/nHb
vbBhGnckP63VyfqC1yb9KkFvEmlzrmTC7gksPjogM3pjk8tJpw91fphEpjET
xdboKST7up97v38KVxU+uBeZTmBg1NVXXPGb92WtN104Oop7GRt5f9UPo1pz
0qhQxCDCuN1BccU+rOWNqLPa9MypmUyrtLxOfKatlpzN1oi7tL8shn5CZPGR
T/tQmo/Hb+lvSWJPQif1nSUyzTZoERB/io8pBTxnHugeGC+BBcc0g+nUGvgw
f5jGtrMVdql7iuy/SwYXu0fbGg51QYUFyUwmtgeM1htFs4/1wU4LbVEdqT7I
f0HaupTYC+mi9/glinpB7oxuc6NpH3AsDa5tXegDy0dpxpXR/bCt7Sp/Ovsg
GN0smzlIHIIOvW+kpKRhOE/lCX+9mcNe/G1i2e79wJQgpumg+b/3QZ9w5LBS
Ify9XpTcEhlqe0U4pAMpELAWVa3znQJ8f+aFn4qTodct54KXfDvkGT7qnSio
h1cygw9fhhMgfv4/8/hbFfD6xJkpkZQSkJ95Gb2gkAPnhpt8PxlYgovjtts3
w7Mx57BHzsyhctSzzh9ZOUrA7s4DrC8PV6OK9zlG4Y5qbJlY3qdpXot/vNmU
5lQb0L52ZrWRtRntWE77s+1oRTEP3yzPB+2oO/pOcukcEfcmzp5dlyJh6XeT
jStqJDR+5zK7cZiIY3/sSsLmWpDVaXU6y6QOP3iw7KmvQHzC2ldms1KJFJWV
Cz7xBFzvWKf/9KgGWc4LKdWoVKOrgLOonkExSowXiTfLROIGfB4Lvh0HPOKk
YFu9PFjV4COtGRQBy6qvEi2qFJSkRJylNAnwq1SrzkarAcxrv9DektpAmtXG
kVZChHjJs1Fhf0mQeXwpznOIDPwf1y5oi1HB3DGtgtOxC/7unC3lPNILUsVh
7Avs/eB65MbUoZF+CHuxcDx8ox8MK9svH9s3AFx3JxME7AfAwzQv7hn9IBTZ
qGcuvRiEo3tIsmOxg+C9VJq0FDgIWc8f29p4D8KQzwX5kzaDYP7D2trp9CBs
1w+Rkw0cAP0dIdYHN712Zd+WtoeevcCVtiY7ydkNtDbD8EfTVJBQ3/534z0F
NPxzTT4fp8CdPWcd7XQoQO/Jw+cfRIGfgY6sE35kcBBR4qlmJcKUowVfvnwL
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
2heIsN0FI/S8SPB/Xjo9Kw==
            "], 16000], "Preemptive"], PassEventsDown -> Automatic, 
         PassEventsUp -> True}]],
      DynamicBox[
       ToBoxes[
        FEPrivate`FrontEndResource["FEStrings", "playText"], StandardForm]]],
     Annotation[#, 
      Dynamic[
       FEPrivate`FrontEndResource["FEStrings", "playText"]], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[{
        {GrayLevel[0.9], RectangleBox[{34, -158}, {58, -135}]}, 
        {GrayLevel[0.3], RectangleBox[{42, -150}, {50, -143}]}, 
        {GrayLevel[0.5], 
         StyleBox[
          LineBox[{{34, -158}, {34, -135}, {58, -135}, {58, -158}, {
           34, -158}}],
          Antialiasing->False]}},
       EventHandlerTag[{"MouseClicked" :> FEPrivate`EmitSound[
           SampledSoundList[{{0.}}, 8000], "Preemptive"], PassEventsDown -> 
         Automatic, PassEventsUp -> True}]],
      DynamicBox[
       ToBoxes[
        FEPrivate`FrontEndResource["FEStrings", "stopText"], StandardForm]]],
     Annotation[#, 
      Dynamic[
       FEPrivate`FrontEndResource["FEStrings", "stopText"]], "Tooltip"]& ], 
    {GrayLevel[0.75], 
     StyleBox[LineBox[{{0, 0}, {360, 0}, {360, -164}, {0, -164}, {0, 0}}],
      Antialiasing->False]}},
   ContentSelectable->False,
   ImageSize->250,
   PlotRange->{{0, 360}, {-164, 0}},
   PlotRangePadding->1],
  Sound[
   SampledSoundList[CompressedData["
1:eJwsmnk8FW/AxVWyVlRUEpVKkqgo6pdOZUlICwqlKIRCKNnXkH3f993F5d7L
tTP2bNm3bFkSUkppV977ft733/l8Zp55nnnOOd8zM3vvWVw3XMPExGS5nYkp
0/Lof9t+RxIHmS8fPf8oBfP2J9ZGbywCL8ddVZ/yDDw0i+4QnkxGrtRo3gel
VCTrxRZr/EmDXajs1hdlxdi1/d7KjjV0mHH/k910/BmRJJwe+lhXFzK5js+e
HClEZ2LTsUBBErISP2osq3uiSqSE5e5cJt6KKpy0Fc1G1VTgWg3TeKi6DZIT
ydn4slqeqKKYgmAyS13paTccEPAJ0c/LxTed0mt3n1PQ3ZoZQ7g64s3Xd6+7
jOOhP9JxtHFTKWQz484/myhE4uevMVyZmZhiOv1MvjIHYo4dZxI2ZiMi0/gT
U34GTr4w9peOz8Ph2/WXRl+R8C5fTsFFKAfp7zpj4q6SseOXgcKRdfFYUSQK
JvXj8PmoRhHpJAUdV/+7+c84Afprn/50d3tG3CQF6TqHkfFLrnwbexgVt+fM
+Z63e8KtTNr+tkwhhm1KHpy9VY8dLQ8FQiOysN2zQZfnewqx7bzGzDxywTTi
F/p4TzE8ZhzLz4Q4IkHvNGl9nCHx+xuRc/lSNjaRbpx3z8tBIC5eO4RkVA6W
rGnrDIPsfy26TqupWNl84RhnahG8oq5J2ggw1iUuJHqHWRDW/XNb7rWkYrPG
6XOJNjVYZ8FEW1CkIlSv76bntyjYdAgo8+iS0ZPQ3vZHNQJSefvLFe+nEPtc
U0zPXEiAY8kO4YfthWD2oS6qiUfi21v5A8VmT3DNm/5oVjEb5nsUq4TVSUid
2zeqmJmHZOMFI4Pbxdj+VpMzXpAMn99LRwwjIkBLr97mx0PD4kROcuTtUiw3
7cvv80zC/bSHwhHaQRgjNe/j76OB9fGLF1GiZHSO/Lwv0RVBTMT7TP2cMSFK
7XRTHO/QUfs4MqzxER0CPg+uU9dEYMcF0W4m9nBIBU3oXmqkQE+078A6FOFr
+ZEJvQM0bBIv7rR/R8Uh7kqPdd8KUHv8zoZTVZmgSYgZmLRG4x5LZf8Z3RAo
9p268Xc8BZcfHrp1Ni8Fiw6H5Y+oPyUekDeY3Kl9hMcLf4SZftNg29/wPk+l
CJaa5j8a8qLgvjAp79mRDPKn0kHfSCrY71L5P4lmIX+VlXSElAXrVVvXnSGl
uPf1HnuMdCHe3Z2uXHfbDel7lYRMjoUhMatP7MRqLuSm4urJvInw6R6J0Drg
hSyB2RbR9kzkBmpTen7nYsqB95GnUzQ+up1spTonYvvD/SMm3TScSXyzw9Cf
CoWEjscFbm44v/m548/qcOL7jRHXBW8z/PzkmKTsmI7kkvL5C+zFUNPum7vy
oRwaCx23LrBmgp3uzNHibYWzH27q19+kQ3ax2mGnXRWWVg5XRKX4YS5rnfLp
B17EdXUfnuMSdEwI9jkrldAxZyT171t8PHoqfm/+Ry1Ag4k1PWGsEDvdawX6
haMge+ZDp+ehLKhTnht0SZbg29P1gw98k5E8d1aMiAiBJDfT807Pcuia2BAV
cSXoyfpP9aarKcGUd/q29i57nOT8ZzwsTUWfT+yX5rBcFBt3c49/9YTWAj10
2cqJMB4e5pMxi8a2C1ks513LIGFjt2/T51LsWRXNesuvSviJ8JsFltsQb5+/
lY/mKoKEU/TchnGGztlMyVT9p4TUxLHf2cVZ2HxG8Z0FheEXzP+NO7zPx/zx
AvVC42zIL6fKLepRELbhDXPwnyz89l390Hw2E+t5M/vIXGSwpmrFTqxPg3yG
rIHg+URsbXXz7FXJwffUmDA3Ihu5X188zqzPAFdPWXNJZz5Mb3vcNSnKR7Sf
jZFZcC6eV1O3838kQ3XGz7krIgmCxKwty3EffE4+1MFCJmNNY+/vxGo6aLbV
osrD2ZhrZ7dI0AzDUReRD7tm/aEU3dyrfS4FjYpX973MoiPZvI/5USMd3UKx
LvdZUyB8LvMDvwwJTxysc51Mi5D0K20pam88LP8+MtsgF4eSt/JaWmllSB9A
s0gJBe87S3pHuC0IkSdWYvnMJBzZIWJXokPDcb1V03Blf4iw2tU9fkqGY55m
QcOXKoSaP+h/9DAV3yrcc5OOPSXi+sxUntnSkNb7ePbQ5SKI/H7Itq0xGde0
01NlRHLAstdV5ycpB303+9ZKZUcCt1hv527LQVQZh8XsExrUPchydgHpoFwq
8ZZtTsV7zuMbnvll4alL5JnLMcl413OjdcYsA2I6mWwcrtkw+E2x17dPwWDm
kUa+c2SE9d460UAqwPhLLavUY5FgK1hP2Zedg49MtMVTMiVYTWdny18fCIGc
vT6u8UHEzKsqHbWBfFxwvWp57lQaho2/ZTZMRRFmjrHnPfbkYiS4L1egvAwL
eV72kt7JOFNfs+v9g0S0bQ2Z23icAvk7LYXrZlLAneEuzOJfAH9e5ZMcReWw
/XDcTU01EQYVo+d/agcSMdtD/RICMhCdNvInvzgDeduD1knsTcPXM1wKd5zK
YENfuXXIiQKbUfjPWUUQbflTDzsj0yF/KIy/zacSIf9tev/lPQUmxlt4nNNz
4HSwfBPfKQq20uN1ZN388Oe6OWd9rCd4LOU3b/2cibvv/Bz2HQpF4vrQ6ADR
NOxl158pfsXQl0WO6bXRGDgds1RmkY4hOu+wdFhUUXBQJCFeLYGO+52BnYqV
4ejmp43/DkmDwrEubyvOBBzSej04VJBIZM0r7ql+koYCY5Mjd9lKcHdz2/C+
2mcQjLn7qYwpAZqjN4f3ZVdCeGEs+ft0BIo3HK9QcQwllIh1ij1HyxBoNJqe
3ZWDnswTPx66ZxMhBWKj6Kcheem7gYp3JXh+OW1yiEonvpG6zrMsBSA2YZwP
5g3g+XT/jmoACeZ1D362zscQw1ExQbysFeDfcTphwbUEDUXX9iXnJxLFi9tH
zR+kYmv/ot021kqctij5FdXmC9aESa1zW7KIU23cQR3cEfh8Npv99OVicO5u
OsMXT8ea6PeFPeefwJt7+InnxmSiPfP4h7iAAgTeS9qgp1mO7te2yxE302C6
t9Hl2dds0F+Fe1TcJ2OOs3n1aF4yMT3NcVOvzwb6Eg813t8mwGy++9behUyU
x+uuHRSPITb2jnkQ8YVw7knzbQvMwg/Lh98P1JEIikJdjtf2YlBQ+UnfvQED
/h82h9UHEzKryRtXDqUTnUrM25MyS1F23uUrh202nPO7Kk8ctCKWKLaOH9Qq
EK7M1dGfUYYHpio3VwfsieauwINHAhIAjouphzsK4dWsV+p8IxVZbbXN448Y
fHYtYXaHWwbsyffrvn9zhMRlvae6yblgkY/yMbWpRJEGx5qVX1SczLP7mjOe
jnTJYgke0QyYnk28b5UYg+gjZhNvttPAfZOb47NLCd5fTVifqhNBZAt0XDvM
nE5sOq/q0bhUitbJTcdzBEqxWrTrjpHic8KArbopsiIBU6Xiwgcf0EA3zpVt
WXDAzt1NP9+YBqKQ/tUq6GEhBo1ylFIbyDj78nrb648kJJQrBbUx8po2v1Vh
H8kNNreOOPzlvk4cku/oQ00+fi3XpQr1p8OD0nqiXt+K4Igryys/lg4Z87+a
Oc1UaBaxcJ79kIkF+4TP76ez8LB+MEc5LBufFeZXJN6kQ+m8IPc2BxpClH0k
PwjSINZ8dvmycwQ4r25SPiCTivbjHstUnyKwvPfmORxFgcye/hMDTCR4LB5x
dmP4w57mdYKeLCnQjrntUczwofkXfLmBSiSkKMk+VEuIhpkq04aWthRoCuR4
f84uQejhD3p5F6i4r35GmTXBHUwRN+xa5TKgGfrQKf0bFbulLsT1f0qFxJv9
d1hpmbCkqzzh20+GRnG3ykYuB5wVKala2v0MZk9WSxYXqAjWcbnUWkeG+KnX
95oemqN7auT2t93pUKempp5/Wo5Ngad/nz9fDJbgDde/3UmF+LcATvvmKIj1
nLTxfJuBdiNPvUM/C5Dw/ruaMWceBFVHzrIXRCCOz/56rbgnTjCzXjGxI+GZ
2Bcuu4tF+KDz9q9YJyP/hLfLGb57jgIl7/Ldd7LQKHYE4ap00Jv7fnDtzYOm
804mUXoMKnU51J0EMvCS8p712mgB3DpaeG3UC1EXzMV7xIWKsyzjkfZqLgiW
VekJcWPoLsffWb4hBthh0HvgUSHc/ku5Vnk2HfTVzo2sx8Mw55bvOXGYhkdH
98koVTNyS0tSPW4mE7Ymqz7WMrFEimdtwhe7e+AUfCN0trcUaGCOylpHh4nF
OYlm02SC9MZCrzYxnNixze9bGIMTUqZSnSbeFONXZd8H8b2PcG/XAY8C61C0
lBRncpjlY2rPT/tRpXTsozTaNEmk47CoDNNZNRrYRkrOufAXo2/oPi2SMc4O
NbE3/Pfo8NxrHCVUnQxeXvo7otgbO5jHNt5Ki8bzvdPdYglxiKu36WgdS4ee
bT8LywIJjdKO3ucYvsKhWBSfa8zw/wjudFurEmyW8B9X25OGzfVXXJbwHIJK
fAcVlimwqr4VZiNIgfTO/BFJ1UBUPJsT8fsvEwbC59RUGdxL8I52Td9LhWs0
uVNQLgfy5eEnn7tkY2Uf3eqyRxQBNmeXK0VWxN0Te7Q4GTyQPRcRt5qUi+Hi
Kbm7Bbdw0/CcPo9/FvrNY0+JdZWgk3Np5WpZKaLZ0j5/4CuC1ZKu2dYVP1DS
5ss+dvoSk3t1Oms/52LnJ7bpH44UPOoWCtYteEC8DQo7dlvEG/uvvnSisufj
xC31AoWcRBC6odf6Al1x+b3irrvdyfCtZNa8tpuCerXYHbyN5TBgUev1vUxH
6AH31PZd/kSeS9+DqYvuCGQXmuzgrYVw6betl6UI/FtbxTl0Nw00v+VtNUap
2L3tvNTPVE/8CqvWEKL6E1dimGINMumQNN/bdaC7Eh+imI9s43ci8slnfObe
2+CJNpaa19ZgZ+KVRCKyGO9sVFeurguF9P5X8Wc6qLjV070820rDDjbPP3PJ
rggQjjj9ti8Eq812+mv1U+Dxku231kgMNuw5vSeX0UPyN1TcabhYhuOL63TM
cjRhqzklm73Gg/BULQ0QzC5E5O/xbCXFPKwvVQkV/xJE8DxvC+kMC0db6/GY
GxsZfcjm28NwBqetURx68FQ2BXlU6Rrb4jzMJa6Pat9fiK/2h/WZvxeAtyVl
3V/NUHx68bDe/pcJfvCtfjU1JIOo1JDdf70EMUoR5PO6uVDdVt+9zyIS+UYk
e6b5eNjltVlUsWbhr/+PCnMyFT2SG6+/aM7Df6HOBceaHxJDoSFvkrMeIX3k
0fuWb0VIaIl6wRdJh9WXlFujfcmwFuJU7wjMx7nXvp236aWYWfum2MwhC2On
t/w2DL+HDAemdoUrsSjem7A8wJGFwk2kJx93kEGtMB3rYXDFjdkhrUv7qfDx
zDlU+fwpDOef7+ycsCX2De04P+XB8Kuc5MHUCxREHzW4VHAuFfKe2hRxgfvg
GsrLPRoThY7h/KBovmLQuJ4GJVaX4/cJ1s6o+xRwPv3XRLtNgv8p97KQFDIk
D1Q4khuDcVBJLK2DLYkY3Cl4qTnAFRwiaq6jEXRQlX59nA4vwvGT7/NMdL2I
m7SMgaJsEpEsbEgJe0NCk7Zk02mjWrxhwbJsDAWWe9slDFXd4O9kuSgsWoyY
C1NuMc9KsbBdmW0qyAVfn8TeVy/KAjPPWQ3X7DLItwc6P/oTR8CPNyG1hUZI
PjKmtz0vgYTGY1G/qGo8MOz58XDYgWg++3HopCRDt2NCQkLRtTilzebf4p6M
5bcDZe2cSUTTV0VB+buFqLpZsDHzXDnqqgzuP7VOB7tJ6TaJ4RQkUs+NGUk9
xzc/OuXLuzDihK+2050bNBDst2qmNavR+3siLIbPnjjT8VlVLr+ACC41z9jr
nINjVTl0w8oKjLIMHP1xOwerP5zayEIpENEx9/AbJ8NpMfhv5PZU/Mwce+fn
bEMoiOq61dgGQ6bOr79ckgrt3T0qd7nyke1s/PquaCTctOffUrvTYBjN4hhg
lId92DLQfCsG9ke4h8dVSIhwH2oTimFwisDBbR5kEspIDTerE6OIlX8np9mL
8vBx/q1hiWAdvpz9uYl1ohRnL1K9Rx2z8a5Aa6u1SSYqfPWOIjIG5lz7XZRI
KZA6KZpTJESGx3mVo+mxthi7WbrD/FIcQWi1cB17nIWvHDxW06FlULUhMT+u
K4Ssjb/aJRkqOLputm7aXATllI27tvNT4H7EaWl5dwxsru40rv3uTjy7d1mG
3B8MPbejgfqydMys30DXjs5Dl6CfZplIEnHlgU/Jgo0x9vPvPNJZV4RG9T3f
7a1IuBMotG7HfAoebZURHzpTjnPnA/8Lci6GGdfNkXWXk1EydOUMv0wxHOf3
JvxmrMNu7YntevP+RD7HK9mXfhSi4bt14c9DSfiQl8o2KE5FOoeGDu+KLz7u
Hdn9qCwaE6OcXd9HS3BrzPrTq28l4GUa3qdVFQufZX5j9p9nwSsVGhYwm4nt
dL8ISi8FknuX9ET2J2LniDm/1cdQfP72putXGQmfx/x6CmfyQGrcPBA1mInH
MWtmZ0gkfHW896nFMhMNM//qJu4mo/Wwoea3V9kwcz23WZCXgrerWkbL56lo
+l4p56xDx9oiJ7/NnGSULpgIT715TJCeruw7NxSJH2v9qp4al+G91sYOZtci
XCtg4eMOjYDZZzvxk7tScLJCUDVJLBM8qlmKxIIXDD9I3fSqj8SQ9Txv2dNs
zPDcsOe+GoKEg/xjy6+DcfpC7H+p90vAuXY15apMJZznWihyjB7NOV30X1ds
Cq7Wr+E5WFSGrC91TALrS2AXo3ZT4oQfnK2VrPR0UtB9ty7oakslSp/mn836
R0FI6NH/+tZkEpk9G5UV1sYTa3VKP91YzcINnuOqBY5pSDwkzM9VFwdlv9wa
8e80TL7NEnd5VgjhlIlOmauZkDEgc99tpULxrYxQ7x0GTyi/srZwTcbcknbw
hRdJcPVtERZho+Ork0tirXg2yj79Xh1bjSFWSStaqmejYOHz/Pkso8e5uwmU
S/cUQF6c4mAwmkG8pF+Szed3J7wGicgQ9Qp4RKS3d7BUodbrx12pjSnw1FQn
BZj5g5JtVJ14lIT/iPnmDT/y0E/Qwtaey4D66/XR8axJsD1tG+femYzEpvGR
t6UUrFeaLXw7UoT5GbannNaZyNMafOhbmw7Jvlt8jq5lmLBZltt8owSxI2dD
e8Vd4XtbUKHujAPRuyfH6+O+TFh3W0RZzBWgpuPoyvHAAiTdVvkZSUqH1dBB
o/YBX8LsRkzcbr5nuBVakLtmqgzkjj1538TLQH9wO7En8TnuepUVrBxIwu2p
gzt4OytBUw+1VW2kYXPwAuE//IzYVI6dOw2SkV1yQ36BwV+7NvaMIj8Txp2b
JHliHIjZhvJVWfN4xLnwW6w8okEoVcGPO50KUT6aplktGTd/+luWXk7HP4Ux
rh33H8NK00Ny/F44Cq9yfybrFYGIrHK9VEaFQKosfWJHCMbrE/+bYvQAvoS9
Wu3eJdihGxnCJ0/Cw/LP1+a5TkBv1DHpDSP/zW95WRxsSsQxOYfNqrPh2Fhx
WGiLVAIa9xyxOmSWhPR0izChh6n4pJwYItlOAyvtgbmMOg09Jfxju9peIOy9
9aW1/oZYCVxCV08mYvT0txlvyUTKlcOdL12i4cemoFtol4bWGA7J7eVpqHh3
WqzZLhbLGwxF37TlYe1ezsUeoRKcO/D1blBHAUxO3/QqrQvC4TV3xfjVw9Cf
fKacLzETii1vtpGck7G5Rpz14N8wMEkf/TXKRYNCP9v5IfdK/KZ303uHsxFR
szN6DymMyFw0GT465YnXJ9YFSSxl4rtTwoBqagKM0uvflvdlYXeHgMAWB4Zu
LxYl1W6g4GTZiHTpQA58nce/nlKk4DDSTrWMRqLU4zdNMimE+NIjLJL3JQbC
FxMjWBj96eBz90d1hlSc9xOYHQuhQl2Et0clugi+yVwVrCiAt0jI7IbFQPC8
GPiamBBIbOHNZzu/NhT3PAXI3XNFWLr7zsbzeRE072xhuvo2GedER0YvCCWi
W173HzNXGq4yfdLRi0nCDvnPTN8LC2D/Q2B+5SQVpx8ez6zy9ILWWMgHmlUK
TN1t9EuHynHpsVCCMzkHhd9XM+z5bxAnPN5uwWsqJumvT0qeoiBKSIzPzyWN
6PGpWH/9sxWUr0TfsuWowFC4uf9ddwpy+wyialSf42lS4pmDpjHQfp2kpLvF
D7emV+aqrqZiV9SI2ib9Mvx1IHGIrGagUDTCYSUgkfA8G20iG5cP4bCH/2Z9
CRzvrc2+4pMMZ/tjjasNtkR+oXVGqF8ejDZXHF1/iwLNS6NeH6cTcbL6srHz
9UDc6EjsTOG8RFjXONoZdQWDh9NV+oEPGex/fpyabs3Ci39Ha6ezg3GDbnf3
hkwEHju9US4/l4YtF6PoitsKEVVfrqXsVoL03JOlrceSMHfxuDprawR4SAbD
delV2DawWfOGRxl2m+35Nz7oTcS9XCqzuR4FDmFrab8MBu/J4YT481CC6PF9
KKhBJXLc2cQMwkhYq3dm6BFD517cNQdD3+Qg/rxSjWARCYLyR7sKBBg5eFd0
d+CaKLRafb2+TisH0pYJvm/GCpFLepxcvSELH2vNx0VTM6Cj8vqLfkARyGFr
VUhdxXiqZCT32CcfDkzfUrfCCkqsOkK5au7EgGQiyyAjf1KeCcXOHyqEwOuR
7/N8wUQIJJajqq/C4gvHW8edFXhwUFwx80IhtMYPxHas3CRUb7gth9wIw5lH
xic/3H6OO+m3g+lm9sSrwo/NFI8StPkrsl84XYU8k0v+tgFeRN8Kx1G3LHfi
pPumwl295fC/NqvW+7IE/56maLzqZsxPXKPlZCINJZJMUR2Po8D+y17jl3kI
MegsX9syT8Mb9ksnygLKUKNUzxNoEQ2viWiV8a+ZOM+mvyisQoPZwnhyrsMz
Qv35+pgHxWEYburQUeyrRlBYeqglVzqeR40/lrlHJRSLQ7uEJbNgKCfyIlSp
HpRHBp+nI/Nx9ICipEKBJ/Gk5eGudbvS8KM0acuR3Gy0SR7z8vnkhVf1hydi
e6NQum7tHW2/HNTM6L94LJONoBqpHLOJPKy5duqXelAxbqjFa21lo8JyptY1
88w1/BFNv+BhF4z1RbTfC+1lOJSe7WZ6qgTvV2VTH/MGgt9qPw9HdS62utEG
VW7U4toXY97uL4WQGG2G4jofYpvIs43WTe6Q4PKeoLJnw1+hxD/pcyZUWF5d
32RHhW+RT+k63mKMv2X6tr2b4ZPrK+WXFIohvygbOUcrxL7Z9L2D7B6off01
InIoAHdkucaG9OlwEJRy3fydBJ6IktMhl6KIKwPH29drhaJCj7tdQLYY2lEa
vE3BheilNHi3Xc3Afm/NvzRBd8hZqpTnVzsRTfTH2nVNeYi6kLh2kdETfrR+
ivx33wVO+0cFLg3RiOWa3TcFRlKwomlzje1HPfiF9vwic5chcOKv2+drbsQj
hz+EI1UbAV9NQ1duMLjnIvWaqQAdrporc/8i8yBOYY+9ciwLn1zeie0PyIe1
sXKgCEPHT2qKIsi7UwF/9zmJl06Ef1C3vT3lBWF4W9q6sY6EIuenf7j2V8DI
NCbo4BEKLL6HKx0buokaGdYuWncW7MlUgdHKcrTv1vnNt5CNXW1Xsjv3hxA/
jT/+6BVRh+N6zr433MmQqnfoFZQqxBm+X5keInWIe/Hd4JdXGULdmgz2/nMn
zrje7EjkjUe300PJnc7lcGTntk4kR+Gh4Y69q3ecCXOXk7pB4QQkPda83F9Y
DjF77sXcISqxezuy34imEo8snI+NRVXi+uXpv/uzs5FILral2WQR50R/XDyk
zcizbpWRP3dKICro3jSmx+hpbdsXzRJK4FksV3iAVgd56XzxHkEfEJ/vXbfn
pBCSuhdFd7lRMGy+8vneSjlyu1/1sB3nI/47Zv1h/nwU+g4Gs98PrsHBNS/X
eqYVwlZAVKD7fBBxs/iQrdavNEyzqT+R30OH2nm1wcvbg6GxbuxNpq8Oer8J
t/2Ty8Vbo8CjKhwZoChsmrPtT8b4kFWno2Ep/vkeNG3cQkdFieiZP2MRRFP+
u5/rniYTYrlbua9mZyHHqbKDtpuCs3EFwS3Xk7H0W/hcoHAaxm/nDIf+peH1
jNC0vX45JmnhVs6XaODT28++uf8psSKdcnpA1h1hx6J1vbNKMVmlJnnkIgXX
L6rTcm7FEqrWozlxhWkYVtn1ziubwO6lV7ZJpRnI/e37n8L3JOLMJU05vdRo
WL87tKYvLR1HaQ/IejluRHx0wsCXGi8EpIXPnFUkg1tEdk1rSy7kXllvFjDJ
A0fx3ayNjWRM0+e+0e/HIZD/B+tr53B8ibP0jzyeiyUd24XRRxR8UR7okvbP
w/DJ/dPyWxg+sWnN9cOzPrjBzea/5VUcwWRjlSAR6kvUSe2UlZ4ngX0rFFWo
xZjUyo76sjcH+1i1rj2nWmKG+8Tjh44pcK+7kmDPV4QMjV2BD6woSP00UeHE
4AOP9GfFgvfoYNYmXc59loXs4ULuFbMYTCtuDfm8SAfrtn3m0pUMDksa/3yQ
sY/Frt7qi/6VTPRfNCS7MfqLcliAuiBTJlSH9P6Lz8jC7cG5wfchOVif5aCh
bp2B5icnVB2NaBBUkOjlFi0BtcXN3A5xOBf5UCfyZAIsnbo/7EYlTl9Wu/3X
IBfs3klH+X6RiOmX/Lqmn4PAER0t9XmxEMG/ij758MYgk734q2Mfg5vLTSOW
1cph/8HeXeenO8ETrKy/+yCZOKOQFVornQ+pxwf37KOVQDoxcWxxUwFejj3S
ctAuhWrN7i/yYrlIPpd4Jp6ZMQ9Zz6UtomlQPxWbJUIU46LPHx/dSXdir9aL
w6QtUYRxolyDSxMZFk4D4XWM+/N/Jm6xY08R8L7wbuPVBtAX/z6sbi6C7Idp
rg07MojHwTV5Tp7WiLSdjXu6vwBCvc+n9htkov3j+v7Nbxl5JORrWNFQDbmv
d44bb2fwkK+Zb2pSHOZ1Bl10BEugUrxFapnRy7tO7Lb7diUUqp0ek8dS8vCs
b4ba/zMP2uErcUKKGYgWMTZpZyuHR/KHGXIwgfp2vtnsVRL417h+4JH0A7Ok
9CMp7hRYxasOTmml4cak2dxx9lSM8aS0HhBi8Pmx8mnB1BwciFe1dDiaDe2W
K3PnHKyJdXzJ2qzvsonNj4ZOCwf5I2idYbEElY6Ci7/dVBjPy/Wh9JSWRCIx
Ha7zoW8hDQHn+B/HtVVgQKxSxGUjHa3aP5doDK7t9aONKr5Ig8Ca7X/OxEVB
TXpV7tQme3Tt+fDFrjoCG49X/qWx5sLChux7fVs+ThbP1nbuSmas6wHWiIYg
TG4cKNh8OB1p/XZvwyoYOcOUqSBztAxEpXp+zis6Jl1fsLFtzEDYyW1LVP9o
RHElmqy5lQPX4OeSfffJ2GH9rsk/NAvb/oYKflWnwqt2Dd+XrRQIJ5St9eAK
xzSHgHBsdRbWfhLqUgwrQebvFcn7J1PA9uqChfiNu8SBE+eLd7sz9LJlZ3M0
pRiS9u/jSrKfE4KdRw1GjJ5jwPudeH0yAeeirXfXpFaicvXU8ZNRCTh45Liv
53kGR6ZoPLP6WoQT9VdaPrplQyyo3EpFOgyFGtGflyXJSNSfPx44SMOhzMta
tzN9cUrNj1ZrGkeITt7/o78ahNDdTyMEIjNxnCkv5fofP1jsLDMIexoMvy/j
Lqb6BdhQcUUFjxm6MhNP/VpegDVHnDxb31HwdaZz4O5pGk7lNZv8+0CHKbs+
cUiSCoWoTlbe8TDCNmRniktQKFG2hZPJQ6UGaTrfH32gNODYf1tFP0rHIdHH
0OlwbQgR4yt5OZrBgy2q+xYeLFCBUxkfx44WQ5dqt2EHBw0qNWzRMma5RNLP
S87Fn0jEj36FYyf0avGHJG8o1l+Ds0ulg13caUT29KWzamKhKJDs13D0qYGc
4JXnql9diYZrZVYf/pUQQS21e5vryEhXmI0LFSRAzHj26cxkoGMrH4cQTzqK
H1fNnb2TiigNFZnP20II+dwi6ZhGEuLMPB9ful+PHB+rpJHyYmR/Yms0T3Ml
9sxrdsoIhMAtyF3vkjYNF1bNa4enChF2b8ut0N4cFGQ2b7OXD8HKt9pjtunh
WBSZD5s/SQFTfOOe1+qFCFxzT5sPFEiIOUqELVDg661ZX30nF1Z7evTiRNKx
78J/ElE8Bah+Zf7sPC8VNwssSX84SPjTMSnh+pqCF6thG+0PFkL01pnAxGMp
UEzIZulpC4a0wrez31pToGMc+dBmTQIuRusddlNJhNno7vNnJ6k4sZEzVbS0
GMeCSq71Mvw/oDoYMt6pYGN/vYXCmozlLIe3H9RzcVdB52M4w48GWbySTrB6
4ZPwp+MK7h7EckekieDOdFwVj7kmeoiMHyL2sgYxidjbZP/zKzUTCbMSpekm
+WgOd+29ypcI5+5dvGx9SdDkiF2v1ZMPc2bNDFmjArDv0+8M0S4Gy40CHbHj
FfB4lcZXvcEDcnHcZV6/qQTH/K7ICwOhUCf/tF73rxhf9f670BDsDVrxd+qA
TxTRf3Q788HZArhZHDU4Is/goDXrr/v8ouEF62qKggEVcmosg/ue5KHgW1IC
35AzLr49tGWt8XNi/x+22HKveNAO3NWdZ/TOI8tFV06toWFJkeOaAiNfzBuM
KPU/kvBU2MCunJqE7E1ulcpqVhDm/iurHfsUuiZzRn5chTBWmEsTYeyHcU33
u/GSDyCuWbgnLeYFkekf5kc9TcdM5ZU3TuaVMFdRFxO5RUL6j+vXPM3jESK8
Q0S/Ix2hWyzN/16NwSCZtc6sxx3xTZsUyj76gKmpZG/YjgRs2RX/qPwtFb+4
osS7n9LBPRwZfFEuFnU/Pr7KTL9CXGCqVS9NZOgw4dSeXy/LEfAocWIvmZFH
7cedjqXE46tLa1je72w8uXWyuSqWAnKCY9KnuUz84dIeMXO8j4nFVrXDjhGE
wBNT/esGZkgUl3PI5smAW/Qsuzajj4q2qcRXCNLAYRG4enGOgvmfSSWdawvQ
0nwuoJazDDeOa587+LkMWReehzt33UBD0vWOXuE0wvAg+5vLajQIxewcqBkq
hZ9IuE9GcCLxUWSu+lsXmYh2J0fOqKZhfk5J5N37XBza82uu+EokDB6OSdvs
T8ddIRHi50A8pnyaSmt4XMDb1c/M+5sG0oLmuu81VZDXFghy+pKDD9valbZR
g/Cc0jE80ZiCqqtmxnZlKdA7OeaZ7UNC15es+0OkAvivdsDwhjuOlLP/9d3o
hEAdB7dPH+k49WrL6fwACgwlt1v7ur0govb71htkpqPCTkB9ur0UbkkreWkx
Kdj5ftN9//o4dHAdqHw7y8h1ZU+St2kRBNed8VKmMriebT6qS5UOo0aOOg8W
Mo7tq7zlZGhJ6FP1e+R+M3yAhTyjRS5H/eac8eXHSWDheumwnfUZdHe+nCZJ
F+N408Av8Q3F8H5F8nMlBxHWwg2DN8fTCLb28TBBhg6vnLccltlbBe9LQfat
XfmwC0s+o//yMYKWaxMXRpPQ+9nXTzY/Cg+mb3FaPk0n/ObZqpmPxuAlu07Q
K5labHEj/YtkT0FkflAw77cS4trkFMX+YjJsqvcLhr6uxx5H6gmRkgLkt5hz
vKa4gjmr28yF4UtzWzZeb61JgMyEgfnlCROCfdFpw9UgCgTVUuW+EGl4s+n4
+XeGJOL3R3OBP1qB2EuvwTH/MsRVPlo1bchDiv7LYD9GL9snGr3vxPNy8DUN
8y/M5uPQj4HWF+utwJw9+n0Ng58FHr6WHxYgQ0qB/1ycOAnDmsm33SgUuDbe
VpgrS8aske1SXmg08Z7CfnHa8gUsB5+JbswoxEO1tWqW3wuR3fYm6n/fNzIP
TuiRZ1Nh7bfn2VXCHrJ7t9N1mTPgRTZP+/60GE+Y29h5Gsg4vc7kGlt6OoKD
dx7qlKLg5ELOmHxiFELSXI+0HQogDhmr9mT/I8Gcx8TX4nAJKrT/m0gTIqHg
8Y8UrXFGL7sc89/vCQoeZc/+kkgIRvLg7mqO95H472fPKlNDJaJqGpyXR0th
M3P0su3LWKLIq13F2i2L+Fe1WyifiYLfO6bvTn6qRqzCZb77FhQQBss1vp0u
eMN3+YTw9wRkMLGVz+rnQP23evrx8iCcrD61RnutAa5JsEwfYyNh5mNA1o6c
AvALrtm4ohCPpzI23g+Z4hElGLQ6a5QJ2d2fOXVnUvCktTSBRS8Lj/8o98/E
UXBZbyD4WH48HspHLLC1hxBDAVPvPxcrEffDn9PuyaZDd6Dq+fgSBUcyzsmO
2BXD8tIWtjRG785KWvL7oBSOS1E/sjqE/Ah9qYz8adNUpO+7JdgqWIFtAWUZ
X3To4L05vXJqQwDh+Hbq2EGeZGJp9S1ZUY+KIr6bPdLkarD5mZ+uYPAld17a
FSuDmzgSYrhBbbMPaNLCE+PbE1BoUNLeoZYNScs7hQPKdCRprIndfLoYu5b1
JNYKZGN4n8hC4EoIpAUtztdujoHNOfUrf6yzcGYqLrchKAed8vqnF/aQcGmy
Y2EpiOHr2vaXzrczenjLDe5KSzI4jSVFIu0zkXZ0EzVNtQiVcUxTLyxoSNAI
j3274IMtZ/crGLraoLrrhm+jYRIusCof+PswDhc2kRp88slQZQ549sK6EoPZ
Um69UlQ032eOiLAOJm53j7T+x/mU0D2mSo31ysKBd0GVO3kp4JG4d0uppQi5
far5p9kLEXexqc6o7CphUrD4yPIbiVAKL3dOe3mNYHsb/K2tgor8OO8rB/Jo
YB/Y3RKtEwuz9XtrFjmd8PTTidoAfkbuL5dIW1woxIbRT/YR1dnIavxy7OrV
bFgIKGjq5VJwPMVPYvx4GBQ8h7e5VZgQ833awZLHi6Cc/ohjbXM5bP+UfPhj
EYzrZQIIctEg8gJatTlb8yFIyepfZ5oB/xmqoJzxE2zPMsyv1iah44V25TlJ
Cq72yUH1RTC8hPuYh9pTMFXwqO2dZzHunyvMvfmZitMGxoHiV9PBlWVvUiJN
wm/SxS0x9zKgyXVxlKc8CWP56qR9WRTsc18XZXObDjm6zf4i6Qy8X7yz4H/Z
DhsGvgn1h4Yhs7RlA5dJGq41hXhpjCXD6dl7uz32idglvhK/UEjCvUjlqZtz
BTjUdbhTMicFhZv+E6s9GIxF/dCtG/fk4BS/nlbaDwp4deTF+o974Nzl1NBR
wSBC4vr3pY0teThx3mLbwd0V0NGJ75Pgp6LWpkj6sUI2FFPdY77rFIM3kE1I
TLoIaht+zGx2DkW2U/+YfUQM5HR+USmGRdg3GNImyLjOkGzGxZDMh8RHv/nM
P7+iEXxzz603vIWYUonbt0U9EcmRHUklZgnE49z5mbhxT+jsuSQ0pFYIBSGW
Y7r8Rbgi/Zk7N5MCsea3Wy6O0VDR/2jDxDrG+ULtlmkXKdhVdmX6qkAePoZn
nD1sngomf1OuIKUY0KrKWTSvZ8HOJsAgMyMPfvfcfoRcT8C1KyeExpbDcT7n
s9rpe1l4uXLrcLVeJgR8Yi5QQmLhoZb2tHxrJrb2P3P4cioL83p/6rW+3kcP
jVXSQcMbE9lxPyM2lOB32pU/LygV0Pf5Nzr3IBNvvHYFGz/0wSBXAFvcgRTk
db06J55CwouxsOdPWgpQuPZAeP3GPJDZ8qO91R/inKjrpfX+IUTQdiLt4Id0
THWwcZHH6Fh57GvZyuD4+03t1y6ZUtDRLz5uf5ihh96bm18yfN/5lOdWC1oq
TILLVoIYfbnpys8YFTId6dsH8oWDSlE3u66f9qIAn58uJfRG3CcUBmc+RuoG
E//3eScLEnr7y9eVlYH0eWwkhKUEGTFGczxCGdi9JfGmvIAR7hnsV8tdjEC/
zAEOl2/FaNcnL/ywrMJw8I1bFn8o6N29oUQgJxEeLnVrFRhcy2bUOK9QnwV1
u6BFsd05iPYOMXc4Q0OkVLXVngOFqLqcTysLIOFRctuV+twUnHp4+QzlRh4m
Q4yOWl0tRePwYfInjlKMpK0zaWqMgl38d9pUShrxn5REQd0/H8LULTNlvoOM
ksrmjRVl5RDatt7P8WkpmI2+8JVlxUJqcbtoq2oMYdJXtjD2LAbE+3BlQ+ti
qDWa7YobpaLCJdCLQzOHkbNO1qQMKspZjJo012bBwfR+R3lAFMaq32+J20oD
5gTNo88VIZKru7HynzHcK/39Nw4mEEFlrw6NHXyK4yq3SOu1E/DEuy671iYH
FvV7b5zlpMGI2ve3lDUNwk/6dZ5KmMLygrPnUUsvLKlNW5dwuSOmXLBbMDsC
3VsXJv9qFaOH0EjPnCtDhBS9UuRSHDjM5YhlAVtsSWK+6MDQ44rMvPeFGDoj
xzMzGrmzIeD53XCFMw7fREcsP47GwcxXk2KVlYpOF/6nhFMBDrjKXb4SVAT+
f/7rM/9S8eVLb7jSkUyEHY3O/pSRDA/neX9nqQJQOGfvcYkVg/SE2dqkKg97
zyhsrfodBMfY6z/uOIZhdrXxxThTJKA0rr/V1hnZElSw1kZhMNHf9kliCtYf
KJZ2mTQDfYpf5MghHaj9gEX4sTTcMdrwd4Y9FRl6tHAWjWQoCEpt3h5WiE+2
b44sWhZCjBCN4bDyx83L+R/Il4NR57yn4YMWFdS8sr327xh5yzGhxBtgTni9
5Pvt58LoY2Vj1VPHsjAXvaRzVSAUW+/NXv365zFK1iyaXHyZhddUh1mPHYW4
3hri9FiDBN1Tike4+/zwxrWFbSjsFlGqa3Vo1swTU/+myeacBTBdyDc0Tq2A
batkjst0EZIM2+c7qcHg/8Je9M0mFFdJW57r9dKQ6LUpbM2fIrDbh4l8k83C
tr5f+++QGTxlNRbZZJyOmuh53ckahu87fTrbP5ePbOmrKitzJTi/NJjYz1aO
1sWmnzulaHh67tP6pjVpUMrJrT3xNx12EtGPv/PTMBoS3p6iVIQzB+quaDHy
Nil3h677ZSqYrj2ybU8jY+0Tg37DgDSM7Ns2NxCZC5a7u9j+MjhB721BmlYR
BZ97JVgvbozG56gCzrgDTih/xab/wCgJhl1kEWGFCvx2uRbknNOAD59MxhS9
6Dhh4ZX2LieO2DT3q2fhjS0xPF9ydvBJDhL/nHS5eTEan8QqBj5I+IBZ1j05
IzIbvx0+MIAhCZ5TmVuzfyaA4LQsOEyrgCfF3FEupgoznA8EFmeSMPJsz7MZ
xWg0b383NnuEgkSn+q0iNhmgGxb1/arLheSGVtnNK1XgUbxsli5Eh87r02EP
/Z0IhWNJ644GuRJjp+fem9qH4t3P3VWnbC2JK/oXX95YeobCntg9mzMY68DC
dDaQnQKT3QuNSd6x2Eot/h7I5wO1HXtnpOaS4Rlt93h8LBd0kTrtQ9/SsXLF
RF77cSDmG8zsVDem4E4Re+radCpklK3kMg9TwOI9c77+RzZOJ6wzlb2RCY2m
tymNVyzxZsNA0erFOCKv1cMiIsMDj+4UuDskpMF4p4TN8I0k9LinhY59ZfBO
0bJtbUwNAit7U50uFqMmTGmjYmEM6r/9dBp9kIvKdft3KHwphtaicV1oAwX9
UkZ1b2UKoMPseOP1phKEtgTFMnlS8U7w7uuq+SCwiisdWggIhor1QvmjnHQ0
uAzLCyyEgOlw7BdZcXfiS5GR6IBzPNpIJyK2FBRCv+Bl5xkrGtI8x9TUQ3PB
p3WoNGtvAWKTdxUIj2Vig03mP0qWFfGH00Gr3jeSeLpfsrtuqwEhEmvGtSZJ
GS+2PTh5VdadKDjXEjloqYNt7xpLj+SGQ7LPU+RZbAxiX8/bS1kHopZrY5p/
tCvReGZsD6dbDBFhkfWqZas70dnYqPKaHIM/3fpVcxnpaHQN3nOULw2nvxiq
nZZIRZr53d4PUomYHX1wRGPREsyuYlo/a2OJ77V37L0Ekv7/f1ErYv3kQW2Z
2+FQ0eS6TllNxKAc53Pu1yRosVVHNhQwfMmoLOBGShUKpLzzxRvKwblgmtLt
RoVs10jCtke5kM9m31CpU4R82vEcCqPfrf8br7+PuRZWE7wuY+V14GzgMuwc
rAPlPcc/pY81CD69uP+mWi3GOLKtf2vW40Rqp9e4bi2Grq43IqqqQLqibPzf
rjrYnhoiE6pN+K6naliU0QQ58weH/PSbkCur9jBqvgH8i7lJH1RrEXJj92k/
pjp4lVtrB6MRg0uz9U++1kLk/G5mhaUybPzuo/vhXRVi6cprOL3q8NpMx/Gp
YANuD9WKLrO8hEzNWtOCv42QfDwouzW4CouL3zxJtiXI43ZlktldjjUtrd+U
bOnYQ/5YucWuBKNiFtcwUQ/DqEbdRb8GHDaaruRXKIFUQQF/LA8F8c7f11Tn
FKLDbt7kkwYNgmv5eC54F0J0qL+76yAdH376Xj6wlI5np7X8nKVicClCpG4y
rgRarWxq65pqsHxLmJ0UUYSE1uXNSVkZMO68Es9vlYtd9zm/X/+aCx4HiZRH
xiSoXLK8eFWaCpHFFyc4U4pwga946cd7KoT+PZFiP5eOrQdmPut2exHUU9kD
qQu5hND+r3EpbgXE7XjWHW3SFML9J6uG0EAJ8UJMTs/rSC2x7rbLMribCMXe
yOuRji1Eo1nvEZ4vzcTV7EpVw8ImYtT6kol7yUuiyEPlulpKKxFwafv6bevb
ibitunqXVdoJI6WqaC/dNqKEK+E675NW4tRg0B3B9FfEgGg99/CfLkJ202PT
7VldREfEZO89yS4i82/ca8GX3YSYt8nMT8VuopomuHotuY2Ytjg4pzrTQtDD
3WTbHV8RrE+kfnrytxMeo1o3nzHG59oZIMdW0kQUnX71JXSygVgxOsrRtquW
EBp780fnYi3RtuWu3LPkOuLBkoxnrEQ1cZhdfcZFkk4oHD71knKbRqyX2/q2
q4xKrOnm0eiYLST2HTPjKkgsIeTGXnaNutMIv21Cg6OSCUT4rSNk7lfuhIvg
Dd3yV+aE3fCO0Bhvf4j/cJW9thIN97RmscgD0eBy2Fmc4pwKsZMBNaEvcyCp
vb31cH8+JJSbJhwYz53t7K1GAUoJws/nXPToo6Nit5t0zg0a9O3creIEi3Bs
+IqQtGM5fi2RAyr/1EAgcbSL/LkOJnyc0bx8dfCXPbbrwZo6eEdpCOv6N8Ih
py3E/WUznBZFbB3CXkJTMfjyUkgDdgpcvVAfVA8BW4Ul3tkGLP+TZ/lX/RIK
ld75/eGtYBXIGdmU1Ib3NZ4/cuLbIPz3umJmQTsK/nhcZj7dgYik3vKbzzpQ
Jbfnx+UDnTgpZcP+KLkb50/mdV6/1oca6R20bUL9CMOnjH9ifaAI1o0zh/Ui
j1lJl6mnFxI017Vpa/qQWXk0JCKgF2Vbv817b+nBHLPy2sH6LqjIJGWwdvSg
+3W+0bfhQWh1pv1THhyGnuFfpx9fXsN3dcd3sbIhHHjuLS20MoQRM4t/bMWv
cda9Vp7n5zBSzospG4SOgt/5x/6N30exnXoxd8xoFMX945Pnekfg26zKxHl6
GC+ZFKV8xYbgzXvl6VPvISSzvljXlD8M7rv3hCuXh/HXuS5lsW0I/72JEQlO
HsCrmA6jcf4B7Hr5W3iN0SAKQlK+3tv1GqvzEPzaP4Tb1coibc8GMHLysMOl
mT78Jp+wZ6P2I+K3RN9NzkHMN96hjzQO4G2y/M23U304LH/kqNbhXkxekWQX
9OiB+i52F2K8GxvVrP8JbuwG+2XFCgrRjVkNv8ld73oh/HyozXhrP3ZKbFh6
dbQP66XP9b5y68KmTtP4vk0EEmaVwzfvohOfg9P++IZ2EyWe9bTrSsPEZePS
fXtL3xAZ+R/+brg/QWTsrQ7Zaj9OfMw7uORTM07MiGppJA5OEpSnfCd9+N4S
B2WuMQk3viWuH/s9v5Lylqhf+/Nytvo0URIrkcjTPkHo7pcMH3k0Tki4ONl0
io8T+36n6sjGjBKLWZsPfTs3TPCHnmgdMR0l9HYrhl4wmCS6e4Tm5FzfEvFf
db+SZ94R5Ws7VVnezRL99OiabY0zRIbUhgdcypNE/9k60/DkEYKUtGZ47scQ
oS+W+JtXbZDw2zC/kLDcR+xKTZ7OkushgjUOPC741UbkN9ZyWv5XQ+iK/uUL
3kwlzKjTgTkDFCL0lySv2Oki4uTVZK84FzoxxKZ2Q3NjNbEl0uGaG9tLYkYq
ZzjmyitCmmQWfmayi/gz7FVwkLmXODt5R5PJt4cQ8qrKsTvaTvw9+SyGKayO
4G9MUr0mW0GYJynqi6oWE5HU2qQRHzqx9mO1J9/jSsJB6M65/IxaYvyQQLWJ
dQ2x9qFMSLxsGcEcza61s4VGmCZ4CQ2a5BDiu7+fMFhOI0ztNZZP25OI1FjT
sB0aNCIsVUD50d9CwsvEUP7wUSpRbZfS+VqZTITtoe+X+5BHuNzPWRkayyPi
dx3aV/mXRDyQsK8TrEgncnZdVEiKiyDsr90tsfrpgL2Ldul8PZGIjfDMnWP1
xM3P5iQtdXciMXmvBe2FHVHRldZ6ZiYGBQk7pvJPFcGLzz6lQ7kWn2Qlo8R/
NoD1zhuqjGYjHOMkLd8pNeEj5RLZ0KcZn/9ku5X/bMFGxy4RJ51W1J7YJrrM
24otJkbl7IzjDyjnIrfffQXSyeVIU9kedFnbV305yNj3hj8jElYGYJq+MThf
9TViOsbK3JVHYCX+V+vBToYenXgcBafGcMZCbLg5aAKaizeTUgsmsb4yWFxG
YwoscXuWc/5OIf1wG/v7oilUbX++qdlhEs51DvwlbJMINFDcv/bMJF583er/
NXECYi9f+zR8fwMXrgzn9IwJjO9/P1TychI8h8fL0m2nYLCVA3zNU5AJeHtx
XnsKMa/YmnZpTWIqY/JNOv8kNPqn/zkxxtfxyWtYKZ6E/jPvM+uYJ/GDfmts
CRNwWB0wSP07DoO1L/Wr/o3B8kal6OrMGHIMzR/XXByDzEPP9rXTI+D6tcnQ
yGkEZ2xuRFow/Kb5vdspDf0RLBq/btm6ewQ/HZdtNxwYxeWuiYAn+8bQX5ZU
f0F1DDd3fikoODYGtu3LB0riR6Eb8zLHNGUEQsoncjfcG4HX0q2okecj4GY9
+yb03jAi/vG0X7o7hAEN3uLcjkHo/fLgOVn5Gjj0p+OZySjYjp/PJVJHsVY8
VcbDdwgZnG6bg7y6oJv7l5klgY4Xrz/tuEhUEzKbDj0KruwldndGLtZcHyV2
kr8M1YxMEM6mdOn/IdPM4qH+w7+dQlRaVCRrSYvll5RkyS1KqaxRCKGdElIK
FSpL1lKyRCRryb4vt33fZoaZsc1qF0WpKDzzPAfP/+A/J5+TOfnOzPv6XNfr
NXNrWBi/49Pj6iImmrReEA1yYqLrhud2QXdY6C6+lH7jKBtt3V+v3eXDQrfz
c6JqsUz0P2KmmO7KxK7Iyk3c0ww08erOZa5nYKQl4/Xxfjquu/pcPmwTA1+c
jpyQFmKgv1T6y3XuTPSWoqmefTKEa900myc1R3FQ91Lh/O5x5FZ0FdoxNoH/
tVSzavZOYnC0NNf9vWMYfuZCmL4mGxs0ZW4G4iC+s/704fVzCr61o0kv/iXh
m5mVXFtVSJjkSvbNfUvEuejQ1gcSnTg1uHLn7ieN2M93b4fo1xqUf0pdu7i7
CmkN+usGy8pwOcRSruZdOYYd7H+/bF6N0lUV3zdV1qLLbZ/gVWl1eI9a/Ns6
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
szsPtEtwmpAlkKdaigNuh1zltxeiDyn0TdapZHQOd1JtGTeEDqbt7hvPUqAm
eqXp2sF8+E/t0IZkYhGs2p4qcqisAGFJEZ+a7BoI0iZTNO/Vw9OFKcWzT+tB
eflhzhOXOtgpEdcUVFwLXx4WjVKz64A+oancubMJpMY6s8YkOiAjSnOPWwMR
fCSYGn8xkuCqakSTuiMRRrYl/Ezd0gkyb2QuMYy2wWK9inmidyuYeldPeDW3
wO5Mv4dC0c1w/Xdevb5oE9yiiQgeLm0ECcj4RWfSBL0CX+U/vGuGGCujp5aO
zcBPkHjvEdgAvbE+kQkbBEjLVxW14i+C0stKi4eDM6B//Vy0i3IyFB5YzfIe
TYV7J4QvFX3PBA4lk5SFhQz48mnxH5GcCByqZpOZdBFQXOyiY0+xA8fg5uGY
di/UL3wmN/vyI9bL73MVuJmEpJOXFKyj0vDXqaiUILE0bHLPmLt/JQGzbab4
eAJDUPv0D136u/Z4Ny1gfnDSCU88KNtf5hGK08oTCe3nY1DmyOELLuaRGJRb
ovPz20t0eZkksvPQO6hpLebzZYyEP/63Pwr0RcO9//+ATywMcC7T4tfj4fCq
uoaveRoonFSaeMmUC6Vqf/IVJQvAtXib77eSItAwTBGIYCsDpQfT5QKqVVCX
8/xfBBCgp2JUpmYzr/a+ePpws16CmvOGve1ZAsjsvnCsfNMHQX7a9Yl2NdjV
sacV3aqFl8K2j6Je1EHiI1PuL1x1sLykvTBvVAuGWqs5xro1sPRGni40kwAK
/i7vbxsh2NXf8UpMQ2D7Yh51oKQKFnJ+0V17XgH+O23sWYfK4YFM2tnOH+Ug
eMK4w2RPGfhf5Y2UGSuCwwt8DoF78+CcJ2G1dlsSsF72PZfsGgGMBvMGfL8/
wIiAievD9k3fpH7xfLUUCwHVsy+MnINh4DtXMmXmCuZyV7EovwnFM0YiDIXF
H/HQPrFmX8dwHOBxdxiyC8fXEtLfGyM/Y7GkukijRyL6H1A/x7ucgCdvLOZz
GyZgXW7Us88mCdjKcPpBOyEBtZiJfdv7kjDsvuCZ4qUkDBlw6xVdj0HC1Tm7
JHZvbFj4oXWpUQZ5OfrVhg4/Ancu7pdyDrbA7HzrTKWfF/B3nrsnHRMKpscT
TtkWxoL77lfxhzEZjLQM78zz5cCP6LtTkyqFECRffcncpByaO6po7vME4Hyl
brFNphZqdILNpbtqwf0RuU4ipxbUfTqOOxvVwQhz3vum5w2w6jQ8kxDXDCau
TmWR0u3A9ZpDz7u1Ewik8/YDF4mw5/WR6Ky/nXCg7KnFjdpO2JE7Z3KxpBNO
u6qxkEs74c1AjsRNQifEGVlvfO/qhKMe4WE9BkSIJ/9n9U6PBF0eNS9S50iw
O+1v4dN3JJBW4XW700wEbrb5C0RWItwVT5GXv9IBVElbQcPVNujLGKt88qgd
Tvnx9JUf7oAk7hce9yM6oFYjTvvhk06QuGRosXq2E/gC9aJ8rNrgXvbWG/rk
JkgtOuGmL9cAIwUJL/821oGUwevrNlvr4dLlwdg8r0b49lRcXOV4C1RzKUYo
d7cAq55vm0tFM0yb7jbI9GgAYrkQQUa+Bs6tMUz2HaqGEz2BYuLTtaC1S3kL
m2oDXAzx3imTXQ/cP1iaUhdroDpKythopgK6Dn7aSr5bABoj933qJQrgjjCT
KRaUgmqocYGmfSmsVw4IOLXlg3X95Y/jUjkwIGbfZ1CQCXedjsftqMmA4r3X
f3C6ZsGY4QkH3qw4mHhDPnpSNBGlRQROn6SvxsDEJJ7Quw3YNDDI8yyyFsWv
mx4/H1mEtDdx+azqQdjodWdmo84eHYl3aeoHCrByJ3N1T38jdskfbRzXJOH2
VskvO29TMey2RZStLxVTytUDj/mQcSnLofSYBhFbU2wcNL078K3wyPCjwXZ0
v+zW65/Wid25wUZkZgq+/zunmBjcjZkDQcTeJ/24YR9/m0NpEC1SH/Er6g3g
Fp5fGk+Te/DC3hdkoi0V35el5zh7kLFT6kf1kXwKZqQ0kf7s7Ubd2/yKJyz6
sK2ziYPpSj+ePUq7p7W7F09TyzbkN2jI8x+t5j2ZgklKp259O7iZb3Njncr6
FHzY4OTIKkjBM7cvE9kcSHgkouFS3UY7bjkZyXP9ZzMyM1xi6FhsQD3q7bMj
3XXoNi9HvshZi4PaQr2sPATMApU5IaESDHhzSDR5IhcHN8pZCxuScbYz75zo
jAvea8/TtZ6Og69HvxTc/5YH3bdX7OklN/uO61anmigCpDcv7WVgrYbw56Uf
1pYI8NHPVl+7qgaOFRZu3bWZX3f0yznZBJrgkpqpTP32zfPj6JE69JIEvysl
VwKeUGBM9mJlfgUFUuzdhMNSyEBM/nz7ZioRJqn7RVrSO0CR4M0XntgJf/i3
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
d8EIPS8S/B/gTD0p
    "], 16000]]]], "Output",
 CellChangeTimes->{{3.621263367382313*^9, 3.621263459966345*^9}, {
   3.621263510366794*^9, 3.621263520111865*^9}, {3.6212636857138853`*^9, 
   3.621263747805423*^9}, 3.62126454691619*^9, {3.622796560750154*^9, 
   3.62279663683197*^9}, 3.6408702775592785`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"snd3", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"4000", ";;", "10000"}], "]"}], "]"}], "//", "Short"}]], "Input",
 CellChangeTimes->{{3.621263790938607*^9, 3.621263791971671*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "0.04265867546200752`"}], ",", 
    RowBox[{"-", "0.00663352757692337`"}], ",", 
    RowBox[{"\[LeftSkeleton]", "5998", "\[RightSkeleton]"}], ",", 
    "0.14639165624976158`"}], "}"}],
  Short]], "Output",
 CellChangeTimes->{3.6212637926415777`*^9, 3.621264547048347*^9, 
  3.622796646757039*^9, 3.6408702776579113`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["WAV Encoding", "Subsubsection",
 CellChangeTimes->{{3.621264514420455*^9, 3.621264517925146*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<three.wav\>\"", ",", "snd3", ",", "\"\<WAV\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.621264520002605*^9, 3.621264535194433*^9}}],

Cell[BoxData["\<\"three.wav\"\>"], "Output",
 CellChangeTimes->{3.621264547104125*^9, 3.6408702777663097`*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"RulerBar",
WindowSize->{1243, 889},
WindowMargins->{{Automatic, 19}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{595.2, 841.8}},
Magnification->1.25,
FrontEndVersion->"10.1 for Microsoft Windows (64-bit) (March 23, 2015)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Title"], Background -> RGBColor[1, 1, 0]], 
   Cell[
    StyleData["Chapter"], Background -> GrayLevel[0.85]], 
   Cell[
    StyleData["Subchapter"], CellDingbat -> "\[FilledDiamond]", TextAlignment -> 
    Left, FontFamily -> "Gill Sans MT", FontSize -> 28, FontWeight -> "Bold", 
    FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
    Background -> RGBColor[0.87, 0.94, 1]], 
   Cell[
    StyleData["Section"], FontColor -> 
    RGBColor[0.5019607843137255, 0., 0.25098039215686274`]], 
   Cell[
    StyleData["Subsection"], FontFamily -> "Gill Sans MT", FontSize -> 20, 
    FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Subsubsection"]], 
   Cell[
    StyleData["Text"], CellChangeTimes -> {3.6355989339035053`*^9}, 
    TextJustification -> 1.]}, Visible -> False, FrontEndVersion -> 
  "10.1 for Microsoft Windows (64-bit) (March 23, 2015)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Internal Representation"->{
  Cell[100008, 2770, 148, 2, 68, "Section",
   CellTags->"Internal Representation"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Internal Representation", 1013151, 18785}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 224, 3, 147, "Title"],
Cell[CellGroupData[{
Cell[829, 29, 288, 6, 95, "Subsection"],
Cell[1120, 37, 1520, 27, 115, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2677, 69, 870, 13, 176, "Chapter"],
Cell[CellGroupData[{
Cell[3572, 86, 238, 3, 103, "Subchapter"],
Cell[CellGroupData[{
Cell[3835, 93, 94, 1, 86, "Section"],
Cell[CellGroupData[{
Cell[3954, 98, 108, 1, 59, "Subsection"],
Cell[4065, 101, 1046, 18, 113, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5148, 124, 161, 2, 59, "Subsection"],
Cell[5312, 128, 3363, 47, 388, "Text"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8724, 181, 105, 1, 86, "Section"],
Cell[8832, 184, 2172, 31, 265, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[11041, 220, 161, 2, 68, "Section"],
Cell[11205, 224, 481, 9, 88, "Text"],
Cell[CellGroupData[{
Cell[11711, 237, 115, 1, 49, "Subsubsection"],
Cell[11829, 240, 423, 7, 63, "Text"],
Cell[CellGroupData[{
Cell[12277, 251, 175, 2, 36, "Subsubsubsection"],
Cell[12455, 255, 516, 9, 171, "Text"],
Cell[12974, 266, 604, 13, 116, "Input"],
Cell[CellGroupData[{
Cell[13603, 283, 343, 8, 70, "Input"],
Cell[13949, 293, 2266, 50, 575, "Output"]
}, Open  ]],
Cell[16230, 346, 325, 7, 125, "Text"],
Cell[CellGroupData[{
Cell[16580, 357, 161, 3, 70, "Input"],
Cell[16744, 362, 204, 4, 87, "Output"]
}, Open  ]],
Cell[16963, 369, 159, 3, 72, "Text"],
Cell[17125, 374, 919, 20, 116, "Input"],
Cell[CellGroupData[{
Cell[18069, 398, 552, 13, 70, "Input"],
Cell[18624, 413, 175, 3, 70, "Output"]
}, Open  ]],
Cell[18814, 419, 522, 9, 171, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[19373, 433, 124, 1, 27, "Subsubsubsection"],
Cell[19500, 436, 225, 5, 72, "Text"],
Cell[19728, 443, 182, 4, 121, "Text"],
Cell[19913, 449, 243, 7, 75, "Text"],
Cell[20159, 458, 283, 7, 70, "Input"],
Cell[20445, 467, 191, 4, 72, "Text"],
Cell[20639, 473, 262, 5, 121, "Text"],
Cell[20904, 480, 513, 11, 116, "Input"],
Cell[CellGroupData[{
Cell[21442, 495, 364, 7, 70, "Input"],
Cell[21809, 504, 271, 6, 70, "Output"]
}, Open  ]],
Cell[22095, 513, 182, 4, 72, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[22314, 522, 170, 2, 27, "Subsubsubsection"],
Cell[22487, 526, 460, 8, 121, "Text"],
Cell[22950, 536, 282, 7, 70, "Input"],
Cell[23235, 545, 142, 2, 72, "Text"],
Cell[23380, 549, 382, 9, 116, "Input"],
Cell[CellGroupData[{
Cell[23787, 562, 208, 5, 70, "Input"],
Cell[23998, 569, 173, 4, 70, "Output"]
}, Open  ]],
Cell[24186, 576, 231, 5, 72, "Text"],
Cell[24420, 583, 200, 4, 72, "Text"],
Cell[CellGroupData[{
Cell[24645, 591, 212, 5, 70, "Input"],
Cell[24860, 598, 168, 4, 70, "Output"]
}, Open  ]],
Cell[25043, 605, 183, 4, 72, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[25263, 614, 197, 3, 27, "Subsubsubsection"],
Cell[25463, 619, 898, 14, 171, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[26398, 638, 158, 2, 27, "Subsubsubsection"],
Cell[26559, 642, 310, 6, 78, "Text"],
Cell[CellGroupData[{
Cell[26894, 652, 218, 5, 45, "Input"],
Cell[27115, 659, 219, 5, 45, "Output"]
}, Open  ]],
Cell[27349, 667, 219, 4, 47, "Text"],
Cell[CellGroupData[{
Cell[27593, 675, 197, 3, 45, "Input"],
Cell[27793, 680, 121, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27951, 687, 169, 3, 45, "Input"],
Cell[28123, 692, 145, 2, 45, "Output"]
}, Open  ]],
Cell[28283, 697, 812, 13, 110, "Text"],
Cell[CellGroupData[{
Cell[29120, 714, 133, 2, 45, "Input"],
Cell[29256, 718, 126, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29419, 725, 244, 5, 45, "Input"],
Cell[29666, 732, 122, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29825, 739, 172, 3, 45, "Input"],
Cell[30000, 744, 153, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30190, 752, 151, 3, 45, "Input"],
Cell[30344, 757, 369, 10, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30750, 772, 123, 2, 45, "Input"],
Cell[30876, 776, 178, 2, 45, "Output"]
}, Open  ]],
Cell[31069, 781, 1784, 34, 202, "Text"],
Cell[32856, 817, 161, 2, 58, "Text"],
Cell[CellGroupData[{
Cell[33042, 823, 175, 3, 56, "Input"],
Cell[33220, 828, 124, 2, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33381, 835, 167, 3, 56, "Input"],
Cell[33551, 840, 126, 2, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33714, 847, 128, 3, 56, "Input"],
Cell[33845, 852, 122, 2, 56, "Output"]
}, Open  ]],
Cell[33982, 857, 268, 5, 97, "Text"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34299, 868, 137, 1, 49, "Subsubsection"],
Cell[CellGroupData[{
Cell[34461, 873, 145, 1, 36, "Subsubsubsection"],
Cell[34609, 876, 1016, 16, 187, "Text"],
Cell[35628, 894, 707, 11, 113, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36372, 910, 173, 3, 36, "Subsubsubsection"],
Cell[36548, 915, 1014, 16, 171, "Text"],
Cell[37565, 933, 692, 24, 47, "Text"],
Cell[38260, 959, 695, 24, 47, "Text"],
Cell[38958, 985, 668, 23, 47, "Text"],
Cell[39629, 1010, 696, 24, 47, "Text"],
Cell[40328, 1036, 910, 26, 78, "Text"],
Cell[41241, 1064, 909, 27, 47, "Text"],
Cell[42153, 1093, 423, 8, 47, "Text"],
Cell[42579, 1103, 764, 24, 47, "Text"],
Cell[43346, 1129, 841, 23, 78, "Text"],
Cell[44190, 1154, 785, 24, 47, "Text"],
Cell[44978, 1180, 855, 23, 47, "Text"],
Cell[45836, 1205, 752, 23, 47, "Text"],
Cell[46591, 1230, 831, 24, 47, "Text"],
Cell[47425, 1256, 386, 7, 78, "Text"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[47872, 1270, 156, 2, 86, "Section"],
Cell[48031, 1274, 2153, 41, 295, "Text"],
Cell[CellGroupData[{
Cell[50209, 1319, 215, 3, 45, "Input"],
Cell[50427, 1324, 486, 9, 75, "Output"]
}, Open  ]],
Cell[50928, 1336, 310, 6, 78, "Text"],
Cell[51241, 1344, 244, 4, 45, "Input"],
Cell[CellGroupData[{
Cell[51510, 1352, 73, 1, 45, "Input"],
Cell[51586, 1355, 89, 2, 45, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51736, 1364, 265, 6, 153, "Subchapter"],
Cell[52004, 1372, 590, 11, 63, "Text"],
Cell[CellGroupData[{
Cell[52619, 1387, 101, 1, 86, "Section"],
Cell[52723, 1390, 395, 9, 78, "Text"],
Cell[CellGroupData[{
Cell[53143, 1403, 205, 4, 45, "Input"],
Cell[53351, 1409, 308, 9, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53696, 1423, 298, 9, 45, "Input"],
Cell[53997, 1434, 128, 2, 45, "Output"]
}, Open  ]],
Cell[54140, 1439, 335, 7, 47, "Text"],
Cell[CellGroupData[{
Cell[54500, 1450, 237, 3, 73, "Subsection"],
Cell[54740, 1455, 1296, 21, 171, "Text"],
Cell[CellGroupData[{
Cell[56061, 1480, 550, 11, 45, "Input"],
Cell[56614, 1493, 445, 9, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57096, 1507, 247, 6, 67, "Input"],
Cell[57346, 1515, 235, 3, 45, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[57630, 1524, 182, 2, 60, "Subsection"],
Cell[57815, 1528, 904, 18, 110, "Text"],
Cell[CellGroupData[{
Cell[58744, 1550, 500, 11, 61, "Subsubsection"],
Cell[CellGroupData[{
Cell[59269, 1565, 194, 4, 45, "Input"],
Cell[59466, 1571, 281, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59784, 1581, 123, 2, 45, "Input"],
Cell[59910, 1585, 233, 3, 45, "Output"]
}, Open  ]],
Cell[60158, 1591, 364, 6, 78, "Text"],
Cell[CellGroupData[{
Cell[60547, 1601, 837, 18, 247, "Input"],
Cell[61387, 1621, 384, 8, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61808, 1634, 123, 2, 45, "Input"],
Cell[61934, 1638, 195, 3, 45, "Output"]
}, Open  ]],
Cell[62144, 1644, 476, 8, 78, "Text"],
Cell[CellGroupData[{
Cell[62645, 1656, 239, 5, 45, "Input"],
Cell[62887, 1663, 367, 6, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63291, 1674, 123, 2, 45, "Input"],
Cell[63417, 1678, 251, 3, 45, "Output"]
}, Open  ]],
Cell[63683, 1684, 280, 3, 47, "Text"],
Cell[CellGroupData[{
Cell[63988, 1691, 337, 6, 45, "Input"],
Cell[64328, 1699, 554, 10, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64919, 1714, 123, 2, 45, "Input"],
Cell[65045, 1718, 257, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65339, 1726, 387, 9, 45, "Input"],
Cell[65729, 1737, 460, 8, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66226, 1750, 220, 4, 45, "Input"],
Cell[66449, 1756, 461, 7, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66947, 1768, 128, 2, 45, "Input"],
Cell[67078, 1772, 404, 9, 45, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[67531, 1787, 109, 1, 50, "Subsubsection"],
Cell[67643, 1790, 326, 6, 78, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[68018, 1802, 249, 3, 73, "Subsection"],
Cell[68270, 1807, 2206, 34, 297, "Text"],
Cell[CellGroupData[{
Cell[70501, 1845, 138, 3, 51, "Input"],
Cell[70642, 1850, 140, 2, 66, "Output"]
}, Open  ]],
Cell[70797, 1855, 438, 8, 78, "Text"],
Cell[CellGroupData[{
Cell[71260, 1867, 160, 3, 45, "Input"],
Cell[71423, 1872, 107, 2, 71, "Output"]
}, Open  ]],
Cell[71545, 1877, 222, 4, 47, "Text"],
Cell[71770, 1883, 265, 5, 47, "Text"],
Cell[CellGroupData[{
Cell[72060, 1892, 162, 3, 45, "Input"],
Cell[72225, 1897, 159, 4, 56, "Output"]
}, Open  ]],
Cell[72399, 1904, 807, 13, 110, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[73243, 1922, 315, 4, 60, "Subsection"],
Cell[73561, 1928, 209, 5, 47, "Text"],
Cell[CellGroupData[{
Cell[73795, 1937, 464, 11, 63, "Subsubsection"],
Cell[74262, 1950, 428, 10, 78, "Text"],
Cell[CellGroupData[{
Cell[74715, 1964, 379, 7, 45, "Input"],
Cell[75097, 1973, 135, 5, 68, "Output"]
}, Open  ]],
Cell[75247, 1981, 850, 18, 47, "Text"],
Cell[CellGroupData[{
Cell[76122, 2003, 549, 10, 48, "Input"],
Cell[76674, 2015, 392, 11, 66, "Output"]
}, Open  ]],
Cell[77081, 2029, 196, 4, 47, "Text"],
Cell[CellGroupData[{
Cell[77302, 2037, 285, 7, 48, "Input"],
Cell[77590, 2046, 310, 10, 66, "Output"]
}, Open  ]],
Cell[77915, 2059, 177, 4, 47, "Text"],
Cell[CellGroupData[{
Cell[78117, 2067, 212, 5, 45, "Input"],
Cell[78332, 2074, 218, 6, 68, "Output"]
}, Open  ]],
Cell[78565, 2083, 479, 12, 47, "Text"],
Cell[CellGroupData[{
Cell[79069, 2099, 356, 8, 48, "Input"],
Cell[79428, 2109, 438, 12, 66, "Output"]
}, Open  ]],
Cell[79881, 2124, 300, 6, 47, "Text"],
Cell[CellGroupData[{
Cell[80206, 2134, 349, 8, 45, "Input"],
Cell[80558, 2144, 381, 7, 47, "Output"]
}, Open  ]],
Cell[80954, 2154, 333, 6, 47, "Text"],
Cell[CellGroupData[{
Cell[81312, 2164, 345, 7, 48, "Input"],
Cell[81660, 2173, 395, 12, 66, "Output"]
}, Open  ]],
Cell[82070, 2188, 260, 5, 47, "Text"],
Cell[CellGroupData[{
Cell[82355, 2197, 554, 13, 45, "Input"],
Cell[82912, 2212, 164, 5, 66, "Output"]
}, Open  ]],
Cell[83091, 2220, 338, 10, 47, "Text"],
Cell[CellGroupData[{
Cell[83454, 2234, 251, 7, 48, "Input"],
Cell[83708, 2243, 376, 12, 66, "Output"]
}, Open  ]],
Cell[84099, 2258, 512, 14, 48, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[84648, 2277, 463, 12, 52, "Subsubsection"],
Cell[85114, 2291, 285, 6, 47, "Text"],
Cell[CellGroupData[{
Cell[85424, 2301, 120, 2, 48, "Input"],
Cell[85547, 2305, 143, 2, 45, "Output"]
}, Open  ]],
Cell[85705, 2310, 225, 5, 47, "Text"],
Cell[CellGroupData[{
Cell[85955, 2319, 186, 4, 51, "Input"],
Cell[86144, 2325, 363, 11, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86544, 2341, 189, 4, 51, "Input"],
Cell[86736, 2347, 174, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86947, 2354, 192, 4, 51, "Input"],
Cell[87142, 2360, 180, 4, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87359, 2369, 191, 4, 51, "Input"],
Cell[87553, 2375, 230, 6, 51, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[87832, 2387, 527, 13, 52, "Subsubsection"],
Cell[88362, 2402, 748, 11, 110, "Text"],
Cell[CellGroupData[{
Cell[89135, 2417, 127, 2, 45, "Input"],
Cell[89265, 2421, 132, 3, 50, "Output"]
}, Open  ]],
Cell[89412, 2427, 361, 6, 78, "Text"],
Cell[CellGroupData[{
Cell[89798, 2437, 469, 11, 103, "Input"],
Cell[90270, 2450, 279, 6, 68, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90586, 2461, 383, 8, 103, "Input"],
Cell[90972, 2471, 275, 6, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91284, 2482, 126, 2, 45, "Input"],
Cell[91413, 2486, 196, 2, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91646, 2493, 132, 2, 45, "Input"],
Cell[91781, 2497, 317, 7, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92135, 2509, 127, 2, 45, "Input"],
Cell[92265, 2513, 421, 13, 66, "Output"]
}, Open  ]],
Cell[92701, 2529, 365, 6, 47, "Text"],
Cell[CellGroupData[{
Cell[93091, 2539, 503, 11, 103, "Input"],
Cell[93597, 2552, 233, 6, 71, "Output"]
}, Open  ]],
Cell[93845, 2561, 217, 3, 47, "Text"],
Cell[CellGroupData[{
Cell[94087, 2568, 125, 2, 45, "Input"],
Cell[94215, 2572, 200, 4, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94452, 2581, 176, 3, 45, "Input"],
Cell[94631, 2586, 461, 13, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95129, 2604, 126, 2, 45, "Input"],
Cell[95258, 2608, 159, 2, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95454, 2615, 128, 2, 45, "Input"],
Cell[95585, 2619, 175, 3, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95797, 2627, 129, 2, 45, "Input"],
Cell[95929, 2631, 204, 4, 77, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[96182, 2641, 111, 1, 50, "Subsubsection"],
Cell[CellGroupData[{
Cell[96318, 2646, 115, 2, 45, "Input"],
Cell[96436, 2650, 236, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96709, 2658, 187, 4, 45, "Input"],
Cell[96899, 2664, 387, 11, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97323, 2680, 186, 4, 45, "Input"],
Cell[97512, 2686, 204, 3, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97753, 2694, 349, 9, 45, "Input"],
Cell[98105, 2705, 328, 7, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98470, 2717, 123, 2, 45, "Input"],
Cell[98596, 2721, 469, 13, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99102, 2739, 127, 2, 45, "Input"],
Cell[99232, 2743, 192, 2, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99461, 2750, 131, 2, 45, "Input"],
Cell[99595, 2754, 340, 8, 66, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[100008, 2770, 148, 2, 68, "Section",
 CellTags->"Internal Representation"],
Cell[100159, 2774, 461, 8, 78, "Text"],
Cell[CellGroupData[{
Cell[100645, 2786, 137, 3, 51, "Input"],
Cell[100785, 2791, 414, 12, 45, "Output"]
}, Open  ]],
Cell[101214, 2806, 262, 5, 78, "Text"],
Cell[CellGroupData[{
Cell[101501, 2815, 182, 4, 51, "Input"],
Cell[101686, 2821, 147, 2, 45, "Output"]
}, Open  ]],
Cell[101848, 2826, 570, 9, 110, "Text"],
Cell[CellGroupData[{
Cell[102443, 2839, 420, 13, 45, "Input"],
Cell[102866, 2854, 4997, 137, 552, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[107912, 2997, 169, 2, 68, "Section"],
Cell[108084, 3001, 257, 5, 47, "Text"],
Cell[CellGroupData[{
Cell[108366, 3010, 151, 2, 45, "Input"],
Cell[108520, 3014, 237, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108794, 3022, 164, 3, 45, "Input"],
Cell[108961, 3027, 221, 3, 45, "Output"]
}, Open  ]],
Cell[109197, 3033, 127, 2, 47, "Text"],
Cell[CellGroupData[{
Cell[109349, 3039, 99, 1, 45, "Input"],
Cell[109451, 3042, 145, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109633, 3049, 123, 2, 45, "Input"],
Cell[109759, 3053, 148, 2, 45, "Output"]
}, Open  ]],
Cell[109922, 3058, 880, 17, 141, "Text"],
Cell[CellGroupData[{
Cell[110827, 3079, 242, 5, 45, "Input"],
Cell[111072, 3086, 357, 6, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111466, 3097, 126, 2, 45, "Input"],
Cell[111595, 3101, 125, 3, 45, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[111769, 3110, 195, 2, 68, "Section"],
Cell[111967, 3114, 149, 2, 47, "Text"],
Cell[CellGroupData[{
Cell[112141, 3120, 157, 3, 45, "Input"],
Cell[112301, 3125, 258, 5, 45, "Output"]
}, Open  ]],
Cell[112574, 3133, 252, 5, 47, "Text"],
Cell[CellGroupData[{
Cell[112851, 3142, 177, 3, 45, "Input"],
Cell[113031, 3147, 220, 4, 45, "Output"]
}, Open  ]],
Cell[113266, 3154, 161, 2, 47, "Text"],
Cell[CellGroupData[{
Cell[113452, 3160, 143, 3, 45, "Input"],
Cell[113598, 3165, 168, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113803, 3174, 126, 2, 45, "Input"],
Cell[113932, 3178, 126, 3, 45, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[114107, 3187, 108, 1, 68, "Section"],
Cell[114218, 3190, 738, 11, 141, "Text"],
Cell[CellGroupData[{
Cell[114981, 3205, 251, 6, 45, "Input"],
Cell[115235, 3213, 446, 8, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115718, 3226, 189, 4, 63, "Input"],
Cell[115910, 3232, 234, 5, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116181, 3242, 337, 7, 63, "Input"],
Cell[116521, 3251, 97, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116655, 3257, 337, 7, 63, "Input"],
Cell[116995, 3266, 316, 10, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117348, 3281, 379, 8, 63, "Input"],
Cell[117730, 3291, 127, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117894, 3298, 117, 2, 45, "Input"],
Cell[118014, 3302, 97, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118148, 3308, 259, 6, 45, "Input"],
Cell[118410, 3316, 359, 7, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118806, 3328, 266, 5, 63, "Input"],
Cell[119075, 3335, 150, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119262, 3343, 116, 1, 73, "Subsection"],
Cell[119381, 3346, 437, 9, 78, "Text"],
Cell[CellGroupData[{
Cell[119843, 3359, 295, 8, 45, "Input"],
Cell[120141, 3369, 405, 12, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120583, 3386, 300, 8, 45, "Input"],
Cell[120886, 3396, 348, 10, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121271, 3411, 359, 9, 45, "Input"],
Cell[121633, 3422, 686, 19, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122356, 3446, 193, 3, 45, "Input"],
Cell[122552, 3451, 772, 19, 135, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123361, 3475, 300, 8, 45, "Input"],
Cell[123664, 3485, 1719, 43, 110, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125420, 3533, 350, 9, 45, "Input"],
Cell[125773, 3544, 467, 16, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126277, 3565, 303, 8, 45, "Input"],
Cell[126583, 3575, 5538, 131, 143, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132158, 3711, 432, 12, 75, "Input"],
Cell[132593, 3725, 4959, 123, 253, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[137625, 3856, 299, 6, 153, "Subchapter"],
Cell[137927, 3864, 636, 15, 88, "Text"],
Cell[CellGroupData[{
Cell[138588, 3883, 193, 3, 36, "Input"],
Cell[138784, 3888, 390, 9, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139211, 3902, 129, 2, 86, "Section"],
Cell[139343, 3906, 869, 15, 88, "Text"],
Cell[CellGroupData[{
Cell[140237, 3925, 116, 1, 73, "Subsection"],
Cell[CellGroupData[{
Cell[140378, 3930, 930, 19, 103, "Input"],
Cell[141311, 3951, 515, 8, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141863, 3964, 330, 7, 45, "Input"],
Cell[142196, 3973, 5650, 147, 108, "Output"]
}, Open  ]],
Cell[147861, 4123, 295, 6, 78, "Text"],
Cell[CellGroupData[{
Cell[148181, 4133, 294, 6, 45, "Input"],
Cell[148478, 4141, 545, 8, 45, "Output"]
}, Open  ]],
Cell[149038, 4152, 192, 4, 47, "Text"],
Cell[CellGroupData[{
Cell[149255, 4160, 216, 4, 45, "Input"],
Cell[149474, 4166, 5072, 140, 108, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[154595, 4312, 117, 1, 60, "Subsection"],
Cell[154715, 4315, 220, 4, 47, "Text"],
Cell[CellGroupData[{
Cell[154960, 4323, 170, 2, 61, "Subsubsection"],
Cell[155133, 4327, 214, 3, 47, "Text"],
Cell[CellGroupData[{
Cell[155372, 4334, 100, 1, 37, "Subitem"],
Cell[155475, 4337, 159, 3, 37, "Subitem"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[155683, 4346, 212, 2, 50, "Subsubsection"],
Cell[CellGroupData[{
Cell[155920, 4352, 188, 3, 45, "Input"],
Cell[156111, 4357, 476, 8, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156624, 4370, 182, 3, 45, "Input"],
Cell[156809, 4375, 429, 7, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157275, 4387, 155, 3, 45, "Input"],
Cell[157433, 4392, 383, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157853, 4402, 179, 3, 45, "Input"],
Cell[158035, 4407, 485, 10, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158557, 4422, 122, 2, 45, "Input"],
Cell[158682, 4426, 328, 5, 45, "Output"]
}, Open  ]],
Cell[159025, 4434, 1014, 25, 110, "Text"],
Cell[CellGroupData[{
Cell[160064, 4463, 86, 2, 45, "Input"],
Cell[160153, 4467, 369, 6, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160559, 4478, 235, 5, 45, "Input"],
Cell[160797, 4485, 421, 6, 45, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[161267, 4497, 183, 2, 50, "Subsubsection"],
Cell[CellGroupData[{
Cell[161475, 4503, 311, 5, 45, "Input"],
Cell[161789, 4510, 582, 10, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162408, 4525, 174, 3, 45, "Input"],
Cell[162585, 4530, 502, 7, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163124, 4542, 234, 4, 45, "Input"],
Cell[163361, 4548, 591, 11, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163989, 4564, 182, 3, 45, "Input"],
Cell[164174, 4569, 427, 7, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164638, 4581, 127, 2, 45, "Input"],
Cell[164768, 4585, 355, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165160, 4595, 105, 3, 45, "Input"],
Cell[165268, 4600, 417, 6, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165722, 4611, 171, 3, 45, "Input"],
Cell[165896, 4616, 418, 6, 45, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[166363, 4628, 115, 1, 50, "Subsubsection"],
Cell[166481, 4631, 227, 4, 47, "Text"],
Cell[CellGroupData[{
Cell[166733, 4639, 135, 2, 45, "Input"],
Cell[166871, 4643, 325, 5, 45, "Output"]
}, Open  ]],
Cell[167211, 4651, 228, 4, 47, "Text"],
Cell[CellGroupData[{
Cell[167464, 4659, 216, 5, 45, "Input"],
Cell[167683, 4666, 376, 5, 45, "Output"]
}, Open  ]],
Cell[168074, 4674, 203, 5, 47, "Text"],
Cell[CellGroupData[{
Cell[168302, 4683, 188, 4, 45, "Input"],
Cell[168493, 4689, 356, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168886, 4699, 213, 5, 45, "Input"],
Cell[169102, 4706, 4917, 136, 108, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174056, 4847, 211, 5, 45, "Input"],
Cell[174270, 4854, 316, 5, 45, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[174635, 4865, 162, 3, 50, "Subsubsection"],
Cell[CellGroupData[{
Cell[174822, 4872, 319, 9, 45, "Input"],
Cell[175144, 4883, 420, 6, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175601, 4894, 275, 8, 45, "Input"],
Cell[175879, 4904, 440, 7, 45, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[176404, 4920, 370, 7, 191, "Subchapter"],
Cell[176777, 4929, 545, 9, 110, "Text"],
Cell[CellGroupData[{
Cell[177347, 4942, 114, 1, 107, "Section"],
Cell[CellGroupData[{
Cell[177486, 4947, 108, 1, 73, "Subsection"],
Cell[CellGroupData[{
Cell[177619, 4952, 120, 1, 61, "Subsubsection"],
Cell[CellGroupData[{
Cell[177764, 4957, 123, 2, 45, "Input"],
Cell[177890, 4961, 347, 5, 45, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[178286, 4972, 119, 1, 61, "Subsubsection"],
Cell[CellGroupData[{
Cell[178430, 4977, 230, 4, 45, "Input"],
Cell[178663, 4983, 348, 5, 45, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[179060, 4994, 119, 1, 61, "Subsubsection"],
Cell[CellGroupData[{
Cell[179204, 4999, 244, 5, 45, "Input"],
Cell[179451, 5006, 392, 6, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179880, 5017, 867, 22, 161, "Input"],
Cell[180750, 5041, 9380, 246, 293, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190167, 5292, 315, 8, 45, "Input"],
Cell[190485, 5302, 228, 6, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190750, 5313, 163, 3, 45, "Input"],
Cell[190916, 5318, 172, 3, 45, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[191149, 5328, 209, 3, 60, "Subsection"],
Cell[191361, 5333, 337, 9, 48, "Text"],
Cell[CellGroupData[{
Cell[191723, 5346, 175, 2, 61, "Subsubsection"],
Cell[CellGroupData[{
Cell[191923, 5352, 146, 3, 45, "Input"],
Cell[192072, 5357, 348, 6, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192457, 5368, 230, 6, 45, "Input"],
Cell[192690, 5376, 371, 6, 45, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[193110, 5388, 117, 1, 61, "Subsubsection"],
Cell[CellGroupData[{
Cell[193252, 5393, 119, 2, 45, "Input"],
Cell[193374, 5397, 318, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193729, 5407, 135, 3, 45, "Input"],
Cell[193867, 5412, 321, 5, 45, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[194261, 5425, 131, 1, 107, "Section"],
Cell[194395, 5428, 904, 21, 111, "Text"],
Cell[CellGroupData[{
Cell[195324, 5453, 223, 3, 73, "Subsection"],
Cell[195550, 5458, 315, 6, 47, "Text"],
Cell[CellGroupData[{
Cell[195890, 5468, 14858, 250, 161, "Input"],
Cell[210751, 5720, 12844, 300, 285, "Output"]
}, Open  ]],
Cell[223610, 6023, 413, 7, 45, "Input"],
Cell[CellGroupData[{
Cell[224048, 6034, 122, 2, 45, "Input"],
Cell[224173, 6038, 146, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224356, 6045, 166, 2, 61, "Subsubsection"],
Cell[CellGroupData[{
Cell[224547, 6051, 208, 4, 45, "Input"],
Cell[224758, 6057, 1143, 33, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225938, 6095, 129, 2, 45, "Input"],
Cell[226070, 6099, 98, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226205, 6105, 246, 5, 45, "Input"],
Cell[226454, 6112, 175411, 2305, 161, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[401902, 8422, 229, 4, 45, "Input"],
Cell[402134, 8428, 97, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[402268, 8434, 162, 3, 45, "Input"],
Cell[402433, 8439, 426, 12, 75, "Output"]
}, Open  ]],
Cell[402874, 8454, 452, 6, 63, "Text"],
Cell[CellGroupData[{
Cell[403351, 8464, 129, 2, 45, "Input"],
Cell[403483, 8468, 130, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[403650, 8475, 821, 16, 45, "Input"],
Cell[404474, 8493, 2676, 47, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[407187, 8545, 356, 10, 45, "Input"],
Cell[407546, 8557, 2148, 61, 161, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[409743, 8624, 113, 1, 61, "Subsubsection"],
Cell[409859, 8627, 435, 10, 45, "Input"],
Cell[CellGroupData[{
Cell[410319, 8641, 179, 3, 45, "Input"],
Cell[410501, 8646, 358, 7, 103, "Output"]
}, Open  ]],
Cell[410874, 8656, 220, 4, 47, "Text"],
Cell[411097, 8662, 7767, 131, 177, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[418913, 8799, 129, 1, 60, "Subsection"],
Cell[CellGroupData[{
Cell[419067, 8804, 103, 1, 61, "Subsubsection"],
Cell[CellGroupData[{
Cell[419195, 8809, 230, 6, 45, "Input"],
Cell[419428, 8817, 254094, 4204, 201, "Output"]
}, Open  ]],
Cell[673537, 13024, 131, 2, 45, "Input"],
Cell[CellGroupData[{
Cell[673693, 13030, 124, 2, 45, "Input"],
Cell[673820, 13034, 145, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[674002, 13041, 126, 2, 45, "Input"],
Cell[674131, 13045, 9127, 227, 248, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[683307, 13278, 135, 1, 61, "Subsubsection"],
Cell[CellGroupData[{
Cell[683467, 13283, 762, 19, 75, "Input"],
Cell[684232, 13304, 325902, 5383, 201, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1010171, 18692, 376, 11, 45, "Input"],
Cell[1010550, 18705, 388, 10, 66, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1010987, 18721, 103, 1, 61, "Subsubsection"],
Cell[CellGroupData[{
Cell[1011115, 18726, 190, 4, 45, "Input"],
Cell[1011308, 18732, 110, 1, 45, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
