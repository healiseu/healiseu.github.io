(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    269462,       7019]
NotebookOptionsPosition[    255550,       6557]
NotebookOutlinePosition[    257023,       6598]
CellTagsIndexPosition[    256980,       6595]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Towards a New Data Modelling Architecture", "Title",
 CellChangeTimes->{{3.635595586131425*^9, 3.6355956352300577`*^9}, {
  3.635595665789628*^9, 3.635595668822831*^9}, {3.635596970109497*^9, 
  3.635596972613639*^9}}],

Cell[CellGroupData[{

Cell["\<\
By Athanassios I. Hatzis, PhD, R&D Software Engineer\[LineSeparator](C) 17th \
of March 2015\
\>", "Subsection",
 CellChangeTimes->{{3.63559577126912*^9, 3.6355957808374796`*^9}, {
  3.6356543596644115`*^9, 3.6356543701487865`*^9}, {3.6356544026487865`*^9, 
  3.6356544293675365`*^9}}],

Cell["\<\
This is a series of Wolfram Language notebooks that introduce progressively \
the art of a new innovative, exhilarating, data modelling approach to \
software developers, architects, data model designers and everyone interested \
in learning the advantages of applying this method and the main differences \
from the data models of the past. In Part I We start with terms and \
constructs that most of us are familiar with from the relational database \
management systems and we continue with the terminology and constructs of the \
new model in Part 2.\
\>", "Text",
 CellChangeTimes->{{3.6355959749204874`*^9, 3.635596184408598*^9}, {
  3.6355962558587933`*^9, 3.6355963825453167`*^9}, {3.635596444787504*^9, 
  3.6355966068397245`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Part1: Representations and Transformations on the Constructs of the \
Relational Model in Wolfram Language\
\>", "Chapter",
 CellChangeTimes->{{3.630738914254218*^9, 3.6307389219582787`*^9}, {
  3.6353225177334347`*^9, 3.635322539524624*^9}, {3.6354784103288155`*^9, 
  3.635478412886284*^9}, {3.63556757136775*^9, 3.6355675741045046`*^9}, {
  3.635567605906556*^9, 3.6355676400374155`*^9}, {3.635568709733591*^9, 
  3.635568710092966*^9}, {3.63559557073787*^9, 3.6355955816158*^9}}],

Cell[CellGroupData[{

Cell["Scope", "Subsection",
 CellChangeTimes->{{3.635568761379099*^9, 3.635568762816599*^9}, {
  3.6355694132461357`*^9, 3.6355694310127373`*^9}}],

Cell[TextData[{
 "The entity-relational data model (ERDM) is still the most popular data \
model in database management systems. There are several reason for that, but \
the main one is the simple and natural way of managing data in tables with \
rows (records) and columns (attributes). On top of that SQL is a very \
powerful and easy to learn programming language that covers completely the \
relational operators on data sets. In this ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebook various methods of representing the basic constructs of the \
relational model are demonstrated."
}], "Text",
 CellChangeTimes->{{3.635568765785349*^9, 3.635568983390818*^9}, {
  3.635569024734568*^9, 3.635569177104534*^9}, {3.635569210998089*^9, 
  3.635569376649456*^9}, {3.635569519553753*^9, 3.6355695496064873`*^9}, {
  3.635595878452714*^9, 3.635595920825761*^9}, {3.635660866585095*^9, 
  3.635660880647595*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definitions", "Subchapter",
 CellChangeTimes->{{3.630739320500129*^9, 3.630739322797145*^9}}],

Cell[CellGroupData[{

Cell["Product Type", "Section",
 CellChangeTimes->{{3.6307399519307814`*^9, 3.6307399548563256`*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.63073895887059*^9, 3.6307389743793745`*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<DatabaseLink`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6307389775094137`*^9, 3.630738984144772*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"conn", "=", 
   RowBox[{"OpenSQLConnection", "[", 
    RowBox[{"JDBC", "[", 
     RowBox[{
     "\"\<Microsoft Access(ODBC)\>\"", ",", 
      "\"\<C:\\\\Temp\\\\SuppliesCatalogDB.mdb\>\""}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6307390071941643`*^9, 3.630739091489316*^9}, {
  3.635567999069289*^9, 3.635568003178664*^9}}],

Cell[CellGroupData[{

Cell["Wikipedia Extract", "Subsection",
 CellChangeTimes->{{3.6307579490616636`*^9, 3.6307579545874825`*^9}, {
  3.635491918739008*^9, 3.635491920926508*^9}}],

Cell["\<\
\[OpenCurlyDoubleQuote]In programming languages and type theory, a product of \
types is another, compounded, type in a structure. The \
\[OpenCurlyDoubleQuote]operands\[CloseCurlyDoubleQuote] of the product are \
types, and the structure of a product type is determined by the fixed order \
of the operands in the product. An instance of a product type retains the \
fixed order, but otherwise may contain all possible instances of its \
primitive data types. The expression of an instance of a product type will be \
a tuple, and is called a \[OpenCurlyDoubleQuote]tuple type\
\[CloseCurlyDoubleQuote] of expression. A product of types is a direct \
product of two or more types.\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.6307399590305643`*^9, 3.630740043926581*^9}, {
  3.63074043986174*^9, 3.630740466262932*^9}, {3.6307579567792645`*^9, 
  3.6307579572569494`*^9}, {3.6353231377207327`*^9, 3.635323140066112*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.6307401348130016`*^9, 3.6307401389030495`*^9}}],

Cell[TextData[{
 "Integer ",
 StyleBox["x",
  FontWeight->"Bold"],
 " String ",
 StyleBox["x",
  FontWeight->"Bold"],
 " Colour. In Wolfram Language an instance, ",
 StyleBox["p1",
  FontSlant->"Italic"],
 ", of such a type is represented with a list abstract data type. In Wolfram \
Language we can write"
}], "Text",
 CellChangeTimes->{{3.630740146724892*^9, 3.6307402037369785`*^9}, {
  3.630740520766838*^9, 3.630740541329258*^9}, {3.630740597355522*^9, 
  3.6307406147880983`*^9}, {3.6307407118347054`*^9, 3.630740716005824*^9}, {
  3.6307428307511425`*^9, 3.6307428373764205`*^9}, {3.630754335174286*^9, 
  3.6307543507447553`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"partInstanceAsList", "=", 
  RowBox[{"{", 
   RowBox[{
   "991", ",", "\"\<Left Handed Bacon Stretcher Cover\>\"", ",", "Red"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.6307402060296965`*^9, 3.6307402420778065`*^9}, {
   3.6307403647228775`*^9, 3.6307403655072727`*^9}, {3.6307432583207507`*^9, 
   3.6307432761296673`*^9}, 3.6307569150909753`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"991", ",", "\<\"Left Handed Bacon Stretcher Cover\"\>", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6307402437582426`*^9, 3.630740367372987*^9, 3.6307432782258577`*^9, 
   3.63075305216739*^9, 3.6307570946362915`*^9, 3.6307600459427853`*^9, 
   3.6308431416311846`*^9, 3.6308432349508314`*^9, 3.630843291246606*^9, {
   3.6308437016311674`*^9, 3.6308437128205214`*^9}, 3.6308438270955887`*^9, 
   3.630843934425915*^9, 3.6308440915404596`*^9, 3.6354804822287025`*^9, 
   3.6355004271506467`*^9, 3.6355008383108025`*^9, 3.635568028539016*^9}]
}, Open  ]],

Cell[TextData[{
 "And to check/verify the type for each element of the list we apply the \
function ",
 StyleBox["Head",
  FontWeight->"Bold"],
 " to ",
 StyleBox["p1",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.630740282907366*^9, 3.6307403279171777`*^9}, {
  3.6307403966443276`*^9, 3.6307404064294825`*^9}, {3.6307405807034626`*^9, 
  3.630740583304155*^9}, {3.6307406547395706`*^9, 3.6307406780225177`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", " ", "/@", " ", "partInstanceAsList"}]], "Input",
 CellChangeTimes->{{3.630740330051653*^9, 3.630740331251362*^9}, {
   3.630740369723477*^9, 3.6307403901087475`*^9}, {3.6307432711293774`*^9, 
   3.6307432808204956`*^9}, 3.630756920250087*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Integer", ",", "String", ",", "RGBColor"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6307403910281467`*^9, 3.6307432816523113`*^9, 3.630753052204718*^9, 
   3.6307570946632648`*^9, 3.6307600459676704`*^9, 3.6308431416514874`*^9, 
   3.630843234976372*^9, 3.630843291271386*^9, {3.6308437016553373`*^9, 
   3.630843712844014*^9}, 3.630843827120164*^9, 3.6308439344468613`*^9, 
   3.630844091561516*^9, 3.6354804822443275`*^9, 3.6355004271662717`*^9, 
   3.6355008383420525`*^9, 3.635568028570266*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Tuple or record or row", "Section",
 CellChangeTimes->{{3.630739333280856*^9, 3.6307393361832*^9}, {
  3.630828218561516*^9, 3.630828221815005*^9}}],

Cell[CellGroupData[{

Cell["Wikipedia Extract", "Subsection",
 CellChangeTimes->{{3.6307579661406317`*^9, 3.630757971129037*^9}, {
  3.635491934272211*^9, 3.635491936959711*^9}}],

Cell["\<\
\[OpenCurlyDoubleQuote]A tuple is an ordered list of elements. In \
mathematics, an n-tuple is a sequence (or ordered list) of n elements, where \
n is a non-negative integer. In computer science, tuples are directly \
implemented as product types in most functional programming languages. More \
commonly, they are implemented as record types, where the components are \
labeled instead of being identified by position alone. This approach is also \
used in relational algebra.\[CloseCurlyDoubleQuote]

\[OpenCurlyDoubleQuote]In database theory, the relational model uses a tuple \
definition similar to tuples as functions, but each tuple element is \
identified by a distinct name, called an attribute, instead of a number; this \
leads to a more user-friendly and practical notation. A tuple in the \
relational model is formally defined as a finite function that maps \
attributes to values. In this notation, attribute\[Dash]value pairs may \
appear in any order.\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.630739342662692*^9, 3.630739356145114*^9}, {
   3.630739886930098*^9, 3.6307398873719187`*^9}, {3.630739918893724*^9, 
   3.6307399203300557`*^9}, {3.6307407582597947`*^9, 3.630740768724787*^9}, {
   3.6307423043895607`*^9, 3.630742304875969*^9}, {3.6307426063796473`*^9, 
   3.630742705740025*^9}, {3.6307429894982023`*^9, 3.630743172791259*^9}, {
   3.630743957295253*^9, 3.6307439575815625`*^9}, 3.6307439886678905`*^9, {
   3.630757973812731*^9, 3.6307579742464848`*^9}, {3.6353231445107884`*^9, 
   3.6353231567816057`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.6307431550329533`*^9, 3.63074315608255*^9}}],

Cell[TextData[StyleBox["( partID : 991, partName : \
\[OpenCurlyDoubleQuote]Left Handed Bacon Stretcher Cover\
\[CloseCurlyDoubleQuote], partColor : Red )",
 FontSize->16,
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{3.630743179072447*^9}],

Cell[TextData[{
 "In ",
 StyleBox["Wolfram Language",
  FontSlant->"Italic"],
 " record abstract data structure is usually represented with the Assocation \
function, i.e. a symbolically indexed list of rules (key->value  pairs)."
}], "Text",
 CellChangeTimes->{{3.6307433754407434`*^9, 3.63074351290792*^9}, {
  3.630754361430373*^9, 3.6307543640962753`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"partInstanceAsAssociation", "=", 
  RowBox[{"Association", "[", 
   RowBox[{
    RowBox[{"partID", "\[Rule]", "991"}], ",", 
    RowBox[{"partName", "->", 
     StyleBox[" ",
      FontSize->16,
      FontWeight->"Bold"], 
     StyleBox["\"\<Left Handed Bacon Stretcher Cover\>\"",
      FontSize->16,
      FontWeight->"Bold"]}], 
    StyleBox[",",
     FontSize->16,
     FontWeight->"Bold"], 
    RowBox[{
     StyleBox["partColor",
      FontSize->16,
      FontWeight->"Bold"], 
     StyleBox["\[Rule]",
      FontSize->16,
      FontWeight->"Bold"], "Red"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.630743207079338*^9, 3.630743248809557*^9}, {
   3.6307432854537783`*^9, 3.6307432901140785`*^9}, 3.630756994202687*^9}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"partID", "\[Rule]", "991"}], ",", 
   RowBox[{
   "partName", "\[Rule]", "\<\"Left Handed Bacon Stretcher Cover\"\>"}], ",", 
   RowBox[{"partColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.6307432496093616`*^9, 3.630743291385107*^9, 3.630753052239972*^9, 
   3.630757094690238*^9, 3.630760045996383*^9, 3.630843141699827*^9, 
   3.630843235003955*^9, 3.630843291300131*^9, {3.6308437016804743`*^9, 
   3.6308437128701167`*^9}, 3.6308438271565723`*^9, 3.630843934485264*^9, 
   3.630844091582572*^9, 3.6354804822599525`*^9, 3.6355004271975217`*^9, 
   3.6355008384045525`*^9, 3.635568028617141*^9}]
}, Open  ]],

Cell["And we can take a list of values in the following way", "Text",
 CellChangeTimes->{{3.6307433621375685`*^9, 3.630743369381068*^9}, {
  3.630743548065751*^9, 3.6307435797072835`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Values", "[", "partInstanceAsAssociation", "]"}]], "Input",
 CellChangeTimes->{{3.630743300379507*^9, 3.630743336022996*^9}, {
  3.6307569990346785`*^9, 3.6307570075834436`*^9}, {3.630759497389743*^9, 
  3.63075950666409*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"991", ",", "\<\"Left Handed Bacon Stretcher Cover\"\>", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.630743337479865*^9, 3.6307530522710795`*^9, 3.630757094718951*^9, 
   3.63075950738391*^9, 3.630760046022225*^9, 3.630843141721097*^9, 
   3.630843235028473*^9, 3.630843291324911*^9, {3.630843701704644*^9, 
   3.63084371289622*^9}, 3.6308438271784167`*^9, 3.6308439345166836`*^9, 
   3.630844091601714*^9, 3.6354804822755775`*^9, 3.6355004272131467`*^9, 
   3.6355008384358025`*^9, 3.635568028648391*^9}]
}, Open  ]],

Cell["or take a list of rules (key->value) pairs", "Text",
 CellChangeTimes->{{3.6307435842347784`*^9, 3.6307436316855946`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"partInstanceAsAssociation", " ", "//", "Normal"}]], "Input",
 CellChangeTimes->{{3.6307435978404374`*^9, 3.630743601578717*^9}, 
   3.630757016568266*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"partID", "\[Rule]", "991"}], ",", 
   RowBox[{
   "partName", "\[Rule]", "\<\"Left Handed Bacon Stretcher Cover\"\>"}], ",", 
   RowBox[{"partColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.630743602275047*^9, 3.6307530523011494`*^9, 3.6307570947459245`*^9, 
   3.630760046048067*^9, 3.630843141746234*^9, 3.6308432350540133`*^9, 
   3.6308432913526645`*^9, {3.6308437017326813`*^9, 3.630843712923193*^9}, 
   3.6308438272020817`*^9, 3.6308439345434484`*^9, 3.6308440916237273`*^9, 
   3.6354804822912025`*^9, 3.6355004272443967`*^9, 3.6355008384670525`*^9, 
   3.635568028664016*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Attribute or field or column", "Section",
 CellChangeTimes->{{3.6307579100801387`*^9, 3.630757914094787*^9}, {
  3.6308282026278496`*^9, 3.630828208960614*^9}}],

Cell[CellGroupData[{

Cell["Wikipedia Extract", "Subsection",
 CellChangeTimes->{{3.6307579292656856`*^9, 3.630757935350893*^9}, {
  3.635491941290766*^9, 3.635491943322016*^9}}],

Cell["\<\
\[OpenCurlyDoubleQuote]The basic relational building block is the domain or \
data type, usually abbreviated nowadays to type. A tuple is an ordered set of \
attribute values. An attribute is an ordered pair of attribute name and type \
name. An attribute value is a specific valid value for the type of the \
attribute. This can be either a scalar value or a more complex type. A domain \
describes the set of possible values for a given attribute, and can be \
considered a constraint on the value of the attribute. Mathematically, \
attaching a domain to an attribute means that any value for the attribute \
must be an element of the specified set. Constraints make it possible to \
further restrict the domain of an attribute.\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.630758049297312*^9, 3.6307580928995457`*^9}, {
   3.6307583035724916`*^9, 3.6307584986181555`*^9}, {3.6307585324225135`*^9, 
   3.6307585341482515`*^9}, 3.630836939309413*^9, {3.630836996041835*^9, 
   3.630836997331874*^9}, {3.6353232495064774`*^9, 3.635323263828086*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.630758525838192*^9, 3.630758528056445*^9}}],

Cell["\<\
In our example, two of our attributes partID, integer data type and partName, \
string data type take scalar values. The partColor attribute is of complex \
type, RGBColor.\
\>", "Text",
 CellChangeTimes->{3.6307585394359035`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"Rule", ",", 
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Keys", "[", "partInstanceAsAssociation", "]"}], ",", 
      RowBox[{"Head", " ", "/@", " ", "partInstanceAsList"}]}], "}"}], "]"}], 
   ",", 
   RowBox[{"{", "1", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6307582513641663`*^9, 3.6307582790756187`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"partID", "\[Rule]", "Integer"}], ",", 
   RowBox[{"partName", "\[Rule]", "String"}], ",", 
   RowBox[{"partColor", "\[Rule]", "RGBColor"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6307582819421806`*^9, 3.6307600460719943`*^9, 3.630843141769437*^9, 
   3.6308432350785313`*^9, 3.6308432913764534`*^9, {3.630843701755884*^9, 
   3.6308437129510365`*^9}, 3.6308438272248373`*^9, 3.6308439345702133`*^9, 
   3.6308440916457405`*^9, 3.6354804823068275`*^9, 3.6355004272600217`*^9, 
   3.6355008384983025`*^9, 3.635568028695266*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Important Notice", "Subsection",
 CellChangeTimes->{{3.6307589863370028`*^9, 3.6307590026612215`*^9}}],

Cell["\<\
Attribute can be seen as a mapping function. It maps a tuple to a value. For \
example, what is the color of the part. We can define a function where we \
pass a single argument which is  the association representation of the tuple \
and we return the specific value of the key.\
\>", "Text",
 CellChangeTimes->{{3.6307590058037996`*^9, 3.6307590522175465`*^9}, {
  3.6307591024781895`*^9, 3.630759230680463*^9}, {3.630759312218148*^9, 
  3.6307593138699303`*^9}}],

Cell["\<\
Turn the keys of the association to functions, return the specific key of \
association instance as the value of the attribute\
\>", "Text",
 CellChangeTimes->{{3.63075415222688*^9, 3.6307541717014613`*^9}, {
  3.630759361618357*^9, 3.6307594147525363`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"isIdentifierOf", "[", "assoc_", "]"}], ":=", 
  RowBox[{"assoc", "[", "partID", "]"}]}]], "Input",
 CellChangeTimes->{{3.630749531430215*^9, 3.6307496578885417`*^9}, {
  3.6307497233742886`*^9, 3.6307497255637417`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"isNameOf", "[", "assoc_", "]"}], ":=", 
  RowBox[{"assoc", "[", "partName", "]"}]}]], "Input",
 CellChangeTimes->{{3.6307496022361784`*^9, 3.6307496734592495`*^9}, {
  3.6307497207600307`*^9, 3.6307497373646564`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"isColorOf", "[", "assoc_", "]"}], ":=", 
  RowBox[{"assoc", "[", "partColor", "]"}]}]], "Input",
 CellChangeTimes->{{3.630749741130949*^9, 3.630749753523676*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"isIdentifierOf", "[", "partInstanceAsAssociation", "]"}], ",", 
   RowBox[{"isNameOf", "[", "partInstanceAsAssociation", "]"}], ",", 
   RowBox[{"isColorOf", "[", "partInstanceAsAssociation", "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.63074976563243*^9, 3.6307498052118735`*^9}, {
  3.6307570243656816`*^9, 3.6307570291296883`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"991", ",", "\<\"Left Handed Bacon Stretcher Cover\"\>", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.630749772247385*^9, 3.630749806147502*^9, 3.6307530526412525`*^9, 
   3.6307570950147853`*^9, 3.6307600461590905`*^9, 3.6308431418709507`*^9, 
   3.630843235175584*^9, 3.630843291479538*^9, {3.6308437018428965`*^9, 
   3.6308437130397863`*^9}, 3.630843827292192*^9, 3.6308439346563272`*^9, 
   3.6308440917127376`*^9, 3.6354804823537025`*^9, 3.6355004273381467`*^9, 
   3.6355008385920525`*^9, 3.635568028773391*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Relation (Base relval)", "Section",
 CellChangeTimes->{{3.630744049292284*^9, 3.6307440509860177`*^9}, {
   3.630828147964141*^9, 3.6308281531655235`*^9}, 3.6354795022912025`*^9}],

Cell[CellGroupData[{

Cell["Wikipedia Extract", "Subsection",
 CellChangeTimes->{{3.630759962984043*^9, 3.6307599643722725`*^9}, {
  3.635491948322016*^9, 3.635491951290766*^9}}],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]In the relational model, a relation is a (possibly \
empty) finite set of tuples all having the same finite set of attributes.This \
set of attributes is more formally called the sort of the relation, or more \
casually referred to as the set of column names. A tuple is usually \
implemented as a row in a database table. The fundamental assumption of the \
relational model is that all data is represented as mathematical n-ary \
relations, an n-ary relation being a subset of the Cartesian product of n \
domains. In the mathematical model, reasoning about such data is done in \
two-valued predicate logic, meaning there are two possible evaluations for \
each proposition: either true or false (and in particular no third value such \
as unknown, or not applicable, either of which are often associated with the \
concept of NULL). Data are operated upon by means of a relational calculus or \
relational algebra, these being equivalent in expressive power.\n\nA relation \
is defined as a set of n-tuples. In both mathematics and the relational \
database model, a set is an unordered collection of ",
 StyleBox["unique, non-duplicated items",
  FontWeight->"Bold"],
 ". A table is an accepted visual representation of a relation; a tuple is \
similar to the concept of a row. It is a set of tuples sharing the same \
attributes; a set of columns and rows. A relvar is a named variable of some \
specific relation type, to which at all times some relation of that type is \
assigned, though the relation may contain zero tuples.\[CloseCurlyDoubleQuote]"
}], "Text",
 CellChangeTimes->{{3.6307440529203806`*^9, 3.630744059828499*^9}, {
   3.6307574653332305`*^9, 3.6307574717855253`*^9}, {3.6307599608662024`*^9, 
   3.6307599615201674`*^9}, {3.630827638483612*^9, 3.630827644085307*^9}, {
   3.6308277431773596`*^9, 3.6308277445035315`*^9}, {3.6308278880240393`*^9, 
   3.630827894284382*^9}, {3.630827982293009*^9, 3.6308279826914463`*^9}, {
   3.630828079560622*^9, 3.630828107215728*^9}, {3.6308372517763653`*^9, 
   3.6308372530419903`*^9}, {3.6308373082490215`*^9, 3.63083731010742*^9}, {
   3.630837395178769*^9, 3.630837417179423*^9}, 3.635323558323189*^9, {
   3.635323590026314*^9, 3.635323594213814*^9}, {3.635323805510689*^9, 
   3.635323867166939*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Predicates and the Closed World Assumption", "Subsection",
 CellChangeTimes->{{3.635323873948189*^9, 3.635323876276314*^9}, {
  3.635323928276314*^9, 3.635323935120064*^9}, {3.6355685100050755`*^9, 
  3.6355685137238255`*^9}}],

Cell["\<\
\[OpenCurlyDoubleQuote]A relation consists of a heading and a body. A heading \
is a set of attributes. A body (of an n-ary relation) is a set of n-tuples. \
The heading of the relation is also the heading of each of its tuples. The \
body of a relation is sometimes called its extension. This is because it is \
to be interpreted as a representation of the extension of some predicate, \
this being the set of true propositions that can be formed by replacing each \
free variable in that predicate by a name (a term that designates something). \
There is a one-to-one correspondence between the free variables of the \
predicate and the attribute names of the relation heading. Each tuple of the \
relation body provides attribute values to instantiate the predicate by \
substituting each of its free variables. The result is a proposition that is \
deemed, on account of the appearance of the tuple in the relation body, to be \
true. Contrariwise, every tuple whose heading conforms to that of the \
relation, but which does not appear in the body is deemed to be false. This \
assumption is known as the closed world assumption: it is often violated in \
practical databases, where the absence of a tuple might mean that the truth \
of the corresponding proposition is unknown.\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.635323879057564*^9, 3.635323883135689*^9}, {
  3.635323948401314*^9, 3.635323950338814*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.630828399767355*^9, 3.630828401982525*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SQLSelect", "[", 
   RowBox[{"conn", ",", "\"\<Parts\>\"", ",", 
    RowBox[{"\"\<ShowColumnHeadings\>\"", "\[Rule]", "True"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.6307391104897766`*^9, 3.630739137155962*^9}, {
  3.630828603253935*^9, 3.6308286035149813`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"pid\"\>", "\<\"pname\"\>", "\<\"pcolor\"\>"},
    {"991", "\<\"Left Handed Bacon Stretcher Cover\"\>", "\<\"Red\"\>"},
    {"992", "\<\"Smoke Shifter End\"\>", "\<\"Black\"\>"},
    {"993", "\<\"Acme Widget Washer\"\>", "\<\"Red\"\>"},
    {"994", "\<\"Acme Widget Washer\"\>", "\<\"Silver\"\>"},
    {"995", "\<\"I Brake for Crop Circles Sticker\"\>", "\<\"Translucent\"\>"},
    {"996", "\<\"Anti-Gravity Turbine Generator\"\>", "\<\"Cyan\"\>"},
    {"997", "\<\"Anti-Gravity Turbine Generator\"\>", "\<\"Magenta\"\>"},
    {"998", "\<\"Fire Hydrant Cap\"\>", "\<\"Red\"\>"},
    {"999", "\<\"7 Segment Display\"\>", "\<\"Green\"\>"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6307391378156595`*^9, 3.630753052088585*^9, 3.630757094575385*^9, 
   3.630760045871003*^9, 3.6308284053941154`*^9, 3.630828605410932*^9, 
   3.630843141947328*^9, 3.630843235198059*^9, 3.630843291520177*^9, {
   3.6308437018670664`*^9, 3.630843713065019*^9}, 3.630843827461489*^9, 
   3.630843934890231*^9, 3.630844091905115*^9, 3.6354804825412025`*^9, 
   3.6355004273693967`*^9, 3.635500838835217*^9, 3.635568028976516*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SQLSelect", "[", 
  RowBox[{"conn", ",", "\"\<Parts\>\"", ",", 
   RowBox[{"\"\<ShowColumnHeadings\>\"", "\[Rule]", "True"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"pid\"\>", ",", "\<\"pname\"\>", ",", "\<\"pcolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "991", ",", "\<\"Left Handed Bacon Stretcher Cover\"\>", 
     ",", "\<\"Red\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"992", ",", "\<\"Smoke Shifter End\"\>", ",", "\<\"Black\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"993", ",", "\<\"Acme Widget Washer\"\>", ",", "\<\"Red\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"994", ",", "\<\"Acme Widget Washer\"\>", ",", "\<\"Silver\"\>"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "995", ",", "\<\"I Brake for Crop Circles Sticker\"\>", 
     ",", "\<\"Translucent\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "996", ",", "\<\"Anti-Gravity Turbine Generator\"\>", 
     ",", "\<\"Cyan\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "997", ",", "\<\"Anti-Gravity Turbine Generator\"\>", 
     ",", "\<\"Magenta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"998", ",", "\<\"Fire Hydrant Cap\"\>", ",", "\<\"Red\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"999", ",", "\<\"7 Segment Display\"\>", ",", "\<\"Green\"\>"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.630839909049124*^9, 3.6308431420159707`*^9, 3.630843235222577*^9, 
   3.6308432915459485`*^9, {3.6308437018912363`*^9, 3.630843713095473*^9}, 
   3.6308438274915257`*^9, 3.6308439349437613`*^9, 3.6308440919261713`*^9, 
   3.6354804825724525`*^9, 3.6355004273850217`*^9, 3.635500838866467*^9, 
   3.635568029023391*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["View or Result Set (Derived relvar)", "Section",
 CellChangeTimes->{{3.630828136118656*^9, 3.630828140845994*^9}, {
  3.6308281727791004`*^9, 3.630828182327688*^9}}],

Cell[CellGroupData[{

Cell["Wikipedia Extract", "Subsection",
 CellChangeTimes->{{3.630836885059413*^9, 3.630836891184413*^9}, {
  3.635491958275141*^9, 3.635491960306391*^9}}],

Cell["\<\
\[OpenCurlyDoubleQuote]In a relational database, all data are stored and \
accessed via relations. Relations that store data are called \
\[OpenCurlyDoubleQuote]base relations\[CloseCurlyDoubleQuote], and in \
implementations are called \[OpenCurlyDoubleQuote]tables\
\[CloseCurlyDoubleQuote]. Other relations do not store data, but are computed \
by applying relational operations to other relations. These relations are \
sometimes called \[OpenCurlyDoubleQuote]derived relations\
\[CloseCurlyDoubleQuote]. In implementations these are called \
\[OpenCurlyDoubleQuote]views\[CloseCurlyDoubleQuote] or \
\[OpenCurlyDoubleQuote]queries\[CloseCurlyDoubleQuote].\
\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{3.6308368930428114`*^9, 3.635323987729439*^9, 
  3.635324020448189*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.630828788203682*^9, 3.6308287891514263`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "queryString", "=", 
   "\"\<\nSELECT Catalog.catsid, Suppliers.sname, Catalog.catpid, \
Parts.pname, Parts.pcolor, Catalog.catcost\nFROM Suppliers INNER JOIN (Parts \
INNER JOIN [Catalog] ON Parts.pid = Catalog.[catpid]) ON Suppliers.sid = \
Catalog.[catsid]\nWHERE (((Catalog.catpid)=998))\nORDER BY Catalog.catcost;\>\
\""}], ";"}]], "Input",
 CellChangeTimes->{{3.635324074479439*^9, 3.635324102604439*^9}, 
   3.6355684874464817`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SQLExecute", "[", 
    RowBox[{"conn", ",", "queryString", ",", 
     RowBox[{"\"\<ShowColumnHeadings\>\"", "\[Rule]", "True"}]}], "]"}], "//",
    "TableForm"}], "\n"}]], "Input",
 CellChangeTimes->{{3.6308286475703335`*^9, 3.6308287263502045`*^9}, 
   3.635324071588814*^9, {3.635324137370064*^9, 3.635324142620064*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"catsid\"\>", "\<\"sname\"\>", "\<\"catpid\"\>", "\<\"pname\"\>", \
"\<\"pcolor\"\>", "\<\"catcost\"\>"},
    {"1082", "\<\"Big Red Tool and Die\"\>", 
     "998", "\<\"Fire Hydrant Cap\"\>", "\<\"Red\"\>", "7.95`"},
    {"1081", "\<\"Acme Widget Suppliers\"\>", 
     "998", "\<\"Fire Hydrant Cap\"\>", "\<\"Red\"\>", "11.7`"},
    {"1083", "\<\"Perfunctory Parts\"\>", 
     "998", "\<\"Fire Hydrant Cap\"\>", "\<\"Red\"\>", "12.5`"},
    {"1084", "\<\"Alien Aircaft Inc.\"\>", 
     "998", "\<\"Fire Hydrant Cap\"\>", "\<\"Red\"\>", "48.6`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6308286970361814`*^9, 3.6308287274445515`*^9}, 
   3.630843142077846*^9, 3.6308432352808084`*^9, 3.6308432916014557`*^9, {
   3.6308437019453773`*^9, 3.6308437131633406`*^9}, 3.6308438275634317`*^9, 
   3.6308439350345297`*^9, 3.630844091995082*^9, 3.6354804826974525`*^9, 
   3.6355004274787717`*^9, 3.635500838975842*^9, 3.635568029117141*^9, 
   3.6355684905402317`*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Database", "Section",
 CellChangeTimes->{{3.630828316438554*^9, 3.630828320010318*^9}}],

Cell[CellGroupData[{

Cell["Wikipedia Extract", "Subsection",
 CellChangeTimes->{{3.630828324529641*^9, 3.6308283281140623`*^9}, {
  3.635491964962641*^9, 3.6354919669479923`*^9}}],

Cell["\<\
\[OpenCurlyDoubleQuote]Each database is a collection of related tables; these \
are also called relations, hence the name \[OpenCurlyDoubleQuote]relational \
database\[CloseCurlyDoubleQuote]. Each table is a physical representation of \
an entity or object that is in a tabular format consisting of columns and \
rows.\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{
  3.630828330194165*^9, {3.635324166698189*^9, 3.635324173901314*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.630828805437009*^9, 3.630828810033983*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SQLTableNames", "[", "conn", "]"}]], "Input",
 CellChangeTimes->{{3.630828813760194*^9, 3.630828824411951*^9}, {
  3.630828869788969*^9, 3.630828870911577*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Catalog\"\>", ",", "\<\"Parts\"\>", ",", "\<\"Suppliers\"\>"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.6308288257384357`*^9, 3.630828871863186*^9, 3.6308431421049166`*^9, 
   3.6308432353063483`*^9, 3.630843291637139*^9, {3.6308437019685802`*^9, 
   3.6308437131903133`*^9}, 3.6308438277008715`*^9, 3.6308439352730885`*^9, 
   3.6308440922133007`*^9, 3.6354804828693275`*^9, 3.6355004274943967`*^9, 
   3.635500839241467*^9, 3.635568029351516*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SQLTableInformation", "[", 
   RowBox[{"conn", ",", 
    RowBox[{"\"\<ShowColumnHeadings\>\"", "\[Rule]", "True"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.630829013274683*^9, 3.630829013500269*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"TABLE_CAT\"\>", "\<\"TABLE_SCHEM\"\>", "\<\"TABLE_NAME\"\>", \
"\<\"TABLE_TYPE\"\>", "\<\"REMARKS\"\>"},
    {"\<\"C:\\\\Temp\\\\SuppliesCatalogDB.mdb\"\>", 
     "Null", "\<\"Catalog\"\>", "\<\"TABLE\"\>", "Null"},
    {"\<\"C:\\\\Temp\\\\SuppliesCatalogDB.mdb\"\>", 
     "Null", "\<\"Parts\"\>", "\<\"TABLE\"\>", "Null"},
    {"\<\"C:\\\\Temp\\\\SuppliesCatalogDB.mdb\"\>", 
     "Null", "\<\"Suppliers\"\>", "\<\"TABLE\"\>", "Null"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6308289305098934`*^9, 3.6308290146535892`*^9, 3.6308431421339207`*^9, 
   3.630843235331888*^9, 3.630843291660928*^9, {3.630843701993717*^9, 
   3.6308437132146764`*^9}, 3.630843827729088*^9, 3.6308439353173094`*^9, 
   3.630844092230529*^9, 3.6354804829005775`*^9, 3.6355004275256467`*^9, 
   3.635500839397717*^9, 3.635568029539016*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SQLTableNames", "[", 
  RowBox[{"conn", ",", 
   RowBox[{"\"\<TableType\>\"", "\[Rule]", 
    RowBox[{"SQLTableTypeNames", "[", "conn", "]"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"MSysAccessObjects\"\>", ",", "\<\"MSysAccessXML\"\>", 
   ",", "\<\"MSysACEs\"\>", ",", "\<\"MSysIMEXColumns\"\>", 
   ",", "\<\"MSysIMEXSpecs\"\>", ",", "\<\"MSysNameMap\"\>", 
   ",", "\<\"MSysNavPaneGroupCategories\"\>", 
   ",", "\<\"MSysNavPaneGroups\"\>", ",", "\<\"MSysNavPaneGroupToObjects\"\>",
    ",", "\<\"MSysNavPaneObjectIDs\"\>", ",", "\<\"MSysObjects\"\>", 
   ",", "\<\"MSysQueries\"\>", ",", "\<\"MSysRelationships\"\>", 
   ",", "\<\"Catalog\"\>", ",", "\<\"Parts\"\>", ",", "\<\"Suppliers\"\>", 
   ",", "\<\"View998Suppliers\"\>", ",", "\<\"ViewAll\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.630829143112012*^9, 3.6308431421996627`*^9, 3.6308432353819466`*^9, 
   3.630843291700576*^9, {3.63084370227989*^9, 3.630843713266012*^9}, 
   3.6308438277600346`*^9, 3.630843935366184*^9, 3.63084409226307*^9, 
   3.6354804829318275`*^9, 3.6355004275568967`*^9, 3.635500839444592*^9, 
   3.635568029570266*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Entity-Relationship (ER) Modeling", "Section",
 CellChangeTimes->{{3.630837996583989*^9, 3.630838011580117*^9}, {
  3.6308382239928875`*^9, 3.630838225025689*^9}}],

Cell[CellGroupData[{

Cell["Wikipedia Extract", "Subsection",
 CellChangeTimes->{{3.6308381800481005`*^9, 3.6308381831740117`*^9}, {
  3.6354919711354923`*^9, 3.635491973261469*^9}}],

Cell["\<\
\[OpenCurlyDoubleQuote]An entity\[Dash]relationship model is a systematic way \
of describing and defining a business process. The process is modeled as \
components (entities) that are linked with each other by relationships that \
express the dependencies and requirements between them. Entities may have \
various properties (attributes) that characterize them. Diagrams created to \
represent these entities, attributes, and relationships graphically are \
called entity\[Dash]relationship diagrams.\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.6308381883589845`*^9, 3.6308382037965574`*^9}, {
  3.635324264229439*^9, 3.635324288260689*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["ER / Relational Terms Equivalence", "Subsection",
 CellChangeTimes->{{3.63083823092208*^9, 3.6308382895094213`*^9}}],

Cell["\<\
Entity Type \t- Relation (Table, Base relvar)
Entity\t\t- Tuple
Attribute\t- Attribute (column)
Relationship\t- View (Result set or Derived relvar)\
\>", "Text",
 CellChangeTimes->{{3.6308383284744654`*^9, 3.630838466385826*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["EER (Enhanced Entity-Relationship) Model", "Subsection",
 CellChangeTimes->{{3.630839494234249*^9, 3.630839517786007*^9}}],

Cell["\<\
\[OpenCurlyDoubleQuote]The EER model includes all of the concepts introduced \
by the ER model. Additionally it includes the concepts of a subclass and \
superclass (Is-a), along with the concepts of specialization and \
generalization. Furthermore, it introduces the concept of a union type or \
category, which is used to represent a collection of objects that is the \
union of objects of different entity types.\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{
  3.6308395654002147`*^9, {3.635324341682564*^9, 3.635324344166939*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Constrains", "Section",
 CellChangeTimes->{{3.630837040156461*^9, 3.6308370428451834`*^9}}],

Cell[CellGroupData[{

Cell["Wikipedia Extract", "Subsection",
 CellChangeTimes->{{3.630837057180806*^9, 3.630837060354931*^9}, {
  3.6308390908716035`*^9, 3.6308391013217993`*^9}, {3.635491984683344*^9, 
  3.635491986777094*^9}}],

Cell["\<\
\[OpenCurlyDoubleQuote]Constraints provide one method of implementing \
business rules in the database. SQL implements constraint functionality in \
the form of check constraints. Constraints restrict the data that can be \
stored in relations. These are usually defined using expressions that result \
in a boolean value, indicating whether or not the data satisfies the \
constraint.

Constraints can apply to single attributes, to a tuple (restricting \
combinations of attributes) or to an entire relation. Since every attribute \
has an associated domain, there are constraints (domain constraints). The two \
principal rules for the relational model are known as entity integrity and \
referential integrity.\
\>", "Text",
 CellChangeTimes->{{3.6308370529338193`*^9, 3.630837066490493*^9}, 
   3.63083710721894*^9, {3.630839755650242*^9, 3.630839757225358*^9}, 
   3.635324390448189*^9}],

Cell["\<\
In ER modeling we have two types of constrains that are placed on \
relationships, cardinality and participation. A cardinality constraint places \
a limit on the number of relationships an entity may participate in at any \
given time.\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.6308383628983936`*^9, 3.630838363694104*^9}, {
   3.6308389477101636`*^9, 3.6308390744176674`*^9}, {3.6308391202680883`*^9, 
   3.6308391785083227`*^9}, 3.635324427791939*^9, {3.635324463604439*^9, 
   3.635324473698189*^9}}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Table and Record in Wolfram Language", "Subchapter",
 CellChangeTimes->{{3.6308408632638645`*^9, 3.63084090205781*^9}, {
  3.635479136544702*^9, 3.6354791447713137`*^9}, {3.635479198259474*^9, 
  3.6354792041037025`*^9}, {3.6354792681505775`*^9, 3.6354792742287025`*^9}, {
  3.6354793205099525`*^9, 3.6354793231349525`*^9}, {3.6355684277931614`*^9, 
  3.6355684414806614`*^9}}],

Cell["\<\
The basic construct of the ER model is the record, a table can be defined as \
a list of records.\
\>", "Text",
 CellChangeTimes->{{3.6354792855880775`*^9, 3.6354794260880775`*^9}, {
  3.6354794609162025`*^9, 3.6354794716662025`*^9}, {3.6354796237912025`*^9, 
  3.6354796305099525`*^9}, {3.635491499805414*^9, 3.635491502008539*^9}}],

Cell[CellGroupData[{

Cell["Representation of a Record in Wolfram Language", "Section",
 CellChangeTimes->{{3.630743665493626*^9, 3.630743698398181*^9}, {
  3.630748039805503*^9, 3.6307480541479445`*^9}, {3.630754372531309*^9, 
  3.630754375831379*^9}, {3.6354795974943275`*^9, 3.6354795983849525`*^9}}],

Cell[CellGroupData[{

Cell["List Representations", "Subsection",
 CellChangeTimes->{{3.6354907121402206`*^9, 3.6354907184781113`*^9}, 
   3.635491472258539*^9}],

Cell["\<\
You need to maintain two ordered lists, one for the data values and another \
one for the semantics, i.e. the attribute/column names.\
\>", "Text",
 CellChangeTimes->{{3.6354909501950393`*^9, 3.635491010219453*^9}}],

Cell[CellGroupData[{

Cell[BoxData["partInstanceAsList"], "Input",
 CellChangeTimes->{{3.6354907226812363`*^9, 3.6354907268062363`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"991", ",", "\<\"Left Handed Bacon Stretcher Cover\"\>", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None,
        ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIOwAgOI/R/IhBLc
DP//A1lc/1cxMDBC2AzMIA6IBeaxgUjGESUPosFqgJiBHVmKEQAJGILO\
\>"]], "\[InvisibleSpace]"}],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.6354907281187363`*^9, 3.6355004275725217`*^9, 
  3.635500839460217*^9, 3.635568029601516*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"attributes", "=", 
  RowBox[{"{", 
   RowBox[{"\"\<pid\>\"", ",", "\"\<pname\>\"", ",", "\"\<pcolor\>\""}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.6354908533951035`*^9, 3.6354908600669785`*^9}, {
  3.635490919938203*^9, 3.635490921188203*^9}, {3.63549224609155*^9, 
  3.63549225821362*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"pid\"\>", ",", "\<\"pname\"\>", ",", "\<\"pcolor\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6354908607857285`*^9, 3.6354909222038283`*^9, 
  3.63549226033862*^9, 3.6355004276037717`*^9, 3.635500839475842*^9, 
  3.635568029617141*^9}]
}, Open  ]],

Cell["\<\
But you can combine the two lists in one list of rules with the following \
command\
\>", "Text",
 CellChangeTimes->{{3.6354910322174997`*^9, 3.6354910427565627`*^9}, {
  3.6354915289587345`*^9, 3.6354915338181095`*^9}, {3.6354929231622562`*^9, 
  3.6354929251466317`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Thread", "[", 
  RowBox[{"Rule", "[", 
   RowBox[{"attributes", ",", "partInstanceAsList"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6354910488659377`*^9, 3.6354910805612497`*^9}, {
  3.635491191231172*^9, 3.6354912220290236`*^9}, {3.635492225037839*^9, 
  3.6354922252644014`*^9}, {3.635492270814206*^9, 3.635492271970456*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"pid\"\>", "\[Rule]", "991"}], ",", 
   RowBox[{"\<\"pname\"\>", 
    "\[Rule]", "\<\"Left Handed Bacon Stretcher Cover\"\>"}], ",", 
   RowBox[{"\<\"pcolor\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None,
         ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIOwAgOI/R/IhBLc
DP//A1lc/1cxMDBC2AzMIA6IBeaxgUjGESUPosFqgJiBHVmKEQAJGILO\
\>"]], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6354910667174997`*^9, {3.635491197624727*^9, 3.6354912230602736`*^9}, 
   3.635492276048581*^9, 3.6355004276193967`*^9, 3.635500839491467*^9, 
   3.635568029648391*^9}]
}, Open  ]],

Cell["\<\
A Rule is the equivalent of a key-value pair, but it is more powerful because \
in Wolfram Language it is the basic mechanism that is used in \
transformations. Nevertheless for lookup operations and updating Wolfram \
researchers added a more powerful construct that is called Association, see \
below.\
\>", "Text",
 CellChangeTimes->{{3.635491257012422*^9, 3.6354912702038283`*^9}, {
  3.6354913072477736`*^9, 3.6354913876969924`*^9}, {3.635492939899561*^9, 
  3.6354930190304203`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Graph Representation with triplets (RDF)", "Subsection",
 CellChangeTimes->{{3.6354802855255775`*^9, 3.6354802892130775`*^9}, {
   3.6354906108394394`*^9, 3.6354906126050644`*^9}, 3.635493780485557*^9, {
   3.6354939740119243`*^9, 3.6354939810587993`*^9}}],

Cell["\<\
Let us call a specific part instance partXYZ, if we represent this as the \
subject resource of a triplet, the list of attributes as the predicates and \
the list of values as the objects we can take the following triplets adding \
example namespaces\
\>", "Text",
 CellChangeTimes->{{3.6354939089943457`*^9, 3.635493967389854*^9}, {
  3.6354958369407673`*^9, 3.635495982085183*^9}, {3.6354982116341033`*^9, 
  3.635498262307931*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"subject", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"\"\<http://example.org/resource/partXYZ\>\"", ",", 
     RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"predicate", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"StringJoin", "[", 
      RowBox[{"\"\<http://example.org/attribute/\>\"", ",", "#"}], "]"}], 
     "&"}], "/@", "attributes"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"object", " ", "=", " ", "partInstanceAsList"}], ";"}]}], "Input",
 CellChangeTimes->{{3.635495983116433*^9, 3.6354960610041285`*^9}, {
  3.635496145272683*^9, 3.635496148585183*^9}, {3.635497872303503*^9, 
  3.6354979249255733`*^9}, {3.635497970330847*^9, 3.6354980106501827`*^9}, {
  3.6354981501243377`*^9, 3.6354981504055877`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{"subject", ",", "predicate", ",", "object"}], "}"}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.6354960760558863`*^9, 3.6354960890871363`*^9}, {
  3.635496119828347*^9, 3.635496121468972*^9}, {3.635496152038308*^9, 
  3.635496155210183*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"http://example.org/resource/partXYZ\"\>", \
"\<\"http://example.org/attribute/pid\"\>", "991"},
    {"\<\"http://example.org/resource/partXYZ\"\>", \
"\<\"http://example.org/attribute/pname\"\>", "\<\"Left Handed Bacon \
Stretcher Cover\"\>"},
    {"\<\"http://example.org/resource/partXYZ\"\>", \
"\<\"http://example.org/attribute/pcolor\"\>", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6354960902433863`*^9, 3.635496122406472*^9, 
  3.635496156241433*^9, 3.635498185091134*^9, 3.6355004276662717`*^9, 
  3.635500839522717*^9, 3.635568029695266*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Directed Graph", "Subsubsection",
 CellChangeTimes->{{3.6354977896843624`*^9, 3.6354977979431515`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"graphData", " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"DirectedEdge", "[", 
     RowBox[{"#", ",", "partXYZ"}], "]"}], "&"}], "/@", 
   RowBox[{"Values", "[", "partInstanceAsAssociation", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.630750144098563*^9, 3.630750227524579*^9}, {
   3.6307515304622393`*^9, 3.6307515407815747`*^9}, {3.6307515784477015`*^9, 
   3.6307515924620686`*^9}, {3.630751633990509*^9, 3.6307516355406437`*^9}, {
   3.6307520973324795`*^9, 3.630752103719198*^9}, {3.630752875167528*^9, 
   3.6307528851453896`*^9}, {3.63075386174307*^9, 3.6307538685152025`*^9}, {
   3.6307547011899085`*^9, 3.630754702238002*^9}, 3.6307570359734383`*^9, {
   3.6354904642476425`*^9, 3.6354904704663925`*^9}, {3.6354905472896347`*^9, 
   3.6354905475708847`*^9}, {3.6354905788706894`*^9, 
   3.6354905808081894`*^9}, {3.635493851599815*^9, 3.635493864133018*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"991", "\[DirectedEdge]", "partXYZ"}], ",", 
   RowBox[{"\<\"Left Handed Bacon Stretcher Cover\"\>", "\[DirectedEdge]", 
    "partXYZ"}], ",", 
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False], "\[DirectedEdge]", "partXYZ"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.630754703833234*^9, 3.6307570950696015`*^9, 3.6307600464462204`*^9, 
   3.63084314259315*^9, 3.6308432356739144`*^9, 3.630843291970182*^9, {
   3.6308437027642565`*^9, 3.6308437136836605`*^9}, 3.630843828221506*^9, 
   3.630843935999237*^9, 3.6308440927042933`*^9, 3.6354804832130775`*^9, 
   3.6354904965357285`*^9, 3.6354905596675644`*^9, 3.6354906034488144`*^9, 
   3.6354938837052836`*^9, 3.6355004276975217`*^9, 3.635500839538342*^9, 
   3.635568029726516*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vstyle", " ", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "\[Rule]", "Black"}], "&"}], "/@", 
      RowBox[{"Values", "[", "partInstanceAsAssociation", "]"}]}], ",", 
     RowBox[{"partXYZ", "\[Rule]", "Red"}]}], "}"}], "//", 
   "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.630751868337083*^9, 3.6307520525574512`*^9}, {
   3.630754713996668*^9, 3.630754715121233*^9}, 3.6307570391179695`*^9, {
   3.6354904857788925`*^9, 3.6354904869507675`*^9}, {3.6354905524283066`*^9, 
   3.6354905538814316`*^9}, {3.6354905969019394`*^9, 
   3.6354905993550644`*^9}, {3.6354938738800883`*^9, 3.635493876083213*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"991", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->GrayLevel[0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "GrayLevel[0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"Left Handed Bacon Stretcher Cover\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->GrayLevel[0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "GrayLevel[0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->GrayLevel[0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "GrayLevel[0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"partXYZ", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6307520013564787`*^9, 3.63075205410221*^9}, 
   3.630752108927206*^9, 3.6307528983111725`*^9, {3.630753025187479*^9, 
   3.6307530527387214`*^9}, 3.6307538722199173`*^9, {3.630754710863886*^9, 
   3.630754716384347*^9}, 3.6307570950974445`*^9, 3.6307600464778047`*^9, 
   3.6308431426337557`*^9, 3.630843235719986*^9, 3.630843292005865*^9, {
   3.6308437028000283`*^9, 3.630843713721075*^9}, 3.630843828253363*^9, 
   3.6308439360574226`*^9, 3.630844092730135*^9, 3.6354804832287025`*^9, 
   3.6354904968794785`*^9, 3.6354905598081894`*^9, 3.6354906035425644`*^9, 
   3.6354938838771586`*^9, 3.6355004277131467`*^9, 3.635500839569592*^9, 
   3.635568029757766*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"elabels", " ", "=", 
  RowBox[{"Apply", "[", 
   RowBox[{"Rule", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"{", 
      RowBox[{"graphData", ",", 
       RowBox[{"Keys", "[", "partInstanceAsAssociation", "]"}]}], "}"}], 
     "]"}], ",", 
    RowBox[{"{", "1", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.630753207503776*^9, 3.6307532161101074`*^9}, {
   3.6307533052172346`*^9, 3.630753369261972*^9}, {3.630753406777219*^9, 
   3.6307534289336667`*^9}, {3.6307534982224298`*^9, 
   3.6307535157746005`*^9}, {3.630753576623646*^9, 3.6307535794564533`*^9}, 
   3.630757041618946*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"991", "\[DirectedEdge]", "partXYZ"}], "\[Rule]", "partID"}], ",", 
   RowBox[{
    RowBox[{"\<\"Left Handed Bacon Stretcher Cover\"\>", "\[DirectedEdge]", 
     "partXYZ"}], "\[Rule]", "partName"}], ",", 
   RowBox[{
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], "\[DirectedEdge]", "partXYZ"}], "\[Rule]", 
    "partColor"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.630753217284169*^9, {3.630753314164461*^9, 3.6307533701813803`*^9}, {
   3.630753413265667*^9, 3.6307534303651257`*^9}, 3.6307535035831785`*^9, 
   3.630753582980283*^9, 3.6307538776364293`*^9, 3.630754719290823*^9, 
   3.630757095127898*^9, 3.630760046508432*^9, 3.6308431426801624`*^9, 
   3.630843235761563*^9, 3.6308432921248093`*^9, {3.6308437028358*^9, 
   3.6308437137593594`*^9}, 3.6308438282797585`*^9, 3.6308439360876784`*^9, 
   3.630844092753105*^9, 3.6354804832599525`*^9, 3.6354904969107285`*^9, 
   3.6354905598238144`*^9, 3.6354906035738144`*^9, 3.6354938839084086`*^9, 
   3.6355004277443967`*^9, 3.635500839600842*^9, 3.635568029789016*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"graphData", ",", "\[IndentingNewLine]", 
   RowBox[{"VertexSize", "\[Rule]", "Medium"}], ",", 
   RowBox[{"VertexStyle", "\[Rule]", "vstyle"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"EdgeStyle", "\[Rule]", "Thick"}], ",", 
   RowBox[{"EdgeLabels", "->", "elabels"}], ",", 
   RowBox[{"EdgeShapeFunction", "\[Rule]", 
    RowBox[{"GraphElementData", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<CarvedArrow\>\"", ",", 
       RowBox[{"\"\<ArrowSize\>\"", "\[Rule]", ".06"}]}], "}"}], "]"}]}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"GraphLayout", "\[Rule]", "\"\<SpringEmbedding\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6307516528918114`*^9, 3.6307517286534243`*^9}, {
  3.6307521150259347`*^9, 3.630752158248699*^9}, {3.630752281622197*^9, 
  3.6307523031309857`*^9}, {3.630752930574769*^9, 3.630752946963095*^9}, {
  3.630753086479166*^9, 3.63075309650936*^9}, {3.6307535921477222`*^9, 
  3.63075360419879*^9}, {3.6307536688820267`*^9, 3.630753783891424*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{991, $CellContext`partXYZ, "Left Handed Bacon Stretcher Cover", 
       RGBColor[1, 0, 0]}, {{{1, 2}, {3, 2}, {4, 2}}, Null}, {
      EdgeLabels -> {DirectedEdge[
           RGBColor[1, 0, 0], $CellContext`partXYZ] -> $CellContext`partColor,
          DirectedEdge[
          "Left Handed Bacon Stretcher Cover", $CellContext`partXYZ] -> \
$CellContext`partName, 
         DirectedEdge[991, $CellContext`partXYZ] -> $CellContext`partID}, 
       EdgeShapeFunction -> {
         GraphElementData[{"CarvedArrow", "ArrowSize" -> 0.06}]}, EdgeStyle -> {
         Thickness[Large]}, GraphLayout -> "SpringEmbedding", 
       VertexLabels -> {"Name"}, VertexSize -> {Medium}, 
       VertexStyle -> {
        RGBColor[1, 0, 0] -> GrayLevel[0], 991 -> 
         GrayLevel[0], $CellContext`partXYZ -> RGBColor[1, 0, 0], 
         "Left Handed Bacon Stretcher Cover" -> GrayLevel[0]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Thickness[Large], Opacity[0.7], {
         {Arrowheads[{{0.06, 0.8, {
              GraphicsBox[
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                 0}, {0, 1, 
                 0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                 0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                 0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
          ArrowBox[{{0., 0.032378137140934904`}, {0.8752187319608224, 
           0.5161091323324033}}]}, 
         InsetBox["partID", {0.4376093659804112, 0.27424363473666913`}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[{{0.06, 0.8, {
              GraphicsBox[
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                 0}, {0, 1, 
                 0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                 0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                 0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
          ArrowBox[{{0.8938799790491024, 1.5159340976288695`}, {
           0.8752187319608224, 0.5161091323324033}}]}, 
         InsetBox["partName", {0.8845493555049624, 1.0160216149806365`}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[{{0.06, 0.8, {
              GraphicsBox[
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                 0}, {0, 1, 
                 0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                 0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                 0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
          ArrowBox[{{1.731740568031618, 0.}, {0.8752187319608224, 
           0.5161091323324033}}]}, 
         InsetBox["partColor", {1.3034796499962202`, 0.25805456616620165`}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         {GrayLevel[0], 
          DiskBox[{0., 0.032378137140934904`}, 0.09999991016860815]}, 
         InsetBox["991", 
          Offset[{2, 2}, {0.09999991016860815, 0.13237804730954306`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0, 0], 
          DiskBox[{0.8752187319608224, 0.5161091323324033}, 
           0.09999991016860815]}, 
         InsetBox["partXYZ", 
          Offset[{2, 2}, {0.9752186421294307, 0.6161090425010114}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0], 
          DiskBox[{0.8938799790491024, 1.5159340976288695`}, 
           0.09999991016860815]}, 
         InsetBox["\<\"Left Handed Bacon Stretcher Cover\"\>", 
          Offset[{2, 2}, {0.9938798892177105, 1.6159340077974778`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0], 
          DiskBox[{1.731740568031618, 0.}, 0.09999991016860815]}, InsetBox[
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             RowBox[{
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 1.35 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}],
               PlotRangePadding->None], "\[InvisibleSpace]"}],
             "RGBColor[1, 0, 0]"],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[1, 0, 0]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[1, 0, 0],
           Editable->False,
           Selectable->False], 
          Offset[{2, 2}, {1.8317404782002262`, 0.09999991016860815}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->15]], "Output",
 CellChangeTimes->{{3.6307537247614584`*^9, 3.630753747236415*^9}, 
   3.630753785951009*^9, 3.6307538794863873`*^9, 3.6307547219727907`*^9, 
   3.6307570952279596`*^9, 3.6307600466050987`*^9, 3.630843142777809*^9, 
   3.630843235963829*^9, 3.6308432922159996`*^9, {3.6308437029102435`*^9, 
   3.6308437138489795`*^9}, 3.630843828642929*^9, 3.6308439362540874`*^9, 
   3.6308440931914573`*^9, 3.6354804835099525`*^9, 3.6354904969888535`*^9, 
   3.6354905599175644`*^9, 3.6354906036519394`*^9, 3.6354938840021586`*^9, 
   3.6355004278381467`*^9, 3.635500839772717*^9, 3.635568029929641*^9}]
}, Open  ]],

Cell["\<\
We can observe two types of nodes in this kind of graph, URI (RED) node and \
Literal (BLACK) nodes.\
\>", "Text",
 CellChangeTimes->{{3.6354978281013546`*^9, 3.6354978609138546`*^9}, {
  3.6354982763479705`*^9, 3.6354983325276575`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["TreeForm Representation", "Subsection",
 CellChangeTimes->{{3.6307540816013513`*^9, 3.630754086636507*^9}}],

Cell[TextData[{
 "From the discussion above we saw two abstract data structures that are \
suitable for tuple representation: the List and the Associative array also \
known as Map or Dictionary. The equivalent representations in ",
 StyleBox["Wolfram Language",
  FontSlant->"Italic"],
 " are the List and the Association functions. In fact, ",
 StyleBox["Wolfram Language",
  FontSlant->"Italic"],
 " functions are tree data structures that are created in the memory as a \
contiguous array of pointers, the first to the head and the rest to its \
successive elements. Take for example the list we defined, ",
 StyleBox["partInstanceAsList",
  FontWeight->"Bold"],
 ", we can present it in a tree form: "
}], "Text",
 CellChangeTimes->{{3.630743721359105*^9, 3.6307437255418434`*^9}, {
   3.6307437730997233`*^9, 3.6307438741375923`*^9}, {3.6307440860109763`*^9, 
   3.630744093440854*^9}, {3.6307472248294687`*^9, 3.6307472940013437`*^9}, {
   3.630747405915247*^9, 3.6307474606541023`*^9}, {3.6307476001551156`*^9, 
   3.6307476955555687`*^9}, 3.6307569239812098`*^9, {3.6354913953844924`*^9, 
   3.6354914062907424`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"partInstanceAsList", " ", "//", "TreeForm"}]], "Input",
 CellChangeTimes->{{3.6307441202877064`*^9, 3.6307441240045557`*^9}, 
   3.6307569277773085`*^9}],

Cell[BoxData[
 GraphicsBox[
  TagBox[GraphicsComplexBox[{{0.7745966692414834, 1.5491933384829668`}, {0., 
    0.7745966692414834}, {0.7745966692414834, 0.7745966692414834}, {
    1.5491933384829668`, 0.7745966692414834}, {0.7745966692414834, 0.}, {
    1.5491933384829668`, 0.}, {2.32379000772445, 0.}}, {
     {RGBColor[0.55, 0.45, 0.45], 
      LineBox[{{1, 2}, {1, 3}, {1, 4}, {4, 5}, {4, 6}, {4, 7}}]}, {
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["List", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.018181818181818184`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 1],
        TagBox[
         RowBox[{"{", 
           RowBox[{"991", ",", "\"Left Handed Bacon Stretcher Cover\"", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                RowBox[{
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
               None, BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False]}], 
           "}"}], HoldForm]],
       Annotation[#, 
        HoldForm[{991, "Left Handed Bacon Stretcher Cover", 
          RGBColor[1, 0, 0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["991",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.018181818181818184`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 2],
        TagBox["991", HoldForm]],
       Annotation[#, 
        HoldForm[991], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"Left Handed Bacon Stretcher Cover\"\>",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.018181818181818184`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 3],
        TagBox["\"Left Handed Bacon Stretcher Cover\"", HoldForm]],
       Annotation[#, 
        HoldForm["Left Handed Bacon Stretcher Cover"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["RGBColor", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.018181818181818184`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 4],
        TagBox[
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            RowBox[{
              GraphicsBox[{{
                 GrayLevel[0], 
                 RectangleBox[{0, 0}]}, {
                 GrayLevel[0], 
                 RectangleBox[{1, -1}]}, {
                 RGBColor[1, 0, 0], 
                 RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
               True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
               FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 1.35 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> None,
            BaseStyle -> {}, BaselinePosition -> Baseline, 
           DefaultBaseStyle -> {}, ButtonFunction :> 
           With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
           "Preemptive"], 
          RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
         HoldForm]],
       Annotation[#, 
        HoldForm[
         RGBColor[1, 0, 0]], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["1",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.018181818181818184`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 5],
        TagBox["1", HoldForm]],
       Annotation[#, 
        HoldForm[1], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["0",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.018181818181818184`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 6],
        TagBox["0", HoldForm]],
       Annotation[#, 
        HoldForm[0], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["0",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.018181818181818184`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 7],
        TagBox["0", HoldForm]],
       Annotation[#, 
        HoldForm[0], "Tooltip"]& ]}}],
   Annotation[#, 
    VertexCoordinateRules -> {{0.7745966692414834, 1.5491933384829668`}, {0., 
     0.7745966692414834}, {0.7745966692414834, 0.7745966692414834}, {
     1.5491933384829668`, 0.7745966692414834}, {0.7745966692414834, 0.}, {
     1.5491933384829668`, 0.}, {2.32379000772445, 0.}}]& ],
  AspectRatio->NCache[Rational[3, 22]^Rational[1, 2], 0.3692744729379982],
  FrameTicks->Automatic,
  PlotRange->All,
  PlotRangePadding->Scaled[0.1]]], "Output",
 CellChangeTimes->{
  3.6307441248175755`*^9, 3.630753052352995*^9, 3.6307570947972603`*^9, 
   3.63076004622513*^9, 3.6308431422644386`*^9, 3.630843235421789*^9, 
   3.630843291738241*^9, {3.6308437023485327`*^9, 3.6308437133173485`*^9}, 
   3.6308438278911037`*^9, 3.6308439354907007`*^9, 3.6308440923434668`*^9, 
   3.6354804829630775`*^9, 3.6355004279162717`*^9, 3.635500839913342*^9, 
   3.635568030039016*^9}]
}, Open  ]],

Cell["\<\
That reveals that the symbol Red is set to the result of the function \
RGBColor with parameters 1,0,0\
\>", "Text",
 CellChangeTimes->{{3.6307477008866105`*^9, 3.6307477157044125`*^9}, {
  3.6307478009272857`*^9, 3.6307478547684684`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RGBColor", "[", 
  RowBox[{"1", ",", "0", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.6307478592811637`*^9, 3.6307478675428824`*^9}}],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    RowBox[{
     GraphicsBox[{
       {GrayLevel[0], RectangleBox[{0, 0}]}, 
       {GrayLevel[0], RectangleBox[{1, -1}]}, 
       {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
      AspectRatio->1,
      Frame->True,
      FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
      FrameTicks->None,
      ImageSize->
       Dynamic[{
        Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
         Magnification]}],
      PlotRangePadding->None], "\[InvisibleSpace]"}],
    "RGBColor[1, 0, 0]"],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[1, 0, 0],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.630747868429601*^9, 3.6307530523820276`*^9, 3.630757094831194*^9, 
   3.6307600462557573`*^9, 3.6308431422944093`*^9, 3.6308432354524374`*^9, 
   3.630843291766986*^9, {3.630843702375603*^9, 3.6308437133599834`*^9}, 
   3.630843828038556*^9, 3.6308439357118034`*^9, 3.6308440923721795`*^9, 
   3.6354804829787025`*^9, 3.6355004280568967`*^9, 3.635500839960217*^9, 
   3.635568030070266*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Red"], "Input",
 CellChangeTimes->{{3.6307478709061637`*^9, 3.630747871335851*^9}}],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    RowBox[{
     GraphicsBox[{
       {GrayLevel[0], RectangleBox[{0, 0}]}, 
       {GrayLevel[0], RectangleBox[{1, -1}]}, 
       {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
      AspectRatio->1,
      Frame->True,
      FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
      FrameTicks->None,
      ImageSize->
       Dynamic[{
        Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
         Magnification]}],
      PlotRangePadding->None], "\[InvisibleSpace]"}],
    "RGBColor[1, 0, 0]"],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[1, 0, 0],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.6307478720829215`*^9, 3.6307530524141717`*^9, 3.630757094856427*^9, 
   3.6307600462882986`*^9, 3.6308431424123588`*^9, 3.630843235484107*^9, 
   3.6308432917977133`*^9, {3.630843702564129*^9, 3.630843713390437*^9}, 
   3.630843828061311*^9, 3.630843935756024*^9, 3.6308440925071306`*^9, 
   3.6354804831037025`*^9, 3.6355004281037717`*^9, 3.635500840022717*^9, 
   3.635568030117141*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Function Representation", "Subsection",
 CellChangeTimes->{{3.630754071486117*^9, 3.630754076548617*^9}}],

Cell[TextData[{
 "We can represent this triplet, ",
 StyleBox["partInstanceAsList",
  FontWeight->"Bold"],
 " as a function with three arguments that take values from the Integer, \
String and Color domains"
}], "Text",
 CellChangeTimes->{{3.6307480162908545`*^9, 3.630748027177573*^9}, {
   3.630748097873856*^9, 3.6307482161093597`*^9}, 3.630756931885089*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"partFunction", "[", 
   RowBox[{
   "991", ",", "\"\<Left Handed Bacon Stretcher Cover\>\"", ",", "Red"}], 
   "]"}], "//", "TreeForm"}]], "Input",
 CellChangeTimes->{{3.6307482271097975`*^9, 3.630748273590846*^9}, {
  3.630748308359348*^9, 3.630748371117572*^9}, {3.6307569544883337`*^9, 
  3.6307569641984825`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[GraphicsComplexBox[{{0.7745966692414834, 1.5491933384829668`}, {0., 
    0.7745966692414834}, {0.7745966692414834, 0.7745966692414834}, {
    1.5491933384829668`, 0.7745966692414834}, {0.7745966692414834, 0.}, {
    1.5491933384829668`, 0.}, {2.32379000772445, 0.}}, {
     {RGBColor[0.55, 0.45, 0.45], 
      LineBox[{{1, 2}, {1, 3}, {1, 4}, {4, 5}, {4, 6}, {4, 7}}]}, {
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["partFunction", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.018181818181818184`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 1],
        TagBox[
         RowBox[{"partFunction", "[", 
           RowBox[{"991", ",", "\"Left Handed Bacon Stretcher Cover\"", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                RowBox[{
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
               None, BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False]}], 
           "]"}], HoldForm]],
       Annotation[#, 
        HoldForm[
         $CellContext`partFunction[991, "Left Handed Bacon Stretcher Cover", 
          RGBColor[1, 0, 0]]], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["991",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.018181818181818184`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 2],
        TagBox["991", HoldForm]],
       Annotation[#, 
        HoldForm[991], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"Left Handed Bacon Stretcher Cover\"\>",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.018181818181818184`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 3],
        TagBox["\"Left Handed Bacon Stretcher Cover\"", HoldForm]],
       Annotation[#, 
        HoldForm["Left Handed Bacon Stretcher Cover"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["RGBColor", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.018181818181818184`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 4],
        TagBox[
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            RowBox[{
              GraphicsBox[{{
                 GrayLevel[0], 
                 RectangleBox[{0, 0}]}, {
                 GrayLevel[0], 
                 RectangleBox[{1, -1}]}, {
                 RGBColor[1, 0, 0], 
                 RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
               True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
               FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 1.35 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> None,
            BaseStyle -> {}, BaselinePosition -> Baseline, 
           DefaultBaseStyle -> {}, ButtonFunction :> 
           With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
           "Preemptive"], 
          RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
         HoldForm]],
       Annotation[#, 
        HoldForm[
         RGBColor[1, 0, 0]], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["1",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.018181818181818184`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 5],
        TagBox["1", HoldForm]],
       Annotation[#, 
        HoldForm[1], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["0",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.018181818181818184`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 6],
        TagBox["0", HoldForm]],
       Annotation[#, 
        HoldForm[0], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["0",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.018181818181818184`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 7],
        TagBox["0", HoldForm]],
       Annotation[#, 
        HoldForm[0], "Tooltip"]& ]}}],
   Annotation[#, 
    VertexCoordinateRules -> {{0.7745966692414834, 1.5491933384829668`}, {0., 
     0.7745966692414834}, {0.7745966692414834, 0.7745966692414834}, {
     1.5491933384829668`, 0.7745966692414834}, {0.7745966692414834, 0.}, {
     1.5491933384829668`, 0.}, {2.32379000772445, 0.}}]& ],
  AspectRatio->NCache[Rational[3, 22]^Rational[1, 2], 0.3692744729379982],
  FrameTicks->Automatic,
  ImageSize->{611., Automatic},
  PlotRange->All,
  PlotRangePadding->Scaled[0.1]]], "Output",
 CellChangeTimes->{{3.6307482694037294`*^9, 3.63074827458502*^9}, {
   3.630748317544142*^9, 3.630748372296624*^9}, 3.630753052472238*^9, 
   3.6307569655586495`*^9, 3.6307570949016724`*^9, 3.630760046336154*^9, 
   3.630843142464566*^9, 3.6308432355402946`*^9, 3.6308432918532205`*^9, {
   3.630843702614403*^9, 3.6308437134652653`*^9}, 3.630843828116833*^9, 
   3.6308439358258457`*^9, 3.6308440925291443`*^9, 3.6354804831349525`*^9, 
   3.6355004281350217`*^9, 3.635500840132092*^9, 3.635568030195266*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Association Representation", "Subsection",
 CellChangeTimes->{{3.6307541990656333`*^9, 3.6307542033761797`*^9}, {
  3.6354801421349525`*^9, 3.6354801454943275`*^9}, {3.635492755226426*^9, 
  3.6354927849666605`*^9}}],

Cell[TextData[{
 "Associations in Wolfram Language are very similar to the ",
 ButtonBox["Association Type construct of the Topic Map data model",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.isotopicmaps.org/sam/sam-model/#sect-association"], None},
  ButtonNote->"http://www.isotopicmaps.org/sam/sam-model/#sect-association"],
 ". Each defined association is an instance of an association type, e.g. ",
 StyleBox["partInstanceAsAssociation",
  FontWeight->"Bold"],
 ", the type of a supplies part. The keys of the association, association \
role type according to Topic Maps terminology, describe the role type of the \
values in the association instance. The values of the association, \
association role players according to Topic Maps terminology, describe the \
particular instance of the association type. In the following example, we \
have three role players, the values 991, \[OpenCurlyDoubleQuote]Left Handed \
Bacon Stretcher Cover\[CloseCurlyDoubleQuote] and Red that describe a part \
from a supplies catalog database. Each player has a role type that is \
important for semantic purposes. The integer number 991, is used as an \
identifier for the part, its role type is that of an identifier. The string \
\[OpenCurlyDoubleQuote]Left Handed Bacon Stretcher Cover\
\[CloseCurlyDoubleQuote] is used as a name descriptor and the symbol Red is \
used as the value of the categorical variable color to describe the color of \
the part."
}], "Text",
 CellChangeTimes->{{3.630754301458637*^9, 3.630754321652973*^9}, {
  3.6307543851243477`*^9, 3.630754406199543*^9}, {3.6307547301406317`*^9, 
  3.6307547940179653`*^9}, {3.630754827888508*^9, 3.6307548783089223`*^9}, {
  3.630755302719262*^9, 3.630755523353509*^9}, {3.630755589154555*^9, 
  3.6307555932922497`*^9}, {3.630755623751899*^9, 3.6307556597242727`*^9}, {
  3.6307557429362197`*^9, 3.630755753962244*^9}, {3.630755785379759*^9, 
  3.630755788024226*^9}, {3.630755837634857*^9, 3.630755967018056*^9}, {
  3.6307560097416887`*^9, 3.63075609392216*^9}, {3.630756136658358*^9, 
  3.630756167742285*^9}, {3.6307562181553707`*^9, 3.6307564271524487`*^9}, {
  3.630756466987255*^9, 3.6307565411151404`*^9}, {3.6307570627830086`*^9, 
  3.6307570692232146`*^9}, {3.630757200248579*^9, 3.630757235547214*^9}, {
  3.63549181106225*^9, 3.635491811827875*^9}, {3.635491882589594*^9, 
  3.635491882589594*^9}}],

Cell["\<\
The command to perform the association of attributes with their values is the \
following\
\>", "Text",
 CellChangeTimes->{{3.6354923494645967`*^9, 3.6354923703220186`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationThread", "[", 
  RowBox[{"attributes", "\[Rule]", "partInstanceAsList"}], "]"}]], "Input",
 CellChangeTimes->{{3.6354922920212374`*^9, 3.6354922958181124`*^9}}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"pid\"\>", "\[Rule]", "991"}], ",", 
   RowBox[{"\<\"pname\"\>", 
    "\[Rule]", "\<\"Left Handed Bacon Stretcher Cover\"\>"}], ",", 
   RowBox[{"\<\"pcolor\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.635492297376706*^9, 3.6355004281662717`*^9, 
  3.635500840163342*^9, 3.635568030226516*^9}]
}, Open  ]],

Cell["\<\
Association is a relatively new fundamental construct in Wolfram Language, it \
acts like a symbolically indexed list. The main reason for using it is to \
allow highly efficient lookup and updating and also build complex \
hierarchical structures and other datasets.\
\>", "Text",
 CellChangeTimes->{{3.6354923740251436`*^9, 3.6354924405895967`*^9}, {
  3.635492486742051*^9, 3.6354924976805277`*^9}, {3.635492541206895*^9, 
  3.635492724922715*^9}}],

Cell["You can easily convert an Association to a list of rules", "Text",
 CellChangeTimes->{{3.635492524151231*^9, 3.635492533260606*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "Normal"}]], "Input",
 CellChangeTimes->{{3.6354923120339327`*^9, 3.6354923149089327`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"pid\"\>", "\[Rule]", "991"}], ",", 
   RowBox[{"\<\"pname\"\>", 
    "\[Rule]", "\<\"Left Handed Bacon Stretcher Cover\"\>"}], ",", 
   RowBox[{"\<\"pcolor\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6354923161589327`*^9, 3.6355004281818967`*^9, 
  3.635500840210217*^9, 3.635568030257766*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["partInstanceAsAssociation"], "Input",
 CellChangeTimes->{{3.6307571330100374`*^9, 3.630757138357036*^9}}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"partID", "\[Rule]", "991"}], ",", 
   RowBox[{
   "partName", "\[Rule]", "\<\"Left Handed Bacon Stretcher Cover\"\>"}], ",", 
   RowBox[{"partColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.6307571396640806`*^9, 3.630760046361038*^9, 3.6308431424974375`*^9, 
   3.6308432355694103`*^9, 3.630843291879983*^9, {3.630843702646307*^9, 
   3.6308437135914297`*^9}, 3.6308438281550617`*^9, 3.630843935875885*^9, 
   3.6308440925597715`*^9, 3.6354804831662025`*^9, 3.6355004281975217`*^9, 
   3.635500840241467*^9, 3.635568030289016*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "partInstanceAsAssociation", "]"}]], "Input",
 CellChangeTimes->{{3.6307570997222633`*^9, 3.6307571082072325`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"partID", ",", "partName", ",", "partColor"}], "}"}]], "Output",
 CellChangeTimes->{
  3.630757109293722*^9, 3.6307600463935795`*^9, 3.6308431425293417`*^9, 
   3.6308432356042447`*^9, 3.630843291912692*^9, {3.630843702676278*^9, 
   3.6308437136175327`*^9}, 3.6308438281778164`*^9, 3.6308439359166145`*^9, 
   3.6308440925836987`*^9, 3.6354804831662025`*^9, 3.6355004282287717`*^9, 
   3.635500840272717*^9, 3.635568030304641*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Values", "[", "partInstanceAsAssociation", "]"}]], "Input",
 CellChangeTimes->{{3.630757111657258*^9, 3.6307571209018393`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"991", ",", "\<\"Left Handed Bacon Stretcher Cover\"\>", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.630757122052991*^9, 3.6307600464194217`*^9, 3.630843142561246*^9, 
   3.6308432356390796`*^9, 3.630843291939455*^9, {3.6308437027110825`*^9, 
   3.6308437136479864`*^9}, 3.6308438281996613`*^9, 3.630843935955017*^9, 
   3.630844092677494*^9, 3.6354804831974525`*^9, 3.6355004282443967`*^9, 
   3.635500840460217*^9, 3.635568030335891*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["HyperGraph Representation", "Subsection",
 CellChangeTimes->{{3.635324899807564*^9, 3.635324906338814*^9}, {
  3.6354985114426966`*^9, 3.6354985118176966`*^9}}],

Cell[TextData[{
 "Although, it is possible to represent a hypergraph by a bipartite graph and \
follow the RDF (Subject-Predicate-Object) approach  I would like to \
demonstrate a different perspective that eventually leads to what I named the \
",
 StyleBox["enhanced hypergraph representation of the relational model ",
  FontWeight->"Bold"],
 "that follows in Part 2 of this series."
}], "Text",
 CellChangeTimes->{{3.6354989246902018`*^9, 3.6354989440700846`*^9}, {
  3.6354991621933184`*^9, 3.635499315041951*^9}, {3.6355676968195114`*^9, 
  3.635567732049683*^9}, {3.635596884035037*^9, 3.635596923158084*^9}}],

Cell["\<\
We will use two lists of rules, one for the attributes and another for the \
values. Essentially we follow the same principle as with the lists above, we \
separate the semantics from the data values, i.e. types from instances. This \
is a critical step in a completely new way of thinking about the data \
modeling process.\
\>", "Text",
 CellChangeTimes->{{3.63549941455367*^9, 3.6354995000009356`*^9}, {
  3.635499536057576*^9, 3.6354997460451765`*^9}, {3.6355026029449415`*^9, 
  3.635502623429121*^9}, {3.6355039865339575`*^9, 3.635504013306419*^9}}],

Cell[CellGroupData[{

Cell["List of Rules for Attributes", "Subsubsection",
 CellChangeTimes->{{3.635503607019309*^9, 3.6355036583357153`*^9}}],

Cell["\<\
Take the list of attributes first and add in the beginning of the list \
another one which we call nexusPart. This is the hyperedge that connects all \
the other attributes together.\
\>", "Text",
 CellChangeTimes->{{3.6354997820334578`*^9, 3.635499849742442*^9}, 
   3.6355781174608994`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Insert", "[", 
  RowBox[{"attributes", ",", "\"\<nexusPart\>\"", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.6354997730178328`*^9, 3.6354997743772078`*^9}, {
   3.635499878070567*^9, 3.635499905148692*^9}, 3.635578124752635*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"nexusPart\"\>", ",", "\<\"pid\"\>", ",", "\<\"pname\"\>", 
   ",", "\<\"pcolor\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.6355782395547924`*^9}]
}, Open  ]],

Cell["and using a list of rules we take", "Text",
 CellChangeTimes->{{3.635500129379161*^9, 3.635500133613536*^9}, {
  3.6355002609660764`*^9, 3.6355002785285764`*^9}, {3.635502656719097*^9, 
  3.635502664844097*^9}, {3.635567823111312*^9, 3.635567824062334*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"conceptsRules", " ", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{"Rule", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"\"\<nexusPart\>\"", ",", 
       RowBox[{"{", "3", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     "attributes"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.635500283357678*^9, 3.6355003152990837`*^9}, {
   3.6355003949865837`*^9, 3.6355004172443967`*^9}, {3.6355004786574826`*^9, 
   3.6355006520276*^9}, {3.6355026722210503`*^9, 3.6355026738460503`*^9}, {
   3.6355033120648003`*^9, 3.635503317222027*^9}, 3.6355781375099325`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"nexusPart\"\>", "\[Rule]", "\<\"pid\"\>"}], ",", 
   RowBox[{"\<\"nexusPart\"\>", "\[Rule]", "\<\"pname\"\>"}], ",", 
   RowBox[{"\<\"nexusPart\"\>", "\[Rule]", "\<\"pcolor\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6355781725258045`*^9, 3.6355782013575635`*^9}, 
   3.635578239721387*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vstyle", " ", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "\[Rule]", "Black"}], "&"}], "/@", "attributes"}], ",", 
     RowBox[{"\"\<nexusPart\>\"", "\[Rule]", "Red"}]}], "}"}], "//", 
   "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.630751868337083*^9, 3.6307520525574512`*^9}, {
   3.630754713996668*^9, 3.630754715121233*^9}, 3.6307570391179695`*^9, {
   3.6354904857788925`*^9, 3.6354904869507675`*^9}, {3.6354905524283066`*^9, 
   3.6354905538814316`*^9}, {3.6354905969019394`*^9, 
   3.6354905993550644`*^9}, {3.6354938738800883`*^9, 3.635493876083213*^9}, {
   3.635502838710308*^9, 3.6355028655862846`*^9}, 3.6355781508185*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"pid\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->GrayLevel[0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "GrayLevel[0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"pname\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->GrayLevel[0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "GrayLevel[0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"pcolor\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->GrayLevel[0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "GrayLevel[0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"nexusPart\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.635578172573103*^9, 3.6355782013954926`*^9}, 
   3.635578239758408*^9}]
}, Open  ]],

Cell["\<\
A graphical representation of the list above is the following\
\>", "Text",
 CellChangeTimes->{{3.6355678503137197`*^9, 3.6355678659363613`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"conceptsRules", ",", 
   RowBox[{"VertexSize", "\[Rule]", "Medium"}], ",", 
   RowBox[{"VertexStyle", "\[Rule]", "vstyle"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6355027306956596`*^9, 3.635502736149761*^9}, {
  3.635502900312847*^9, 3.635502939719097*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "nexusPart", "pid", "pname", "pcolor"}, {{{1, 2}, {1, 3}, {1, 4}}, 
       Null}, {VertexLabels -> {"Name"}, VertexSize -> {Medium}, 
       VertexStyle -> {
        "nexusPart" -> RGBColor[1, 0, 0], "pname" -> GrayLevel[0], "pid" -> 
         GrayLevel[0], "pcolor" -> GrayLevel[0]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.03685673738335107], 
        ArrowBox[{{{0.7745966692414834, 0.7745966692414834}, {0., 0.}}, {{
         0.7745966692414834, 0.7745966692414834}, {0.7745966692414834, 
         0.}}, {{0.7745966692414834, 0.7745966692414834}, {
         1.5491933384829668`, 0.}}}, 0.018845521490452433`]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         {RGBColor[1, 0, 0], 
          DiskBox[{0.7745966692414834, 0.7745966692414834}, 
           0.07745966692414835]}, 
         InsetBox["\<\"nexusPart\"\>", 
          Offset[{2, 2}, {0.8520563361656317, 0.8520563361656317}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0], DiskBox[{0., 0.}, 0.07745966692414835]}, 
         InsetBox["\<\"pid\"\>", 
          Offset[{2, 2}, {0.07745966692414835, 0.07745966692414835}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0], 
          DiskBox[{0.7745966692414834, 0.}, 0.07745966692414835]}, 
         InsetBox["\<\"pname\"\>", 
          Offset[{2, 2}, {0.8520563361656317, 0.07745966692414835}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0], 
          DiskBox[{1.5491933384829668`, 0.}, 0.07745966692414835]}, 
         InsetBox["\<\"pcolor\"\>", 
          Offset[{2, 2}, {1.626653005407115, 0.07745966692414835}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->15]], "Output",
 CellChangeTimes->{3.6355782014713507`*^9, 3.6355782398509607`*^9}]
}, Open  ]],

Cell["\<\
So, in this hypergraph the nexusPart plays the role of the hyperedge with a \
red color, that connects three hypernodes that represent the attributes (pid, \
pname, pcol) with a black color.\
\>", "Text",
 CellChangeTimes->{{3.635502995139019*^9, 3.635503143352886*^9}, {
   3.6355039292488017`*^9, 3.6355039349070044`*^9}, 3.635578161963773*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["List of Rules for Values", "Subsubsection",
 CellChangeTimes->{{3.6355036687917705`*^9, 3.635503674494895*^9}}],

Cell["Now we can proceed with the data", "Text",
 CellChangeTimes->{{3.6355032741663623`*^9, 3.6355032916360893`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["partInstanceAsList"], "Input",
 CellChangeTimes->{{3.6355033996692924`*^9, 3.635503401201519*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"991", ",", "\<\"Left Handed Bacon Stretcher Cover\"\>", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.635503401732769*^9, 3.635568030695266*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataRules", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{"Rule", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"\"\<nexus991\>\"", ",", 
       RowBox[{"{", "3", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     "partInstanceAsList"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6355032966360893`*^9, 3.635503429826519*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"nexus991\"\>", "\[Rule]", "991"}], ",", 
   RowBox[{"\<\"nexus991\"\>", 
    "\[Rule]", "\<\"Left Handed Bacon Stretcher Cover\"\>"}], ",", 
   RowBox[{"\<\"nexus991\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{3.635503431594097*^9, 3.635568030726516*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vstyle", " ", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "\[Rule]", "Blue"}], "&"}], "/@", "partInstanceAsList"}], 
     ",", 
     RowBox[{"\"\<nexus991\>\"", "\[Rule]", "Green"}]}], "}"}], "//", 
   "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.635503470118511*^9, 3.635503479338238*^9}, {
  3.6355038628113017`*^9, 3.6355038716863017`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"991", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"Left Handed Bacon Stretcher Cover\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"nexus991\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6355034602210503`*^9, 3.635503509299468*^9, 
  3.635503878201926*^9, 3.635568030757766*^9}]
}, Open  ]],

Cell["\<\
A graphical representation of the list above is the following\
\>", "Text",
 CellChangeTimes->{{3.6355678875988035`*^9, 3.635567893997809*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"dataRules", ",", 
   RowBox[{"VertexSize", "\[Rule]", "Medium"}], ",", 
   RowBox[{"VertexStyle", "\[Rule]", "vstyle"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6355035480495825`*^9, 3.6355035498620825`*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{"nexus991", 991, "Left Handed Bacon Stretcher Cover", 
       RGBColor[1, 0, 0]}, {{{1, 2}, {1, 3}, {1, 4}}, Null}, {
      VertexLabels -> {"Name"}, VertexSize -> {Medium}, 
       VertexStyle -> {
        RGBColor[1, 0, 0] -> RGBColor[0, 0, 1], 991 -> RGBColor[0, 0, 1], 
         "nexus991" -> RGBColor[0, 1, 0], "Left Handed Bacon Stretcher Cover" -> 
         RGBColor[0, 0, 1]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.03685673738335107], 
        ArrowBox[{{{0.7745966692414834, 0.7745966692414834}, {0., 0.}}, {{
         0.7745966692414834, 0.7745966692414834}, {0.7745966692414834, 
         0.}}, {{0.7745966692414834, 0.7745966692414834}, {
         1.5491933384829668`, 0.}}}, 0.018845521490452433`]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         {RGBColor[0, 1, 0], 
          DiskBox[{0.7745966692414834, 0.7745966692414834}, 
           0.07745966692414835]}, 
         InsetBox["\<\"nexus991\"\>", 
          Offset[{2, 2}, {0.8520563361656317, 0.8520563361656317}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 0, 1], DiskBox[{0., 0.}, 0.07745966692414835]}, 
         InsetBox["991", 
          Offset[{2, 2}, {0.07745966692414835, 0.07745966692414835}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 0, 1], 
          DiskBox[{0.7745966692414834, 0.}, 0.07745966692414835]}, 
         InsetBox["\<\"Left Handed Bacon Stretcher Cover\"\>", 
          Offset[{2, 2}, {0.8520563361656317, 0.07745966692414835}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 0, 1], 
          DiskBox[{1.5491933384829668`, 0.}, 0.07745966692414835]}, InsetBox[
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             RowBox[{
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 1.35 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}],
               PlotRangePadding->None], "\[InvisibleSpace]"}],
             "RGBColor[1, 0, 0]"],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[1, 0, 0]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[1, 0, 0],
           Editable->False,
           Selectable->False], 
          Offset[{2, 2}, {1.626653005407115, 0.07745966692414835}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->15]], "Output",
 CellChangeTimes->{3.6355035517527075`*^9, 3.635503878420676*^9, 
  3.635568030835891*^9}]
}, Open  ]],

Cell["\<\
And in this hypergraph the nexus991 plays the role of a hyperedge with a \
green color, that connects three hypernodes that represent the values (991, \
\[OpenCurlyDoubleQuote]Left Handled....\[CloseCurlyDoubleQuote], RED) with a \
blue color.\
\>", "Text",
 CellChangeTimes->{{3.6355037922907934`*^9, 3.6355038374529033`*^9}, {
  3.635503888474387*^9, 3.635503919789817*^9}, {3.6355681760937033`*^9, 
  3.6355681856718283`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Summary", "Subsubsection",
 CellChangeTimes->{{3.6355043108125176`*^9, 3.6355043116093926`*^9}}],

Cell["\<\
We created two handles, we call them nexuses, one at a layer of concepts to \
represent the head of the record and another at the data layer to represent \
the body of the record. Provided that we find a way to connect the two \
layers, we are now in a position to create concept graphs, we will call them \
maps from now on, that are similar to the ER diagrams that database designers \
build in RDBMS.\
\>", "Text",
 CellChangeTimes->{{3.6355043137031426`*^9, 3.6355044233955255`*^9}, {
  3.6355044775625176`*^9, 3.635504696704119*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Property Graph Representation", "Subsection",
 CellChangeTimes->{{3.6355787149807453`*^9, 3.6355787283915186`*^9}}],

Cell["\<\
In the property graph representation, each record becomes an instance of a \
class that is represented graphically with a node. Attributes of the record \
are usually embedded in the structure of the node as properties of the class. \
If we follow our previous example we can take the association representation\
\>", "Text",
 CellChangeTimes->{{3.6355788385508947`*^9, 3.6355789794359875`*^9}, {
  3.6355790840668855`*^9, 3.6355791269785957`*^9}, {3.6355791910790634`*^9, 
  3.635579203085128*^9}, {3.6355795012751465`*^9, 3.635579507663761*^9}}],

Cell[CellGroupData[{

Cell[BoxData["partInstanceAsAssociation"], "Input",
 CellChangeTimes->{{3.6355792267955685`*^9, 3.6355792281960297`*^9}}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"partID", "\[Rule]", "991"}], ",", 
   RowBox[{
   "partName", "\[Rule]", "\<\"Left Handed Bacon Stretcher Cover\"\>"}], ",", 
   RowBox[{"partColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.635579228999923*^9}]
}, Open  ]],

Cell["\<\
and add an extra handler that refers to that association and represents a key \
for looking up associations. For example:\
\>", "Text",
 CellChangeTimes->{{3.635579232613258*^9, 3.6355794050261908`*^9}, {
  3.635579524263805*^9, 3.6355795245518923`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\"\<recKey991\>\"", "\[Rule]", 
  "partInstanceAsAssociation"}]], "Input",
 CellChangeTimes->{{3.6355794128130713`*^9, 3.6355794530313053`*^9}}],

Cell[BoxData[
 RowBox[{"\<\"recKey991\"\>", "\[Rule]", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"partID", "\[Rule]", "991"}], ",", 
    RowBox[{
    "partName", "\[Rule]", "\<\"Left Handed Bacon Stretcher Cover\"\>"}], ",", 
    RowBox[{"partColor", "\[Rule]", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False]}]}], "\[RightAssociation]"}]}]], "Output",
 CellChangeTimes->{3.6355794547158756`*^9}]
}, Open  ]],

Cell["\<\
This way the same key can be used to maintain an association of biderectional \
links to other records through a specific edge. For example part 991 has two \
suppliers 1081 and 1082\
\>", "Text",
 CellChangeTimes->{{3.6355800112828493`*^9, 3.6355801539209933`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\"\<recKey991\>\"", "\[Rule]", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\"\<recKey1082\>\"", "->", "\"\<isSupplierOf991\>\""}], ",", 
    RowBox[{"\"\<recKey1081\>\"", "\[Rule]", "\"\<isSupplierOf991\>\""}]}], 
   "\[RightAssociation]"}]}]], "Input",
 CellChangeTimes->{{3.635579763114234*^9, 3.6355797778613157`*^9}, {
  3.635579824663458*^9, 3.6355799691696463`*^9}}],

Cell[BoxData[
 RowBox[{"\<\"recKey991\"\>", "\[Rule]", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"recKey1082\"\>", "\[Rule]", "\<\"isSupplierOf991\"\>"}], ",", 
    RowBox[{"\<\"recKey1081\"\>", "\[Rule]", "\<\"isSupplierOf991\"\>"}]}], 
   "\[RightAssociation]"}]}]], "Output",
 CellChangeTimes->{3.635579970338507*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Representation of a Table in Wolfram Language", "Section",
 CellChangeTimes->{{3.6308409673244505`*^9, 3.630840992285599*^9}, {
  3.630841099742117*^9, 3.6308411004364524`*^9}, {3.6355050451406426`*^9, 
  3.6355050458125176`*^9}}],

Cell[CellGroupData[{

Cell["As a List of Lists", "Subsection",
 CellChangeTimes->{{3.6308411083876247`*^9, 3.630841124232351*^9}, {
  3.635581993135683*^9, 3.6355819966266527`*^9}}],

Cell["\<\
Wolfram Language provides experessions that represent many SQL constructs \
such as Table (SQLTable, SQLTables, SQLTableNames, SQLTableInformation) and \
Column (SQLColumn, SQLColumns, SQLColumnNames, SQLColumnInformation). These \
commands get information about the structure of these constructs.\
\>", "Text",
 CellChangeTimes->{{3.635583564980986*^9, 3.635583628986889*^9}, {
  3.6355836735666523`*^9, 3.635583703557004*^9}, {3.63558375732501*^9, 
  3.6355837604480915`*^9}, {3.635583794814663*^9, 3.6355838539399385`*^9}}],

Cell["\<\
There are also two styles of commands for working with data: Wolfram Language \
SQL commands, SQLSelect, SQLUpdate, SQLInsert, etc, for those who are \
familiar with the language and execution of SQL-Style query commands using \
SQLExecute statement.\
\>", "Text",
 CellChangeTimes->{{3.635584196298523*^9, 3.635584338431861*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"partsList", "=", 
  RowBox[{"SQLSelect", "[", 
   RowBox[{"conn", ",", "\"\<Parts\>\"", ",", 
    RowBox[{"\"\<ShowColumnHeadings\>\"", "\[Rule]", "True"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.630841136077078*^9, 3.6308411524696555`*^9}, {
  3.6308443663325486`*^9, 3.6308443668481736`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"pid\"\>", ",", "\<\"pname\"\>", ",", "\<\"pcolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "991", ",", "\<\"Left Handed Bacon Stretcher Cover\"\>", 
     ",", "\<\"Red\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"992", ",", "\<\"Smoke Shifter End\"\>", ",", "\<\"Black\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"993", ",", "\<\"Acme Widget Washer\"\>", ",", "\<\"Red\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"994", ",", "\<\"Acme Widget Washer\"\>", ",", "\<\"Silver\"\>"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "995", ",", "\<\"I Brake for Crop Circles Sticker\"\>", 
     ",", "\<\"Translucent\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "996", ",", "\<\"Anti-Gravity Turbine Generator\"\>", 
     ",", "\<\"Cyan\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "997", ",", "\<\"Anti-Gravity Turbine Generator\"\>", 
     ",", "\<\"Magenta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"998", ",", "\<\"Fire Hydrant Cap\"\>", ",", "\<\"Red\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"999", ",", "\<\"7 Segment Display\"\>", ",", "\<\"Green\"\>"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6308411325477805`*^9, 3.6308411584960227`*^9}, 
   3.6308431428396845`*^9, 3.6308432360627146`*^9, 3.6308432922635775`*^9, {
   3.630843702962451*^9, 3.6308437139090166`*^9}, 3.6308438288195076`*^9, 
   3.6308439363146*^9, 3.6308440932306986`*^9, 3.6354804835724525`*^9, 
   3.6355004283693967`*^9, 3.635500840632092*^9, 3.635568030884719*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"partsList", "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.635583305722971*^9, 3.6355833133616433`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"pid\"\>", "\<\"pname\"\>", "\<\"pcolor\"\>"},
    {"991", "\<\"Left Handed Bacon Stretcher Cover\"\>", "\<\"Red\"\>"},
    {"992", "\<\"Smoke Shifter End\"\>", "\<\"Black\"\>"},
    {"993", "\<\"Acme Widget Washer\"\>", "\<\"Red\"\>"},
    {"994", "\<\"Acme Widget Washer\"\>", "\<\"Silver\"\>"},
    {"995", "\<\"I Brake for Crop Circles Sticker\"\>", "\<\"Translucent\"\>"},
    {"996", "\<\"Anti-Gravity Turbine Generator\"\>", "\<\"Cyan\"\>"},
    {"997", "\<\"Anti-Gravity Turbine Generator\"\>", "\<\"Magenta\"\>"},
    {"998", "\<\"Fire Hydrant Cap\"\>", "\<\"Red\"\>"},
    {"999", "\<\"7 Segment Display\"\>", "\<\"Green\"\>"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.635583310472971*^9, 3.635583314216135*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"suppliersList", "=", 
   RowBox[{"SQLSelect", "[", 
    RowBox[{"conn", ",", "\"\<Suppliers\>\"", ",", 
     RowBox[{"\"\<ShowColumnHeadings\>\"", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6308443514448533`*^9, 3.6308444009029236`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"catalogList", "=", 
   RowBox[{"SQLSelect", "[", 
    RowBox[{"conn", ",", "\"\<Catalog\>\"", ",", 
     RowBox[{"\"\<ShowColumnHeadings\>\"", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6308444031130285`*^9, 3.630844418653287*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["As a List of Associations or Dataset Construct", "Subsection",
 CellChangeTimes->{{3.6308414342206917`*^9, 3.6308414402493296`*^9}, {
  3.6355821123154907`*^9, 3.6355821259861355`*^9}, {3.6355845620845127`*^9, 
  3.635584563856513*^9}, {3.63558520572075*^9, 3.635585222303961*^9}}],

Cell[CellGroupData[{

Cell["List of Associations", "Subsubsection",
 CellChangeTimes->{{3.6355845687660904`*^9, 3.635584572872484*^9}}],

Cell["\<\
Here we demonstrate how we can arrive to a list of associations from a list \
of lists of data in the previous section. First we split the header, column \
attributes, from the body, records of data.\
\>", "Text",
 CellChangeTimes->{{3.635584576840043*^9, 3.6355846490531206`*^9}, {
  3.635584689498726*^9, 3.6355847122901883`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"attributes", " ", "=", 
  RowBox[{"partsList", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.630841529336005*^9, 3.630841529915527*^9}, {
  3.6308427651529455`*^9, 3.630842797657027*^9}, {3.6308444252880526`*^9, 
  3.6308444261073885`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"pid\"\>", ",", "\<\"pname\"\>", ",", "\<\"pcolor\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6308415310898514`*^9, 3.630842799106286*^9, 3.630843142876423*^9, 
   3.630843236091931*^9, 3.6308432922903395`*^9, {3.630843702987588*^9, 
   3.630843713934249*^9}, 3.63084382887685*^9, 3.630843936369294*^9, 
   3.6308440932431407`*^9, 3.6354804836662025`*^9, 3.6355004284318967`*^9, 
   3.635500840725842*^9, 3.635568030962844*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", " ", "=", 
  RowBox[{"partsList", "[", 
   RowBox[{"[", 
    RowBox[{"2", ";;"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.630841452210207*^9, 3.6308414546857524`*^9}, {
   3.630841486748417*^9, 3.6308415069611473`*^9}, {3.6308428080690355`*^9, 
   3.63084280917047*^9}, {3.6308430718817587`*^9, 3.630843074069627*^9}, {
   3.6308436011982584`*^9, 3.630843602924821*^9}, 3.6308440502459507`*^9, {
   3.630844435725314*^9, 3.6308444364203215`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "991", ",", "\<\"Left Handed Bacon Stretcher Cover\"\>", 
     ",", "\<\"Red\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"992", ",", "\<\"Smoke Shifter End\"\>", ",", "\<\"Black\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"993", ",", "\<\"Acme Widget Washer\"\>", ",", "\<\"Red\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"994", ",", "\<\"Acme Widget Washer\"\>", ",", "\<\"Silver\"\>"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "995", ",", "\<\"I Brake for Crop Circles Sticker\"\>", 
     ",", "\<\"Translucent\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "996", ",", "\<\"Anti-Gravity Turbine Generator\"\>", 
     ",", "\<\"Cyan\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "997", ",", "\<\"Anti-Gravity Turbine Generator\"\>", 
     ",", "\<\"Magenta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"998", ",", "\<\"Fire Hydrant Cap\"\>", ",", "\<\"Red\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"999", ",", "\<\"7 Segment Display\"\>", ",", "\<\"Green\"\>"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6308414980586925`*^9, 3.630841507789837*^9}, 
   3.6308428148014526`*^9, 3.6308431429160614`*^9, 3.630843236124518*^9, 
   3.6308432923280053`*^9, 3.630843603598649*^9, {3.6308437030243263`*^9, 
   3.6308437139577417`*^9}, 3.6308438290206614`*^9, 3.630843936423988*^9, 
   3.6308440512684116`*^9, 3.630844093266111*^9, 3.6354804836974525`*^9, 
   3.6355004284475217`*^9, 3.635500840741467*^9, 3.635568030994094*^9}]
}, Open  ]],

Cell["Now we are in a position to create the first association ", "Text",
 CellChangeTimes->{{3.6355846689601555`*^9, 3.6355846722834606`*^9}, {
  3.635584717972871*^9, 3.635584723185649*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationThread", "[", 
  RowBox[{"attributes", "\[Rule]", 
   RowBox[{"data", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6308428694341784`*^9, 3.6308429084769306`*^9}}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"pid\"\>", "\[Rule]", "991"}], ",", 
   RowBox[{"\<\"pname\"\>", 
    "\[Rule]", "\<\"Left Handed Bacon Stretcher Cover\"\>"}], ",", 
   RowBox[{"\<\"pcolor\"\>", "\[Rule]", "\<\"Red\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.630842909418337*^9, 3.630843142990505*^9, 3.6308432362683516`*^9, 
   3.630843292434064*^9, {3.6308437032060843`*^9, 3.6308437142031097`*^9}, 
   3.630843829281889*^9, 3.6308439366311264`*^9, 3.6308440932909956`*^9, 
   3.6354804837287025`*^9, 3.6355004284631467`*^9, 3.635500840772717*^9, 
   3.635568031009719*^9}]
}, Open  ]],

Cell["\<\
Then generalize the method to transofrm the list of records to a list of \
associations\
\>", "Text",
 CellChangeTimes->{{3.635584725907693*^9, 3.6355847550188503`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AssociationThread", "[", 
     RowBox[{"attributes", "->", "#"}], "]"}], "&"}], "/@", "data"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.6355820820414762`*^9, 3.6355820847140856`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"pid\"\>", "\[Rule]", "991"}], ",", 
        RowBox[{"\<\"pname\"\>", 
         "\[Rule]", "\<\"Left Handed Bacon Stretcher Cover\"\>"}], ",", 
        RowBox[{"\<\"pcolor\"\>", "\[Rule]", "\<\"Red\"\>"}]}], 
       "\[RightAssociation]"}]},
     {
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"pid\"\>", "\[Rule]", "992"}], ",", 
        RowBox[{"\<\"pname\"\>", "\[Rule]", "\<\"Smoke Shifter End\"\>"}], 
        ",", 
        RowBox[{"\<\"pcolor\"\>", "\[Rule]", "\<\"Black\"\>"}]}], 
       "\[RightAssociation]"}]},
     {
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"pid\"\>", "\[Rule]", "993"}], ",", 
        RowBox[{"\<\"pname\"\>", "\[Rule]", "\<\"Acme Widget Washer\"\>"}], 
        ",", 
        RowBox[{"\<\"pcolor\"\>", "\[Rule]", "\<\"Red\"\>"}]}], 
       "\[RightAssociation]"}]},
     {
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"pid\"\>", "\[Rule]", "994"}], ",", 
        RowBox[{"\<\"pname\"\>", "\[Rule]", "\<\"Acme Widget Washer\"\>"}], 
        ",", 
        RowBox[{"\<\"pcolor\"\>", "\[Rule]", "\<\"Silver\"\>"}]}], 
       "\[RightAssociation]"}]},
     {
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"pid\"\>", "\[Rule]", "995"}], ",", 
        RowBox[{"\<\"pname\"\>", 
         "\[Rule]", "\<\"I Brake for Crop Circles Sticker\"\>"}], ",", 
        RowBox[{"\<\"pcolor\"\>", "\[Rule]", "\<\"Translucent\"\>"}]}], 
       "\[RightAssociation]"}]},
     {
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"pid\"\>", "\[Rule]", "996"}], ",", 
        RowBox[{"\<\"pname\"\>", 
         "\[Rule]", "\<\"Anti-Gravity Turbine Generator\"\>"}], ",", 
        RowBox[{"\<\"pcolor\"\>", "\[Rule]", "\<\"Cyan\"\>"}]}], 
       "\[RightAssociation]"}]},
     {
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"pid\"\>", "\[Rule]", "997"}], ",", 
        RowBox[{"\<\"pname\"\>", 
         "\[Rule]", "\<\"Anti-Gravity Turbine Generator\"\>"}], ",", 
        RowBox[{"\<\"pcolor\"\>", "\[Rule]", "\<\"Magenta\"\>"}]}], 
       "\[RightAssociation]"}]},
     {
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"pid\"\>", "\[Rule]", "998"}], ",", 
        RowBox[{"\<\"pname\"\>", "\[Rule]", "\<\"Fire Hydrant Cap\"\>"}], ",", 
        RowBox[{"\<\"pcolor\"\>", "\[Rule]", "\<\"Red\"\>"}]}], 
       "\[RightAssociation]"}]},
     {
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"pid\"\>", "\[Rule]", "999"}], ",", 
        RowBox[{"\<\"pname\"\>", "\[Rule]", "\<\"7 Segment Display\"\>"}], 
        ",", 
        RowBox[{"\<\"pcolor\"\>", "\[Rule]", "\<\"Green\"\>"}]}], 
       "\[RightAssociation]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6355820685656333`*^9, 3.6355820855026584`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["The Structured Dataset Construct of Wolfram Language", "Subsubsection",
 CellChangeTimes->{{3.6355851638994293`*^9, 3.6355851927323685`*^9}}],

Cell["\<\
Finally with the special Dataset construct that the Wolfram Language provides \
we can take a dataset. Dataset has the interesting property that can \
represent not only multidimensional arrays of data, but also data with \
arbitrary hierarchical structure. The second interesting property is that we \
can apply various operators such as part, filtering, aggregation, subquery \
and arbitrary functions directly on the dataset. A few examples to \
demonstrate these:\
\>", "Text",
 CellChangeTimes->{{3.6355847675219135`*^9, 3.6355847986015077`*^9}, {
  3.635584880097291*^9, 3.635584956192649*^9}, {3.6355850402409477`*^9, 
  3.6355851142151003`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"partsDataset", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"AssociationThread", "[", 
      RowBox[{"attributes", "->", "#"}], "]"}], "&"}], "/@", "data"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.630842969359543*^9, 3.63084305005186*^9}, 
   3.6308430983776283`*^9, {3.6308432749202533`*^9, 3.630843275190425*^9}, {
   3.6308435644181414`*^9, 3.630843569899267*^9}, {3.6308437743460016`*^9, 
   3.630843780531963*^9}, {3.6308438967504807`*^9, 3.6308438977997007`*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        StyleBox["\<\"pid\"\>",
         LineColor->GrayLevel[0.3],
         FrontFaceColor->GrayLevel[0.3],
         BackFaceColor->GrayLevel[0.3],
         GraphicsColor->GrayLevel[0.3],
         FontColor->GrayLevel[0.3]], 
        StyleBox["\<\"pname\"\>",
         LineColor->GrayLevel[0.3],
         FrontFaceColor->GrayLevel[0.3],
         BackFaceColor->GrayLevel[0.3],
         GraphicsColor->GrayLevel[0.3],
         FontColor->GrayLevel[0.3]], 
        StyleBox["\<\"pcolor\"\>",
         LineColor->GrayLevel[0.3],
         FrontFaceColor->GrayLevel[0.3],
         BackFaceColor->GrayLevel[0.3],
         GraphicsColor->GrayLevel[0.3],
         FontColor->GrayLevel[0.3]]},
       {"991", 
        StyleBox["\<\"Left Handed Bacon Stretcher Cover\"\>",
         FontColor->GrayLevel[0.4]], 
        StyleBox["\<\"Red\"\>",
         FontColor->GrayLevel[0.4]]},
       {"992", 
        StyleBox["\<\"Smoke Shifter End\"\>",
         FontColor->GrayLevel[0.4]], 
        StyleBox["\<\"Black\"\>",
         FontColor->GrayLevel[0.4]]},
       {"993", 
        StyleBox["\<\"Acme Widget Washer\"\>",
         FontColor->GrayLevel[0.4]], 
        StyleBox["\<\"Red\"\>",
         FontColor->GrayLevel[0.4]]},
       {"994", 
        StyleBox["\<\"Acme Widget Washer\"\>",
         FontColor->GrayLevel[0.4]], 
        StyleBox["\<\"Silver\"\>",
         FontColor->GrayLevel[0.4]]},
       {"995", 
        StyleBox["\<\"I Brake for Crop Circles Sticker\"\>",
         FontColor->GrayLevel[0.4]], 
        StyleBox["\<\"Translucent\"\>",
         FontColor->GrayLevel[0.4]]},
       {"996", 
        StyleBox["\<\"Anti-Gravity Turbine Generator\"\>",
         FontColor->GrayLevel[0.4]], 
        StyleBox["\<\"Cyan\"\>",
         FontColor->GrayLevel[0.4]]},
       {"997", 
        StyleBox["\<\"Anti-Gravity Turbine Generator\"\>",
         FontColor->GrayLevel[0.4]], 
        StyleBox["\<\"Magenta\"\>",
         FontColor->GrayLevel[0.4]]},
       {"998", 
        StyleBox["\<\"Fire Hydrant Cap\"\>",
         FontColor->GrayLevel[0.4]], 
        StyleBox["\<\"Red\"\>",
         FontColor->GrayLevel[0.4]]},
       {"999", 
        StyleBox["\<\"7 Segment Display\"\>",
         FontColor->GrayLevel[0.4]], 
        StyleBox["\<\"Green\"\>",
         FontColor->GrayLevel[0.4]]},
       {
        ItemBox[
         RowBox[{"2", "  ", "levels", 
          AdjustmentBox[
           RowBox[{" ", 
            RowBox[{"|", " "}]}],
           BoxBaselineShift->-0.3], "27", "  ", "elements"}],
         Alignment->{Left, Center},
         Background->RGBColor[0.92, 0.92, 0.9],
         BaseStyle->{
          FontFamily -> "Helvetica", FontSize -> 10, FontColor -> 
           GrayLevel[0.4], Editable -> False, Selectable -> False},
         ItemSize->{Automatic, Automatic}], "\[SpanFromLeft]", 
        "\[SpanFromLeft]"}
      },
      FrameStyle->RGBColor[0, 0, 0, 0.4],
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {}, "Rows" -> {
          RGBColor[0.92, 0.92, 0.9]}},
      GridBoxDividers->{"Columns" -> {
          RGBColor[0, 0, 0, 0.4], {
           RGBColor[0, 0, 0, 0.09]}, 
          RGBColor[0, 0, 0, 0.4]}, "Rows" -> {
          RGBColor[0, 0, 0, 0.4], 
          RGBColor[0, 0, 0, 0.3], {
           RGBColor[0, 0, 0, 0.08]}, 
          RGBColor[0, 0, 0, 0.4]}},
      GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
      GridBoxItemSize->{
       "Columns" -> {{All}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.3}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[1.4], {
           Offset[1.75]}, 
          Offset[4.199999999999999]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[1.2], 
          Offset[0.6], {
           Offset[0.48]}, 
          Offset[0.4]}, "RowsIndexed" -> {}}], True->GridBox[{
       {
        RowBox[{"{", 
         StyleBox[
          SubscriptBox["\[CenterEllipsis]", "9"],
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "}"}]},
       {
        ItemBox[
         RowBox[{"2", "  ", "levels", 
          AdjustmentBox[
           RowBox[{" ", 
            RowBox[{"|", " "}]}],
           BoxBaselineShift->-0.3], "27", "  ", "elements"}],
         Alignment->{Left, Center},
         Background->RGBColor[0.92, 0.92, 0.9],
         BaseStyle->{
          FontFamily -> "Helvetica", FontSize -> 10, FontColor -> 
           GrayLevel[0.4], Editable -> False, Selectable -> False},
         ItemSize->{Automatic, Automatic}]}
      },
      FrameStyle->RGBColor[0, 0, 0, 0.4],
      GridBoxAlignment->{"Columns" -> {Left}},
      GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[1.4], {
           Offset[0.5599999999999999]}, 
          Offset[0.7]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.]}, "RowsIndexed" -> {}}]}, Dynamic[
      CurrentValue[Evaluatable]],
     BaselinePosition->Baseline,
     ImageSize->Automatic],
    Editable->False,
    Selectable->True,
    ShowAutoStyles->False,
    LineSpacing->{1.1, 5},
    NumberMarks->False,
    SpanMinSize->1.,
    SpanMaxSize->3,
    LineBreakWithin->False,
    LineIndent->0,
    LinebreakAdjustments->{0.4, 5, 100, 0, 0.5},
    FontFamily->"Helvetica Neue",
    FontWeight->"Light",
    Background->RGBColor[0.985, 0.98, 0.973]],
   Deploy],
  Dataset[{
    Association[
    "pid" -> 991, "pname" -> "Left Handed Bacon Stretcher Cover", "pcolor" -> 
     "Red"], 
    Association[
    "pid" -> 992, "pname" -> "Smoke Shifter End", "pcolor" -> "Black"], 
    Association[
    "pid" -> 993, "pname" -> "Acme Widget Washer", "pcolor" -> "Red"], 
    Association[
    "pid" -> 994, "pname" -> "Acme Widget Washer", "pcolor" -> "Silver"], 
    Association[
    "pid" -> 995, "pname" -> "I Brake for Crop Circles Sticker", "pcolor" -> 
     "Translucent"], 
    Association[
    "pid" -> 996, "pname" -> "Anti-Gravity Turbine Generator", "pcolor" -> 
     "Cyan"], 
    Association[
    "pid" -> 997, "pname" -> "Anti-Gravity Turbine Generator", "pcolor" -> 
     "Magenta"], 
    Association[
    "pid" -> 998, "pname" -> "Fire Hydrant Cap", "pcolor" -> "Red"], 
    Association[
    "pid" -> 999, "pname" -> "7 Segment Display", "pcolor" -> "Green"]}, 
   TypeSystem`Vector[
    TypeSystem`Struct[{"pid", "pname", "pcolor"}, {
      TypeSystem`Atom[Integer], 
      TypeSystem`Atom[String], 
      TypeSystem`Atom[String]}], 9], 
   Association["ID" -> 13920027058367]]]], "Output",
 CellChangeTimes->{3.6308439369988556`*^9, 3.6308440934326468`*^9, 
  3.6354804840724525`*^9, 3.6355004284943967`*^9, 3.635500841007092*^9, 
  3.635568031259719*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"suppliersDataset", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"AssociationThread", "[", 
      RowBox[{
       RowBox[{"suppliersList", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"suppliersList", "[", 
     RowBox[{"[", 
      RowBox[{"2", ";;"}], "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6308444647392197`*^9, 3.6308445336032605`*^9}, {
  3.6308445783537703`*^9, 3.630844579398881*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        StyleBox["\<\"sid\"\>",
         LineColor->GrayLevel[0.3],
         FrontFaceColor->GrayLevel[0.3],
         BackFaceColor->GrayLevel[0.3],
         GraphicsColor->GrayLevel[0.3],
         FontColor->GrayLevel[0.3]], 
        StyleBox["\<\"sname\"\>",
         LineColor->GrayLevel[0.3],
         FrontFaceColor->GrayLevel[0.3],
         BackFaceColor->GrayLevel[0.3],
         GraphicsColor->GrayLevel[0.3],
         FontColor->GrayLevel[0.3]], 
        StyleBox["\<\"saddress\"\>",
         LineColor->GrayLevel[0.3],
         FrontFaceColor->GrayLevel[0.3],
         BackFaceColor->GrayLevel[0.3],
         GraphicsColor->GrayLevel[0.3],
         FontColor->GrayLevel[0.3]]},
       {"1081", 
        StyleBox["\<\"Acme Widget Suppliers\"\>",
         FontColor->GrayLevel[0.4]], 
        StyleBox["\<\"1 Grub St., Potemkin Village, IL 61801\"\>",
         FontColor->GrayLevel[0.4]]},
       {"1082", 
        StyleBox["\<\"Big Red Tool and Die\"\>",
         FontColor->GrayLevel[0.4]], 
        StyleBox["\<\"4 My Way, Bermuda Shorts, OR 90305\"\>",
         FontColor->GrayLevel[0.4]]},
       {"1083", 
        StyleBox["\<\"Perfunctory Parts\"\>",
         FontColor->GrayLevel[0.4]], 
        StyleBox["\<\"99999 Short Pier, Terra Del Fuego, TX 41299\"\>",
         FontColor->GrayLevel[0.4]]},
       {"1084", 
        StyleBox["\<\"Alien Aircaft Inc.\"\>",
         FontColor->GrayLevel[0.4]], 
        StyleBox["\<\"2 Groom Lake, Rachel, NV 51902\"\>",
         FontColor->GrayLevel[0.4]]},
       {
        ItemBox[
         RowBox[{"2", "  ", "levels", 
          AdjustmentBox[
           RowBox[{" ", 
            RowBox[{"|", " "}]}],
           BoxBaselineShift->-0.3], "12", "  ", "elements"}],
         Alignment->{Left, Center},
         Background->RGBColor[0.92, 0.92, 0.9],
         BaseStyle->{
          FontFamily -> "Helvetica", FontSize -> 10, FontColor -> 
           GrayLevel[0.4], Editable -> False, Selectable -> False},
         ItemSize->{Automatic, Automatic}], "\[SpanFromLeft]", 
        "\[SpanFromLeft]"}
      },
      FrameStyle->RGBColor[0, 0, 0, 0.4],
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {}, "Rows" -> {
          RGBColor[0.92, 0.92, 0.9]}},
      GridBoxDividers->{"Columns" -> {
          RGBColor[0, 0, 0, 0.4], {
           RGBColor[0, 0, 0, 0.09]}, 
          RGBColor[0, 0, 0, 0.4]}, "Rows" -> {
          RGBColor[0, 0, 0, 0.4], 
          RGBColor[0, 0, 0, 0.3], {
           RGBColor[0, 0, 0, 0.08]}, 
          RGBColor[0, 0, 0, 0.4]}},
      GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
      GridBoxItemSize->{
       "Columns" -> {{All}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.3}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[1.4], {
           Offset[1.75]}, 
          Offset[4.199999999999999]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[1.2], 
          Offset[0.6], {
           Offset[0.48]}, 
          Offset[0.4]}, "RowsIndexed" -> {}}], True->GridBox[{
       {
        RowBox[{"{", 
         StyleBox[
          SubscriptBox["\[CenterEllipsis]", "4"],
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "}"}]},
       {
        ItemBox[
         RowBox[{"2", "  ", "levels", 
          AdjustmentBox[
           RowBox[{" ", 
            RowBox[{"|", " "}]}],
           BoxBaselineShift->-0.3], "12", "  ", "elements"}],
         Alignment->{Left, Center},
         Background->RGBColor[0.92, 0.92, 0.9],
         BaseStyle->{
          FontFamily -> "Helvetica", FontSize -> 10, FontColor -> 
           GrayLevel[0.4], Editable -> False, Selectable -> False},
         ItemSize->{Automatic, Automatic}]}
      },
      FrameStyle->RGBColor[0, 0, 0, 0.4],
      GridBoxAlignment->{"Columns" -> {Left}},
      GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[1.4], {
           Offset[0.5599999999999999]}, 
          Offset[0.7]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.]}, "RowsIndexed" -> {}}]}, Dynamic[
      CurrentValue[Evaluatable]],
     BaselinePosition->Baseline,
     ImageSize->Automatic],
    Editable->False,
    Selectable->True,
    ShowAutoStyles->False,
    LineSpacing->{1.1, 5},
    NumberMarks->False,
    SpanMinSize->1.,
    SpanMaxSize->3,
    LineBreakWithin->False,
    LineIndent->0,
    LinebreakAdjustments->{0.4, 5, 100, 0, 0.5},
    FontFamily->"Helvetica Neue",
    FontWeight->"Light",
    Background->RGBColor[0.985, 0.98, 0.973]],
   Deploy],
  Dataset[{
    Association[
    "sid" -> 1081, "sname" -> "Acme Widget Suppliers", "saddress" -> 
     "1 Grub St., Potemkin Village, IL 61801"], 
    Association[
    "sid" -> 1082, "sname" -> "Big Red Tool and Die", "saddress" -> 
     "4 My Way, Bermuda Shorts, OR 90305"], 
    Association[
    "sid" -> 1083, "sname" -> "Perfunctory Parts", "saddress" -> 
     "99999 Short Pier, Terra Del Fuego, TX 41299"], 
    Association[
    "sid" -> 1084, "sname" -> "Alien Aircaft Inc.", "saddress" -> 
     "2 Groom Lake, Rachel, NV 51902"]}, 
   TypeSystem`Vector[
    TypeSystem`Struct[{"sid", "sname", "saddress"}, {
      TypeSystem`Atom[Integer], 
      TypeSystem`Atom[String], 
      TypeSystem`Atom[String]}], 4], 
   Association["ID" -> 40286831288511]]]], "Output",
 CellChangeTimes->{3.630844535477284*^9, 3.63084458084103*^9, 
  3.6354804842599525`*^9, 3.6355004285100217`*^9, 3.635500841053967*^9, 
  3.635568031290969*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"catalogDataset", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"AssociationThread", "[", 
      RowBox[{
       RowBox[{"catalogList", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"catalogList", "[", 
     RowBox[{"[", 
      RowBox[{"2", ";;"}], "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.630844589804005*^9, 3.6308446052097096`*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        StyleBox["\<\"catsid\"\>",
         LineColor->GrayLevel[0.3],
         FrontFaceColor->GrayLevel[0.3],
         BackFaceColor->GrayLevel[0.3],
         GraphicsColor->GrayLevel[0.3],
         FontColor->GrayLevel[0.3]], 
        StyleBox["\<\"catpid\"\>",
         LineColor->GrayLevel[0.3],
         FrontFaceColor->GrayLevel[0.3],
         BackFaceColor->GrayLevel[0.3],
         GraphicsColor->GrayLevel[0.3],
         FontColor->GrayLevel[0.3]], 
        StyleBox["\<\"catcost\"\>",
         LineColor->GrayLevel[0.3],
         FrontFaceColor->GrayLevel[0.3],
         BackFaceColor->GrayLevel[0.3],
         GraphicsColor->GrayLevel[0.3],
         FontColor->GrayLevel[0.3]]},
       {"1081", "991", 
        TagBox[
         InterpretationBox["\<\"36.1\"\>",
          36.1,
          AutoDelete->True],
         NumberForm[#, 4]& ]},
       {"1081", "992", 
        TagBox[
         InterpretationBox["\<\"42.3\"\>",
          42.3,
          AutoDelete->True],
         NumberForm[#, 4]& ]},
       {"1081", "993", 
        TagBox[
         InterpretationBox["\<\"15.3\"\>",
          15.3,
          AutoDelete->True],
         NumberForm[#, 4]& ]},
       {"1081", "994", 
        TagBox[
         InterpretationBox["\<\"20.5\"\>",
          20.5,
          AutoDelete->True],
         NumberForm[#, 4]& ]},
       {"1081", "995", 
        TagBox[
         InterpretationBox["\<\"20.5\"\>",
          20.5,
          AutoDelete->True],
         NumberForm[#, 4]& ]},
       {"1081", "996", 
        TagBox[
         InterpretationBox["\<\"124.2\"\>",
          124.23,
          AutoDelete->True],
         NumberForm[#, 4]& ]},
       {"1081", "997", 
        TagBox[
         InterpretationBox["\<\"124.2\"\>",
          124.23,
          AutoDelete->True],
         NumberForm[#, 4]& ]},
       {"1081", "998", 
        TagBox[
         InterpretationBox["\<\"11.7\"\>",
          11.7,
          AutoDelete->True],
         NumberForm[#, 4]& ]},
       {"1081", "999", 
        TagBox[
         InterpretationBox["\<\"75.2\"\>",
          75.2,
          AutoDelete->True],
         NumberForm[#, 4]& ]},
       {"1082", "991", 
        TagBox[
         InterpretationBox["\<\"16.5\"\>",
          16.5,
          AutoDelete->True],
         NumberForm[#, 4]& ]},
       {"1082", "997", 
        TagBox[
         InterpretationBox["\<\"0.55\"\>",
          0.55,
          AutoDelete->True],
         NumberForm[#, 4]& ]},
       {"1082", "998", 
        TagBox[
         InterpretationBox["\<\"7.95\"\>",
          7.95,
          AutoDelete->True],
         NumberForm[#, 4]& ]},
       {"1083", "998", 
        TagBox[
         InterpretationBox["\<\"12.5\"\>",
          12.5,
          AutoDelete->True],
         NumberForm[#, 4]& ]},
       {"1083", "999", 
        TagBox[
         InterpretationBox["\<\"1.\"\>",
          1.,
          AutoDelete->True],
         NumberForm[#, 4]& ]},
       {"1084", "994", 
        TagBox[
         InterpretationBox["\<\"57.3\"\>",
          57.3,
          AutoDelete->True],
         NumberForm[#, 4]& ]},
       {"1084", "995", 
        TagBox[
         InterpretationBox["\<\"22.2\"\>",
          22.2,
          AutoDelete->True],
         NumberForm[#, 4]& ]},
       {
        ItemBox[
         UnderscriptBox["\[VerticalEllipsis]", 
          StyleBox["1",
           LineColor->GrayLevel[0.5],
           FrontFaceColor->GrayLevel[0.5],
           BackFaceColor->GrayLevel[0.5],
           GraphicsColor->GrayLevel[0.5],
           FontColor->GrayLevel[0.5]]],
         Alignment->{Center, Bottom},
         Background->RGBColor[0.985, 0.98, 0.973]], "\[SpanFromLeft]", 
        "\[SpanFromLeft]"},
       {
        ItemBox[
         RowBox[{"2", "  ", "levels", 
          AdjustmentBox[
           RowBox[{" ", 
            RowBox[{"|", " "}]}],
           BoxBaselineShift->-0.3], "51", "  ", "elements"}],
         Alignment->{Left, Center},
         Background->RGBColor[0.92, 0.92, 0.9],
         BaseStyle->{
          FontFamily -> "Helvetica", FontSize -> 10, FontColor -> 
           GrayLevel[0.4], Editable -> False, Selectable -> False},
         ItemSize->{Automatic, Automatic}], "\[SpanFromLeft]", 
        "\[SpanFromLeft]"}
      },
      FrameStyle->RGBColor[0, 0, 0, 0.4],
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {}, "Rows" -> {
          RGBColor[0.92, 0.92, 0.9]}},
      GridBoxDividers->{"Columns" -> {
          RGBColor[0, 0, 0, 0.4], {
           RGBColor[0, 0, 0, 0.09]}, 
          RGBColor[0, 0, 0, 0.4]}, "Rows" -> {
          RGBColor[0, 0, 0, 0.4], 
          RGBColor[0, 0, 0, 0.3], {
           RGBColor[0, 0, 0, 0.08]}, 
          RGBColor[0, 0, 0, 0.4]}},
      GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
      GridBoxItemSize->{
       "Columns" -> {{All}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.3}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[1.4], {
           Offset[1.75]}, 
          Offset[4.199999999999999]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[1.2], 
          Offset[0.6], {
           Offset[0.48]}, 
          Offset[0.4]}, "RowsIndexed" -> {}}], True->GridBox[{
       {
        RowBox[{"{", 
         StyleBox[
          SubscriptBox["\[CenterEllipsis]", "17"],
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "}"}]},
       {
        ItemBox[
         RowBox[{"2", "  ", "levels", 
          AdjustmentBox[
           RowBox[{" ", 
            RowBox[{"|", " "}]}],
           BoxBaselineShift->-0.3], "51", "  ", "elements"}],
         Alignment->{Left, Center},
         Background->RGBColor[0.92, 0.92, 0.9],
         BaseStyle->{
          FontFamily -> "Helvetica", FontSize -> 10, FontColor -> 
           GrayLevel[0.4], Editable -> False, Selectable -> False},
         ItemSize->{Automatic, Automatic}]}
      },
      FrameStyle->RGBColor[0, 0, 0, 0.4],
      GridBoxAlignment->{"Columns" -> {Left}},
      GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[1.4], {
           Offset[0.5599999999999999]}, 
          Offset[0.7]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.]}, "RowsIndexed" -> {}}]}, Dynamic[
      CurrentValue[Evaluatable]],
     BaselinePosition->Baseline,
     ImageSize->Automatic],
    Editable->False,
    Selectable->True,
    ShowAutoStyles->False,
    LineSpacing->{1.1, 5},
    NumberMarks->False,
    SpanMinSize->1.,
    SpanMaxSize->3,
    LineBreakWithin->False,
    LineIndent->0,
    LinebreakAdjustments->{0.4, 5, 100, 0, 0.5},
    FontFamily->"Helvetica Neue",
    FontWeight->"Light",
    Background->RGBColor[0.985, 0.98, 0.973]],
   Deploy],
  Dataset[{
    Association["catsid" -> 1081, "catpid" -> 991, "catcost" -> 36.1], 
    Association["catsid" -> 1081, "catpid" -> 992, "catcost" -> 42.3], 
    Association["catsid" -> 1081, "catpid" -> 993, "catcost" -> 15.3], 
    Association["catsid" -> 1081, "catpid" -> 994, "catcost" -> 20.5], 
    Association["catsid" -> 1081, "catpid" -> 995, "catcost" -> 20.5], 
    Association["catsid" -> 1081, "catpid" -> 996, "catcost" -> 124.23], 
    Association["catsid" -> 1081, "catpid" -> 997, "catcost" -> 124.23], 
    Association["catsid" -> 1081, "catpid" -> 998, "catcost" -> 11.7], 
    Association["catsid" -> 1081, "catpid" -> 999, "catcost" -> 75.2], 
    Association["catsid" -> 1082, "catpid" -> 991, "catcost" -> 16.5], 
    Association["catsid" -> 1082, "catpid" -> 997, "catcost" -> 0.55], 
    Association["catsid" -> 1082, "catpid" -> 998, "catcost" -> 7.95], 
    Association["catsid" -> 1083, "catpid" -> 998, "catcost" -> 12.5], 
    Association["catsid" -> 1083, "catpid" -> 999, "catcost" -> 1.], 
    Association["catsid" -> 1084, "catpid" -> 994, "catcost" -> 57.3], 
    Association["catsid" -> 1084, "catpid" -> 995, "catcost" -> 22.2], 
    Association["catsid" -> 1084, "catpid" -> 998, "catcost" -> 48.6]}, 
   TypeSystem`Vector[
    TypeSystem`Struct[{"catsid", "catpid", "catcost"}, {
      TypeSystem`Atom[Integer], 
      TypeSystem`Atom[Integer], 
      TypeSystem`Atom[Real]}], 17], 
   Association["ID" -> 116891867979967]]]], "Output",
 CellChangeTimes->{3.630844606600458*^9, 3.6354804842912025`*^9, 
  3.6355004285568967`*^9, 3.635500841100842*^9, 3.635568031337844*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{"catalogDataset", ",", 
    RowBox[{
     RowBox[{"#catpid", "\[Equal]", "998"}], "&"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.630845955407338*^9, 3.6308459760073338`*^9}, 
   3.6309174610741014`*^9}],

Cell["Or equally", "Text",
 CellChangeTimes->{{3.635504932628924*^9, 3.635504962617205*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"catalogDataset", "[", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"#catpid", "\[Equal]", "998"}], "&"}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        StyleBox["\<\"catsid\"\>",
         LineColor->GrayLevel[0.3],
         FrontFaceColor->GrayLevel[0.3],
         BackFaceColor->GrayLevel[0.3],
         GraphicsColor->GrayLevel[0.3],
         FontColor->GrayLevel[0.3]], 
        StyleBox["\<\"catpid\"\>",
         LineColor->GrayLevel[0.3],
         FrontFaceColor->GrayLevel[0.3],
         BackFaceColor->GrayLevel[0.3],
         GraphicsColor->GrayLevel[0.3],
         FontColor->GrayLevel[0.3]], 
        StyleBox["\<\"catcost\"\>",
         LineColor->GrayLevel[0.3],
         FrontFaceColor->GrayLevel[0.3],
         BackFaceColor->GrayLevel[0.3],
         GraphicsColor->GrayLevel[0.3],
         FontColor->GrayLevel[0.3]]},
       {"1081", "998", 
        TagBox[
         InterpretationBox["\<\"11.7\"\>",
          11.7,
          AutoDelete->True],
         NumberForm[#, 4]& ]},
       {"1082", "998", 
        TagBox[
         InterpretationBox["\<\"7.95\"\>",
          7.95,
          AutoDelete->True],
         NumberForm[#, 4]& ]},
       {"1083", "998", 
        TagBox[
         InterpretationBox["\<\"12.5\"\>",
          12.5,
          AutoDelete->True],
         NumberForm[#, 4]& ]},
       {"1084", "998", 
        TagBox[
         InterpretationBox["\<\"48.6\"\>",
          48.6,
          AutoDelete->True],
         NumberForm[#, 4]& ]},
       {
        ItemBox[
         RowBox[{"2", "  ", "levels", 
          AdjustmentBox[
           RowBox[{" ", 
            RowBox[{"|", " "}]}],
           BoxBaselineShift->-0.3], "12", "  ", "elements"}],
         Alignment->{Left, Center},
         Background->RGBColor[0.92, 0.92, 0.9],
         BaseStyle->{
          FontFamily -> "Helvetica", FontSize -> 10, FontColor -> 
           GrayLevel[0.4], Editable -> False, Selectable -> False},
         ItemSize->{Automatic, Automatic}], "\[SpanFromLeft]", 
        "\[SpanFromLeft]"}
      },
      FrameStyle->RGBColor[0, 0, 0, 0.4],
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {}, "Rows" -> {
          RGBColor[0.92, 0.92, 0.9]}},
      GridBoxDividers->{"Columns" -> {
          RGBColor[0, 0, 0, 0.4], {
           RGBColor[0, 0, 0, 0.09]}, 
          RGBColor[0, 0, 0, 0.4]}, "Rows" -> {
          RGBColor[0, 0, 0, 0.4], 
          RGBColor[0, 0, 0, 0.3], {
           RGBColor[0, 0, 0, 0.08]}, 
          RGBColor[0, 0, 0, 0.4]}},
      GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
      GridBoxItemSize->{
       "Columns" -> {{All}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.3}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[1.4], {
           Offset[1.75]}, 
          Offset[4.199999999999999]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[1.2], 
          Offset[0.6], {
           Offset[0.48]}, 
          Offset[0.4]}, "RowsIndexed" -> {}}], True->GridBox[{
       {
        RowBox[{"{", 
         StyleBox[
          SubscriptBox["\[CenterEllipsis]", "4"],
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "}"}]},
       {
        ItemBox[
         RowBox[{"2", "  ", "levels", 
          AdjustmentBox[
           RowBox[{" ", 
            RowBox[{"|", " "}]}],
           BoxBaselineShift->-0.3], "12", "  ", "elements"}],
         Alignment->{Left, Center},
         Background->RGBColor[0.92, 0.92, 0.9],
         BaseStyle->{
          FontFamily -> "Helvetica", FontSize -> 10, FontColor -> 
           GrayLevel[0.4], Editable -> False, Selectable -> False},
         ItemSize->{Automatic, Automatic}]}
      },
      FrameStyle->RGBColor[0, 0, 0, 0.4],
      GridBoxAlignment->{"Columns" -> {Left}},
      GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[1.4], {
           Offset[0.5599999999999999]}, 
          Offset[0.7]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.]}, "RowsIndexed" -> {}}]}, Dynamic[
      CurrentValue[Evaluatable]],
     BaselinePosition->Baseline,
     ImageSize->Automatic],
    Editable->False,
    Selectable->True,
    ShowAutoStyles->False,
    LineSpacing->{1.1, 5},
    NumberMarks->False,
    SpanMinSize->1.,
    SpanMaxSize->3,
    LineBreakWithin->False,
    LineIndent->0,
    LinebreakAdjustments->{0.4, 5, 100, 0, 0.5},
    FontFamily->"Helvetica Neue",
    FontWeight->"Light",
    Background->RGBColor[0.985, 0.98, 0.973]],
   Deploy],
  Dataset[{
    Association["catsid" -> 1081, "catpid" -> 998, "catcost" -> 11.7], 
    Association["catsid" -> 1082, "catpid" -> 998, "catcost" -> 7.95], 
    Association["catsid" -> 1083, "catpid" -> 998, "catcost" -> 12.5], 
    Association["catsid" -> 1084, "catpid" -> 998, "catcost" -> 48.6]}, 
   TypeSystem`Vector[
    TypeSystem`Struct[{"catsid", "catpid", "catcost"}, {
      TypeSystem`Atom[Integer], 
      TypeSystem`Atom[Integer], 
      TypeSystem`Atom[Real]}], TypeSystem`AnyLength], 
   Association["Origin" -> HoldComplete[
      Query[
       Select[Slot["catpid"] == 998& ]][
       Dataset`DatasetHandle[116891867979967]]], "ID" -> 
    46265425764543]]]], "Output",
 CellChangeTimes->{
  3.6308447401779723`*^9, 3.630844998450848*^9, {3.630845744106536*^9, 
   3.6308457901703033`*^9}, 3.6308458298937054`*^9, 3.6354804843224525`*^9, 
   3.6355004285881467`*^9, 3.635500841147717*^9, 3.635568031400344*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"catalogDataset", "[", 
   RowBox[{"GroupBy", "[", 
    RowBox[{"Key", "[", "\"\<catpid\>\"", "]"}], "]"}], "]"}], ";"}]], "Input"],

Cell["Or equally", "Text",
 CellChangeTimes->{{3.635504950925799*^9, 3.635504952847674*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"catalogDataset", "[", 
  RowBox[{"GroupBy", "[", 
   RowBox[{
    RowBox[{"{", "#catpid", "}"}], "&"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.63084634854827*^9, 3.630846355049445*^9}, {
  3.6308464862755876`*^9, 3.6308465036949477`*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        StyleBox[
         InterpretationBox[
          TagBox[
           RowBox[{"{", "991", "}"}],
           Short[#, 0.5]& ],
          {991}],
         LineColor->GrayLevel[0.3],
         FrontFaceColor->GrayLevel[0.3],
         BackFaceColor->GrayLevel[0.3],
         GraphicsColor->GrayLevel[0.3],
         FontColor->GrayLevel[0.3]], 
        StyleBox[
         RowBox[{"{", "\[ThinSpace]", 
          StyleBox[
           RowBox[{
            StyleBox["\[LeftAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]], "\[ThinSpace]", 
            RowBox[{
             StyleBox["\<\"catsid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "1081"}], ",", 
            RowBox[{
             StyleBox["\<\"catpid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "991"}], ",", 
            RowBox[{
             StyleBox["\<\"catcost\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], 
             TagBox[
              InterpretationBox["\<\"36.1\"\>",
               36.1,
               AutoDelete->True],
              NumberForm[#, 4]& ]}], "\[ThinSpace]", 
            StyleBox["\[RightAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]]}],
           LineBreakWithin->Automatic], ",", 
          StyleBox[
           RowBox[{
            StyleBox["\[LeftAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]], "\[ThinSpace]", 
            RowBox[{
             StyleBox["\<\"catsid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "1082"}], ",", 
            RowBox[{
             StyleBox["\<\"catpid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "991"}], ",", 
            RowBox[{
             StyleBox["\<\"catcost\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], 
             TagBox[
              InterpretationBox["\<\"16.5\"\>",
               16.5,
               AutoDelete->True],
              NumberForm[#, 4]& ]}], "\[ThinSpace]", 
            StyleBox["\[RightAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]]}],
           LineBreakWithin->Automatic], "\[ThinSpace]", "}"}],
         LineBreakWithin->Automatic]},
       {
        StyleBox[
         InterpretationBox[
          TagBox[
           RowBox[{"{", "992", "}"}],
           Short[#, 0.5]& ],
          {992}],
         LineColor->GrayLevel[0.3],
         FrontFaceColor->GrayLevel[0.3],
         BackFaceColor->GrayLevel[0.3],
         GraphicsColor->GrayLevel[0.3],
         FontColor->GrayLevel[0.3]], 
        StyleBox[
         RowBox[{"{", "\[ThinSpace]", 
          StyleBox[
           RowBox[{
            StyleBox["\[LeftAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]], "\[ThinSpace]", 
            RowBox[{
             StyleBox["\<\"catsid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "1081"}], ",", 
            RowBox[{
             StyleBox["\<\"catpid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "992"}], ",", 
            RowBox[{
             StyleBox["\<\"catcost\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], 
             TagBox[
              InterpretationBox["\<\"42.3\"\>",
               42.3,
               AutoDelete->True],
              NumberForm[#, 4]& ]}], "\[ThinSpace]", 
            StyleBox["\[RightAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]]}],
           LineBreakWithin->Automatic], "\[ThinSpace]", "}"}],
         LineBreakWithin->Automatic]},
       {
        StyleBox[
         InterpretationBox[
          TagBox[
           RowBox[{"{", "993", "}"}],
           Short[#, 0.5]& ],
          {993}],
         LineColor->GrayLevel[0.3],
         FrontFaceColor->GrayLevel[0.3],
         BackFaceColor->GrayLevel[0.3],
         GraphicsColor->GrayLevel[0.3],
         FontColor->GrayLevel[0.3]], 
        StyleBox[
         RowBox[{"{", "\[ThinSpace]", 
          StyleBox[
           RowBox[{
            StyleBox["\[LeftAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]], "\[ThinSpace]", 
            RowBox[{
             StyleBox["\<\"catsid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "1081"}], ",", 
            RowBox[{
             StyleBox["\<\"catpid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "993"}], ",", 
            RowBox[{
             StyleBox["\<\"catcost\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], 
             TagBox[
              InterpretationBox["\<\"15.3\"\>",
               15.3,
               AutoDelete->True],
              NumberForm[#, 4]& ]}], "\[ThinSpace]", 
            StyleBox["\[RightAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]]}],
           LineBreakWithin->Automatic], "\[ThinSpace]", "}"}],
         LineBreakWithin->Automatic]},
       {
        StyleBox[
         InterpretationBox[
          TagBox[
           RowBox[{"{", "994", "}"}],
           Short[#, 0.5]& ],
          {994}],
         LineColor->GrayLevel[0.3],
         FrontFaceColor->GrayLevel[0.3],
         BackFaceColor->GrayLevel[0.3],
         GraphicsColor->GrayLevel[0.3],
         FontColor->GrayLevel[0.3]], 
        StyleBox[
         RowBox[{"{", "\[ThinSpace]", 
          StyleBox[
           RowBox[{
            StyleBox["\[LeftAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]], "\[ThinSpace]", 
            RowBox[{
             StyleBox["\<\"catsid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "1081"}], ",", 
            RowBox[{
             StyleBox["\<\"catpid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "994"}], ",", 
            RowBox[{
             StyleBox["\<\"catcost\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], 
             TagBox[
              InterpretationBox["\<\"20.5\"\>",
               20.5,
               AutoDelete->True],
              NumberForm[#, 4]& ]}], "\[ThinSpace]", 
            StyleBox["\[RightAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]]}],
           LineBreakWithin->Automatic], ",", 
          StyleBox[
           RowBox[{
            StyleBox["\[LeftAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]], "\[ThinSpace]", 
            RowBox[{
             StyleBox["\<\"catsid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "1084"}], ",", 
            RowBox[{
             StyleBox["\<\"catpid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "994"}], ",", 
            RowBox[{
             StyleBox["\<\"catcost\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], 
             TagBox[
              InterpretationBox["\<\"57.3\"\>",
               57.3,
               AutoDelete->True],
              NumberForm[#, 4]& ]}], "\[ThinSpace]", 
            StyleBox["\[RightAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]]}],
           LineBreakWithin->Automatic], "\[ThinSpace]", "}"}],
         LineBreakWithin->Automatic]},
       {
        StyleBox[
         InterpretationBox[
          TagBox[
           RowBox[{"{", "995", "}"}],
           Short[#, 0.5]& ],
          {995}],
         LineColor->GrayLevel[0.3],
         FrontFaceColor->GrayLevel[0.3],
         BackFaceColor->GrayLevel[0.3],
         GraphicsColor->GrayLevel[0.3],
         FontColor->GrayLevel[0.3]], 
        StyleBox[
         RowBox[{"{", "\[ThinSpace]", 
          StyleBox[
           RowBox[{
            StyleBox["\[LeftAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]], "\[ThinSpace]", 
            RowBox[{
             StyleBox["\<\"catsid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "1081"}], ",", 
            RowBox[{
             StyleBox["\<\"catpid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "995"}], ",", 
            RowBox[{
             StyleBox["\<\"catcost\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], 
             TagBox[
              InterpretationBox["\<\"20.5\"\>",
               20.5,
               AutoDelete->True],
              NumberForm[#, 4]& ]}], "\[ThinSpace]", 
            StyleBox["\[RightAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]]}],
           LineBreakWithin->Automatic], ",", 
          StyleBox[
           RowBox[{
            StyleBox["\[LeftAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]], "\[ThinSpace]", 
            RowBox[{
             StyleBox["\<\"catsid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "1084"}], ",", 
            RowBox[{
             StyleBox["\<\"catpid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "995"}], ",", 
            RowBox[{
             StyleBox["\<\"catcost\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], 
             TagBox[
              InterpretationBox["\<\"22.2\"\>",
               22.2,
               AutoDelete->True],
              NumberForm[#, 4]& ]}], "\[ThinSpace]", 
            StyleBox["\[RightAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]]}],
           LineBreakWithin->Automatic], "\[ThinSpace]", "}"}],
         LineBreakWithin->Automatic]},
       {
        StyleBox[
         InterpretationBox[
          TagBox[
           RowBox[{"{", "996", "}"}],
           Short[#, 0.5]& ],
          {996}],
         LineColor->GrayLevel[0.3],
         FrontFaceColor->GrayLevel[0.3],
         BackFaceColor->GrayLevel[0.3],
         GraphicsColor->GrayLevel[0.3],
         FontColor->GrayLevel[0.3]], 
        StyleBox[
         RowBox[{"{", "\[ThinSpace]", 
          StyleBox[
           RowBox[{
            StyleBox["\[LeftAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]], "\[ThinSpace]", 
            RowBox[{
             StyleBox["\<\"catsid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "1081"}], ",", 
            RowBox[{
             StyleBox["\<\"catpid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "996"}], ",", 
            RowBox[{
             StyleBox["\<\"catcost\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], 
             TagBox[
              InterpretationBox["\<\"124.2\"\>",
               124.23,
               AutoDelete->True],
              NumberForm[#, 4]& ]}], "\[ThinSpace]", 
            StyleBox["\[RightAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]]}],
           LineBreakWithin->Automatic], "\[ThinSpace]", "}"}],
         LineBreakWithin->Automatic]},
       {
        StyleBox[
         InterpretationBox[
          TagBox[
           RowBox[{"{", "997", "}"}],
           Short[#, 0.5]& ],
          {997}],
         LineColor->GrayLevel[0.3],
         FrontFaceColor->GrayLevel[0.3],
         BackFaceColor->GrayLevel[0.3],
         GraphicsColor->GrayLevel[0.3],
         FontColor->GrayLevel[0.3]], 
        StyleBox[
         RowBox[{"{", "\[ThinSpace]", 
          StyleBox[
           RowBox[{
            StyleBox["\[LeftAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]], "\[ThinSpace]", 
            RowBox[{
             StyleBox["\<\"catsid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "1081"}], ",", 
            RowBox[{
             StyleBox["\<\"catpid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "997"}], ",", 
            RowBox[{
             StyleBox["\<\"catcost\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], 
             TagBox[
              InterpretationBox["\<\"124.2\"\>",
               124.23,
               AutoDelete->True],
              NumberForm[#, 4]& ]}], "\[ThinSpace]", 
            StyleBox["\[RightAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]]}],
           LineBreakWithin->Automatic], ",", 
          StyleBox[
           RowBox[{
            StyleBox["\[LeftAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]], "\[ThinSpace]", 
            RowBox[{
             StyleBox["\<\"catsid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "1082"}], ",", 
            RowBox[{
             StyleBox["\<\"catpid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "997"}], ",", 
            RowBox[{
             StyleBox["\<\"catcost\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], 
             TagBox[
              InterpretationBox["\<\"0.55\"\>",
               0.55,
               AutoDelete->True],
              NumberForm[#, 4]& ]}], "\[ThinSpace]", 
            StyleBox["\[RightAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]]}],
           LineBreakWithin->Automatic], "\[ThinSpace]", "}"}],
         LineBreakWithin->Automatic]},
       {
        StyleBox[
         InterpretationBox[
          TagBox[
           RowBox[{"{", "998", "}"}],
           Short[#, 0.5]& ],
          {998}],
         LineColor->GrayLevel[0.3],
         FrontFaceColor->GrayLevel[0.3],
         BackFaceColor->GrayLevel[0.3],
         GraphicsColor->GrayLevel[0.3],
         FontColor->GrayLevel[0.3]], 
        StyleBox[
         RowBox[{"{", "\[ThinSpace]", 
          StyleBox[
           RowBox[{
            StyleBox["\[LeftAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]], "\[ThinSpace]", 
            RowBox[{
             StyleBox["\<\"catsid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "1081"}], ",", 
            RowBox[{
             StyleBox["\<\"catpid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "998"}], ",", 
            RowBox[{
             StyleBox["\<\"catcost\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], 
             TagBox[
              InterpretationBox["\<\"11.7\"\>",
               11.7,
               AutoDelete->True],
              NumberForm[#, 4]& ]}], "\[ThinSpace]", 
            StyleBox["\[RightAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]]}],
           LineBreakWithin->Automatic], ",", 
          StyleBox[
           RowBox[{
            StyleBox["\[LeftAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]], "\[ThinSpace]", 
            RowBox[{
             StyleBox["\<\"catsid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "1082"}], ",", 
            RowBox[{
             StyleBox["\<\"catpid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "998"}], ",", 
            RowBox[{
             StyleBox["\<\"catcost\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], 
             TagBox[
              InterpretationBox["\<\"7.95\"\>",
               7.95,
               AutoDelete->True],
              NumberForm[#, 4]& ]}], "\[ThinSpace]", 
            StyleBox["\[RightAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]]}],
           LineBreakWithin->Automatic], ",", 
          StyleBox[
           SubscriptBox["\[CenterEllipsis]", "2"],
           LineColor->GrayLevel[0.5],
           FrontFaceColor->GrayLevel[0.5],
           BackFaceColor->GrayLevel[0.5],
           GraphicsColor->GrayLevel[0.5],
           FontColor->GrayLevel[0.5]], "\[ThinSpace]", "}"}],
         LineBreakWithin->Automatic]},
       {
        StyleBox[
         InterpretationBox[
          TagBox[
           RowBox[{"{", "999", "}"}],
           Short[#, 0.5]& ],
          {999}],
         LineColor->GrayLevel[0.3],
         FrontFaceColor->GrayLevel[0.3],
         BackFaceColor->GrayLevel[0.3],
         GraphicsColor->GrayLevel[0.3],
         FontColor->GrayLevel[0.3]], 
        StyleBox[
         RowBox[{"{", "\[ThinSpace]", 
          StyleBox[
           RowBox[{
            StyleBox["\[LeftAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]], "\[ThinSpace]", 
            RowBox[{
             StyleBox["\<\"catsid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "1081"}], ",", 
            RowBox[{
             StyleBox["\<\"catpid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "999"}], ",", 
            RowBox[{
             StyleBox["\<\"catcost\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], 
             TagBox[
              InterpretationBox["\<\"75.2\"\>",
               75.2,
               AutoDelete->True],
              NumberForm[#, 4]& ]}], "\[ThinSpace]", 
            StyleBox["\[RightAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]]}],
           LineBreakWithin->Automatic], ",", 
          StyleBox[
           RowBox[{
            StyleBox["\[LeftAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]], "\[ThinSpace]", 
            RowBox[{
             StyleBox["\<\"catsid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "1083"}], ",", 
            RowBox[{
             StyleBox["\<\"catpid\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], "999"}], ",", 
            RowBox[{
             StyleBox["\<\"catcost\"\>",
              LineColor->GrayLevel[0.3],
              FrontFaceColor->GrayLevel[0.3],
              BackFaceColor->GrayLevel[0.3],
              GraphicsColor->GrayLevel[0.3],
              FontColor->GrayLevel[0.3]], 
             StyleBox["\[Rule]",
              LineColor->GrayLevel[0.5],
              FrontFaceColor->GrayLevel[0.5],
              BackFaceColor->GrayLevel[0.5],
              GraphicsColor->GrayLevel[0.5],
              FontColor->GrayLevel[0.5]], 
             TagBox[
              InterpretationBox["\<\"1.\"\>",
               1.,
               AutoDelete->True],
              NumberForm[#, 4]& ]}], "\[ThinSpace]", 
            StyleBox["\[RightAssociation]",
             LineColor->GrayLevel[0.45],
             FrontFaceColor->GrayLevel[0.45],
             BackFaceColor->GrayLevel[0.45],
             GraphicsColor->GrayLevel[0.45],
             FontColor->GrayLevel[0.45]]}],
           LineBreakWithin->Automatic], "\[ThinSpace]", "}"}],
         LineBreakWithin->Automatic]},
       {
        ItemBox[
         RowBox[{"3", "  ", "levels", 
          AdjustmentBox[
           RowBox[{" ", 
            RowBox[{"|", " "}]}],
           BoxBaselineShift->-0.3], "51", "  ", "elements"}],
         Alignment->{Left, Center},
         Background->RGBColor[0.92, 0.92, 0.9],
         BaseStyle->{
          FontFamily -> "Helvetica", FontSize -> 10, FontColor -> 
           GrayLevel[0.4], Editable -> False, Selectable -> False},
         ItemSize->{Automatic, Automatic}], "\[SpanFromLeft]"}
      },
      FrameStyle->RGBColor[0, 0, 0, 0.4],
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {
          RGBColor[0.92, 0.92, 0.9]}},
      GridBoxDividers->{"Columns" -> {
          RGBColor[0, 0, 0, 0.4], 
          RGBColor[0, 0, 0, 0.3], {
           RGBColor[0, 0, 0, 0.09]}, 
          RGBColor[0, 0, 0, 0.4]}, "Rows" -> {
          RGBColor[0, 0, 0, 0.4], {
           RGBColor[0, 0, 0, 0.08]}, 
          RGBColor[0, 0, 0, 0.4]}},
      GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
      GridBoxItemSize->{
       "Columns" -> {{All}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.3}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[1.4], {
           Offset[1.75]}, 
          Offset[4.199999999999999]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[1.2], {
           Offset[0.48]}, 
          Offset[0.4]}, "RowsIndexed" -> {}}], True->GridBox[{
       {
        RowBox[{
         StyleBox["\[LeftAssociation]",
          LineColor->GrayLevel[0.45],
          FrontFaceColor->GrayLevel[0.45],
          BackFaceColor->GrayLevel[0.45],
          GraphicsColor->GrayLevel[0.45],
          FontColor->GrayLevel[0.45]], 
         StyleBox[
          SubscriptBox["\[CenterEllipsis]", "9"],
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         StyleBox["\[RightAssociation]",
          LineColor->GrayLevel[0.45],
          FrontFaceColor->GrayLevel[0.45],
          BackFaceColor->GrayLevel[0.45],
          GraphicsColor->GrayLevel[0.45],
          FontColor->GrayLevel[0.45]]}]},
       {
        ItemBox[
         RowBox[{"3", "  ", "levels", 
          AdjustmentBox[
           RowBox[{" ", 
            RowBox[{"|", " "}]}],
           BoxBaselineShift->-0.3], "51", "  ", "elements"}],
         Alignment->{Left, Center},
         Background->RGBColor[0.92, 0.92, 0.9],
         BaseStyle->{
          FontFamily -> "Helvetica", FontSize -> 10, FontColor -> 
           GrayLevel[0.4], Editable -> False, Selectable -> False},
         ItemSize->{Automatic, Automatic}]}
      },
      FrameStyle->RGBColor[0, 0, 0, 0.4],
      GridBoxAlignment->{"Columns" -> {Left}},
      GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[1.4], {
           Offset[0.5599999999999999]}, 
          Offset[0.7]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.]}, "RowsIndexed" -> {}}]}, Dynamic[
      CurrentValue[Evaluatable]],
     BaselinePosition->Baseline,
     ImageSize->Automatic],
    Editable->False,
    Selectable->True,
    ShowAutoStyles->False,
    LineSpacing->{1.1, 5},
    NumberMarks->False,
    SpanMinSize->1.,
    SpanMaxSize->3,
    LineBreakWithin->False,
    LineIndent->0,
    LinebreakAdjustments->{0.4, 5, 100, 0, 0.5},
    FontFamily->"Helvetica Neue",
    FontWeight->"Light",
    Background->RGBColor[0.985, 0.98, 0.973]],
   Deploy],
  Dataset[
   Association[{991} -> {
      Association["catsid" -> 1081, "catpid" -> 991, "catcost" -> 36.1], 
      Association["catsid" -> 1082, "catpid" -> 991, "catcost" -> 16.5]}, {
     992} -> {
      Association["catsid" -> 1081, "catpid" -> 992, "catcost" -> 42.3]}, {
     993} -> {
      Association["catsid" -> 1081, "catpid" -> 993, "catcost" -> 15.3]}, {
     994} -> {
      Association["catsid" -> 1081, "catpid" -> 994, "catcost" -> 20.5], 
      Association["catsid" -> 1084, "catpid" -> 994, "catcost" -> 57.3]}, {
     995} -> {
      Association["catsid" -> 1081, "catpid" -> 995, "catcost" -> 20.5], 
      Association["catsid" -> 1084, "catpid" -> 995, "catcost" -> 22.2]}, {
     996} -> {
      Association["catsid" -> 1081, "catpid" -> 996, "catcost" -> 124.23]}, {
     997} -> {
      Association["catsid" -> 1081, "catpid" -> 997, "catcost" -> 124.23], 
      Association["catsid" -> 1082, "catpid" -> 997, "catcost" -> 0.55]}, {
     998} -> {
      Association["catsid" -> 1081, "catpid" -> 998, "catcost" -> 11.7], 
      Association["catsid" -> 1082, "catpid" -> 998, "catcost" -> 7.95], 
      Association["catsid" -> 1083, "catpid" -> 998, "catcost" -> 12.5], 
      Association["catsid" -> 1084, "catpid" -> 998, "catcost" -> 48.6]}, {
     999} -> {
      Association["catsid" -> 1081, "catpid" -> 999, "catcost" -> 75.2], 
      Association["catsid" -> 1083, "catpid" -> 999, "catcost" -> 1.]}], 
   TypeSystem`Assoc[TypeSystem`UnknownType, 
    TypeSystem`Vector[
     TypeSystem`Struct[{"catsid", "catpid", "catcost"}, {
       TypeSystem`Atom[Integer], 
       TypeSystem`Atom[Integer], 
       TypeSystem`Atom[Real]}], TypeSystem`AnyLength], TypeSystem`AnyLength], 
   Association["Origin" -> HoldComplete[
      Query[
       GroupBy[{
         Slot["catpid"]}& ]][
       Dataset`DatasetHandle[116891867979967]]], "ID" -> 
    190992938737856]]]], "Output",
 CellChangeTimes->{{3.6308464966343403`*^9, 3.630846504520897*^9}, 
   3.6354804843849525`*^9, 3.6355004286662717`*^9, 3.635500841257092*^9, 
   3.635568031650344*^9}]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1197, 841},
WindowMargins->{{Automatic, 44}, {Automatic, 57}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (July 1, 2014)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Title"], Background -> RGBColor[1, 1, 0]], 
   Cell[
    StyleData["Chapter"], Background -> GrayLevel[0.85]], 
   Cell[
    StyleData["Subchapter"], CellDingbat -> "\[FilledDiamond]", TextAlignment -> 
    Left, FontFamily -> "Gill Sans MT", FontSize -> 28, FontWeight -> "Bold", 
    FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
    Background -> RGBColor[0.87, 0.94, 1]], 
   Cell[
    StyleData["Section"], FontColor -> 
    RGBColor[0.5019607843137255, 0., 0.25098039215686274`]], 
   Cell[
    StyleData["Subsection"], FontFamily -> "Gill Sans MT", FontSize -> 20, 
    FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Subsubsection"]], 
   Cell[
    StyleData["Text"], CellChangeTimes -> {3.6355989339035053`*^9}, 
    TextJustification -> 1.]}, Visible -> False, FrontEndVersion -> 
  "10.0 for Microsoft Windows (64-bit) (July 1, 2014)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 224, 3, 117, "Title"],
Cell[CellGroupData[{
Cell[829, 29, 295, 6, 79, "Subsection"],
Cell[1127, 37, 750, 12, 87, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1914, 54, 493, 8, 139, "Chapter"],
Cell[CellGroupData[{
Cell[2432, 66, 146, 2, 49, "Subsection"],
Cell[2581, 70, 922, 16, 87, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3540, 91, 99, 1, 83, "Subchapter"],
Cell[CellGroupData[{
Cell[3664, 96, 101, 1, 70, "Section"],
Cell[3768, 99, 143, 2, 31, "Input"],
Cell[3914, 103, 146, 2, 31, "Input"],
Cell[4063, 107, 378, 10, 31, "Input"],
Cell[CellGroupData[{
Cell[4466, 121, 158, 2, 49, "Subsection"],
Cell[4627, 125, 946, 14, 87, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5610, 144, 99, 1, 49, "Subsection"],
Cell[5712, 147, 638, 17, 30, "Text"],
Cell[CellGroupData[{
Cell[6375, 168, 377, 8, 31, "Input"],
Cell[6755, 178, 2082, 50, 33, "Output"]
}, Open  ]],
Cell[8852, 231, 425, 11, 30, "Text"],
Cell[CellGroupData[{
Cell[9302, 246, 274, 4, 31, "Input"],
Cell[9579, 252, 540, 9, 31, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[10180, 268, 154, 2, 56, "Section"],
Cell[CellGroupData[{
Cell[10359, 274, 156, 2, 49, "Subsection"],
Cell[10518, 278, 1569, 24, 144, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12124, 307, 96, 1, 49, "Subsection"],
Cell[12223, 310, 244, 5, 33, "Text"],
Cell[12470, 317, 360, 8, 30, "Text"],
Cell[CellGroupData[{
Cell[12855, 329, 751, 23, 33, "Input"],
Cell[13609, 354, 2239, 54, 33, "Output"]
}, Open  ]],
Cell[15863, 411, 188, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[16076, 417, 250, 4, 31, "Input"],
Cell[16329, 423, 2045, 50, 33, "Output"]
}, Open  ]],
Cell[18389, 476, 128, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[18542, 481, 178, 3, 31, "Input"],
Cell[18723, 486, 2190, 54, 33, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[20974, 547, 166, 2, 56, "Section"],
Cell[CellGroupData[{
Cell[21165, 553, 156, 2, 49, "Subsection"],
Cell[21324, 557, 1075, 15, 106, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22436, 577, 95, 1, 49, "Subsection"],
Cell[22534, 580, 240, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[22799, 589, 394, 10, 31, "Input"],
Cell[23196, 601, 582, 11, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23827, 618, 108, 1, 49, "Subsection"],
Cell[23938, 621, 474, 8, 49, "Text"],
Cell[24415, 631, 268, 5, 30, "Text"],
Cell[24686, 638, 254, 5, 31, "Input"],
Cell[24943, 645, 252, 5, 31, "Input"],
Cell[25198, 652, 197, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[25420, 660, 392, 8, 31, "Input"],
Cell[25815, 670, 2057, 50, 33, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[27933, 727, 185, 2, 56, "Section"],
Cell[CellGroupData[{
Cell[28143, 733, 156, 2, 49, "Subsection"],
Cell[28302, 737, 2311, 33, 201, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30650, 775, 232, 3, 49, "Subsection"],
Cell[30885, 780, 1446, 20, 163, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32368, 805, 95, 1, 49, "Subsection"],
Cell[CellGroupData[{
Cell[32488, 810, 324, 7, 31, "Input"],
Cell[32815, 819, 1600, 31, 176, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34452, 855, 171, 4, 31, "Input"],
Cell[34626, 861, 1597, 42, 92, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[36284, 910, 171, 2, 56, "Section"],
Cell[CellGroupData[{
Cell[36480, 916, 154, 2, 49, "Subsection"],
Cell[36637, 920, 801, 14, 68, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37475, 939, 97, 1, 49, "Subsection"],
Cell[37575, 942, 476, 10, 112, "Input"],
Cell[CellGroupData[{
Cell[38076, 956, 369, 8, 52, "Input"],
Cell[38448, 966, 1453, 30, 87, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[39962, 1003, 93, 1, 56, "Section"],
Cell[CellGroupData[{
Cell[40080, 1008, 158, 2, 49, "Subsection"],
Cell[40241, 1012, 457, 8, 49, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40735, 1025, 95, 1, 49, "Subsection"],
Cell[CellGroupData[{
Cell[40855, 1030, 184, 3, 31, "Input"],
Cell[41042, 1035, 497, 9, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41576, 1049, 259, 6, 31, "Input"],
Cell[41838, 1057, 1313, 28, 89, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43188, 1090, 187, 4, 31, "Input"],
Cell[43378, 1096, 974, 16, 72, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[44413, 1119, 169, 2, 56, "Section"],
Cell[CellGroupData[{
Cell[44607, 1125, 160, 2, 49, "Subsection"],
Cell[44770, 1129, 670, 10, 68, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45477, 1144, 122, 1, 49, "Subsection"],
Cell[45602, 1147, 239, 6, 87, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45878, 1158, 128, 1, 49, "Subsection"],
Cell[46009, 1161, 556, 9, 68, "Text"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[46614, 1176, 97, 1, 56, "Section"],
Cell[CellGroupData[{
Cell[46736, 1181, 207, 3, 49, "Subsection"],
Cell[46946, 1186, 903, 16, 125, "Text"],
Cell[47852, 1204, 532, 9, 49, "Text"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48445, 1220, 383, 5, 83, "Subchapter"],
Cell[48831, 1227, 343, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[49199, 1237, 281, 3, 70, "Section"],
Cell[CellGroupData[{
Cell[49505, 1244, 138, 2, 49, "Subsection"],
Cell[49646, 1248, 225, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[49896, 1256, 114, 1, 31, "Input"],
Cell[50013, 1259, 1914, 49, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51964, 1313, 320, 7, 31, "Input"],
Cell[52287, 1322, 284, 6, 31, "Output"]
}, Open  ]],
Cell[52586, 1331, 283, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[52894, 1341, 358, 6, 31, "Input"],
Cell[53255, 1349, 2164, 55, 33, "Output"]
}, Open  ]],
Cell[55434, 1407, 499, 9, 49, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[55970, 1421, 262, 3, 41, "Subsection"],
Cell[56235, 1426, 444, 8, 49, "Text"],
Cell[56682, 1436, 819, 18, 72, "Input"],
Cell[CellGroupData[{
Cell[57526, 1458, 343, 8, 31, "Input"],
Cell[57872, 1468, 2631, 66, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60540, 1539, 109, 1, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[60674, 1544, 893, 15, 31, "Input"],
Cell[61570, 1561, 2284, 55, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63891, 1621, 682, 15, 31, "Input"],
Cell[64576, 1638, 8497, 221, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73110, 1864, 616, 14, 31, "Input"],
Cell[73729, 1880, 2648, 62, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76414, 1947, 1092, 21, 92, "Input"],
Cell[77509, 1970, 7435, 154, 339, "Output"]
}, Open  ]],
Cell[84959, 2127, 247, 5, 30, "Text"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[85255, 2138, 113, 1, 41, "Subsection"],
Cell[85371, 2141, 1126, 21, 87, "Text"],
Cell[CellGroupData[{
Cell[86522, 2166, 177, 3, 31, "Input"],
Cell[86702, 2171, 9756, 231, 149, "Output"]
}, Open  ]],
Cell[96473, 2405, 249, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[96747, 2414, 164, 3, 31, "Input"],
Cell[96914, 2419, 1852, 48, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98803, 2472, 97, 1, 31, "Input"],
Cell[98903, 2475, 1850, 48, 31, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[100802, 2529, 111, 1, 41, "Subsection"],
Cell[100916, 2532, 361, 8, 30, "Text"],
Cell[CellGroupData[{
Cell[101302, 2544, 352, 8, 31, "Input"],
Cell[101657, 2554, 9940, 233, 241, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[111646, 2793, 222, 3, 41, "Subsection"],
Cell[111871, 2798, 2384, 37, 144, "Text"],
Cell[114258, 2837, 183, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[114466, 2845, 195, 3, 31, "Input"],
Cell[114664, 2850, 1935, 49, 33, "Output"]
}, Open  ]],
Cell[116614, 2902, 461, 8, 49, "Text"],
Cell[117078, 2912, 138, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[117241, 2917, 125, 2, 31, "Input"],
Cell[117369, 2921, 1902, 49, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119308, 2975, 119, 1, 31, "Input"],
Cell[119430, 2978, 2171, 53, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121638, 3036, 151, 2, 31, "Input"],
Cell[121792, 3040, 470, 8, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122299, 3053, 151, 2, 31, "Input"],
Cell[122453, 3057, 1979, 49, 33, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[124481, 3112, 166, 2, 41, "Subsection"],
Cell[124650, 3116, 616, 11, 49, "Text"],
Cell[125269, 3129, 565, 9, 49, "Text"],
Cell[CellGroupData[{
Cell[125859, 3142, 121, 1, 39, "Subsubsection"],
Cell[125983, 3145, 302, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[126310, 3155, 259, 4, 31, "Input"],
Cell[126572, 3161, 192, 4, 31, "Output"]
}, Open  ]],
Cell[126779, 3168, 263, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[127067, 3175, 621, 12, 72, "Input"],
Cell[127691, 3189, 355, 8, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128083, 3202, 712, 15, 31, "Input"],
Cell[128798, 3219, 6375, 172, 33, "Output"]
}, Open  ]],
Cell[135188, 3394, 155, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[135368, 3401, 371, 7, 31, "Input"],
Cell[135742, 3410, 2304, 49, 230, "Output"]
}, Open  ]],
Cell[138061, 3462, 356, 6, 49, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138454, 3473, 117, 1, 39, "Subsubsection"],
Cell[138574, 3476, 118, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[138717, 3481, 112, 1, 31, "Input"],
Cell[138832, 3484, 1680, 44, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140549, 3533, 389, 9, 72, "Input"],
Cell[140941, 3544, 1861, 48, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142839, 3597, 421, 12, 31, "Input"],
Cell[143263, 3611, 8043, 213, 33, "Output"]
}, Open  ]],
Cell[151321, 3827, 153, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[151499, 3834, 320, 6, 31, "Input"],
Cell[151822, 3842, 4242, 93, 230, "Output"]
}, Open  ]],
Cell[156079, 3938, 439, 8, 49, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156555, 3951, 102, 1, 39, "Subsubsection"],
Cell[156660, 3954, 548, 9, 68, "Text"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[157257, 3969, 121, 1, 41, "Subsection"],
Cell[157381, 3972, 557, 8, 49, "Text"],
Cell[CellGroupData[{
Cell[157963, 3984, 121, 1, 31, "Input"],
Cell[158087, 3987, 1848, 48, 33, "Output"]
}, Open  ]],
Cell[159950, 4038, 264, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[160239, 4047, 168, 3, 31, "Input"],
Cell[160410, 4052, 1952, 50, 33, "Output"]
}, Open  ]],
Cell[162377, 4105, 276, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[162678, 4114, 411, 8, 31, "Input"],
Cell[163092, 4124, 340, 7, 31, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[163493, 4138, 236, 3, 70, "Section"],
Cell[CellGroupData[{
Cell[163754, 4145, 159, 2, 49, "Subsection"],
Cell[163916, 4149, 536, 8, 49, "Text"],
Cell[164455, 4159, 340, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[164820, 4169, 326, 7, 31, "Input"],
Cell[165149, 4178, 1620, 41, 92, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166806, 4224, 134, 2, 31, "Input"],
Cell[166943, 4228, 1215, 25, 162, "Output"]
}, Open  ]],
Cell[168173, 4256, 303, 7, 31, "Input"],
Cell[168479, 4265, 297, 7, 31, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[168813, 4277, 287, 3, 41, "Subsection"],
Cell[CellGroupData[{
Cell[169125, 4284, 113, 1, 39, "Subsubsection"],
Cell[169241, 4287, 342, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[169608, 4297, 293, 6, 31, "Input"],
Cell[169904, 4305, 479, 9, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170420, 4319, 485, 9, 31, "Input"],
Cell[170908, 4330, 1583, 39, 92, "Output"]
}, Open  ]],
Cell[172506, 4372, 192, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[172723, 4378, 235, 5, 31, "Input"],
Cell[172961, 4385, 644, 13, 31, "Output"]
}, Open  ]],
Cell[173620, 4401, 179, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[173824, 4409, 259, 7, 31, "Input"],
Cell[174086, 4418, 3422, 88, 147, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[177557, 4512, 147, 1, 33, "Subsubsection"],
Cell[177707, 4515, 663, 11, 68, "Text"],
Cell[CellGroupData[{
Cell[178395, 4530, 525, 11, 31, "Input"],
Cell[178923, 4543, 7040, 190, 286, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186000, 4738, 509, 13, 31, "Input"],
Cell[186512, 4753, 5891, 155, 166, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192440, 4913, 450, 12, 31, "Input"],
Cell[192893, 4927, 8734, 247, 482, "Output"]
}, Open  ]],
Cell[201642, 5177, 271, 7, 31, "Input"],
Cell[201916, 5186, 92, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[202033, 5191, 159, 4, 31, "Input"],
Cell[202195, 5197, 5699, 156, 166, "Output"]
}, Open  ]],
Cell[207909, 5356, 165, 4, 31, "Input"],
Cell[208077, 5362, 92, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[208194, 5367, 269, 6, 31, "Input"],
Cell[208466, 5375, 46996, 1173, 260, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
