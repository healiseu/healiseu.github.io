<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>All Posts in Descending Chronological Order on HEALIS</title>
    <link>https://healis.eu/en/post/</link>
    <description>Recent content in All Posts in Descending Chronological Order on HEALIS</description>
    <generator>Source Themes academia (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <copyright>&amp;copy; HEALIS - Athanassios I. Hatzis, {year}</copyright>
    <lastBuildDate>Fri, 25 Oct 2019 00:00:00 +0000</lastBuildDate>
    
	    <atom:link href="https://healis.eu/en/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>TRIACLICK 2nd Release</title>
      <link>https://healis.eu/en/post/20191025/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20191025/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;TRIADB is discontinued, page is maintained here for the history.&lt;/strong&gt;


&lt;button class=&#34;btn  btn-danger&#34; type=&#34;button&#34;  onclick=&#34;location.href=&#39;\/en\/hmorph\/&#39;&#34; &gt; Visit HyperMorph the successor of this project &lt;/button&gt;


&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;self-service-data-management--visual-interactive-analytics-framework&#34;&gt;Self-Service Data Management &amp;amp; Visual Interactive Analytics Framework&lt;/h2&gt;
&lt;p&gt;This is a public announcement of the second open-source release of TRIADB, codename TRIACLICK. Repository of the project can be found at &lt;a href=&#34;https://github.com/healiseu/triadb&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can use TRIACLICK to manage your disparate data sources, create custom data models with an integrated, whole view of your business and get a business insight by building easily dashboard web applications that work with the associative selection/filtering of Triaclick engine.&lt;/p&gt;
&lt;h3 id=&#34;tutorial-and-installation-guides&#34;&gt;Tutorial and Installation Guides&lt;/h3&gt;
&lt;p&gt;Analytic instructions on how to install TRIADB are written on the &lt;a href=&#34;https://github.com/healiseu/triadb/blob/master/INSTALLATION.rst&#34;&gt;installation guide&lt;/a&gt;. If you decide to go deeper, read the &lt;a href=&#34;https://github.com/healiseu/triadb/blob/master/TUTORIAL.rst&#34;&gt;tutorial guide&lt;/a&gt; to get into the basics of programming with TRIADB.&lt;/p&gt;
&lt;h2 id=&#34;screen-capture-demo&#34;&gt;Screen Capture Demo&lt;/h2&gt;
&lt;p&gt;Watch a screencast demonstration of the main features of TRIADB in the current release with a focus on the key aspects highlighted and illustrated in the following section.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/QSk1ldfb7ow&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h3 id=&#34;at-a-glance&#34;&gt;At A Glance&lt;/h3&gt;
&lt;p&gt;TRIADB is an innovative, multi-perspective development framework written in Python with the scope to assist power BI users and developers to build easily web applications and/or Jupyter notebooks, i.e. reports, that are based on interactive computing and exploratory, visual analysis. It’s main unique and valuable characteristics are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Interactive visual exploratory analytics&lt;/strong&gt; powered by TriaClick associative semiotic hypergraph engine. The technology is based on ClickHouse columnar DBMS and its output can be easily transformed to enable hypergraph traversal, associative selection and cross-filtering with states on coordinated visualizations.&lt;/li&gt;
&lt;/ol&gt;






&lt;figure&gt;

&lt;img src=&#34;triaclick_animated_chart.gif&#34; alt=&#34;Coordinated update of GUI components based on associative selection and filtering&#34; &gt;



&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;TRIACLICK Animated Chart&lt;/h4&gt;
  &lt;p&gt;
    Coordinated update of GUI components based on associative selection and filtering
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;







&lt;figure&gt;

&lt;img src=&#34;hypergraph_paths.png&#34; alt=&#34;Visualization of hypergraph paths based on TRIACLICK associations&#34; &gt;



&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;TRIACLICK Hypergraph&lt;/h4&gt;
  &lt;p&gt;
    Visualization of hypergraph paths based on TRIACLICK associations
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;

&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;User defined business models&lt;/strong&gt; in the form of a hypergraph. Data modeling plays a central role in TRIADB. Management of meta-data, loading and filtering processes are innately related, associated, with the business model you define.&lt;/li&gt;
&lt;/ol&gt;






&lt;figure&gt;

&lt;img src=&#34;business_model.png&#34; alt=&#34;Business model based on Northwind database with Associative Entities in yellow&#34; &gt;



&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;Business Model Graph&lt;/h4&gt;
  &lt;p&gt;
    Business model based on Northwind database with Associative Entities in yellow
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;

&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;strong&gt;Interactive programming with high-level OOP components and methods&lt;/strong&gt; tailored to fit database management and analytics. TRIADB powerful transformations, including list items, tuples and associations enable the user to analyze data quickly and intuitively.&lt;/li&gt;
&lt;/ol&gt;






&lt;figure&gt;

&lt;img src=&#34;associative_filtering.png&#34; alt=&#34;Examine visually how the domain set values of attributes are related&#34; &gt;



&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;Associative Filtering&lt;/h4&gt;
  &lt;p&gt;
    Examine visually how the domain set values of attributes are related
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;







&lt;figure&gt;

&lt;img src=&#34;barchart_from_aggregations.png&#34; alt=&#34;Aggregation in a filtered state and transformation to tuples and bar chart&#34; &gt;



&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;Transformation of aggregation&lt;/h4&gt;
  &lt;p&gt;
    Aggregation in a filtered state and transformation to tuples and bar chart
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;

&lt;h2 id=&#34;what-problem-triadb-solves-and-how&#34;&gt;What problem TRIADB solves and how&lt;/h2&gt;
&lt;p&gt;The project started long time ago from a personal need to integrate an electronic medical record database used in a neurosurgery clinic with several other specialized databases for neurosurgical disorders. &lt;code&gt;Integration&lt;/code&gt;, &lt;code&gt;correlation&lt;/code&gt;, &lt;code&gt;aggregation&lt;/code&gt; and &lt;code&gt;visual exploration&lt;/code&gt; will always be the holy grail of business analytics. Associative technology in general is a specific solution that has not been opened to the public until now although it is applied by one of the most successful BI companies for two decades. The implementation of associative semiotic hypergraph engine (TRIACLICK) in TRIADB project opens a path for other competitive, cost effective (not only RAM based), efficient solutions sharing the same principles in data modeling and database management.&lt;/p&gt;
&lt;h2 id=&#34;future-plans&#34;&gt;Future Plans&lt;/h2&gt;
&lt;p&gt;TRIADB is a middleware, one part is closely coupled with the physical layer of the data store engine and the other part is closer to the application layer. Therefore the project can be expanded in two directions, optimization and improvement of associative semiotic hypergraph engine on one hand, efficient and effective transformations and visual exploration on the other hand.&lt;/p&gt;
&lt;p&gt;In spite of the growing development of TRIADB which requires urgently funding for resources, the critical factor for the success of this project is how exactly it is going to be applied to solve particular users’ problems. This step requires that users become aware of what are the advantages in using TRIADB and what they can achieve.&lt;/p&gt;
&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/triadb-v09-athanassios-hatzis/&#34;&gt;LinkedIn - 20191025 Pulse Article - TRIADB v0.9&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>TRIACLICK 1st Release</title>
      <link>https://healis.eu/en/post/20190211/</link>
      <pubDate>Mon, 11 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20190211/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;TRIADB is discontinued, page is maintained here for the history.&lt;/strong&gt;


&lt;button class=&#34;btn  btn-danger&#34; type=&#34;button&#34;  onclick=&#34;location.href=&#39;\/en\/hmorph\/&#39;&#34; &gt; Visit HyperMorph the successor of this project &lt;/button&gt;


&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;TriaClick is my long standing effort to revitalize Relational and Topic Maps data model. &lt;code&gt;Associative filtering&lt;/code&gt;, similar to &lt;a href=&#34;https://www.qlik.com/us/products/associative-difference&#34;&gt;Qlik associative engine&lt;/a&gt;, has been &lt;strong&gt;implemented for the first time&lt;/strong&gt; with a fast columnar DBMS on non-volatile memory and tested with a relatively large file on commodity hardware.&lt;/p&gt;
&lt;h2 id=&#34;screencast&#34;&gt;Screencast&lt;/h2&gt;
&lt;p&gt;Screen Capture Demo of TriaClick, a python library that implements &lt;a href=&#34;https://healis.eu/en/post/20170412/&#34;&gt;associative, semiotic, hypergraph technology&lt;/a&gt; on top of &lt;a href=&#34;https://clickhouse.yandex/&#34;&gt;ClickHouse columnar DBMS&lt;/a&gt; and &lt;a href=&#34;https://mariadb.org/&#34;&gt;MariaDB&lt;/a&gt;. We show the execution of commands from two python console applications that are built with TriaClick library. The various operations (methods) of our &lt;code&gt;Chain Query Language (CQL)&lt;/code&gt; aim to make the processing pipeline of data integration, exploratory data analysis and visualization easier, faster, intuitive, and more efficient and accurate for the database/data analyst expert. Currently the focus is on management of data resources and data models, associative filtering, hypergraph exploration and aggregations.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/WJh5o59aXOw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;performance&#34;&gt;Performance&lt;/h2&gt;
&lt;p&gt;On my 10 years old Intel i3 core machine, TriaClick takes about a minute to load a 42 x 2.8M Physician records TSV flat file (856MB) on SSD and the average elapsed time for processing user selections, i.e. filters with an exploratory QlikView style, is 3 seconds. Output can be transformed and seen as associations, tuples, and columns with distinct values, frequencies and filtering states. The result set can also be driven to a hypergraph for further exploration.&lt;/p&gt;
&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/triaclick-demo-athanassios-hatzis-phd/&#34;&gt;LinkedIn - 20190211 Pulse Article - TriaClick Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Build valuable relations; establish effective communications</title>
      <link>https://healis.eu/en/post/20180305/</link>
      <pubDate>Mon, 05 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20180305/</guid>
      <description>&lt;h2 id=&#34;why----how----what&#34;&gt;Why &amp;ndash;&amp;gt; How &amp;ndash;&amp;gt; What&lt;/h2&gt;
&lt;p&gt;Simon Sinek discovered that &lt;a href=&#34;https://www.ted.com/talks/simon_sinek_how_great_leaders_inspire_action&#34;&gt;all great companies think, act and communicate the exact same way&lt;/a&gt; and he illustrated the method with the following infographic.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://emmelinefarrell.blogspot.gr/2016/02/essay-research-simon-sinek-ted-talk.html&#34;&gt;&lt;img src=&#34;./golden_circle.jpg&#34; alt=&#34;jpg&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For many years I have been working on a personal project that started with research on data modeling and now it reached the level of a database add-on product. And without realizing it, I have just discovered, that &lt;strong&gt;I was always working from the inside out&lt;/strong&gt; but I could not articulate why until now.&lt;/p&gt;
&lt;p&gt;Information technology is a tool that can be used in many ways, but perhaps the most creative and imaginative aspect, is to &lt;strong&gt;view IT as the vehicle for communication&lt;/strong&gt;. In that case IT covers a basic human need, arguably a need that can be even more important than food. And communication in Greek is ΕΠΙ-ΚΟΙΝΩΝΙΑ, literally meaning, on top of society.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Man is by nature a political animal&lt;/strong&gt; &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;relations-and-communications&#34;&gt;Relations and Communications&lt;/h2&gt;
&lt;p&gt;You can easily see what one can achieve with a computer, but deep behind this behavior is the &lt;strong&gt;why part of it&lt;/strong&gt;. Take internet for example, you can educate yourself, you can learn about something new, you can interact with systems and services, you can be creative. This is definitely a form of communication. But it is more direct when you become a member in a social media site, or in a forum, or in a programming/game community. And the reason behind all these user actions is that &lt;strong&gt;we need to communicate&lt;/strong&gt;. We need customers to serve, we need an audience to perform, we need others to share things, we need to be in a group of people. We are internet citizens, citizens of this world.&lt;/p&gt;
&lt;p&gt;The question is would you travel around the world without any navigation system ? Same question is true for internet. It is the search engine and the hyperlinks that play partly the role of a map and a compass. But nowadays these are not enough. It&amp;rsquo;s because we have started asking to get meaning, to find value out of our data. We want to understand not only how but why things are interconnected. Therefore we should &lt;strong&gt;use technology, the know how, to build meaningful, valuable relationships and lay them down as a foundation to establish effective communication&lt;/strong&gt;. And in my opinion, and opinion of great inspired leaders you have to think, act and communicate from inside out. &lt;strong&gt;It is not the product that defines the need, it is the need that dictates what is the product&lt;/strong&gt;. This is the right guide in the design and implementation of inter-operable systems, devices and applications.&lt;/p&gt;
&lt;h2 id=&#34;we-see-things-differently&#34;&gt;We see things differently&lt;/h2&gt;
&lt;p&gt;In HEALIS this is our philosophy and also our brand strategy to develop great solutions to fully cover your needs and the needs of your customers. A humble start was made with &lt;a href=&#34;https://healis.eu/en/project/triadb/&#34;&gt;TRIADB&lt;/a&gt;. Although &lt;a href=&#34;https://healis.eu/en/project/triadb/&#34;&gt;TRIADB&lt;/a&gt; is not a product for the common end-user, it reflects &lt;a href=&#34;https://healis.eu/en/post/20150523/&#34;&gt;our way of thinking about information&lt;/a&gt; technology in general.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/mtftHaK9tYY&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;Here&amp;rsquo;s to the crazy ones. The misfits. The rebels. The troublemakers. The round pegs in the square holes. The ones who see things differently. They&amp;rsquo;re not fond of rules. And they have no respect for the status quo. You can quote them, disagree with them, glorify or vilify them. About the only thing you can&amp;rsquo;t do is ignore them. Because they change things. They push the human race forward. And while some may see them as the crazy ones, we see genius. Because the people who are crazy enough to think they can change the world, are the ones who do &lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We have laid strong foundations, we put the cornerstone at the right place. We made a start and we can see the future of this. If you, want to learn why, we know how and what you will get is the fulfillment of our common goal:&lt;/p&gt;


&lt;button class=&#34;btn  btn-warning&#34; type=&#34;button&#34;  &gt; Build valuable relations; establish effective communications &lt;/button&gt;



&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/healis-build-valuable-relations-establish-effective-hatzis/&#34;&gt;LinkedIn - 20180305 Pulse Article - HEALIS: Build valuable relations; establish effective communications&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Aristotle &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Steve Jobs, Apple advertisement (Aired 1997) &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>Associative Semiotic Hypergraph based on R3DM/S3DM</title>
      <link>https://healis.eu/en/post/20170412/</link>
      <pubDate>Wed, 12 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20170412/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#abstract&#34;&gt;Abstract&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#r3dm-definition&#34;&gt;R3DM Definition&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#architecture-overview&#34;&gt;Architecture Overview&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#conceptual-perspective&#34;&gt;Conceptual Perspective&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#logical-perspective&#34;&gt;Logical Perspective&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#instances-perspective&#34;&gt;Instances Perspective&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#semantic-perspective&#34;&gt;Semantic Perspective&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#environment-type-systems&#34;&gt;Environment Type Systems&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#database-type-system-dbs&#34;&gt;Database Type System (DBS)&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#model-type-system-mts&#34;&gt;Model Type System (MTS)&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#entity-type-system-ets&#34;&gt;Entity Type System (ETS)&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#attribute-type-system-ats&#34;&gt;Attribute Type System (ATS)&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#items-type-system-its&#34;&gt;Items Type System (ITS)&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#value-type-system-vts&#34;&gt;Value Type System (VTS)&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#data-sources-type-system-dss&#34;&gt;Data Sources Type System (DSS)&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#link-type-system-lts&#34;&gt;Link Type System (LTS)&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#functional-operations&#34;&gt;Functional Operations&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#get-anything&#34;&gt;Get Anything&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#add-anything&#34;&gt;Add anything&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#filtering&#34;&gt;Filtering&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#case1-condition-and-sorting-order&#34;&gt;Case1: Condition and Sorting Order&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#case2-condition-and-cleansing&#34;&gt;Case2: Condition and Cleansing&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#case3-graph-traversal&#34;&gt;Case3: Graph Traversal&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#summary&#34;&gt;Summary&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#epilogue&#34;&gt;Epilogue&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#the-end&#34;&gt;The End&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#cross-references&#34;&gt;Cross-References&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;

&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;
&lt;p&gt;In this last post for this series &lt;code&gt;Associative Semiotic Hypergraph&lt;/code&gt; technology is introduced to the public with a demonstration of a fully functional prototype that is built in &lt;a href=&#34;http://orientdb.com/&#34;&gt;OrientDB&lt;/a&gt; multi-model DBMS and coded with &lt;a href=&#34;http://www.wolfram.com/language/?source=nav&#34;&gt;Wolfram Language&lt;/a&gt;. This is the first working prototype that is based on &lt;strong&gt;&lt;a href=&#34;https://healis.eu/en/project/r3dm/&#34;&gt;R3DM/S3DM&lt;/a&gt;&lt;/strong&gt; conceptual, computational semiotics framework, the theoretical framework behind our technology.&lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;It is remarkable how we turned an electronic device that is processing only 1s and 0s to an inseparable intelligent companion and trustworthy assistant. There is a long &lt;a href=&#34;http://www.wolframalpha.com/docs/timeline/computable-knowledge-history-6.html&#34;&gt;historical record of technological achievements&lt;/a&gt; in the development of computable information and the interactive engagement of the user. In every step of our technological progress we made systems with better performance, pushing towards a simpler, extensible, modifiable, scalable and generic logic. And the key behind this imaginative use of computers is the captivating abstract thinking process of the human brain. &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; conceptual and logical framework is an attempt to model databases with the very same intimate mechanism that creates models. In this endeavor, there could not be a better theory as the base of &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; other than Aristotle&amp;rsquo;s &lt;a href=&#34;https://en.wikipedia.org/wiki/Semiosis&#34;&gt;Semiosis&lt;/a&gt;. &lt;a href=&#34;https://en.wikipedia.org/wiki/Semiotics&#34;&gt;Semiotics&lt;/a&gt; is the study of meaning-making and it binds semantics with symbolic representation and transformation which is the bread and butter of computer programs and digital storage. &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; is not only conceived along this theory, it is also founded on those semiotic principles.&lt;/p&gt;
&lt;h3 id=&#34;r3dm-definition&#34;&gt;R3DM Definition&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;R3DM - &lt;strong&gt;Representation(Resource, Realization)&lt;/strong&gt; or S3DM - &lt;strong&gt;Sign(Signified, Signifier)&lt;/strong&gt; is a &lt;a href=&#34;https://en.wikipedia.org/wiki/Computational_semiotics&#34;&gt;computational semiotic&lt;/a&gt; framework with a &lt;a href=&#34;https://en.wikipedia.org/wiki/Morphism&#34;&gt;mathematical morphism&lt;/a&gt; that formalizes the architectural design of &lt;a href=&#34;http://hypergraphdb.org/&#34;&gt;associative&lt;/a&gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/Associative_model_of_data&#34;&gt;hypergraph&lt;/a&gt; databases.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Following this definition we will unfold &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; and explain its main characteristics starting with the classic three layered database architecture.&lt;/p&gt;
&lt;h2 id=&#34;architecture-overview&#34;&gt;Architecture Overview&lt;/h2&gt;
&lt;p&gt;One of the main purposes of &lt;a href=&#34;https://www.zachman.com/ea-articles-reference/58-conceptual-logical-physical-it-is-simple-by-john-a-zachman&#34;&gt;Zachman&amp;rsquo;s conceptual, logical, and physical database design&lt;/a&gt;, is to provide data independence at the application-user level. The three layers are in descending levels of abstraction where the conceptual model is the most abstract and the physical data model the least abstract or most concrete.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://en.wikipedia.org/wiki/Conceptual_schema&#34;&gt;conceptual model&lt;/a&gt; usually refers to the domain of discourse and describes the semantics of the application without any reference to the database technology. On the contrary, the &lt;a href=&#34;https://en.wikipedia.org/wiki/Logical_data_model&#34;&gt;logical data model&lt;/a&gt; implements the concept model in terms of abstract data types, (e.g. List, Set, Map, Graph). In the following list you can see the correspondence between these two layers for five popular data models.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Conceptual Schema&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Relational_model&#34;&gt;Predicates&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Entity%E2%80%93relationship_model&#34;&gt;Entities and Relationships&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Topic_Maps&#34;&gt;Topics, Associations and Occurences&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Resource_Description_Framework&#34;&gt;Subjects, Objects and Predicates&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Object_database&#34;&gt;Classes and Properties&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Logical Structure&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Relational_model&#34;&gt;n-ary Relation, Tuples and Attributes&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Entity%E2%80%93relationship_model&#34;&gt;Table, Rows and Columns&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Hypergraph&#34;&gt;Hyperedges, Hypernodes&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Graph_databasehttps://en.wikipedia.org/wiki/Type_system&#34;&gt;Nodes, Edges and Properties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Object_(computer_science)&#34;&gt;Objects&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Both conceptual and logical layers should act independently of the underlying &lt;a href=&#34;https://en.wikipedia.org/wiki/Database_engine&#34;&gt;database engine&lt;/a&gt;, i.e. &lt;a href=&#34;https://en.wikipedia.org/wiki/Physical_data_model&#34;&gt;physical data model&lt;/a&gt;. The following is an indicative list of what is normally included in this layer.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Physical Data Storage Organization&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Database_engine#Data_orientation_and_clustering&#34;&gt;Data orientation (rows/columns, correlational)&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Data_structure&#34;&gt;Data structure&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Object_storage&#34;&gt;Object storage&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Block_(data_storage)&#34;&gt;Block storage&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Data_cluster&#34;&gt;Data cluster&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Database_index&#34;&gt;Database index&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Serialization&#34;&gt;Serialization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;conceptual-perspective&#34;&gt;Conceptual Perspective&lt;/h3&gt;
&lt;p&gt;Regarding to the conceptual data model &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; is using terms that are well-known among database experts, i.e. &lt;code&gt;Entities&lt;/code&gt; and &lt;code&gt;Attributes&lt;/code&gt;. In &lt;a href=&#34;#code1&#34;&gt;&lt;strong&gt;Code.1&lt;/strong&gt;&lt;/a&gt; segment we can view instances of &lt;strong&gt;Supplier&lt;/strong&gt;, &lt;strong&gt;Part&lt;/strong&gt; and &lt;strong&gt;Catalog&lt;/strong&gt; &lt;code&gt;Entities&lt;/code&gt; and the &lt;code&gt;Attributes&lt;/code&gt; that describe them. Remember that in &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; &lt;code&gt;Entities&lt;/code&gt; and &lt;code&gt;Attributes&lt;/code&gt; play the role of abstract concepts that we associate to create models of our data, they are NOT containers or instances of data.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Entity&#34;&gt;&lt;code&gt;Entity&lt;/code&gt;&lt;/a&gt; is something that has a discrete, independent existence,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;e.g. &lt;em&gt;Eiffel Tower&lt;/em&gt; (Building), &lt;em&gt;Apple Inc&lt;/em&gt; (Company), &lt;em&gt;Porsche 993 GT2 with a specific VIN&lt;/em&gt; (Car)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Attribute_(computing)&#34;&gt;&lt;code&gt;Attribute&lt;/code&gt;&lt;/a&gt; is a piece of information that describes an &lt;code&gt;Entity&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;e.g. (referring to the above &lt;code&gt;Entities&lt;/code&gt;) &lt;em&gt;300m&lt;/em&gt; (Height),  &lt;em&gt;US$215.639&lt;/em&gt; (Revenue), &lt;em&gt;WP0ZZZ99ZTS392124&lt;/em&gt; (VIN)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.isotopicmaps.org/sam/sam-model/#sect-association&#34;&gt;&lt;code&gt;Association&lt;/code&gt;&lt;/a&gt; represents:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;An N-ary relation of an &lt;code&gt;Entity&lt;/code&gt; with its &lt;code&gt;Attributes&lt;/code&gt; (see &lt;a href=&#34;#code1&#34;&gt;&lt;strong&gt;Code.1&lt;/strong&gt;&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;e.g. Part{ID, Description, Color, Weight}&lt;/li&gt;
&lt;li&gt;e.g. &lt;em&gt;Part998 {998, &amp;ldquo;Fire Hydrant Cap&amp;rdquo;, &amp;ldquo;Red&amp;rdquo;, 7.2}&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;An N-ary relationship between one or more &lt;code&gt;Entities&lt;/code&gt;, sharing one or more common &lt;code&gt;Attributes&lt;/code&gt;, that is defined by the roles they play in the association (see &lt;a href=&#34;#code1&#34;&gt;&lt;strong&gt;Code.1&lt;/strong&gt;&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;e.g. Film {StarringActor1, StarringActor2, Director}&lt;/li&gt;
&lt;li&gt;e.g. FilmID { ActorID1, ActorID2, DirectorID }&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;{: .notice}
&lt;strong&gt;Code.1&lt;/strong&gt; - Result sets from SQL queries on Supplier, Part and Catalog tables. The same result sets are drawn in &lt;a href=&#34;#fig1&#34;&gt;&lt;strong&gt;Fig.1&lt;/strong&gt;&lt;/a&gt; with a hypergraph and in &lt;a href=&#34;#code2&#34;&gt;&lt;strong&gt;Code.2&lt;/strong&gt;&lt;/a&gt; segment they are assimilated with AIR units in &lt;code&gt;Associations&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h3 id=&#34;logical-perspective&#34;&gt;Logical Perspective&lt;/h3&gt;
&lt;p&gt;Changing now our perspective with a focus on the logical building blocks, &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; can be viewed as a &lt;a href=&#34;https://en.wikipedia.org/wiki/Hypergraph&#34;&gt;hypergraph&lt;/a&gt;, &lt;a href=&#34;#fig1&#34;&gt;&lt;strong&gt;Fig.1&lt;/strong&gt;&lt;/a&gt;, comprised of three data structures &lt;code&gt;hyperatoms&lt;/code&gt; (hypernodes), &lt;code&gt;hyperbonds&lt;/code&gt; (hyperedges), and &lt;code&gt;hyperlinks&lt;/code&gt; (edges).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A &lt;code&gt;hyperbond&lt;/code&gt; represents graphically a complex data structure (e.g. tuple, JSON object). The role of &lt;code&gt;hyperbond&lt;/code&gt; is to connect a set of &lt;code&gt;hyperatoms&lt;/code&gt; in order to form associations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A &lt;code&gt;hyperatom&lt;/code&gt; represents graphically an atomic data item (e.g. record value, a key-value pair of a JSON object).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A &lt;code&gt;hyperlink&lt;/code&gt; graphically speaking is a &lt;a href=&#34;http://mathworld.wolfram.com/GraphEdge.html&#34;&gt;Graph Edge&lt;/a&gt; that connects bidirectionally a &lt;code&gt;hyperatom&lt;/code&gt; to &lt;code&gt;hyperbond&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

&lt;img src=&#34;SPC_Hypergraph_with_values-1024x362.jpg&#34; alt=&#34;A hypergraph of Supplier Part Catalog for Part No. 998 with its four Catalog entries and its four Suppliers. Hyperedges are in green and hyperatoms are in red&#34; &gt;



&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;SPC Hypergraph&lt;/h4&gt;
  &lt;p&gt;
    A hypergraph of Supplier Part Catalog for Part No. 998 with its four Catalog entries and its four Suppliers. Hyperedges are in green and hyperatoms are in red
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;instances-perspective&#34;&gt;Instances Perspective&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Entity&lt;/code&gt; or &lt;code&gt;Attribute&lt;/code&gt; in R3DM/S3DM are &lt;strong&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Class_(computer_programming)&#34;&gt;Types&lt;/a&gt;&lt;/strong&gt; and represent uniquely a single &lt;strong&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Set_(mathematics)&#34;&gt;Set&lt;/a&gt;&lt;/strong&gt; of &lt;strong&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Instance_(computer_science)&#34;&gt;Instances&lt;/a&gt;&lt;/strong&gt; also known as items (see also &lt;a href=&#34;https://healis.eu/en/post/20170412/#items-type-system-its&#34;&gt;Items Type System&lt;/a&gt;). &lt;code&gt;Entities&lt;/code&gt; or &lt;code&gt;Attributes&lt;/code&gt; can be thought as &lt;strong&gt;references&lt;/strong&gt; to &lt;code&gt;Collections&lt;/code&gt;, &lt;a href=&#34;#fig2&#34;&gt;&lt;strong&gt;Fig.2&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

&lt;img src=&#34;Meta-Domain-Instance%20Levels-600x407.jpg&#34; alt=&#34;Fig. 2 - Meta Level and Domain Level, i.e. Domain Abstractions and Specializations are abstract types, e.g. a Person, a Credit Card, an Item and refer to the Instance Level. The Instance Level includes domain particular instances, e.g. Tom the person, his Credit Card with No: XXXX, an Item ZZZZ that he purchased&#34; &gt;



&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;Domain Abstractions and Specializations&lt;/h4&gt;
  &lt;p&gt;
    Fig. 2 - Meta Level and Domain Level, i.e. Domain Abstractions and Specializations are abstract types, e.g. a Person, a Credit Card, an Item and refer to the Instance Level. The Instance Level includes domain particular instances, e.g. Tom the person, his Credit Card with No: XXXX, an Item ZZZZ that he purchased
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A &lt;code&gt;Collection&lt;/code&gt; (set of instances) is a generic container for items with no duplicates. A &lt;code&gt;Collection&lt;/code&gt; can have one or more representative concepts (&lt;code&gt;Entities&lt;/code&gt; or &lt;code&gt;Attributes&lt;/code&gt;). We have two types of collection, &lt;code&gt;Datum Collection&lt;/code&gt; and &lt;code&gt;Nexus Collection&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A &lt;code&gt;Datum Item&lt;/code&gt; (datum) can be thought as an instance of a particular &lt;code&gt;Attribute&lt;/code&gt; type that points to a single atomic piece of data (atomic value). A &lt;code&gt;Datum Collection&lt;/code&gt; contains &lt;code&gt;Datum Items&lt;/code&gt; (data). In our hypergraph perspective &lt;code&gt;Datum Items&lt;/code&gt; are represented with &lt;code&gt;hyperatoms&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A &lt;code&gt;Nexus Item&lt;/code&gt; (nexus) can be thought as an instance of a particular &lt;code&gt;Entity&lt;/code&gt; type with a role of associating, binding together, &lt;code&gt;Datum Items&lt;/code&gt;. A &lt;code&gt;Nexus Collection&lt;/code&gt; is a type of collection which holds &lt;code&gt;Nexus items&lt;/code&gt; (nexuses). The graphic equivalent of &lt;code&gt;Nexus Items&lt;/code&gt; is the &lt;code&gt;hyperbond&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ponder for a moment here, it is a common ground to consider a type, i.e. class, as a container of its instances. But that is not the case in &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; where abstract concepts (types) have an independent existence and refer to collections, i.e. the containers of instances.&lt;/p&gt;
&lt;p&gt;This separation between containers of items (instances) and abstract concepts (types) is extremely important as it decouples the data modeling layer from the data collections that are ingested into the database
{: .btn .btn&amp;ndash;info}&lt;/p&gt;
&lt;h3 id=&#34;semantic-perspective&#34;&gt;Semantic Perspective&lt;/h3&gt;
&lt;p&gt;Data, e.g. names, codes, quantities, time, location, categorical are meaningless without context. They are separated, isolated bits of information with no related context. Data inherits more meaning when the data are processed within a context. This is exactly the purpose of &lt;a href=&#34;https://en.wikipedia.org/wiki/Semantic_data_model&#34;&gt;semantic data modeling&lt;/a&gt;, a data modeling technique to define the meaning of data within the context of its interrelationships with other data. Semantic models can be either fact oriented, e.g. RDF triples, or object oriented e.g. Entities and Relationships. The disadvantage of the second is that you have to manage dissimilar 2D structures (tables) that are dependent of a fixed database schema and not connected or related directly. The drawbacks of the first are the labeled edges, the modeling of n-ary relations, the inseparable mixture of plain and typed literal triples that represent values with RDF links that represent resources, the &lt;a href=&#34;https://link.springer.com/chapter/10.1007/978-3-642-02121-3_39&#34;&gt;Semantic Web Identity Crisis&lt;/a&gt; to name a few. &lt;strong&gt;R3DM/S3DM assimilates both fact and object-oriented views by defining an atomic information reference unit which is based on semiotics&lt;/strong&gt;. Naturally, with this solution we escape from many of the above problems. This is one of the most innovative aspects of this framework.&lt;/p&gt;
&lt;h4 id=&#34;object-oriented-view&#34;&gt;Object-Oriented View&lt;/h4&gt;
&lt;p&gt;The most commercially successful semantic model is &lt;a href=&#34;https://en.wikipedia.org/wiki/Entity%E2%80%93relationship_model&#34;&gt;Entity-Relationship&lt;/a&gt; data model. In the first post of this series we discussed the conceptual data model that Chen is using to represent the tuples of &lt;a href=&#34;https://en.wikipedia.org/wiki/Relational_model&#34;&gt;relational data model&lt;/a&gt;. &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000100/#fig2&#34;&gt;Fig. 2&lt;/a&gt; and &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000100/#fig3&#34;&gt;Fig. 3&lt;/a&gt; shows that Chen is using either Entity Set, Attributes and Value Sets or Entity Set(s), Relationship Set(s), Attributes and Value Sets to form an &lt;code&gt;Association&lt;/code&gt;. The key point here is that &lt;strong&gt;Entity set and Attributes in both cases are separated from the Value sets&lt;/strong&gt;. Indeed, this is the design principle that is followed in any modern relational DBMS. There is a &lt;a href=&#34;https://en.wikipedia.org/wiki/Data_dictionary&#34;&gt;data dictionary&lt;/a&gt;, also known as a &lt;a href=&#34;https://en.wikipedia.org/wiki/Metadata_repository&#34;&gt;metadata repository&lt;/a&gt; or &lt;a href=&#34;https://en.wikipedia.org/wiki/Metadata_registry&#34;&gt;metadata registry&lt;/a&gt;, that stores among other things names and descriptions of Entity Sets, Relationships and their Attributes that construct a &lt;a href=&#34;https://en.wikipedia.org/wiki/Database_schema&#34;&gt;database schema&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Semantically speaking, the database schema and its &lt;a href=&#34;https://en.wikipedia.org/wiki/Metadata&#34;&gt;metadata&lt;/a&gt; describe the meaning of its instances, i.e. Entity relations, Entity relationships and Attribute Value sets. For this purpose, in the current OrientDB implementation of &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; each one of these sets is &lt;strong&gt;defined explicitly&lt;/strong&gt; and is represented with an &lt;a href=&#34;http://orientdb.com/docs/last/Concepts.html#class&#34;&gt;OrientDB Class&lt;/a&gt;. There is another reason we keep separate the actual data values. &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; uses a &lt;strong&gt;single instance value-based storage&lt;/strong&gt;. Each unique value in the raw data is stored only once. With this feature there is some resemblance with the data model of &lt;a href=&#34;https://en.wikipedia.org/wiki/Correlation_database&#34;&gt;Correlation Database&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&#34;network-graph-view&#34;&gt;Network Graph View&lt;/h4&gt;
&lt;p&gt;While it is helpful to view the higher-level &lt;strong&gt;&lt;a href=&#34;https://healis.eu/en/post/20170412/#environment-type-systems&#34;&gt;Type System Architecture of R3DM/S3DM&lt;/a&gt;&lt;/strong&gt; through an object-oriented filter, it is important to understand that at a low-level &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; consists of nodes and edges. In particular, the prototype framework we describe in this article is built on top of &lt;a href=&#34;http://orientdb.com/docs/last/Tutorial-Document-and-graph-model.html#the-graph-model&#34;&gt;OrientDB Graph engine&lt;/a&gt; with &lt;a href=&#34;http://orientdb.com/docs/last/Tutorial-Working-with-graphs.html#lightweight-edges&#34;&gt;Lightweight Edges&lt;/a&gt; and a hypergraph structure, &lt;a href=&#34;#fig9&#34;&gt;&lt;strong&gt;Fig.9&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In previous posts of this series we have made a comparison of the &lt;code&gt;Association&lt;/code&gt; construct with &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000100&#34;&gt;Relational tuples&lt;/a&gt;, &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000101/&#34;&gt;Topic Map Association&lt;/a&gt;, &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000102/&#34;&gt;RDF triplet&lt;/a&gt;, &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000103/&#34;&gt;Property Graph nodes and edges&lt;/a&gt; and &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000104/http://orientdb.com/docs/master/Graph-Editor.html&#34;&gt;Qlik binary coded records&lt;/a&gt;. Such semantic models, with the exception of Qlik technology, are fact oriented and semantics are typically expressed by binary or n-ary relations between data elements. In &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; the graph is usually undirected with &lt;a href=&#34;https://healis.eu/en/post/20170412/#link-type-system-lts&#34;&gt;symmetric and typed binary relations&lt;/a&gt; between the &lt;code&gt;hyperbond&lt;/code&gt; and the &lt;code&gt;hyperatom&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This low-level graph view of the system can be implemented in many ways. For example you can have two constructs, e.g. tables, one for the nodes and another for the edges (see the work of Simon Williams in &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000103/#associative-model&#34;&gt;Sentences database&lt;/a&gt;), or you can use a key-value store that saves tuples (&lt;a href=&#34;http://blog.hostilefork.com/brief-tour-graphd-scott-meyer/&#34;&gt;Graphd&lt;/a&gt; the back store of Freebase) or you can also have a native triple store.&lt;/p&gt;
&lt;h4 id=&#34;semiotic-view&#34;&gt;Semiotic View&lt;/h4&gt;
&lt;p&gt;So far we have seen how we can contextualize data using &lt;code&gt;Association&lt;/code&gt; construct. This is the mechanism to assimilate tuples of data. Nevertheless, values in a tuple or literals/resources in a triple are meaningless in isolation. In the first case you need either the head and the type of the relation (table and column names), in the second case you need the label and direction on the edge (Predicate) that connects the Subject and the Object to give meaning in the binary relation. To quote Ron Everett,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Every table is a silo. Every cell is an atom of data with no awareness of its contexts, or how it fits in to anything beyond its cell. It can be located by external intelligence but on its own it’ s a “dumb” participant in the system - the ultimate disconnected micro - fragment accessible only by knowing the column and the record it exists in.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;and according to him,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The alternative is to replace the data elements with information at the atomic level of the system. Instead of a data atom in a table, we have an information atom with no table.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; Ron Everett &lt;!-- raw HTML omitted --&gt; in &amp;ldquo;&lt;a href=&#34;https://www.linkedin.com/pulse/introduction-associative-information-systems-n-normal-letennier&#34;&gt;Introduction to Associative Information Systems&lt;/a&gt; - (N) Normal Form&amp;rdquo;
{: .small}&lt;/p&gt;
&lt;p&gt;Therefore the trick here is to build &lt;code&gt;Associations&lt;/code&gt;, based on a uniform representation of its members and the roles they play, in a similar way to Topic Map &lt;a href=&#34;http://www.isotopicmaps.org/sam/sam-model/#sect-association&#34;&gt;Association items&lt;/a&gt;. For this purpose we have introduced &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000104/#air-units&#34;&gt;Atomic Information Resource (AIR)&lt;/a&gt; unit in the previous post of this series. Now we will view &lt;code&gt;AIR&lt;/code&gt; with more detail and in action. For each &lt;code&gt;AIR&lt;/code&gt; unit we maintain a record of information. For simplicity and for demonstration purposes, the &lt;code&gt;AIR&lt;/code&gt; unit in the current implementation of &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; is equivalent to &lt;a href=&#34;http://orientdb.com/docs/last/Tutorial-Record-ID.html&#34;&gt;OrientDB Record ID&lt;/a&gt; (RID).&lt;/p&gt;
&lt;p&gt;For example the &lt;code&gt;Supplier&lt;/code&gt; result set in &lt;a href=&#34;#code1&#34;&gt;&lt;strong&gt;Code.1&lt;/strong&gt;&lt;/a&gt; is transformed to an associative set and each cell of &lt;code&gt;Supplier&lt;/code&gt; table is represented with an &lt;code&gt;RID&lt;/code&gt; (&lt;a href=&#34;#code2&#34;&gt;&lt;strong&gt;Code.2&lt;/strong&gt;&lt;/a&gt; - &lt;em&gt;Get &lt;code&gt;Supplier&lt;/code&gt; Associative Set&lt;/em&gt;). Columns of &lt;code&gt;Part&lt;/code&gt; table, e.g. &lt;code&gt;pid&lt;/code&gt; (&lt;a href=&#34;#code1&#34;&gt;&lt;strong&gt;Code.1&lt;/strong&gt;&lt;/a&gt;), and any of its values are also represented with &lt;code&gt;RIDs&lt;/code&gt; (&lt;a href=&#34;#code2&#34;&gt;&lt;strong&gt;Code.2&lt;/strong&gt;&lt;/a&gt; - &lt;em&gt;Get &lt;code&gt;Datum&lt;/code&gt; where Parts.pid=998&lt;/em&gt;). The single &lt;code&gt;Part&lt;/code&gt; tuple where &lt;code&gt;pid=998&lt;/code&gt;, (&lt;a href=&#34;#code1&#34;&gt;&lt;strong&gt;Code.1&lt;/strong&gt;&lt;/a&gt;) is considered to be an instance of a &lt;code&gt;Entity&lt;/code&gt; and has an &lt;code&gt;RID&lt;/code&gt; too (&lt;a href=&#34;#code2&#34;&gt;&lt;strong&gt;Code.2&lt;/strong&gt;&lt;/a&gt; - &lt;em&gt;Get tuples that this Datum is part of&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;This way AIR information representation serves two principal functions; information resource identification and location addressing, i.e. dereferencing and retrieval.
{: .btn .btn&amp;ndash;success}&lt;/p&gt;
&lt;p&gt;{: .notice}
&lt;strong&gt;Code.2&lt;/strong&gt; - Associative sets are presented with values or in RID (reference key) format. The equivalent result sets are drawn in the hypergraph of &lt;a href=&#34;#fig1&#34;&gt;&lt;strong&gt;Fig.1&lt;/strong&gt;&lt;/a&gt; and fetched with SQL in (&lt;a href=&#34;#code1&#34;&gt;&lt;strong&gt;Code.1&lt;/strong&gt;&lt;/a&gt;) segment. The document record in OrientDB with RID &lt;strong&gt;#60:7&lt;/strong&gt; is an instance of &lt;code&gt;prtID Attribute&lt;/code&gt; collection. We can read the &lt;code&gt;Datum&lt;/code&gt; value, find which &lt;code&gt;Attribute&lt;/code&gt; collection (class) it belongs to, and get its siblings, i.e. other &lt;code&gt;Datum&lt;/code&gt; items of the class. In the same &lt;code&gt;Datum&lt;/code&gt; record we can see its row context associates, i.e. &lt;code&gt;Nexus Items&lt;/code&gt;. These are the five tuples it participates, one &lt;code&gt;Part&lt;/code&gt; relation (&lt;strong&gt;#52:7&lt;/strong&gt;) and four &lt;code&gt;Catalog&lt;/code&gt; relationships (&lt;strong&gt;#53:7, #53:11, #53:12, #53:16&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;a href=&#34;http://test.healis.eu/post000107/getFromDataItem&#34;&gt;View Code Frame&lt;/a&gt;
{: .btn .btn&amp;ndash;small}&lt;/p&gt;
&lt;p&gt;There are two steps towards this transformation of tuples. First we create a &lt;a href=&#34;https://healis.eu/en/post/20170412/#value-type-system-vts&#34;&gt;value type system&lt;/a&gt;, i.e. a place where we store atomic values based on their type. And second we apply a uniform representation on everything, i.e. data and metadata. This turns our DBMS to a &lt;strong&gt;Reference Database Management System (RDBMS)&lt;/strong&gt;, i.e. redefining this way the acronym of &lt;strong&gt;Relational Database Management Systems&lt;/strong&gt;. Remember that deep down to an atomic level we store single instance values. &lt;strong&gt;It is only the reference keys to those values that we manage&lt;/strong&gt;. This enables a cellular granularity on &lt;strong&gt;R3DM/S3DM&lt;/strong&gt;. Metadata with a high granularity allows for deeper, more detailed, and more structured information and enables greater levels of technical manipulation.&lt;/p&gt;
&lt;p&gt;This uniform &lt;em&gt;Representation&lt;/em&gt; and management of abstract information &lt;em&gt;Resources&lt;/em&gt; (Models, Data Sources, Metadata) with AIR units in &lt;strong&gt;R3DM&lt;/strong&gt; is the &lt;em&gt;Realization&lt;/em&gt; of the fact that underneath there is a separate storage layer of single instance data values.
{: .btn .btn&amp;ndash;info}&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;S3DM&lt;/strong&gt; framework is based on the powerful theory of the semiotic triangle also known as the triangle of meaning or the triangle of reference. We use key references (&lt;em&gt;Signs-Symbols&lt;/em&gt;), to represent abstract things (&lt;em&gt;Signified Concepts&lt;/em&gt;) in our mind. We encode these into data containers, i.e. forms that the sign takes, for the storage of data values (&lt;em&gt;Signifiers&lt;/em&gt;), &lt;a href=&#34;#fig3&#34;&gt;&lt;strong&gt;Fig.3&lt;/strong&gt;&lt;/a&gt;.
{: .btn .btn&amp;ndash;success}&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

&lt;img src=&#34;r3dm_semiotic_triangle_porsche-1200x839.jpg&#34; alt=&#34;Fig. 3 - R3DM/S3DM Triangle of Meaning, Semiotic Triangle, Triangle of Reference&#34; &gt;



&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Fig. 3 - R3DM/S3DM Triangle of Meaning, Semiotic Triangle, Triangle of Reference
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;This trilateral principle permits a uniform treatment of semantics, syntax, storage and structure of information based on symbolic representation. The very same principle is applied to the architectural design of &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; type system.
{: .btn .btn&amp;ndash;info}&lt;/p&gt;
&lt;h2 id=&#34;environment-type-systems&#34;&gt;Environment Type Systems&lt;/h2&gt;
&lt;p&gt;In the previous section we have seen that &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; can be seen from many perspectives. At a lower level we have a network graph of nodes and edges. In OrientDB &lt;a href=&#34;http://orientdb.com/docs/last/Tutorial-Document-and-graph-model.html#the-graph-model&#34;&gt;graph model&lt;/a&gt; these are instances of the &amp;ldquo;V&amp;rdquo; (for Vertex) and &amp;ldquo;E&amp;rdquo; (for Edges) classes. At a higher level, based on those two classes, we build a hierarchically organized &lt;a href=&#34;https://en.wikipedia.org/wiki/Namespace&#34;&gt;namespace&lt;/a&gt; in OrientDB &lt;a href=&#34;http://orientdb.com/docs/last/Paginated-Local-Storage.html&#34;&gt;paginated local storage&lt;/a&gt; (plocal). This is the database &lt;code&gt;Environment&lt;/code&gt;, the highest organizational structure, a logical container that it may represent a business environment, a user environment, even a programming environment. Its role is to group related classes into eight &lt;a href=&#34;https://en.wikipedia.org/wiki/Type_system&#34;&gt;type systems&lt;/a&gt;. Seven of them manage vertices and one of them is for the different types of edges, &lt;a href=&#34;#fig4&#34;&gt;&lt;strong&gt;Fig.4&lt;/strong&gt;&lt;/a&gt;. The process of initializing and defining the structures in OrientDB database is fully automated by reading the schema of the type system from a JSON file, &lt;a href=&#34;#fig5&#34;&gt;&lt;strong&gt;Fig.5&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

&lt;img src=&#34;OrientDB_R3DM_REG.png&#34; alt=&#34;Fig. 4 (Left)- Information about R3DM/S3DM hierarchical type system stored in *DBRegistry* subsystem&#34; &gt;



&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Fig. 4 (Left)- Information about R3DM/S3DM hierarchical type system stored in &lt;em&gt;DBRegistry&lt;/em&gt; subsystem
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

&lt;img src=&#34;R3DM_REG_JSON.png&#34; alt=&#34;Fig. 5 (Right) - Schema of R3DM/S3DM hierarchical type system in a JSON format. For simplicity, in the current implementation Items Type System (ITS) is not present. Entity Type System (ETS) and Attribute Type System (ATS) OrientDB classes compose this missing system&#34; &gt;



&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Fig. 5 (Right) - Schema of R3DM/S3DM hierarchical type system in a JSON format. For simplicity, in the current implementation Items Type System (ITS) is not present. Entity Type System (ETS) and Attribute Type System (ATS) OrientDB classes compose this missing system
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Our &lt;a href=&#34;%7B%7Bbase_path%7D%7D/dbapi/&#34;&gt;DBAPI project&lt;/a&gt; in Wolfram Language has been extended to cover all R3DM/S3DM functionality. For example, an &lt;code&gt;Environment&lt;/code&gt; is added with &lt;code&gt;OR3addEnvironment&lt;/code&gt; command, (&lt;a href=&#34;#code3&#34;&gt;&lt;strong&gt;Code.3&lt;/strong&gt;&lt;/a&gt;), and we retrieve any metadata about it with the &lt;code&gt;OR3getAnything&lt;/code&gt; command (&lt;a href=&#34;#code4&#34;&gt;&lt;strong&gt;Code.4&lt;/strong&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;OR3addEnvironment&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;F:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;mp\R3DM_TypeSystem.json&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;R3DB&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;root&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;123&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;{: .notice}
&lt;strong&gt;Code.3&lt;/strong&gt; - We pass the schema file (JSON), the name of the database (R3DB), the username and the password. Metadata for the newly created classes are stored in the &lt;code&gt;DBRegistry&lt;/code&gt; subsystem &lt;a href=&#34;#fig4&#34;&gt;&lt;strong&gt;Fig.4&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;{: .notice}
&lt;strong&gt;Code.4&lt;/strong&gt; - Retrieval of Environment System Types with &lt;code&gt;OR3getAnything&lt;/code&gt; command. By default it is returning a List of references (RIDs) unless we specify a specific format for the structure e.g. Dataset.&lt;/p&gt;
&lt;h3 id=&#34;database-type-system-dbs&#34;&gt;Database Type System (DBS)&lt;/h3&gt;
&lt;p&gt;Classes that start with the letters DB such as &lt;code&gt;DBLog&lt;/code&gt;, &lt;code&gt;DBUser&lt;/code&gt;, &lt;code&gt;DBOperation&lt;/code&gt;, and &lt;code&gt;DBUserRole&lt;/code&gt; are used to store the user &lt;code&gt;Environment&lt;/code&gt; metadata useful for administrative, security, and monitoring purposes (&lt;a href=&#34;#code5&#34;&gt;&lt;strong&gt;Code.5&lt;/strong&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;{: .notice}
&lt;strong&gt;Code.5&lt;/strong&gt; - Retrieval of Primitive Database Types with &lt;code&gt;OR3getAnything&lt;/code&gt; command as a List of references or as as Dataset.&lt;/p&gt;
&lt;p&gt;We have already seen the &lt;code&gt;DBRegistry&lt;/code&gt; subsystem where information about the schema of &lt;code&gt;Environment&lt;/code&gt; is stored, &lt;a href=&#34;#fig4&#34;&gt;&lt;strong&gt;Fig.4&lt;/strong&gt;&lt;/a&gt;. Another class &lt;code&gt;DBObject&lt;/code&gt; is used for casting multi-type role playing at a node (&lt;code&gt;Object&lt;/code&gt; is an instance of a &lt;code&gt;Type&lt;/code&gt;).&lt;/p&gt;
&lt;h3 id=&#34;model-type-system-mts&#34;&gt;Model Type System (MTS)&lt;/h3&gt;
&lt;p&gt;Next we will examine how we can add a new domain model in the system. Usually at this stage the database expert draws the entity-relationship diagram of the model which is a graph of &lt;code&gt;Entities&lt;/code&gt;, &lt;code&gt;Attributes&lt;/code&gt; and relationships. In &lt;a href=&#34;#fig6&#34;&gt;&lt;strong&gt;Fig.6&lt;/strong&gt;&lt;/a&gt; we present a similar diagram for our Supplier-Part-Catalog data set and in &lt;a href=&#34;#fig9&#34;&gt;&lt;strong&gt;Fig.9&lt;/strong&gt;&lt;/a&gt; we have drawn the same diagram in OrientDB &lt;a href=&#34;http://orientdb.com/docs/master/Graph-Editor.html&#34;&gt;Graph Editor&lt;/a&gt;. The main difference with ER diagrams is that relationships/relations here have a direct representation on the system with the edges (&lt;strong&gt;R3DM/S3DM&lt;/strong&gt; links) and dictionary metadata are explicitly defined and stored in &lt;code&gt;MTS&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

&lt;img src=&#34;R3DM_SPC_model.png&#34; alt=&#34;Fig. 6 - The schema diagram of SupplierPartCatalog Model (red). Entities (blue boxes) and Attributes (green ovals) are written with their full names (blue) and short names (purple) that take positions outside each shape. Entity boxes inside carry their type (red) and their super-type (blue). While inside each Attribute oval super-type (black) and value type (red) is written. We can also see two types of links. LTS_EA (blue) connects Entities with Attributes and LTS_WP (brown) is linking the model with its Entities.&#34; &gt;



&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Fig. 6 - The schema diagram of SupplierPartCatalog Model (red). Entities (blue boxes) and Attributes (green ovals) are written with their full names (blue) and short names (purple) that take positions outside each shape. Entity boxes inside carry their type (red) and their super-type (blue). While inside each Attribute oval super-type (black) and value type (red) is written. We can also see two types of links. LTS_EA (blue) connects Entities with Attributes and LTS_WP (brown) is linking the model with its Entities.
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;We have &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/media/SupplierPartCatalogue/json/.json&#34;&gt;serialized the domain model&lt;/a&gt; graph of &lt;a href=&#34;#fig6&#34;&gt;&lt;strong&gt;Fig.6&lt;/strong&gt;&lt;/a&gt; in the same manner as the schema of the type system and the task of loading and building the model is simplified again with the following single function call (&lt;a href=&#34;#code6&#34;&gt;&lt;strong&gt;Code.6&lt;/strong&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;OR3addDomainModel&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;F:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;mp\SPCModel.json&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;{: .notice}
&lt;strong&gt;Code.6&lt;/strong&gt; - The only parameter required in &lt;em&gt;OR3addDomainModel&lt;/em&gt; is the &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/media/SupplierPartCatalogue/json/.json&#34;&gt;schema definition file&lt;/a&gt; of the model. This function call will instruct OrientDB to create classes for all &lt;code&gt;Entities&lt;/code&gt; and &lt;code&gt;Attributes&lt;/code&gt; of the &lt;code&gt;Model&lt;/code&gt;. All the metadata from the schema, &lt;a href=&#34;#fig6&#34;&gt;&lt;strong&gt;Fig.6&lt;/strong&gt;&lt;/a&gt;, will be stored in &lt;code&gt;MTS&lt;/code&gt; and will be available for retrieval with &lt;code&gt;OR3getAnything&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;Using the powerful &lt;code&gt;OR3getAnything&lt;/code&gt; function in the context of &lt;a href=&#34;%7B%7Bbase_path%7D%7D/dbapi/&#34;&gt;DBAPI&lt;/a&gt;&lt;code&gt;OrientR3S3&lt;/code&gt; package we can retrieve metadata, &lt;a href=&#34;#fig6&#34;&gt;&lt;strong&gt;Fig.6&lt;/strong&gt;&lt;/a&gt;, for any Model, Entity or Attribute. The result set can be in the form of Wolfram Language &lt;a href=&#34;http://reference.wolfram.com/language/ref/Dataset.html&#34;&gt;&lt;code&gt;Dataset&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;http://reference.wolfram.com/language/ref/List.html&#34;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&#34;http://reference.wolfram.com/language/ref/Graph.html&#34;&gt;&lt;code&gt;Graph&lt;/code&gt;&lt;/a&gt; data structures (&lt;a href=&#34;#code7&#34;&gt;&lt;strong&gt;Code.7&lt;/strong&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;{: .notice}
&lt;strong&gt;Code.7&lt;/strong&gt; - Three examples of the &lt;code&gt;OR3getAnything&lt;/code&gt; function where we retrieve OrientDB records for &lt;code&gt;Models&lt;/code&gt;, &lt;code&gt;Entities&lt;/code&gt; and &lt;code&gt;Attributes&lt;/code&gt; respectively. The function call is translated to OrientDB RESTful API command and the JSON response from the DBMS is transformed to Wolfram Language data structures for further processing and visualization. It worths noticing the hypergraph representation which is the equivalent graphical form of Model&amp;rsquo;s schema diagram in &lt;a href=&#34;#fig6&#34;&gt;&lt;strong&gt;Fig.6&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;a href=&#34;http://test.healis.eu/post000107/getModelEntityAttribute/&#34;&gt;View Code Frame&lt;/a&gt;
{: .btn .btn&amp;ndash;small}&lt;/p&gt;
&lt;p&gt;To maintain compatibility and interoperability with ontologies and other vocabularies for structured data on the Internet such as &lt;a href=&#34;http://schema.org/&#34;&gt;schema.org&lt;/a&gt; we categorize &lt;code&gt;Entities&lt;/code&gt; and &lt;code&gt;Attributes&lt;/code&gt; of any &lt;code&gt;Model&lt;/code&gt; according to OrientDB classes that typically form the hierarchical structure of &lt;code&gt;Entity Type System&lt;/code&gt; and &lt;code&gt;Attribute Type System&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;entity-type-system-ets&#34;&gt;Entity Type System (ETS)&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Entity Types&lt;/code&gt; usually refer to abstract entity types. They are used to create schema templates for popular entity types. Metadata are kept in DB_Registry and as usual they can be retrieved with &lt;code&gt;OR3getAnything&lt;/code&gt; command (&lt;a href=&#34;#code8&#34;&gt;&lt;strong&gt;Code.8&lt;/strong&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;{: .notice}
&lt;strong&gt;Code.8&lt;/strong&gt; - Retrieval of Entity Types with &lt;code&gt;OR3getAnything&lt;/code&gt; command from &lt;code&gt;DB_Registry&lt;/code&gt;. For each &lt;code&gt;Entity Type&lt;/code&gt; we can view its type and its super-type as well as the name and shortname that can be accessed.&lt;/p&gt;
&lt;p&gt;As an example consider the schema diagram of &lt;a href=&#34;#fig6&#34;&gt;&lt;strong&gt;Fig.6&lt;/strong&gt;&lt;/a&gt; where we have three entity sub types, &lt;strong&gt;&lt;code&gt;ORGANIZATION&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;PRODUCT&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;DATACATALOGUE&lt;/code&gt;&lt;/strong&gt;  where we classify the &lt;code&gt;Supplier&lt;/code&gt;, &lt;code&gt;Product&lt;/code&gt; and &lt;code&gt;Catalogue&lt;/code&gt; entity collections respectively (see &lt;a href=&#34;#code7&#34;&gt;&lt;strong&gt;Code.7&lt;/strong&gt;&lt;/a&gt;, &lt;em&gt;Get Entities section&lt;/em&gt;).&lt;/p&gt;
&lt;h3 id=&#34;attribute-type-system-ats&#34;&gt;Attribute Type System (ATS)&lt;/h3&gt;
&lt;p&gt;Similarly, &lt;code&gt;Attribute Types&lt;/code&gt; refer to abstract attribute types. Each attribute can participate in one or more &lt;code&gt;Entity Types&lt;/code&gt; and that is how schema templates are formed. In our &lt;code&gt;Supplier-Product-Catalogue&lt;/code&gt; data model, &lt;a href=&#34;#fig6&#34;&gt;&lt;strong&gt;Fig.6&lt;/strong&gt;&lt;/a&gt;, attributes can be classified as &lt;strong&gt;&lt;code&gt;CATEGORICAL&lt;/code&gt;&lt;/strong&gt; (&lt;code&gt;Supplier_status&lt;/code&gt;, &lt;code&gt;Part_color&lt;/code&gt;, &lt;code&gt;Part_unit&lt;/code&gt;, &lt;code&gt;Catalog_check&lt;/code&gt;), &lt;strong&gt;&lt;code&gt;IDENTITY&lt;/code&gt;&lt;/strong&gt; (&lt;code&gt;Supplier_id&lt;/code&gt;, &lt;code&gt;Part_id&lt;/code&gt;), &lt;strong&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/strong&gt; (&lt;code&gt;Part_nameEN&lt;/code&gt;, &lt;code&gt;Supplier_nameEN&lt;/code&gt;, &lt;code&gt;Supplier_city&lt;/code&gt;, &lt;code&gt;Supplier_country&lt;/code&gt;), &lt;strong&gt;&lt;code&gt;QUANTITY&lt;/code&gt;&lt;/strong&gt; (&lt;code&gt;Part_weight&lt;/code&gt;, &lt;code&gt;Catalog_price&lt;/code&gt;), &lt;strong&gt;&lt;code&gt;COUNT&lt;/code&gt;&lt;/strong&gt; (&lt;code&gt;Catalog_total&lt;/code&gt;), &lt;strong&gt;&lt;code&gt;TIME&lt;/code&gt;&lt;/strong&gt; (&lt;code&gt;Catalog_date&lt;/code&gt;) and &lt;strong&gt;&lt;code&gt;DESCRIPTION&lt;/code&gt;&lt;/strong&gt; (&lt;code&gt;Supplier_address&lt;/code&gt;). The following &lt;code&gt;OR3getAnything&lt;/code&gt; command demonstrates how we can draw metadata about this type system (&lt;a href=&#34;#code9&#34;&gt;&lt;strong&gt;Code.9&lt;/strong&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;{: .notice}
&lt;strong&gt;Code.9&lt;/strong&gt; - Retrieval of Attribute Types with &lt;code&gt;OR3getAnything&lt;/code&gt; command from &lt;code&gt;DB_Registry&lt;/code&gt;. For each &lt;code&gt;Attribute Type&lt;/code&gt; we can view its type and its super-type as well as the name and shortname that can be accessed.&lt;/p&gt;
&lt;p&gt;Each of these attribute classes above (see &lt;a href=&#34;#code7&#34;&gt;&lt;strong&gt;Code.7&lt;/strong&gt;&lt;/a&gt;, &lt;em&gt;Get Attributes section&lt;/em&gt;) refers to an attribute collection of data items that has a value type. For example, &lt;code&gt;Supplier_status&lt;/code&gt;, &lt;code&gt;Part_id&lt;/code&gt;, &lt;code&gt;Catalog_total&lt;/code&gt;, &lt;code&gt;Supplier_id&lt;/code&gt; are of value type &lt;strong&gt;INT&lt;/strong&gt; (integer) and &lt;code&gt;Part_weight&lt;/code&gt; is of value type &lt;strong&gt;REA&lt;/strong&gt; (real).&lt;/p&gt;
&lt;h3 id=&#34;items-type-system-its&#34;&gt;Items Type System (ITS)&lt;/h3&gt;
&lt;p&gt;This is the system of items collections, i.e. where &lt;code&gt;Entity&lt;/code&gt; and &lt;code&gt;Attribute&lt;/code&gt; reference instances are stored (see &lt;a href=&#34;https://healis.eu/en/post/20170412/#instances-perspective&#34;&gt;Instances Perspective&lt;/a&gt;). In our demo these are represented with OrientDB classes, &lt;a href=&#34;#fig7&#34;&gt;&lt;strong&gt;Fig.7&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

&lt;img src=&#34;OrientDB_entity_attribute_item_records-770x584.png&#34; alt=&#34;Fig. 7 - Two Select SQL queries with OrientDB Studio manager. The first one returns four Entity records and the second one returns four Attribute records. Each Entity and Attribute record is represented with an item from a collection. These items in turn are represented with a reference key which is OrientDB @rid&#34; &gt;



&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Fig. 7 - Two Select SQL queries with OrientDB Studio manager. The first one returns four Entity records and the second one returns four Attribute records. Each Entity and Attribute record is represented with an item from a collection. These items in turn are represented with a reference key which is OrientDB @rid
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;For simplicity&amp;rsquo;s sake we have not constructed &lt;code&gt;ITS&lt;/code&gt; separately but we used OrientDB classes instead to populate them with instances of &lt;code&gt;Entity&lt;/code&gt; and &lt;code&gt;Attribute&lt;/code&gt; types. Nevertheless the idea is the same, segregate the abstract concepts, &lt;strong&gt;TYPES&lt;/strong&gt;, from the domain particular &lt;strong&gt;INSTANCES&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&#34;value-type-system-vts&#34;&gt;Value Type System (VTS)&lt;/h3&gt;
&lt;p&gt;According to our Semiotic View (&lt;a href=&#34;#fig3&#34;&gt;&lt;strong&gt;Fig.3&lt;/strong&gt;&lt;/a&gt;) key &lt;strong&gt;REFERENCES&lt;/strong&gt; (RIDs) represent &lt;strong&gt;RESOURCES&lt;/strong&gt; from &lt;code&gt;DBS&lt;/code&gt;, &lt;code&gt;MTS&lt;/code&gt;, &lt;code&gt;ETS&lt;/code&gt;, &lt;code&gt;ATS&lt;/code&gt;, &lt;code&gt;ITS&lt;/code&gt;, &lt;code&gt;LTS&lt;/code&gt;, &lt;code&gt;DSS&lt;/code&gt; and encoded form of data, i.e. &lt;strong&gt;REALIZATION&lt;/strong&gt; of data values. These values have domains that are based on OrientDB primitive data types, e.g. &lt;em&gt;Integer&lt;/em&gt;, &lt;em&gt;Double&lt;/em&gt;, &lt;em&gt;DateTime&lt;/em&gt;, &lt;em&gt;String&lt;/em&gt; and types  that are defined in the &lt;strong&gt;Value Type System&lt;/strong&gt; (&lt;code&gt;VTS&lt;/code&gt;),  &lt;a href=&#34;#code10&#34;&gt;&lt;strong&gt;Code.10&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;{: .notice}
&lt;strong&gt;Code.10&lt;/strong&gt; - Retrieval of Value Types with &lt;code&gt;OR3getAnything&lt;/code&gt; command from &lt;code&gt;DB_Registry&lt;/code&gt;. For each &lt;code&gt;Attribute Type&lt;/code&gt; we can view its RID, type, super-type, name, shortname and the &lt;a href=&#34;http://orientdb.com/docs/master/Types.html&#34;&gt;OrientDB data type&lt;/a&gt; that is based on.&lt;/p&gt;
&lt;p&gt;Data values are stored together in ordered &lt;a href=&#34;https://en.wikipedia.org/wiki/Set_(mathematics)&#34;&gt;sets&lt;/a&gt; based on &lt;code&gt;Value Types&lt;/code&gt;, e.g. all integers in one set (&lt;code&gt;VTS_Integer&lt;/code&gt;), identifiers in another (&lt;code&gt;VTS_Encoded&lt;/code&gt;), and so on. This optimizes the access and management of values. Each &lt;code&gt;Item Collection&lt;/code&gt; is a subset of values, i.e. a subset of a value set, &lt;a href=&#34;#fig8&#34;&gt;&lt;strong&gt;Fig.8&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

&lt;img src=&#34;OrientDB-four%20values%20of%20supplierID-943x202.png&#34; &gt;



&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;Figure 8:&lt;/h4&gt;
  
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;{: .notice}
Fig.8 - A subset of the &lt;code&gt;VTS_Integer&lt;/code&gt; value set. This record set is obtained with OrientDB SQL select command. Each one of these records is pointed from a &lt;code&gt;datum&lt;/code&gt; item of the &lt;code&gt;Supplier_id&lt;/code&gt; collection (see &lt;a href=&#34;#fig7&#34;&gt;&lt;strong&gt;Fig.7&lt;/strong&gt;&lt;/a&gt;) using the &lt;a href=&#34;http://orientdb.com/docs/master/Types.html&#34;&gt;OrientDB Link type&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Elements of both &lt;code&gt;Value Sets&lt;/code&gt; and &lt;code&gt;Item Collections&lt;/code&gt; are unique, i.e. a single instance of each one. In OrientDB this is implemented by setting &lt;a href=&#34;http://orientdb.com/docs/master/SB-Tree-index.html&#34;&gt;SB-Tree index with UNIQUE keys&lt;/a&gt; in both &lt;code&gt;Value set&lt;/code&gt; and &lt;code&gt;Item Collection&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;data-sources-type-system-dss&#34;&gt;Data Sources Type System (DSS)&lt;/h3&gt;
&lt;p&gt;Yet there is another type system in &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; framework that is reserved for the input of data sets, the &lt;code&gt;Data Sources Type System&lt;/code&gt; (DSS). A &lt;a href=&#34;https://en.wikipedia.org/wiki/Data_set&#34;&gt;&lt;code&gt;Data Set&lt;/code&gt;&lt;/a&gt; is considered to be a number of related collections that usually correspond to the contents of &lt;a href=&#34;https://en.wikipedia.org/wiki/Flat_file_database&#34;&gt;flat files&lt;/a&gt; or database tables. During the process of adding a &lt;code&gt;Data Set&lt;/code&gt;we do not store the values but only the structure and properties, &lt;a href=&#34;#code11&#34;&gt;&lt;strong&gt;Code.11&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;{: .notice}
&lt;strong&gt;Code.11&lt;/strong&gt; - Demonstration of the &lt;code&gt;OR3addDataSet&lt;/code&gt; command with three parameters, the name of the new DataSet that will be created, the working path and the filenames of the flat files to inspect. This function call will instruct OrientDB to create a new class to store information about the structure of these flat files. These metadata will be available for retrieval with &lt;code&gt;OR3getAnything&lt;/code&gt; command (&lt;a href=&#34;#code12&#34;&gt;&lt;strong&gt;Code.12&lt;/strong&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;{: .notice}
&lt;strong&gt;Code.12&lt;/strong&gt; - Retrieval of a &lt;code&gt;DataSet&lt;/code&gt; structure, e.g. name, shortname, type, supertype, path, table names, table types, column names, etc, with &lt;code&gt;OR3getAnything&lt;/code&gt; command from &lt;code&gt;DSS&lt;/code&gt; system.&lt;/p&gt;
&lt;h3 id=&#34;link-type-system-lts&#34;&gt;Link Type System (LTS)&lt;/h3&gt;
&lt;p&gt;Last but not least the aforementioned &lt;a href=&#34;https://healis.eu/en/post/20170412/#network-graph-view&#34;&gt;&lt;strong&gt;symmetric and typed binary relation&lt;/strong&gt;&lt;/a&gt; is a bidirectional link, i.e. &lt;code&gt;hyperlink&lt;/code&gt;, that is used to connect a &lt;code&gt;hyperatom&lt;/code&gt; to a &lt;code&gt;hyperbond&lt;/code&gt; to form &lt;a href=&#34;https://healis.eu/en/post/20170412/#conceptual-perspective&#34;&gt;&lt;code&gt;Associations&lt;/code&gt;&lt;/a&gt;. We have two kinds of &lt;code&gt;hyperlinks&lt;/code&gt;, directed and undirected. Directed links are used to form directed associations of a specific type, e.g. &lt;code&gt;Entity&lt;/code&gt;-&lt;code&gt;Attribute&lt;/code&gt;, &lt;code&gt;Whole&lt;/code&gt;-&lt;code&gt;Part&lt;/code&gt;, &lt;code&gt;Type&lt;/code&gt;-&lt;code&gt;Instance&lt;/code&gt; &lt;a href=&#34;#fig9&#34;&gt;&lt;strong&gt;Fig.9&lt;/strong&gt;&lt;/a&gt;. Depending on which direction we traverse the link, outgoing or incoming we have two different labels to assist us in reading and understanding the semantics of the binary relation. In all cases metadata about the &lt;code&gt;Link Type System&lt;/code&gt; (LTS) are currently stored in &lt;code&gt;DB_Registry&lt;/code&gt; and as usual we can retrieve link types with &lt;code&gt;OR3getAnything&lt;/code&gt; command, &lt;a href=&#34;#code13&#34;&gt;&lt;strong&gt;Code.13&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;{: .notice}
&lt;strong&gt;Code.13&lt;/strong&gt; - Retrieval of Link Types with &lt;code&gt;OR3getAnything&lt;/code&gt; command from &lt;code&gt;DB_Registry&lt;/code&gt;. For each &lt;code&gt;ASSOCIATION&lt;/code&gt; type we can view its supertype, name, short name, and the labels for outgoing or incoming traversal direction.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

&lt;img src=&#34;OrientDB_GraphEditor_SPC_Model-1269x625.png&#34; alt=&#34;Fig.9 - Schema diagram of Supplier-Part-Catalog model in OrientDB Graph Editor. Red edges connect Entities to Attributes and green edge connect the Model to Entities. We can also view the type of R3DM/S3DM link in LTS system as a label on the edge&#34; &gt;



&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;Figure 9:&lt;/h4&gt;
  &lt;p&gt;
    Fig.9 - Schema diagram of Supplier-Part-Catalog model in OrientDB Graph Editor. Red edges connect Entities to Attributes and green edge connect the Model to Entities. We can also view the type of R3DM/S3DM link in LTS system as a label on the edge
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;functional-operations&#34;&gt;Functional Operations&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;OrientR3S3 Package&lt;/strong&gt; extends &lt;a href=&#34;%7B%7Bbase_path%7D%7D/dbapi_project/orientdb-package/&#34;&gt;OrientDB RESTful API package&lt;/a&gt; in Mathematica with a powerful functional set of commands that cover all operations in &lt;strong&gt;R3DM/S3DM&lt;/strong&gt;. These operations fall in four categories, &lt;strong&gt;get&lt;/strong&gt;, &lt;strong&gt;update&lt;/strong&gt;, &lt;strong&gt;delete&lt;/strong&gt;, &lt;strong&gt;add&lt;/strong&gt; (&lt;a href=&#34;%7B%7Bbase_path%7D%7D/dbapi_project/guda&#34;&gt;GUDA&lt;/a&gt;). The main idea here is to define standard &lt;a href=&#34;http://reference.wolfram.com/language/tutorial/SettingUpFunctionsWithOptionalArguments.html&#34;&gt;&lt;strong&gt;named optional arguments&lt;/strong&gt;&lt;/a&gt; for any of these functional categories and then allow their values, default or mandatory, to be given using Wolfram Language transformation rules. We have already started viewing examples of this functional approach to data management with the &lt;code&gt;OR3getAnything&lt;/code&gt; command, &lt;a href=&#34;#code2&#34;&gt;&lt;strong&gt;Code.2&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;#code4&#34;&gt;&lt;strong&gt;Code.4&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;#code5&#34;&gt;&lt;strong&gt;Code.5&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;#code7&#34;&gt;&lt;strong&gt;Code.7&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;#code8&#34;&gt;&lt;strong&gt;Code.8&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;#code9&#34;&gt;&lt;strong&gt;Code.9&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;#code10&#34;&gt;&lt;strong&gt;Code.10&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;#code12&#34;&gt;&lt;strong&gt;Code.12&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;#code13&#34;&gt;&lt;strong&gt;Code.13&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;get-anything&#34;&gt;Get Anything&lt;/h3&gt;
&lt;p&gt;By varying the named optional arguments we pass to &lt;code&gt;OR3getAnything&lt;/code&gt; public function of the &lt;strong&gt;OrientR3S3 Package&lt;/strong&gt;, &lt;a href=&#34;#code14&#34;&gt;&lt;strong&gt;Code.14&lt;/strong&gt;&lt;/a&gt;, we can retrieve or search for anything in &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; and we can also ask to &lt;strong&gt;return&lt;/strong&gt; the result in a specified format e.g. &lt;code&gt;Dataset&lt;/code&gt;, &lt;code&gt;References&lt;/code&gt;, &lt;code&gt;Rules&lt;/code&gt;, and &lt;code&gt;Associations&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;
(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Search&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Operations&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;25:02&amp;#34;&lt;/span&gt;, find&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SPC&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;50:01&amp;#34;&lt;/span&gt;, find&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;prtName&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;50:02&amp;#34;&lt;/span&gt;, find&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#39;Acme Widget Washer&amp;#39;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Type&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Systems&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Operations&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;25:19&amp;#34;&lt;/span&gt;, type&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SYSTEM&amp;#34;&lt;/span&gt;,      &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Dataset&amp;#34;&lt;/span&gt;, debug&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;, check&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;25:19&amp;#34;&lt;/span&gt;, type&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PRIMITIVE&amp;#34;&lt;/span&gt;,   &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Dataset&amp;#34;&lt;/span&gt;, debug&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;25:19&amp;#34;&lt;/span&gt;, type&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ASSOCIATION&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Dataset&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;25:19&amp;#34;&lt;/span&gt;, type&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;VALUE&amp;#34;&lt;/span&gt;,       &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Dataset&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;25:02&amp;#34;&lt;/span&gt;, type&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MODEL&amp;#34;&lt;/span&gt;,     &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;References&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;25:02&amp;#34;&lt;/span&gt;, type&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ENTITY&amp;#34;&lt;/span&gt;,    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Dataset&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;25:02&amp;#34;&lt;/span&gt;, type&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ATTRIBUTE&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Dataset&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;25:01&amp;#34;&lt;/span&gt;, type&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DATASET&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;25:01&amp;#34;&lt;/span&gt;, type&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;TABLE&amp;#34;&lt;/span&gt;,     &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Dataset&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;25:01&amp;#34;&lt;/span&gt;, type&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;COLUMN&amp;#34;&lt;/span&gt;,    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;References&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Mapping&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Operations&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;50:2&amp;#34;&lt;/span&gt;,         get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mapping&amp;#34;&lt;/span&gt;,    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Rules&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;50:2&amp;#34;&lt;/span&gt;,         get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mapping&amp;#34;&lt;/span&gt;,    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Bigraph&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;supplierMRules, get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mapping&amp;#34;&lt;/span&gt;,    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AssociationWithValueTypes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;supplierMRules, get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mapping&amp;#34;&lt;/span&gt;,    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AssociationWithNames&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Items&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Operations&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;70:1&amp;#34;&lt;/span&gt;, get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fields&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;50:1&amp;#34;&lt;/span&gt;, get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Entities&amp;#34;&lt;/span&gt;,   &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Count&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;50:5&amp;#34;&lt;/span&gt;, get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Entities&amp;#34;&lt;/span&gt;,   &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Dataset&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;50:2&amp;#34;&lt;/span&gt;, get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Attributes&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;References&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;50:2&amp;#34;&lt;/span&gt;, get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Model&amp;#34;&lt;/span&gt;,      &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Names&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;50:2&amp;#34;&lt;/span&gt;, get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Attributes&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RulesWithNames&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;50:2&amp;#34;&lt;/span&gt;, get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Attributes&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Rules&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;70:2&amp;#34;&lt;/span&gt;, get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Parts&amp;#34;&lt;/span&gt;,      &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Names&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;70:2&amp;#34;&lt;/span&gt;, get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Parts&amp;#34;&lt;/span&gt;,      &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Count&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;70:2&amp;#34;&lt;/span&gt;, get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Parts&amp;#34;&lt;/span&gt;,      &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Dataset&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;70:5&amp;#34;&lt;/span&gt;, get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Whole&amp;#34;&lt;/span&gt;,      &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;References&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;70:1&amp;#34;&lt;/span&gt;, get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Parts&amp;#34;&lt;/span&gt;,      &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Rules&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;70:1&amp;#34;&lt;/span&gt;, get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Parts&amp;#34;&lt;/span&gt;,      &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RulesWithNames&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;50:3&amp;#34;&lt;/span&gt;, get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tuples&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Count&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;50:3&amp;#34;&lt;/span&gt;, get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tuples&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Rules&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;50:3&amp;#34;&lt;/span&gt;, get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tuples&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;References&amp;#34;&lt;/span&gt;,    values&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;50:2&amp;#34;&lt;/span&gt;, get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tuples&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Dataset&amp;#34;&lt;/span&gt;,       values&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;50:2&amp;#34;&lt;/span&gt;, get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tuples&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Dataset&amp;#34;&lt;/span&gt;,       values&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;, filter&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;58:0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;50:2&amp;#34;&lt;/span&gt;, get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tuples&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;FieldsDataset&amp;#34;&lt;/span&gt;, values&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;50:3&amp;#34;&lt;/span&gt;,  get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Collections&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;References&amp;#34;&lt;/span&gt;, values&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;50:11&amp;#34;&lt;/span&gt;, get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DataItems&amp;#34;&lt;/span&gt;,   &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;References&amp;#34;&lt;/span&gt;, values&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;60:7&amp;#34;&lt;/span&gt;,  get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Nexuses&amp;#34;&lt;/span&gt;,     &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Count&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;60:7&amp;#34;&lt;/span&gt;,  get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Nexuses&amp;#34;&lt;/span&gt;,     &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;References&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;60:7&amp;#34;&lt;/span&gt;,  get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Nexuses&amp;#34;&lt;/span&gt;,     &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Rules&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;60:7&amp;#34;&lt;/span&gt;,  get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Nexuses&amp;#34;&lt;/span&gt;,     &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Association&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;60:7&amp;#34;&lt;/span&gt;,  get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Nexuses&amp;#34;&lt;/span&gt;,     &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AssociationWithFields&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;60:7&amp;#34;&lt;/span&gt;,  get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Nexuses&amp;#34;&lt;/span&gt;,     &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Dataset&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;{: .notice}
&lt;strong&gt;Code.14&lt;/strong&gt; - Examples of the &lt;code&gt;OR3getAnything&lt;/code&gt; command from &lt;strong&gt;OrientR3S3 Wolfram Language package&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&#34;add-anything&#34;&gt;Add anything&lt;/h3&gt;
&lt;p&gt;We have not reached the development phase of integrating all &lt;strong&gt;add&lt;/strong&gt; operation in an &lt;code&gt;OR3addAnything&lt;/code&gt; function of &lt;strong&gt;OrientR3S3 Package&lt;/strong&gt;. Instead of this unified function we have defined many others such as:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;OR3addEnvironment&lt;/code&gt; &lt;em&gt;[ envstruct, envname, usrname, usrpwd ]&lt;/em&gt; - &lt;a href=&#34;#code13&#34;&gt;Code13&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;OR3addDomainModel&lt;/code&gt; &lt;em&gt;[ jsonFileName]&lt;/em&gt; - &lt;a href=&#34;#code6&#34;&gt;Code6&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;OR3addDataSet&lt;/code&gt; &lt;em&gt;[ datasetName, dataSetPath, fileNames]&lt;/em&gt; - &lt;a href=&#34;#code11&#34;&gt;Code11&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thus, we have seen how we can add an &lt;a href=&#34;https://healis.eu/en/post/20170412/#environment-type-systems&#34;&gt;Environment Type System&lt;/a&gt;, a &lt;a href=&#34;https://healis.eu/en/post/20170412/#model-type-system-mts&#34;&gt;Domain Model&lt;/a&gt; and a &lt;a href=&#34;https://healis.eu/en/post/20170412/#data-sources-type-system-dss&#34;&gt;Data Source&lt;/a&gt;. The last two and those that follow are repetitive actions in data analytics lifecycle, i.e. &lt;strong&gt;data sources import&lt;/strong&gt;, &lt;strong&gt;modeling&lt;/strong&gt;, &lt;strong&gt;mapping&lt;/strong&gt;, &lt;strong&gt;ingestion&lt;/strong&gt;,  [&lt;strong&gt;filtering and aggregation&lt;/strong&gt;][].&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;OR3addMapping&lt;/code&gt; &lt;em&gt;[columns, attributes, mappingRules]&lt;/em&gt; - &lt;a href=&#34;#code15&#34;&gt;Code15&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a problem of matching the Columns of a Table or in general fields of a data set with the Attributes of an Entity in a data model.
{: .btn .btn&amp;ndash;info}&lt;/p&gt;
&lt;p&gt;We can have fields from multiple data sources that are mapped in the same model. The following code section &lt;a href=&#34;#code15&#34;&gt;Code15&lt;/a&gt; demonstrates how we perform the mapping of the &lt;code&gt;Columns&lt;/code&gt; from the three &lt;code&gt;Tables&lt;/code&gt; of a data set that we added in &lt;a href=&#34;#code12&#34;&gt;Code12&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;{: .notice}
&lt;strong&gt;Code.15&lt;/strong&gt; demonstrates the mapping of data fields onto &lt;code&gt;Attributes&lt;/code&gt; in three steps. &lt;strong&gt;Step1:&lt;/strong&gt; retrieve metadata from the &lt;code&gt;Data Set&lt;/code&gt; and the &lt;code&gt;Model&lt;/code&gt;, &lt;strong&gt;Step2:&lt;/strong&gt; specify the mapping rules, &lt;strong&gt;Step3:&lt;/strong&gt; store the mapping.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;a href=&#34;http://test.healis.eu/post000107/addMapping&#34;&gt;View Code Frame&lt;/a&gt;
{: .btn .btn&amp;ndash;small}&lt;/p&gt;
&lt;p&gt;Mapping is necessary in order to proceed with the data ingestion. This allows seamless integration of data from multiple data sources on the model we design in &lt;strong&gt;R3DM/S3DM&lt;/strong&gt;. The following three &lt;strong&gt;add&lt;/strong&gt; operations are used in populating &lt;code&gt;Entity&lt;/code&gt;, &lt;code&gt;Attribute&lt;/code&gt; items collections with reference instances and the &lt;code&gt;Value Type System&lt;/code&gt; with data values. Records, i.e. tuples, are assimilated by creating associations (&lt;a href=&#34;#code16&#34;&gt;Code16&lt;/a&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;OR3addValue&lt;/code&gt; &lt;em&gt;[className, propertyValue, propertyName]&lt;/em&gt; - &lt;a href=&#34;#code16&#34;&gt;Code16&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;OR3addNexus&lt;/code&gt; &lt;em&gt;[className]&lt;/em&gt; - &lt;a href=&#34;#code16&#34;&gt;Code16&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;OR3addEdge&lt;/code&gt;  &lt;em&gt;[edgeClass, fromItem, toItem]&lt;/em&gt; - &lt;a href=&#34;#code16&#34;&gt;Code16&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;{: .notice}
&lt;strong&gt;Code.16&lt;/strong&gt; demonstrates the ingestion of three data sources (TSV files). First we read headers and body from each file in memory. Then we &lt;strong&gt;get&lt;/strong&gt; the mapping of &lt;code&gt;Columns&lt;/code&gt; from the stored &lt;code&gt;Dataset&lt;/code&gt; onto the &lt;code&gt;Attributes&lt;/code&gt; of each &lt;code&gt;Entity&lt;/code&gt; and finally we &lt;strong&gt;add&lt;/strong&gt; values, collections items and associations.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;a href=&#34;http://test.healis.eu/post000107/addValues&#34;&gt;View Code Frame&lt;/a&gt;
{: .btn .btn&amp;ndash;small}&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;filtering&#34;&gt;Filtering&lt;/h2&gt;
&lt;p&gt;It should have become apparent that &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; operates in a different way than other database models. Instead of a &lt;a href=&#34;https://en.wikipedia.org/wiki/Data_definition_language&#34;&gt;Data definition language&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Data_manipulation_language&#34;&gt;Data manipulation language&lt;/a&gt; or a Query language (&lt;a href=&#34;https://en.wikipedia.org/wiki/SQL&#34;&gt;SQL&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/SPARQL&#34;&gt;SPARQL&lt;/a&gt;) the functional, uniform set of commands that we have seen in the previous section due to the consistent structure of its type systems and the &lt;code&gt;AIR&lt;/code&gt; units makes it easier to manipulate data and elements of the database.&lt;/p&gt;
&lt;p&gt;One of the most characteristic features of &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; is the ability to filter data in a seamless standard way instead of accessing data with a query plan which may vary between database models.
{: .btn .btn&amp;ndash;info}&lt;/p&gt;
&lt;p&gt;This filtering operation is similar to &lt;a href=&#34;http://www.qlik.com/us/products/qlikview&#34;&gt;QlikView&lt;/a&gt; and we will make a contrast with the same data set and example case we used in the &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000104/#explorefilter-data-via-selections&#34;&gt;5th article of this series&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;case1-condition-and-sorting-order&#34;&gt;Case1: Condition and Sorting Order&lt;/h3&gt;
&lt;p&gt;In this case we are looking for the &lt;code&gt;Supplier&lt;/code&gt; that has the minimum &lt;code&gt;Catalog&lt;/code&gt; &lt;code&gt;Price&lt;/code&gt; for a &lt;code&gt;Red Fire Hydrant Cap&lt;/code&gt; and we want to retrieve &lt;em&gt;supID&lt;/em&gt;, &lt;em&gt;supName&lt;/em&gt;, &lt;em&gt;supCity&lt;/em&gt;, &lt;em&gt;supCountry&lt;/em&gt;, &lt;em&gt;catPrice&lt;/em&gt;, &lt;em&gt;catQuantity&lt;/em&gt;, &lt;em&gt;prtID&lt;/em&gt;, &lt;em&gt;prtName&lt;/em&gt;, and &lt;em&gt;prtColor&lt;/em&gt;. The following &lt;a href=&#34;#code17&#34;&gt;SQL SELECT query&lt;/a&gt; and &lt;a href=&#34;#code18&#34;&gt;SPARQL query&lt;/a&gt; retrieve a result set using the relational or the RDF data model respectively.&lt;/p&gt;
&lt;p&gt;{: .notice}
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;
&lt;strong&gt;Code.17&lt;/strong&gt; - SQL query: sort &lt;code&gt;Catalog&lt;/code&gt; prices for a &lt;code&gt;Red Fire Hydrant Cap&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; suppliers.sid, suppliers.sname, suppliers.scountry,
       &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt;.catcost, &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt;.catqnt,
       parts.pid, parts.pname, parts.pcolor
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;   suppliers
       &lt;span style=&#34;color:#66d9ef&#34;&gt;INNER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; (parts
                   &lt;span style=&#34;color:#66d9ef&#34;&gt;INNER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; [&lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt;]
                           &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; parts.pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt;.catpid)
               &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; suppliers.sid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt;.catsid
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt;  (( ( parts.pid ) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt; ))
&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt;.catcost;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;{: .notice}
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;
&lt;strong&gt;Code.18&lt;/strong&gt; - SPARQL query: sort &lt;code&gt;Catalog&lt;/code&gt; prices for a &lt;code&gt;Red Fire Hydrant Cap&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;sup &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;supName &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;supCountry
       &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;catPrice &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;catQuantity
       &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prtName &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prtColor &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt dc:identifier &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;998&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^^&lt;/span&gt;xsd:int .
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt rdf:label &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prtName .
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt &lt;span style=&#34;color:#66d9ef&#34;&gt;schema&lt;/span&gt;:color &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prtColor .            

    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat wd:hasPart &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt .
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat &lt;span style=&#34;color:#66d9ef&#34;&gt;schema&lt;/span&gt;:cost &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;catPrice
    OPTIONAL &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat &lt;span style=&#34;color:#66d9ef&#34;&gt;schema&lt;/span&gt;:quantity &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;catQuantity .&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat wd:hasVendor &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;sup .
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;sup rdf:label &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;supName .
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;sup &lt;span style=&#34;color:#66d9ef&#34;&gt;schema&lt;/span&gt;:country &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;supCountry
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ASC&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;catPrice)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;{: .notice}
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;
&lt;strong&gt;Code. 19&lt;/strong&gt; - We have coded two solutions for the testing case using our &lt;code&gt;DBAPI&lt;/code&gt; &lt;code&gt;OrientR3S3&lt;/code&gt; package. In the first one (see condensed form in &lt;a href=&#34;#code20&#34;&gt;Code20&lt;/a&gt;) &lt;code&gt;Catalog Tuples&lt;/code&gt; are filtered then sorted with a single command ! The first tuple in the resulting set is the one we are looking for. Then we use filtering on &lt;code&gt;Part&lt;/code&gt; and &lt;code&gt;Supplier&lt;/code&gt; sets to obtain other information. Finally we project and we &lt;code&gt;Join&lt;/code&gt; all three tuples deleting any duplicates. In the second solution we start by filtering &lt;code&gt;Catalog&lt;/code&gt; collections, then we find the &lt;code&gt;Datum&lt;/code&gt; with the minimum &lt;code&gt;Catalog price&lt;/code&gt;. Then we filter &lt;code&gt;Catalog&lt;/code&gt;, &lt;code&gt;Supplier&lt;/code&gt; and &lt;code&gt;Part&lt;/code&gt; tuples, we project and join the final tuples.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;a href=&#34;http://test.healis.eu/post000107/filteringCase&#34;&gt;View Code Frame&lt;/a&gt;
{: .btn .btn&amp;ndash;small}&lt;/p&gt;
&lt;p&gt;{: .notice}
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;
&lt;strong&gt;Code.20&lt;/strong&gt; R3DM/S3DM Filtering. This is the condensed version of &lt;a href=&#34;#code19&#34;&gt;Code.19&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;    {&lt;span style=&#34;color:#66d9ef&#34;&gt;SUP&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;PRT&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;CAT&lt;/span&gt;} &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;spcModel, get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Entities&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
    prtID &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;           &lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;spcModel, find&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;prtID&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;][[&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;
    fval1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;           &lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;prtID, find&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;998&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;][[&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;


    minCatPriceTuple &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SortBy&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;
             &lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CAT&lt;/span&gt;, get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tuples&amp;#34;&lt;/span&gt;, filter&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;fval1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getValue&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#[[3]] &amp;amp;][[1]]&lt;/span&gt;

    catTuple &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; minCatPriceTuple &lt;span style=&#34;color:#e6db74&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getValue&lt;/span&gt;
    fval2    &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; minCatPriceTuple&lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;

    supTuple&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SUP&lt;/span&gt;, get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tuples&amp;#34;&lt;/span&gt;, filter&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;fval2, values&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;][[&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;

    prtTuple&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;OR3getAnything&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;PRT&lt;/span&gt;, get&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tuples&amp;#34;&lt;/span&gt;, filter&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;fval1, values&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;][[&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;

    prtTuple&lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; ;; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]]~&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Join&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;catTuple&lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; ;; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]]~&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Join&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;supTuple&lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt;{&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DeleteDuplicates&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;case2-condition-and-cleansing&#34;&gt;Case2: Condition and Cleansing&lt;/h3&gt;
&lt;p&gt;This is a case of detecting and correcting an inaccurate value from a record set that is returned by specifying a condition.&lt;/p&gt;
&lt;p&gt;{: .notice}
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;
&lt;strong&gt;Code. 21&lt;/strong&gt; - This is an example of cleansing in two phases, detection and correction. Here we can spot the error by filtering collection sets with the condition &lt;code&gt;prtName=Acme Widget Washer&lt;/code&gt;. There are two values in &lt;code&gt;prtUnit&lt;/code&gt; collection &lt;code&gt;kg&lt;/code&gt; and &lt;code&gt;kb&lt;/code&gt;. The second one should be &lt;code&gt;kg&lt;/code&gt;, it is a typographical error. We can fix this by deleting the &lt;code&gt;hyperlink&lt;/code&gt; that connects the &lt;code&gt;nexus 52:3&lt;/code&gt; (&lt;code&gt;red hyperbond&lt;/code&gt;), with the &lt;code&gt;datum kb&lt;/code&gt; (&lt;code&gt;green hyperatom&lt;/code&gt;), and then adding a new &lt;code&gt;hyperlink&lt;/code&gt; from &lt;code&gt;52:3&lt;/code&gt; to &lt;code&gt;datum 64:1&lt;/code&gt;.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;a href=&#34;http://test.healis.eu/post000107/dataCleansing&#34;&gt;View Code Frame&lt;/a&gt;
{: .btn .btn&amp;ndash;small}&lt;/p&gt;
&lt;h3 id=&#34;case3-graph-traversal&#34;&gt;Case3: Graph Traversal&lt;/h3&gt;
&lt;p&gt;This is how we perform graph traversal in &lt;strong&gt;R3DM/S3DM&lt;/strong&gt;. Instead of visiting each vertex in the graph we filter &lt;code&gt;hyperbonds&lt;/code&gt; on account of the &lt;code&gt;hyperatoms&lt;/code&gt; they share.&lt;/p&gt;
&lt;p&gt;{: .notice}
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;
&lt;strong&gt;Code. 22&lt;/strong&gt; - We start by specifying a condition, e.g. visiting a single &lt;code&gt;hyperatom&lt;/code&gt;. This is a green node on the &lt;strong&gt;first hypergraph&lt;/strong&gt; with the label &lt;code&gt;Acme Widget Washer&lt;/code&gt;. Now we can get &lt;code&gt;hyperbonds&lt;/code&gt; (red nodes) and find all its siblings. This is also a visual representation of &lt;code&gt;Part&lt;/code&gt; tuples. There are two &lt;code&gt;Part&lt;/code&gt; items with the description &lt;code&gt;Acme Widget Washer&lt;/code&gt;. One has &lt;code&gt;Silver&lt;/code&gt; color, the other is &lt;code&gt;Red&lt;/code&gt; and both of them weigh &lt;code&gt;142.88kg&lt;/code&gt;. In the same hypergraph we have also two identifiers &lt;code&gt;993&lt;/code&gt; and &lt;code&gt;994&lt;/code&gt; these are &lt;code&gt;prtID Attribute&lt;/code&gt; values that are shared with &lt;code&gt;Catalog Entity&lt;/code&gt; tuples. Therefore in the &lt;strong&gt;second hypergraph&lt;/strong&gt; we have filtered &lt;code&gt;Catalog&lt;/code&gt; tuples and we have drawn three of them that are related to these two &lt;code&gt;Part&lt;/code&gt; items. This time there are common &lt;code&gt;hyperatoms&lt;/code&gt;, those with a supplier identifier (1081, 1084), that are shared between &lt;code&gt;Catalog&lt;/code&gt; and &lt;code&gt;Supplier&lt;/code&gt;. In the &lt;strong&gt;third hypergraph&lt;/strong&gt; we get a complete 360 degrees view of our case by filtering the &lt;code&gt;Supplier Entity&lt;/code&gt;. Now we can see that there are two &lt;code&gt;Suppliers&lt;/code&gt; one located in USA that supplies both &lt;code&gt;Part&lt;/code&gt; items and the other in &lt;code&gt;UK&lt;/code&gt; that supplies only the &lt;code&gt;Silver Acme Widget Washer&lt;/code&gt;.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;a href=&#34;http://test.healis.eu/post000107/graphTraversal&#34;&gt;View Code Frame&lt;/a&gt;
{: .btn .btn&amp;ndash;small}&lt;/p&gt;
&lt;p&gt;In all three cases we have demonstrated that there are two ways to present the resulting data set from filtering. We can either return item collections, i.e. sets of values for each &lt;code&gt;Attribute&lt;/code&gt; we are interested in, or projected tuples from each &lt;code&gt;Entity&lt;/code&gt; separately or in a consolidated multi-grid flat form.&lt;/p&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;We have presented &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; data modeling framework from a multi-perspective view. The building blocks of &lt;a href=&#34;https://healis.eu/en/post/20170412/#conceptual-perspective&#34;&gt;&lt;strong&gt;conceptual&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;https://healis.eu/en/post/20170412/#logical-perspective&#34;&gt;&lt;strong&gt;logical&lt;/strong&gt;&lt;/a&gt; perspective are paired up. &lt;a href=&#34;https://healis.eu/en/post/20170412/#instances-perspective&#34;&gt;&lt;strong&gt;Types are separated from instances&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;https://healis.eu/en/post/20170412/#semantic-perspective&#34;&gt;&lt;strong&gt;semantics&lt;/strong&gt;&lt;/a&gt; are defined and explained with three alternative paradigms &lt;a href=&#34;https://healis.eu/en/post/20170412/#object-oriented-view&#34;&gt;&lt;strong&gt;object-oriented&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://healis.eu/en/post/20170412/#network-graph-view&#34;&gt;&lt;strong&gt;network graph&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;https://healis.eu/en/post/20170412/#semiotic-view&#34;&gt;&lt;strong&gt;semiotics&lt;/strong&gt;&lt;/a&gt;. It is the interpreted, encoded (materialized) and representative forms in the triangle of reference that gave &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; its name. This trilateral principle is applied to everything including the architectural design of &lt;strong&gt;R3DM/S3DM&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The eight type systems of &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; play the role of a formal upper level ontology and its construction is based on the &lt;a href=&#34;http://neuro.gr/NULO/toc.htm&#34;&gt;Neurorganon Upper Level Ontology&lt;/a&gt; (NULON). Terms of this ontology describe the framework with a hierarchical organizational structure that defines schemata and types for &lt;a href=&#34;https://healis.eu/en/post/20170412/#model-type-system-mts&#34;&gt;models&lt;/a&gt;, &lt;a href=&#34;https://healis.eu/en/post/20170412/#entity-type-system-ets&#34;&gt;entities&lt;/a&gt;, &lt;a href=&#34;https://healis.eu/en/post/20170412/#attribute-type-system-ats&#34;&gt;attributes&lt;/a&gt;, &lt;a href=&#34;https://healis.eu/en/post/20170412/#items-type-system-its&#34;&gt;items&lt;/a&gt;, &lt;a href=&#34;https://healis.eu/en/post/20170412/#value-type-system-vts&#34;&gt;values&lt;/a&gt;, &lt;a href=&#34;https://healis.eu/en/post/20170412/#data-sources-type-system-dss&#34;&gt;data sources&lt;/a&gt;, &lt;a href=&#34;https://healis.eu/en/post/20170412/#link-type-system-lts&#34;&gt;links&lt;/a&gt; and &lt;a href=&#34;https://healis.eu/en/post/20170412/#database-type-system-dbs&#34;&gt;database metadata&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In terms of querying and managing data there is a set of &lt;a href=&#34;https://healis.eu/en/post/20170412/#functional-operations&#34;&gt;functional operations&lt;/a&gt; that match SQL &lt;code&gt;Select&lt;/code&gt;, &lt;code&gt;Insert&lt;/code&gt;, &lt;code&gt;Update&lt;/code&gt;, &lt;code&gt;Delete&lt;/code&gt; statements and there is a &lt;a href=&#34;https://healis.eu/en/post/20170412/#filtering&#34;&gt;filtering mechanism&lt;/a&gt; implemented which is equivalent to SQL &lt;code&gt;Where&lt;/code&gt; conditions. Thanks to the powerful Wolfram Language transformations we can return results in the form of a table, &lt;code&gt;Rule&lt;/code&gt; set, &lt;code&gt;Association&lt;/code&gt; set, &lt;code&gt;Dataset&lt;/code&gt;, or even a network graph. &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; has also been defined as a &lt;a href=&#34;https://healis.eu/en/post/20170412/#r3dm-definition&#34;&gt;&lt;strong&gt;functional representation of information resources that are mapped to a materialized form (realization)&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;epilogue&#34;&gt;Epilogue&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;R3DM/S3DM&lt;/strong&gt; is an attempt to unify existing popular data models. The key element to achieve this is the association construct. We have devoted five posts of this series to highlight differences and similarities of &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000100&#34;&gt;Relational&lt;/a&gt;, &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000101/&#34;&gt;Topic Map&lt;/a&gt;, &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000102/&#34;&gt;Property Graph&lt;/a&gt;, &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000103/&#34;&gt;RDF&lt;/a&gt; and &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000104/http://orientdb.com/docs/master/Graph-Editor.html&#34;&gt;Qlik&lt;/a&gt; data models that are dependent on associations. And the innovative aspect of &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; is that it avoids namespace, addressing, and identification problems by adopting a uniform representation of everything with numerical vector references.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;R3DM/S3DM&lt;/strong&gt; is a framework to construct a &lt;strong&gt;Reference Database Management System&lt;/strong&gt;, it is &lt;strong&gt;RDBMS&lt;/strong&gt; redefined. The first class citizen in this system is the &lt;strong&gt;Reference&lt;/strong&gt;. It is not the &lt;strong&gt;tuple&lt;/strong&gt; of Entity-Relationship data model, or the &lt;strong&gt;triplet&lt;/strong&gt; of RDF/OWL data model, or even the &lt;strong&gt;nodes and edges&lt;/strong&gt; of the graph data model. &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; is based on &lt;strong&gt;Atomic Information Reference&lt;/strong&gt; units (&lt;code&gt;AIR&lt;/code&gt;) and it can assimilate table, column, tuple, key-value, triplet, associations and graph data structures. This kind of granularity of &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; controls also the level of information detail that will be presented to the user e.g. show only &lt;code&gt;hyperbonds&lt;/code&gt; i.e. Entity instances.&lt;/p&gt;
&lt;p&gt;Information resources are not handled by name in &lt;strong&gt;R3DM/S3DM&lt;/strong&gt;, they are always represented and function as meaningful keys (numerical vectors). We escape from the namespace entanglement and alleviate the complexity of linked data by smart &lt;code&gt;AIR&lt;/code&gt; units that are represented in a uniform way and their digital form can be processed, retrieved and stored efficiently and/or combined to create composite information structures. Where bit is the basic construction unit for data, &lt;code&gt;AIR&lt;/code&gt; becomes the fundamental processing unit for structured information. It is now possible to have a giant global graph (GGG) network of information resources based on the power of semiosis with a reference mechanism that is not built with character strings (URL) but it is similar to the Internet Protocol address (IP).&lt;/p&gt;
&lt;p&gt;This is our mantra, &lt;strong&gt;build valuable relations; establish effective communications&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;the-end&#34;&gt;The End&lt;/h2&gt;
&lt;p&gt;&amp;hellip; or perhaps the beginning of a new era in databases and data modeling.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/hp/update/6257915101387591680&#34;&gt;LinkedIn - 20170412 Update about duration, effort and acknowledgements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/r3dms3dm-build-powerful-relationships-easily-hatzis-phd&#34;&gt;LinkedIn - 20170412 Article&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/hp/update/6257927185156444160&#34;&gt;LinkedIn - 20170412 Update about LinkedIn article and request for comments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/feed/update/urn:li:activity:6262704855635365889/&#34;&gt;LinkedIn - 20170426 Update about RDF predicate and literal triplets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/feed/update/urn:li:activity:6273400181287456768&#34;&gt;LinkedIn - 20170525 Update and comment - Post of Theodore Hills - &amp;ldquo;Data Architecture COMN Sense: Relationships and Semantics&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/2357895/2357895-6273439543236657153&#34;&gt;LinkedIn - 20170525 Data Modeling Group -  Relational-Graph DBMS, how do we bridge the gap ?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/feed/update/urn:li:activity:6265895258345783296/&#34;&gt;LinkedIn - 20170525 Update and comment - Post of Theodore Hills - &amp;ldquo;Understand Relational to Understand the Secrets of Data&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.facebook.com/athanassios.hatzis/posts/10212982570867520&#34;&gt;Facebook - 20170412 Post&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Disqus    - &lt;a href=&#34;http://healis.eu/r3dm_project/post000107/#disqus_thread&#34;&gt;Number of Comments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://disqus.com/home/discussion/channel-healis/r3dms3dm_build_powerful_meaningful_cohesive_relationships_easily/&#34;&gt;Disqus   - Discussion Channel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.datasciencecentral.com/forum/topics/r3dm-s3dm-a-semiotic-data-modelling-framework-to-power-on-disk&#34;&gt;Data Science Central - 20170510 Discussion - R3DM/S3DM : A Semiotic Data Modelling Framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.datasciencecentral.com/forum/topics/sql-to-nosql-translator?commentId=6448529%3AComment%3A567101&#34;&gt;Data Science Central - 20170525 Discussion Comment on SQL to NoSQL translator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;© Athanassios I. Hatzis, March 2017 &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>From Declarative to Functional Database Operations</title>
      <link>https://healis.eu/en/post/20160210/</link>
      <pubDate>Wed, 10 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20160210/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;This is a new release of OrientDB RESTful API in Mathematica, enhanced with new commands such as &lt;strong&gt;addIndex&lt;/strong&gt;, &lt;strong&gt;addInstance&lt;/strong&gt; and &lt;strong&gt;addEdge&lt;/strong&gt; used especially in Graph Database modeling. Most important the functional set of API commands is built in a concise and succinct way. Database operations are now grouped in four main categories, &lt;strong&gt;GET&lt;/strong&gt;, &lt;strong&gt;UPDATE&lt;/strong&gt;, &lt;strong&gt;DELETE&lt;/strong&gt;, and &lt;strong&gt;ADD&lt;/strong&gt;, a.k.a. (&lt;strong&gt;GUDA&lt;/strong&gt;), that resemble &lt;strong&gt;Create&lt;/strong&gt;, &lt;strong&gt;Read&lt;/strong&gt;, &lt;strong&gt;Update&lt;/strong&gt;, and &lt;strong&gt;Delete&lt;/strong&gt;, a.k.a. (&lt;strong&gt;CRUD&lt;/strong&gt;), major functions that are implemented in relational database applications. The number of functional arguments have been also significantly revised and classified as optional and mandatory depending on the command that they are applied.&lt;/p&gt;
&lt;div class=&#34;responsive-wrap&#34;&gt;
	&lt;object data=&#34;http://test.healis.eu/dbapi/DocumentationPDF/GUDA.pdf&#34; type=&#34;application/pdf&#34; style=&#34;margin: 0 auto;height: 100vh;width: 100%;&#34;&gt;
		&lt;embed src=&#34;http://test.healis.eu/dbapi/DocumentationPDF/GUDA.pdf&#34; type=&#34;application/pdf &#34;style=&#34;margin: 0 auto;height: 100vh;width: 100%;&#34;&gt;
			&lt;em&gt;It seems that your browser cannot display the PDF file; Please use this &lt;a href=&#34;http://test.healis.eu/dbapi/DocumentationPDF/GUDA.pdf&#34;&gt;&lt;strong&gt;link&lt;/strong&gt; &lt;/a&gt;
			instead. Thanks!&lt;/em&gt;
	&lt;/object&gt;
&lt;/div&gt;
&lt;p&gt;The implementation of the package is based on the &lt;a href=&#34;https://orientdb.org/docs/3.0.x/misc/OrientDB-REST.html&#34;&gt;HTTP RESTful SQL commands of OrientDB&lt;/a&gt;. The &lt;a href=&#34;https://healis.eu/en/project/wolfram_apis/&#34;&gt;Mathematica API&lt;/a&gt; project, can be extended to cover also the programming operations of other DBMS, in an analogy of the functional patterns and operations of this package.&lt;/p&gt;
&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;
&lt;p&gt;These are a few &lt;strong&gt;CRUD&lt;/strong&gt; examples that are transformed to &lt;strong&gt;GUDA&lt;/strong&gt; in order to compare the functional with the declarative form of SQL operations.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; Create bidirectional linking&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; i&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; association
CREATE EDGE isOwnerOf FROM 12&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;0 TO 16&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;0
ODBapi&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;com&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;addEdge&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; class&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;isOwnerOf&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;12:0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; to&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;16:0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; Read records with projection and filtering
SELECT &lt;span style=&#34;color:#a6e22e&#34;&gt;@rid&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; DOB FROM Person WHERE lastName&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Smith&amp;#34;&lt;/span&gt;
ODBapi&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;com&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;getRecords&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; prjkt&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@rid, DOB&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; class&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Person&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; propnam&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lastName&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; propval&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Smith&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; Update with restrictions
UPDATE Person set age&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;57 WHERE age&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;60
ODBapi&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;com&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;updValues&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; class&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Person&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; propnam&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;age&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; propval&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;57 where age&amp;lt;60&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; Delete all the records of a &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;table&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; vertex&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; document&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;....)&lt;/span&gt;
DELETE VERTEX Person
ODBapi&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;com&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;delRecords&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; class&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Person&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; all&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;True&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; construct&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;VERTEX&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;https://healis.eu/en/project/wolfram_apis/&#34;&gt;DBAPI application project&lt;/a&gt; is open source and free. You are most welcome to contribute in the Github repository of the project that can be found &lt;a href=&#34;https://github.com/healiseu/dbapiProject&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Download the latest release of DBAPI from &lt;a href=&#34;https://test.healis.eu/dbapi/Release/dbapi-latest-release.zip&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download and run this &lt;a href=&#34;https://test.healis.eu/dbapi/Test/Installation.nb&#34;&gt;Mathematica Notebook code&lt;/a&gt; to test the installation of the package&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;testing&#34;&gt;Testing&lt;/h2&gt;
&lt;p&gt;The OrientDB API Package can be tested with &lt;a href=&#34;https://test.healis.eu/dbapi/Test/OrientDB%20API%20Demo%201%20-%20Test%20API%20Commands.nb&#34;&gt;Demo 1-Test API Commands&lt;/a&gt; and &lt;a href=&#34;https://test.healis.eu/dbapi/Test/OrientDB%20API%20Demo%203%20-%20Schemaless%20vs%20Schemafull%20Operations.nb&#34;&gt;Demo 3-Schemaless vs Schemafull Operations&lt;/a&gt; Notebooks.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This functional RESTful API can be served as a prototype for a uniform, universal treatment of data language (&lt;strong&gt;UDL&lt;/strong&gt;) that will be independent of the DBMS implementation. Commands and parameters can become more efficient and execution can be simplified if we take on account the hierarchical relationship of &lt;strong&gt;Server&lt;/strong&gt;, &lt;strong&gt;Database&lt;/strong&gt;, &lt;strong&gt;Class&lt;/strong&gt;, &lt;strong&gt;Property&lt;/strong&gt; and &lt;strong&gt;Record&lt;/strong&gt; containers. We foresee that it will be far more intuitive, user-friendly, and easier to program with a functional style than the declarative commands of its SQL ancestor.&lt;/p&gt;
&lt;h2 id=&#34;documentation-pages&#34;&gt;Documentation Pages&lt;/h2&gt;
&lt;p&gt;If you have already installed the DBAPI project, then you can search Wolfram Mathematica documentation for &lt;code&gt;DBAPI&lt;/code&gt;. This is your starting point for browsing the documentation. For demonstration purposes, we have included here the following documentation pages in pdf format for the &lt;code&gt;ODBapi&lt;/code&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>OrientDB Mathematica Package</title>
      <link>https://healis.eu/en/post/20151230/</link>
      <pubDate>Wed, 30 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20151230/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;The main function of this Mathematica package, &lt;code&gt;ODBapi&lt;/code&gt;, is built on top of the &lt;a href=&#34;https://reference.wolfram.com/language/ref/URLFetch.html&#34;&gt;URLFetch&lt;/a&gt; built-in function. &lt;a href=&#34;https://orientdb.org/docs/3.0.x/misc/OrientDB-REST.html&#34;&gt;OrientDB RESTful HTTP API&lt;/a&gt; commands are ported into Wolfram Language through &lt;a href=&#34;https://reference.wolfram.com/language/ref/URLFetch.html&#34;&gt;URLFetch&lt;/a&gt; and then &lt;code&gt;ODBapi&lt;/code&gt; commands are built with arguments that specify options with rules of the form &lt;code&gt;name -&amp;gt; value&lt;/code&gt;. This package has also other utility functions especially implemented for OrientDB. &lt;code&gt;OrientDB Package&lt;/code&gt; is part of the &lt;a href=&#34;https://healis.eu/en/project/wolfram_apis/&#34;&gt;Wolfram API application project&lt;/a&gt;. Visit the official page of the project for installation and testing instructions.&lt;/p&gt;
&lt;h2 id=&#34;discussion&#34;&gt;Discussion&lt;/h2&gt;
&lt;p&gt;OrientDB is a multi-model, NoSQL, DBMS based on 16 years of research. Orient Technologies, the company that supports the product, has published more than 60 releases and there is constant and frequent adaptation to user demand and the latest technology available. OrientDB is Open Source and FREE for any purpose. Good news are that this &lt;strong&gt;OrientDB Mathematica Package is also Open Source and Free&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;OrientDB is using an SQL-like programming language for managing data. We consider that this can be a turning point for innovation, adaptation, and extension of SQL language. Although SQL is widely used and familiar to many programmers, we argue that its use becomes complicated on graph data models. OrientDB SQL, i.e. &lt;strong&gt;OSQL&lt;/strong&gt;, has been extended to cover operations on Graph Model, but with the cost of adding extra SQL commands. This level of detail can be hidden from the user, and a more abstracted language can be built to cover both the Graph Model and the underlying Document Model.&lt;/p&gt;
&lt;p&gt;Moreover, normally SQL consists of a &lt;strong&gt;Data Definition Language&lt;/strong&gt;, &lt;strong&gt;Data Manipulation Language&lt;/strong&gt; and &lt;strong&gt;Data Control Language&lt;/strong&gt;. In OrientDB there are 34 different commands divided into six categories. Four of them are related to the manipulation of data structure (Graph,Schema,Index,Database) and two of them concern operations (Create-Read-Update-Delete and Utility).&lt;/p&gt;
&lt;p&gt;There is some analogy of &lt;strong&gt;OSQL&lt;/strong&gt; with the &lt;code&gt;ODBapi&lt;/code&gt; function of the &lt;code&gt;OrientDB Package&lt;/code&gt;. We are overloading the function with multiple definitions that are derived from the use of optional and mandatory arguments. This differentation is based on the commands (Add, Del, Get, Update, Import/Export, Login/Logout) and the various data structures (Server, Database, Class-Vertex-Edge, Property, Record, Document, Value). See the documentation page below for more information.&lt;/p&gt;
&lt;p&gt;We argue that this effort to transform the OrientDB SQL set of commands to a function with parameters is a good start for a uniform, universal treatment of data language (&lt;strong&gt;UDL&lt;/strong&gt;). Most important in such a design are: the parameter for the basic operation (&lt;strong&gt;ADD, DEL, GET, UPD, LNK, IRT, LOG&lt;/strong&gt;), and the parameter for the type of construct e.g. &lt;strong&gt;Database, Class, Property, Record, and Value&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;With that guideline in mind, SELECT becomes &lt;strong&gt;GET&lt;/strong&gt;, INSERT and CREATE become &lt;strong&gt;ADD&lt;/strong&gt;, TRUNCATE AND DELETE become &lt;strong&gt;DEL&lt;/strong&gt;, UPDATE and ALTER become &lt;strong&gt;UPD&lt;/strong&gt;. The current OrientDB package needs more programming effort to reach the state we described. But we foresee that it will be far more intuitive, user-friendly and easy to program than its SQL ancestor.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Most of the functionality of &lt;a href=&#34;https://orientdb.org/docs/3.0.x/misc/OrientDB-REST.html&#34;&gt;OrientDB HTTP-JSON API&lt;/a&gt; is embedded in Mathematica.  The user is able to work with OrientDB database in the native Wolfram Language environment. &lt;a href=&#34;https://healis.eu/en/project/wolfram_apis/&#34;&gt;Wolfram API application project&lt;/a&gt; in general combines fundamental bult-in data structures, &lt;a href=&#34;https://reference.wolfram.com/language/ref/List.html&#34;&gt;List&lt;/a&gt;, &lt;a href=&#34;https://reference.wolfram.com/language/ref/Rule.html&#34;&gt;Rule&lt;/a&gt;, &lt;a href=&#34;https://reference.wolfram.com/language/ref/Association.html&#34;&gt;Association&lt;/a&gt; and &lt;a href=&#34;https://reference.wolfram.com/language/ref/Dataset.html&#34;&gt;Dataset&lt;/a&gt; of the Wolfram Language with the native JSON permanent storage, retrieval  and manipulation mechanism of OrientDB database. The project is open source and free, therefore it can be downloaded from those interested in building &lt;a href=&#34;https://reference.wolfram.com/workbench/index.jsp?topic=/com.wolfram.eclipse.help/html/tasks/applications/mathematicaapps.html&#34;&gt;Mathematica application projects&lt;/a&gt; and those interested in porting data from RESTful services and NoSQL databases into Mathematica.&lt;/p&gt;
&lt;h2 id=&#34;documentation-pages&#34;&gt;Documentation Pages&lt;/h2&gt;
&lt;p&gt;For demonstration purposes, we have included here the following documentation pages in pdf format for the &lt;code&gt;ODBapi&lt;/code&gt; and &lt;code&gt;ODBgetFieldAttributes&lt;/code&gt; functions of the &lt;code&gt;OrientDB Package&lt;/code&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;div class=&#34;responsive-wrap&#34;&gt;
	&lt;object data=&#34;http://test.healis.eu/dbapi/DocumentationPDF/ODBapi.pdf&#34; type=&#34;application/pdf&#34; style=&#34;margin: 0 auto;height: 100vh;width: 100%;&#34;&gt;
		&lt;embed src=&#34;http://test.healis.eu/dbapi/DocumentationPDF/ODBapi.pdf&#34; type=&#34;application/pdf &#34;style=&#34;margin: 0 auto;height: 100vh;width: 100%;&#34;&gt;
			&lt;em&gt;It seems that your browser cannot display the PDF file; Please use this &lt;a href=&#34;http://test.healis.eu/dbapi/DocumentationPDF/ODBapi.pdf&#34;&gt;&lt;strong&gt;link&lt;/strong&gt; &lt;/a&gt;
			instead. Thanks!&lt;/em&gt;
	&lt;/object&gt;
&lt;/div&gt;
&lt;div class=&#34;responsive-wrap&#34;&gt;
	&lt;object data=&#34;http://test.healis.eu/dbapi/DocumentationPDF/ODBgetFieldAttributes.pdf&#34; type=&#34;application/pdf&#34; style=&#34;margin: 0 auto;height: 100vh;width: 100%;&#34;&gt;
		&lt;embed src=&#34;http://test.healis.eu/dbapi/DocumentationPDF/ODBgetFieldAttributes.pdf&#34; type=&#34;application/pdf &#34;style=&#34;margin: 0 auto;height: 100vh;width: 100%;&#34;&gt;
			&lt;em&gt;It seems that your browser cannot display the PDF file; Please use this &lt;a href=&#34;http://test.healis.eu/dbapi/DocumentationPDF/ODBgetFieldAttributes.pdf&#34;&gt;&lt;strong&gt;link&lt;/strong&gt; &lt;/a&gt;
			instead. Thanks!&lt;/em&gt;
	&lt;/object&gt;
&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtomicDB Mathematica AddOn (ADBM)</title>
      <link>https://healis.eu/en/post/20151009/</link>
      <pubDate>Fri, 09 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20151009/</guid>
      <description>&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Enhanced AtomicDB current API functionality with powerful new commands for Mathematica users&lt;/li&gt;
&lt;li&gt;Build interactive demos, powerful presentations and application in the vast environment of Wolfram Language with nearly 5,000 built-in functions at a fraction of time it would require to build, test, and support these, in other programming languages.&lt;/li&gt;
&lt;li&gt;Debug easily your applications by dynamic programming and interactive sessions&lt;/li&gt;
&lt;li&gt;Create multiple visualization schemes, network topologies, data mining and search indexing algorithms powered by dynamically configured GUIs for the non-experienced user.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;adbm-demo-version-installation&#34;&gt;ADBM Demo Version Installation&lt;/h2&gt;
&lt;p&gt;Here is some &lt;a href=&#34;http://test.healis.eu/atomicdb/20150409-api-windows-x86-64/nb/demoVersion-installation.nb&#34;&gt;Mathematica Notebook code&lt;/a&gt; to test the installation of the package .dll&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://test.healis.eu/atomicdb/20150409-api-windows-x86-64/zip/adb-demo.zip&#34;&gt;Unzip .DLL file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Check &lt;!-- raw HTML omitted --&gt;$LibraryPath&lt;!-- raw HTML omitted --&gt; and find out the exact location of &lt;!-- raw HTML omitted --&gt;$UserBaseLibrary&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Place the DLL file under &lt;!-- raw HTML omitted --&gt;$UserBaseLibrary&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Execute the rest of the code above.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you succeed, a new window with the title &amp;ldquo;AtomicDB Output Window&amp;rdquo; will be opened. The API package has been loaded. You can close all the windows.&lt;/p&gt;
&lt;h2 id=&#34;adbm-demo-version-testing&#34;&gt;ADBM Demo Version Testing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Download and Run &lt;a href=&#34;http://test.healis.eu/atomicdb/20150409-api-windows-x86-64/nb/demoVersion-test.nb&#34;&gt;Mathematica Notebook Demo Version of ADBM&lt;/a&gt; or view the file in a &lt;a href=&#34;http://test.healis.eu/atomicdb/20150409-api-windows-x86-64/pdf/demoVersion-test.pdf&#34;&gt;pdf format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;That will open automatically another &lt;a href=&#34;http://test.healis.eu/atomicdb/20150409-api-windows-x86-64/nb/demoVersion-output.nb&#34;&gt;Mathematica Notebook file to output the result of computation&lt;/a&gt;. View the output file in a &lt;a href=&#34;http://test.healis.eu/atomicdb/20150409-api-windows-x86-64/pdf/demoVersion-output.pdf&#34;&gt;pdf format&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;adbm-professional-version-comparison&#34;&gt;ADBM Professional Version Comparison&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Compare Mathematica Notebook Demo version testing file with the &lt;a href=&#34;http://test.healis.eu/atomicdb/20150409-api-windows-x86-64/nb/proVersion-test.nb&#34;&gt;testing of ADBM professional version&lt;/a&gt;, view that file in a &lt;a href=&#34;http://test.healis.eu/atomicdb/20150409-api-windows-x86-64/pdf/proVersion-test.pdf&#34;&gt;pdf format&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Compare Mathematica Notebook Demo Output with that of &lt;a href=&#34;http://test.healis.eu/atomicdb/20150409-api-windows-x86-64/nb/proVersion-output.nb&#34;&gt;ADBM professional output&lt;/a&gt;, view that file in a &lt;a href=&#34;http://test.healis.eu/atomicdb/20150409-api-windows-x86-64/pdf/proVersion-output.pdf&#34;&gt;pdf format&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;AtomicDB AddOn Professional Version makes it a lot easier to get the same result; it boosts functionality and programmability !&lt;/p&gt;
&lt;h2 id=&#34;adbm-pro-version-includes&#34;&gt;ADBM Pro Version Includes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Full Set of API Primitive Instructions&lt;/li&gt;
&lt;li&gt;Powerful Enhanced Commands&lt;/li&gt;
&lt;li&gt;Output Commands for any type of AtomicDB API objects&lt;/li&gt;
&lt;li&gt;Transformation Commands for any type of AtomicDB API objects&lt;/li&gt;
&lt;li&gt;Type Checking of Commands with new Mathematica Test Predicates&lt;/li&gt;
&lt;li&gt;Get Data By Key or By Value from Native Mathematica Structures&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Contact us to discuss your needs and learn more about the ADBM Pro version we use for our consultancy services and solutions we offer on top of this Add-On.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Plerophoria vs Information</title>
      <link>https://healis.eu/en/post/20150523/</link>
      <pubDate>Sat, 23 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20150523/</guid>
      <description>&lt;h2 id=&#34;information&#34;&gt;Information&lt;/h2&gt;
&lt;p&gt;The origin of the word information reveals its use. Inform comes from the Latin verb informare, which literally means to give form, or to form an idea. Form is the mold, the container, that is used to give shape, to molten the content. When computer scientists were designing and constructing the first digital computer, at the same time digital information was given birth and shape. Modern computers operate with memory chips and those are mere containers of storing sequences of 0s and 1s.&lt;/p&gt;
&lt;h2 id=&#34;plērophoria&#34;&gt;Plērophoria&lt;/h2&gt;
&lt;p&gt;The above interpretation and use of the word information is typical of western culture way of thinking. Although it is convenvient to keep things in boxes, Eastern philosophers used to think differently. The ancient and modern Greek word for information is &lt;code&gt;πληροφορία&lt;/code&gt;, which transliterates (plērophoria) from πλήρης (plērēs) “fully” and φέρω (phorein) frequentative of (pherein) to carry through.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;It literally means &amp;ldquo;bears fully&amp;rdquo; or &amp;ldquo;conveys fully&amp;rdquo;. In modern Greek the word Πληροφορία is still in daily use and has the same meaning as the word information in English&lt;/strong&gt; &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This contrasting use and interpretation of the word plerophoria traces its roots back to Socrates, Plato, and Aristotle’s theory of semiosis. In this regard every word plays the role of a symbol, i.e. sign that can be interpreted to communicate information to the one decoding that specific type of sign. There is an intimate and inseperable connection of the signified, i.e. the concept whose meaning the interpretant attempts to decode, with the signifier, i.e. sign’s physical form such as the sound of a word.&lt;/p&gt;
&lt;p&gt;Every bit of digital information, i.e. 0 or 1 assimilates this triadic relationship. Bits are symbols signified as true or false taking the form of input voltage (signifier). The infinite combination of sequences of such symbols gives us the power to represent anything digitally. Their meaning depends on how we interpret these sequences, as numbers, letters, sounds, color, or anything else that can be encoded. The form of the signifier is not limited to that of a mere container that stores a sequence of 0s and 1s. It is a fully functional level of abstraction connected to higher and lower levels by applying recursively the theory of semiosis until we reach CPU’s binary level.&lt;/p&gt;
&lt;h2 id=&#34;the-turing-machine&#34;&gt;The Turing Machine&lt;/h2&gt;
&lt;p&gt;One-tape Turing machine according to Hopcroft and Ullman can be formally defined as a 7-tuple. Elements of this tuple are members of three distinct sets. A non-empty set of tape alphabet symbols, e.g. {0, 1}, a non-empty set of states, e.g. {A, B, C, HALT} and a set of state transitions e.g. {L, R}. Turing machine reads the tape symbols and executes a sequence of instructions according to a state table. Although this is not the space and time to adapt the theory of semiosis on the Turing machine we can clearly see an analogy. The tape symbol plays the role of a sign, the signified instruction is executed according to the interpretation given by the state table, and there is the physical form it takes as a printed text symbol on a white square of a paper tape. You can apply the same logic to the set of states and the set of transitions because these are symbols (signs) too; they can be interpreted and realized in some other physical or non-physical form.&lt;/p&gt;
&lt;h2 id=&#34;r3dms3dm-abstraction-mechanism&#34;&gt;R3DM/S3DM Abstraction Mechanism&lt;/h2&gt;
&lt;p&gt;In digital representation of information we can define a chain of interpretations, representations and realizations that are built in a consecutive order. This chain of semiosis reveals the mechanism that we can use to build higher levels of abstraction. At each step the symbol that is used to link together the signifier with the signified can become a fundamental unit, i.e. signifier to build the next level of abstraction. Thus we can move in two directions, we can generalize or we can specialize.&lt;/p&gt;
&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/6514034/6514034-5883270314305028098&#34;&gt;LinkedIn - 20140613 Computational Semiotics - Information vs Plerophoria&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/plerophoria-vs-information-athanassios-i-hatzis-phd/&#34;&gt;LinkedIn - 20150523 Article - Plerophoria vs Information&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Wikipedia, the &lt;a href=&#34;https://en.wikipedia.org/wiki/Information#Etymology&#34;&gt;Etymology section&lt;/a&gt; of the term Information was updated by user Healis with the quoted text above on the 13th of June 2014 &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>S3DM/R3DM vs RDF</title>
      <link>https://healis.eu/en/post/20131105/</link>
      <pubDate>Tue, 05 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20131105/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#the-variable-value-pair-vvp&#34;&gt;The Variable-Value Pair (VVP)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#vvp-and-the-identity-crisis-on-the-web&#34;&gt;VVP and the identity crisis on the web&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#conceptual-model-vs-data-model&#34;&gt;Conceptual Model vs Data Model&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#data-and-metadata&#34;&gt;Data and Metadata&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#a-computational-semiotics-explanation&#34;&gt;A Computational Semiotics Explanation&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#realization&#34;&gt;Realization&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#representation&#34;&gt;Representation&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#reference&#34;&gt;Reference&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#resource&#34;&gt;Resource&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;

&lt;h2 id=&#34;the-variable-value-pair-vvp&#34;&gt;The Variable-Value Pair (VVP)&lt;/h2&gt;
&lt;p&gt;Recently, 5th of November 2013, another serialization of RDF, JSON-LD was proposed by W3C. This made me think over about the fundamental data representation in computing systems and applications. It is the name–value pair, key–value pair, field–value pair or &lt;a href=&#34;https://en.wikipedia.org/wiki/Attribute%E2%80%93value_pair&#34;&gt;attribute–value pair&lt;/a&gt; according to Wikipedia.&lt;/p&gt;
&lt;p&gt;Professional IT developers will recognise it also as the variable-value pair in programming, as the (Object, Attribute), Value pair in OOP, as the field-value in RDB databases, as the key-value in no-SQL databases, as the query string in URL, as the (SP)-O in RDF and as the attribute-value pair in the most popular data interchange format in our days the JSON open standard format. This demonstrates how powerful this &amp;ldquo;pair&amp;rdquo; is. Two fundamental observations arise from this comparison.&lt;/p&gt;
&lt;p&gt;First, there is an emergent need to describe any kind of relation between two things in a natural, human readable way. And second, there is the power of using it as the cornerstone to build on top of it. Everything has to be expressed as VVP in a semantic layered approach, similar to what the Topic Map data model proposed, i.e. distinguish between associations between concepts and occurrences for the representation of them. In my opinion, this is where the semantic web stack fails as it has mixed the syntax, with retrieval of information and representation of it.&lt;/p&gt;
&lt;p&gt;What I propose in R3DM data model is a clear separation of Information Realization (IREA), i.e. literals, data types, I call them DataIR or DIR (Data Information Resources) from Information Representation (IREP), i.e. image, web page, quantity, number, etc. I call them BinIR or BIR (Binary Information Representation).&lt;/p&gt;
&lt;p&gt;Collectively I call all of them Information Resources (IRES), or Term Information Resources, TermIR or TIR for simplicity. This definition includes concepts from our daily life like humans, cars, trees and sky.&lt;/p&gt;
&lt;p&gt;In order to avoid confusion on the definition of all these terms and for identification purposes, Information Reference (IREF), i.e. authority, user, host, domain, etc. has to be added as an extra dimension on the representation of information. I also call this term RefIR or RIR (Reference Information Representation).&lt;/p&gt;
&lt;p&gt;As a reminder, one can easily arrive in the following memorable formula:&lt;/p&gt;


&lt;button class=&#34;btn  btn-warning&#34; type=&#34;button&#34;  &gt; IRES = IREF + IREP + IREA &lt;/button&gt;



&lt;p&gt;Information Resource = Information Reference + Information Representation + Information Realization&lt;/p&gt;
&lt;p&gt;Or expressed in terms of things&lt;/p&gt;


&lt;button class=&#34;btn  btn-warning&#34; type=&#34;button&#34;  &gt; TermIR = RefIR + BinIR + DataIR &lt;/button&gt;



&lt;p&gt;And in an even simpler form as&lt;/p&gt;


&lt;button class=&#34;btn  btn-warning&#34; type=&#34;button&#34;  &gt; TIR = RIR + BIR + DIR &lt;/button&gt;



&lt;p&gt;In fact, the U1R3DM, Unified Information Resources with Reference, Representation, Realization Data Model proposes a new information theory that is based on the hypothesis that any information resource can be computed and represented as the unity of three components that happen to occur naturally in the description of Aristotle&amp;rsquo;s semiotic triangle. This is exactly what is illustrated in this post.&lt;/p&gt;
&lt;h2 id=&#34;vvp-and-the-identity-crisis-on-the-web&#34;&gt;VVP and the identity crisis on the web&lt;/h2&gt;
&lt;p&gt;The more I am re-searching the subject of data modeling the more I understand the confusion that arises from the use of the variable-value pair, I am calling it VVP for short. Many of you will recognize that this is the fundamental unit of construction in computer hardware/software architecture including databases, i.e. Storage and retrieval mechanism. Nevertheless many fail to grasp the semantics behind this simple assignment statement of the VVP, i.e. VAR = VAL. Pointer logic in computer programming is very helpful here. Or think about a post box (container) with a street address and an envelope (content) inside. It&amp;rsquo;s also important to think about the type of container (post box) and the type of content (envelope).&lt;/p&gt;
&lt;p&gt;What is the analogy with R3DM
an identifier to (R)epresent the variable name, a.k.a container
a literal to (R)ealize (materialize) the value, a.k.a content
a memory address to (R)eference / De-Reference its content&lt;/p&gt;


&lt;button class=&#34;btn  btn-warning&#34; type=&#34;button&#34;  &gt; Representation + Realization + Reference &lt;/button&gt;



&lt;p&gt;You can see Variable from three perspectives, as an identifier, as an address and as a container with a type (data type). In the current semantic web of linked-data URI is overloaded with many roles, i.e. dereferencing, identification, serialization (Relational, Topic, Graph, JSON-XML). Is there a way to combine all these different perspectives in R3DM ? I think perhaps there is one.&lt;/p&gt;
&lt;h2 id=&#34;conceptual-model-vs-data-model&#34;&gt;Conceptual Model vs Data Model&lt;/h2&gt;
&lt;p&gt;RDF triplet, (Subject, Predicate, Object) or (Entity, Attribute, Value), strictly speaking, is neither a conceptual (information) model, nor a data model.&lt;/p&gt;
&lt;p&gt;By definition conceptual model, is about concepts. It is about how I can deliver some message, I have in my head to someone else. Normally we use natural language, words, sentences, speech as the vehicle to convey that message. But that is not the only medium we use, think about art, figures, pictures, photos, diagrams, tactile feedback, music, video, and many others that are not based on words, that are not based on natural language.&lt;/p&gt;
&lt;p&gt;So, let us assume for a moment that we focus on only textual representations. Is that SPO adequate as a constructing unit to model observations, data sets, or relations ? If yes, is there a standard way to structure concepts and relate instances ? Think about the components of SPO. Predicative units can become attributive and the opposite, object can take the position of a subject and the other way around, relations can be inverted.&lt;/p&gt;
&lt;p&gt;But perhaps the most annoying of all is the abuse of that conceptual model to use it at the same time as a data model. That means to link values, such as numbers, strings and dates and binary objects. And of course everybody raises his hands when you ask the question, what exactly that value or that object represents. Or how about thinking the classic coding distinction in passing arguments. Are you calling by value or by reference ? Do you embed objects, are you building complex data types, how do you model the multi-value properties ? If you think there is a standard way to answer all these questions, think again because there is not one.&lt;/p&gt;
&lt;p&gt;So, here comes R3DM into the game to make things more clear, Reference, Representation and Realization. Think about realization the encoding of 0s and 1s you have stored in memory. This is the only &amp;ldquo;real thing&amp;rdquo; you have stored. That is the lowest level of representation that computer understands. Then we have another level of representation, the highest one that we are familiar with, the conceptual level, it is about terms that we naturally think, that we naturally construct in our brains. And the third level of representation is an intermediate one. It is connecting the two worlds, the human one with the computer one. That is a vehicle, a medium we use to convey the message, the information according to semiotic triangle. We can use text, images, sound, video, etc to achieve this as long as we can digitize media.&lt;/p&gt;


&lt;button class=&#34;btn  btn-warning&#34; type=&#34;button&#34;  &gt; Resource = Reference + Representation + Realization &lt;/button&gt;



&lt;p&gt;the three levels of representation are unified as one and one is seen in three. That is the beauty of R3DM.&lt;/p&gt;
&lt;h2 id=&#34;data-and-metadata&#34;&gt;Data and Metadata&lt;/h2&gt;
&lt;p&gt;One of the main obstacles in data modeling is that we try to understand the mechanism of abstraction. In fact we are trying to model abstraction, to model the machine that creates models ! Recall at this point what is metadata. It is data about data. So you see how easily you can fall into a loophole.&lt;/p&gt;
&lt;p&gt;Think about the &amp;ldquo;name&amp;rdquo; term. It is one of the most essential concepts we use to model, to reason, to refer, to identify. It is so hard to escape from naming and change everything to an alphanumeric id. Who is doing the naming, what does he mean, in what natural language ?&lt;/p&gt;
&lt;p&gt;Name is just one of the many &amp;ldquo;signs&amp;rdquo; we use according to &amp;ldquo;semiosis&amp;rdquo; to carry the message, a piece of information. Think about any kind of programming paradigm, or any kind of data model or information model. You draw a flowchart, a nice diagram, to describe your model and at the same time you use symbols and words-terms to enhance it. All these are different kind of signs we use. So, do we have a model of the signs and how we use them to construct information and store, retrieve and update our data ? Not, at the moment I think.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s move now to a term that apparently has become so popular in NoSQL movement, schemaless databases. That does not mean, there is not a schema. It means the database you use allows you to construct any kind of schema dynamically. In a sense we are talking about a database that has a generic kind of schema that enables you to produce any kind of schema.&lt;/p&gt;
&lt;p&gt;Are you getting the picture now, data-metadata, schemaless-schema, data model - abstract model. It is an abstract machine, think about Turing machines, finite state machines, recursive functions, and lambda calculus and you get closer to it.&lt;/p&gt;
&lt;h2 id=&#34;a-computational-semiotics-explanation&#34;&gt;A Computational Semiotics Explanation&lt;/h2&gt;


&lt;button class=&#34;btn  btn-warning&#34; type=&#34;button&#34;  &gt; Resource = Reference + Representation + Realization &lt;/button&gt;



&lt;h3 id=&#34;realization&#34;&gt;Realization&lt;/h3&gt;
&lt;p&gt;The following Wikipedia pages are related to realization, you may open and read about:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Data_type&#34;&gt;Data type&lt;/a&gt;      : en.wikipedia.org/wiki/Data_type&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Data_structure&#34;&gt;Data structure&lt;/a&gt; : en.wikipedia.org/wiki/Data_structure&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Class_(computer_programming)&#34;&gt;Class&lt;/a&gt;          : en.wikipedia.org/wiki/Class_(computer_programming)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Object_(computer_science)&#34;&gt;Object&lt;/a&gt;         : en.wikipedia.org/wiki/Object_(computer_science)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You read the content of the web page with a specific presentation format suitable for the user and with at least three levels of encoding at the back for machine processing purposes.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;wiki encoding : Wiki data type (interpretation of bits)&lt;/li&gt;
&lt;li&gt;html encoding : HTML data type (interpretation of bits)&lt;/li&gt;
&lt;li&gt;machine code  : Series of bits&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To keep things simple, encoding is about the format you give for various purposes, for data storage, for human reading, for human listening, for execution of machine instructions, and many more. If you started thinking about file types, and serialization formats like RDF and JSON I must say you are on the right path. We are at the data level where everything is centred around the encoding of the content. If we apply recursion to reach the machine encoding level, we have to think about a base case. For example, you can encode an integer as a 16bit binary number or 32bit binary number.&lt;/p&gt;
&lt;h3 id=&#34;representation&#34;&gt;Representation&lt;/h3&gt;
&lt;p&gt;How do we &lt;strong&gt;represent&lt;/strong&gt; an integer. In programming we call it an identifier, the name of a variable. This is our entry level to the world of semantics. According to semiotics, it is about signs we use to represent information about an entity. To continue our example, if we want to encode and use a salary figure we can write:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Salary = $150000&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The left part (and the dollar sign) is the (R)epresentation (container) and the right part is the value (content). It is the (R)ealization of a monetary value. Such identifiers in computer programming are many, property names, class names, method names, and relations.&lt;/p&gt;
&lt;h3 id=&#34;reference&#34;&gt;Reference&lt;/h3&gt;
&lt;p&gt;Speaking about computer programming, the following Wikipedia pages are related to &lt;strong&gt;reference&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Pointer_(computer_programming)&#34;&gt;Pointer&lt;/a&gt;    : en.wikipedia.org/wiki/Pointer_(computer_programming)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Reference_(computer_science)&#34;&gt;Reference&lt;/a&gt;  : en.wikipedia.org/wiki/Reference_(computer_science)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Unique_key&#34;&gt;Key&lt;/a&gt;        : en.wikipedia.org/wiki/Unique_key&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Identifier&#34;&gt;Identifier&lt;/a&gt; : en.wikipedia.org/wiki/Identifier&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The concept of reference must not be confused with other values (keys or identifiers). In the previous example&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;Salary&amp;rdquo; is an identifier, a (R)epresentation of an integer value&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Salary&amp;rdquo; is a reference,   a (R)epresentation of the memory address where we encode the integer value.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To avoid that confusion, programmers defined another term, the pointer. Pointer (R)epresents a memory address. We dereference pointer to read the value, we use pointer to access memory block and store the value. The same idea is behind the dereferencing mechanism of WWW and the URL. But the URL reference has been overloaded:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;URL denotes the source of information, e.g. Wikipedia.&lt;/li&gt;
&lt;li&gt;URL is used to disambiguate terms,  e.g. Object in object-oriented_programming.&lt;/li&gt;
&lt;li&gt;URL is used to fetch the html content of the web page&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;resource&#34;&gt;Resource&lt;/h3&gt;
&lt;p&gt;The way we view information resources in our model is mainly through the use of terms (Term Information Resource - TermIR). If you take any of the previous web addresses, you have the term, the realization of the term (DatumIR), the representation of the term (SignIR) and a reference (RefIR) to the content. These are three concepts in one, and one concept in three.&lt;/p&gt;


&lt;button class=&#34;btn  btn-warning&#34; type=&#34;button&#34;  &gt; TIR = RIR + SIR + DIR &lt;/button&gt;



</description>
    </item>
    
    <item>
      <title>S3DM/R3DM in TMDM</title>
      <link>https://healis.eu/en/post/20131002/</link>
      <pubDate>Wed, 02 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20131002/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#r3dm-in-brief&#34;&gt;R3DM in brief&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#examples-in-tmdm&#34;&gt;Examples in TMDM&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#example-1&#34;&gt;Example 1&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#example-2&#34;&gt;Example 2&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#example-3&#34;&gt;Example 3&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#comparison-of-r3dm-with-tmdm&#34;&gt;Comparison of R3DM with TMDM&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#granularity&#34;&gt;Granularity&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#abstraction-levels-and-units&#34;&gt;Abstraction levels and units&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#address-referencing&#34;&gt;Address (Referencing)&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#relationships-r3dm---associations-tmdm&#34;&gt;Relationships (R3DM) - Associations (TMDM)&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#cross-references&#34;&gt;Cross-References&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;

&lt;h2 id=&#34;r3dm-in-brief&#34;&gt;R3DM in brief&lt;/h2&gt;
&lt;p&gt;Any information Resource can be explicitly defined as a Binary Information Resource BIR or Term Information Resource TIR and it may have one or more References, Representations and Realizations hence the name of the new data model (R3DM). Think about resources as nodes in a graph, each resource is represented with a node. There are nodes that represent digital assets or concepts that exist in the digital world (computer/web) such as files and web documents, and there are nodes that represent things on our world such as persons, objects, and abstract entities.&lt;/p&gt;
&lt;p&gt;Representations and Realizations are referenced differently. For example, take the &amp;ldquo;Programming Language&amp;rdquo; concept. You may use the &amp;ldquo;Wikipedia&amp;rdquo; reference work, see (REF), to check for a definition or do the same with the &amp;ldquo;Free Dictionary Vocabulary&amp;rdquo;. In general you may have multiple references for the same entity. On the other hand once you reach at the realization stage, you have access of the value of the specific representation. In that case the URL address of the web/computer resource (aka realization) serves as the primary mechanism to retrieve or update that value. It is exactly the same analogy with the use of variables in computer programming to access the content of a memory storage and manipulate the value there.&lt;/p&gt;
&lt;h2 id=&#34;examples-in-tmdm&#34;&gt;Examples in TMDM&lt;/h2&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

&lt;img src=&#34;TMDM_example_table.png&#34; &gt;



&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;Instance of PERSON type with observations&lt;/h4&gt;
  
&lt;/figcaption&gt;

&lt;/figure&gt;

The table shows that for an instance of type PERSON (TIR), we may have several observations of properties of type AGE and HEIGHT. For each one of these observations we can have one or more realizations.&lt;/p&gt;
&lt;h3 id=&#34;example-1&#34;&gt;Example 1&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Athanassios (p1) is 44 years old and his first name in Greek is Αθανάσιος&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Occurrences with scope&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;{p1, AGE, &amp;ldquo;44&amp;rdquo;} /YEAR /INTEGER /PRESENT /NUMERIC /LITERAL&lt;/li&gt;
&lt;li&gt;{p1, AGE, &amp;ldquo;Athanassios is 44 years old&amp;rdquo;} /STRING /PRESENT /TEXT /ENGLISH /LITERAL&lt;/li&gt;
&lt;li&gt;{p1, AGE, &amp;ldquo;== Athanassios is 44 years old&amp;rdquo;} /STRING /PRESENT /WIKI /ENGLISH /LITERAL&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Occurrences without scope&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hasProp(p1:PERSON, a1:AGE)
&lt;ul&gt;
&lt;li&gt;{a1, VAL,  &amp;ldquo;44&amp;rdquo;}&lt;/li&gt;
&lt;li&gt;{a1, DTYPE,&amp;ldquo;INTEGER&amp;rdquo;}&lt;/li&gt;
&lt;li&gt;{a1, UNIT, &amp;ldquo;YEAR&amp;rdquo;}&lt;/li&gt;
&lt;li&gt;{a1, TIME, &amp;ldquo;PRESENT&amp;rdquo;}&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Associations ONLY&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;hasProp (p1:AGENT, a1:AGE)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hasReal (a1:AGE, INT:DTYPE, val03:VAL, NOW:TIME, YR:UNIT)&lt;/li&gt;
&lt;li&gt;hasReal (a1:AGE, STR:DTYPE, val04:VAL, NOW:TIME, HTML:ENC, EN:LANG)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;hasProp (p1:AGENT, n1:FNAM)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hasReal (n1:FNAM, STR:DTYPE, val09:VAL, TXT:ENC, GR:LANG)&lt;/li&gt;
&lt;li&gt;hasReal (n1:FNAM, STR:DTYPE, val00:VAL, TXT:ENC, EN:LANG)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

&lt;img src=&#34;Topic-map-properties-as-associations-example1.jpg&#34; &gt;



&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;Visualization of Example 1 in Wandora application using ONLY associations&lt;/h4&gt;
  
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;example-2&#34;&gt;Example 2&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Athanassios (p2) was 1 m high at the age of four&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Occurrences with scope&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;{p1, AGE, &amp;ldquo;4&amp;rdquo;} /YEAR /INTEGER /PAST /NUMERIC /LITERAL&lt;/li&gt;
&lt;li&gt;{p1, HEIGHT, &amp;ldquo;1&amp;rdquo;} /m /INTEGER /NUMERIC /LITERAL&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Associations ONLY&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hasProp (p1:AGENT, a2:AGE, h1:HEIGHT)
&lt;ul&gt;
&lt;li&gt;hasReal (a2:AGE,    INT:DTYPE, val07:VAL, PAST:TIME, YR:UNIT)&lt;/li&gt;
&lt;li&gt;hasReal (a2:AGE,    TXT:DTYPE, val08:VAL, PAST:TIME, STR:ENC, EN:LANG)&lt;/li&gt;
&lt;li&gt;hasReal (h1:HEIGHT, INT:DTYPE, val05:VAL, cm:UNIT)&lt;/li&gt;
&lt;li&gt;hasReal (h1:HEIGHT, TXT:DTYPE, val06:VAL, STR:ENC, EN:LANG)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

&lt;img src=&#34;Topic-map-properties-as-associations-example2.jpg&#34; &gt;



&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;Visualization of Example 2 in Wandora application using ONLY associations&lt;/h4&gt;
  
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;example-3&#34;&gt;Example 3&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Athanassios (p1) and Aki (p2) are now taller than 1m&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Associations ONLY&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hasProp(p1:AGENT, h2:HEIGHT)&lt;/li&gt;
&lt;li&gt;hasProp(p2:AGENT, h2:HEIGHT)
&lt;ul&gt;
&lt;li&gt;hasReal (h2:HEIGHT, INT:DTYPE, val01:VAL, NOW:TIME, cm:UNIT)&lt;/li&gt;
&lt;li&gt;hasReal (h2:HEIGHT, STR:DTYPE, val02:VAL, NOW:TIME, TXT:ENC, EN:LANG)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

&lt;img src=&#34;Topic-map-properties-as-associations-example3.jpg&#34; &gt;



&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;Visualization of Example 3 in Wandora application using ONLY associations&lt;/h4&gt;
  
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;comparison-of-r3dm-with-tmdm&#34;&gt;Comparison of R3DM with TMDM&lt;/h2&gt;
&lt;h3 id=&#34;granularity&#34;&gt;Granularity&lt;/h3&gt;
&lt;p&gt;TMDM: &amp;ldquo;Everything is a Topic&amp;rdquo;
R3DM: &amp;ldquo;Everything is a Resource&amp;rdquo;&lt;/p&gt;
&lt;h3 id=&#34;abstraction-levels-and-units&#34;&gt;Abstraction levels and units&lt;/h3&gt;
&lt;p&gt;There are three abstraction levels united in one&lt;/p&gt;
&lt;span class=&#34;markup-quote&#34;&gt;Resource = Reference + Representation + Realization&lt;/span&gt;
&lt;p&gt;and respectively define basic information resource (IR) units at each level&lt;/p&gt;
&lt;span class=&#34;markup-quote&#34;&gt;Term IR (TIR) = Reference IR (RIR) + Signal IR (SIR) + Datum IR (DIR)&lt;/span&gt;
&lt;p&gt;In TMDM you have Topic and Topic characteristics where
Topic name, Topic Occurrence, Topic Role = Signal Information Resource (SIR)&lt;/p&gt;
&lt;h3 id=&#34;address-referencing&#34;&gt;Address (Referencing)&lt;/h3&gt;
&lt;p&gt;In TMDM there are addressable and non-addressable subjects. This IS THE point of major confusion in many models.
In R3DM addressing is dependent on the abstraction level.&lt;/p&gt;
&lt;p&gt;In DIR the content of the datum is accessed by reference, ONLY. You MUST know the subscript of the multidimensional array. In R3DM everything is stored in a multidimensional array and there are projections in every other kind of data structure including Tables in RDBMS, Documents and Graph in NoSQL.&lt;/p&gt;
&lt;p&gt;In RIR addressing means referencing in a broader sense and that includes modelling of many concepts here, context, scope (see TDMD), and provenance.&lt;/p&gt;
&lt;p&gt;In SIR it is about construction of Signs (e.g. identifiers, names, labels, etc&amp;hellip;.)&lt;/p&gt;
&lt;h3 id=&#34;relationships-r3dm---associations-tmdm&#34;&gt;Relationships (R3DM) - Associations (TMDM)&lt;/h3&gt;
&lt;p&gt;There is another hot topic that of Relations-Relationships again the same tactics are followed like addressing. It depends on the abstraction level we are discussing&lt;/p&gt;
&lt;p&gt;For example in TIR we have relationships among Terms and in DIR we are discussing about data structures.&lt;/p&gt;
&lt;p&gt;What I consider fundamental in both models is that everything has to be based on a common unit of information processing, i.e. Topic in TMDM vs UniformIR in R3DM. Another absolutely critical similarity is the explicit definition of an abstraction level that models concepts, i.e. subjects according to TMDM or TermIR according to R3DM. Another distant similarity can be traced at the Sign level, S2 of R3DM compared to the level of occurrences in TMDM. Needless to say that in R3DM all types of identifiers are treated equally at S2.&lt;/p&gt;
&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/109285/109285-260551654&#34;&gt;LinkedIn - 20130724 Topic Maps Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/109285/109285-250338692&#34;&gt;LinkedIn - If we were to redesign Topic Maps - Topic Maps Community Comments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.wandora.org/forum/viewtopic.php?f=10&amp;amp;t=124&amp;amp;sid=614693e744c703294364481838a54ff7&#34;&gt;Wandora - Forum Post&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/109285/109285-275236266&#34;&gt;LinkedIn - 20130920 Topic Maps Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/109285/109285-5862575993453060098&#34;&gt;LinkedIn - 20140417 Topic Maps Community - First brief comparison of R3DM and TMDM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/109285/109285-5884648859719725057&#34;&gt;LinkedIn - 20140617 Topic Maps Community - R3DM Formalization v2 quick comparison with TMDM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>S3DM/R3DM Q&amp;A</title>
      <link>https://healis.eu/en/post/20131001/</link>
      <pubDate>Tue, 01 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20131001/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#qa-session-on-r3dms3dm&#34;&gt;Q&amp;amp;A session on R3DM/S3DM&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#what-is-information&#34;&gt;What is information&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#what-is-an-information-resource&#34;&gt;What is an information resource&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#what-kind-of-information-resources-we-have&#34;&gt;What kind of information resources we have&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#what-is-an-information-reference&#34;&gt;What is an information reference&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#what-is-information-representation&#34;&gt;What is information representation&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#what-is-information-realization&#34;&gt;What is information realization&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#why-semantic-models-like-rdfowl-and-tmdm-are-not-sufficient-for-the-semantic-web&#34;&gt;Why semantic models like RDF/OWL and TMDM are not sufficient for the semantic web&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#is-there-an-analogy-of-your-model-with-the-object-oriented-programming-paradigm-where-you-have-reusable-and-composable-structures&#34;&gt;Is there an analogy of your model with the object-oriented programming paradigm where you have reusable and composable structures&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#semantic-web-or-the-web-of-linked-data-is-using-uris-to-identify-and-to-address-information-resources-is-there-a-difference-in-your-model&#34;&gt;Semantic web or the web of linked data is using URIs to identify and to address information resources, is there a difference in your model&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#what-is-the-outmost-objective-with-your-r3dm-data-model&#34;&gt;What is the outmost objective with your R3DM data model&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#domain-independent-abstraction-and-kinds-of-relations&#34;&gt;Domain Independent Abstraction and Kinds of Relations&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#cross-references&#34;&gt;Cross-References&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;

&lt;h2 id=&#34;qa-session-on-r3dms3dm&#34;&gt;Q&amp;amp;A session on R3DM/S3DM&lt;/h2&gt;
&lt;h3 id=&#34;what-is-information&#34;&gt;What is information&lt;/h3&gt;
&lt;p&gt;In Greek we call it, (&lt;a href=&#34;https://en.wikipedia.org/wiki/Information#Etymology&#34;&gt;plērophoria&lt;/a&gt;) from πλήρης (plērēs) &amp;ldquo;fully&amp;rdquo; and φέρω (phorein) frequentative of (pherein) to carry through. It means to carry, to convey a message thoroughly, exhaustivelly, in a complete way. It is strongly related to the formation of the message, it depends on the sign vehicle we use to transmit the message.&lt;/p&gt;
&lt;h3 id=&#34;what-is-an-information-resource&#34;&gt;What is an information resource&lt;/h3&gt;
&lt;p&gt;It is a container of information. In the computer world a data container such as a blog, a web address, physical memory, computer hard disk. In the physical world any object can be an information resource.&lt;/p&gt;
&lt;h3 id=&#34;what-kind-of-information-resources-we-have&#34;&gt;What kind of information resources we have&lt;/h3&gt;
&lt;p&gt;A binary information resource (&lt;strong&gt;BIR&lt;/strong&gt;) is a container of information about concepts related to the computer world, such as a web page, a file, an email, a database record, a programming variable. A term information resource (&lt;strong&gt;TIR&lt;/strong&gt;) is a more generalized concept than BIR. TIR is extended to cover any term in general including those we use in our daily human to human communication. Both BIR and TIR represent abstract concepts. These are constructs that we use at the semantic, ontological layer of R3DM.&lt;/p&gt;
&lt;h3 id=&#34;what-is-an-information-reference&#34;&gt;What is an information reference&lt;/h3&gt;
&lt;p&gt;An information reference is the source of information resource. It is where it gets its meaning, it is the place it was originally conceived or defined. Any BIR or TIR is conceived in the human mind in the process of thinking. Therefore it follows naturally that they are referenced accordingly. Human concepts are presented from the sender in a verbal, oral, visual, or written way and are perceived from the receiver. Regarding to the meaning, the semantics of the transmitted information, there is strong connection between the interpretant and the sign vehicle used to carry information. The sign vehicle is strongly dependent on the information reference, i.e. the interpretant. We can have more than one interpretations for the same sign, and likewise any sign is referenced in many ways.&lt;/p&gt;
&lt;h3 id=&#34;what-is-information-representation&#34;&gt;What is information representation&lt;/h3&gt;
&lt;p&gt;Let us take things from the beginning. We have a concept in a human mind. The concept is presented in some perceivable way with symbols, icons, words, spoken sounds, etc. This represents an object of the real world that we want to talk about. In a computer we use metaphores: for example the desktop environment with files and folders on it. In fact any object of the real world can be represented in many ways on a computer screen: characters, numbers, images, sounds, books.&lt;/p&gt;
&lt;h3 id=&#34;what-is-information-realization&#34;&gt;What is information realization&lt;/h3&gt;
&lt;p&gt;Everything that is represented in a computer is in fact encoded in a binary format. Any content, such as text for example, can take many forms but at the end it is stored or transmitted in a binary format. In computers, this is the lowest level of information, it is the data level.&lt;/p&gt;
&lt;h3 id=&#34;why-semantic-models-like-rdfowl-and-tmdm-are-not-sufficient-for-the-semantic-web&#34;&gt;Why semantic models like RDF/OWL and TMDM are not sufficient for the semantic web&lt;/h3&gt;
&lt;p&gt;First let me make something clear. Semantic web is not the web of linked data, it is simply an approximation. In Web 1.0 and 2.0 we were linking documents, e.g. web documents, files. What is different now, is that we also link structured data, from relational databases, from RDF databases. But we are still in the data level. In my opinion Web 3.0 has to be differentiated from the current web, it has to create a distinct layer on top of the existing linked data layer with its own referencing scheme that can be resolved with the current URI scheme. This will have its own way to define and handle terms, concepts, relations, axioms, rules, the structural components of an ontology. The semantic web, is an ontological web. Everything else should revolve around it, data population, ontology enrichment, subject indexing, searching, matching, sharing.&lt;/p&gt;
&lt;p&gt;We can not make a significant progress on the &amp;ldquo;semantic web&amp;rdquo;, because there is not a model that combines the three main models of information architecture:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The database model (data level - Information Realization),&lt;/li&gt;
&lt;li&gt;The programming model (symbol level - Information Representation) and&lt;/li&gt;
&lt;li&gt;The semantic model (human level - Information Referencing).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Indeed, there is ongoing research on RDF data model towards a semantic object framework, to bridge the gap between RDF and object-oriented programming and there are also researchers that investigate the mismatch of RDF with graph models and graph databases, especially property graph databases. R3DM is looking into combining those two interpretations of RDF by utilizing a post-relational database and a native object script language.&lt;/p&gt;
&lt;h3 id=&#34;is-there-an-analogy-of-your-model-with-the-object-oriented-programming-paradigm-where-you-have-reusable-and-composable-structures&#34;&gt;Is there an analogy of your model with the object-oriented programming paradigm where you have reusable and composable structures&lt;/h3&gt;
&lt;p&gt;I think the first question that has to be answered, is how we define the fundamental unit of information processing. Remember, in Topic-Maps Data Model everything is a topic. In our writing system, word-lexeme-morpheme, is our fundamental unit. The current progress with graph databases, and the long research with RDF triplets indicate, that indeed, we can define such a unit. Let us call this information node (iNode). The new question you should ask is how exactly these nodes are related. How do we represent relations ? The encoding of information into triplets has started long time ago, both with the Entity-Attribute-Value databases and now with the linked data movement. Although OWL is supposed to bridge the gap between programming and semantic relations, in practise this has never been achieved! A new programming language that will be based on a transparent handling of semantic relations and the corresponding data management is absent. This new programming language must be closely connected to the database layer.&lt;/p&gt;
&lt;h3 id=&#34;semantic-web-or-the-web-of-linked-data-is-using-uris-to-identify-and-to-address-information-resources-is-there-a-difference-in-your-model&#34;&gt;Semantic web or the web of linked data is using URIs to identify and to address information resources, is there a difference in your model&lt;/h3&gt;
&lt;p&gt;We are trying to develop a new, semantic web, layer on top of the previous one, where the document, i.e. web page, file, etc is the basic unit of information. The two layers can communicate with the current web addressing infrastructure but the new layer MUST have its own referencing scheme. A scheme that will be used both for retrieving and updating purposes. The naming/identification issue is also of critical importance here.&lt;/p&gt;
&lt;h3 id=&#34;what-is-the-outmost-objective-with-your-r3dm-data-model&#34;&gt;What is the outmost objective with your R3DM data model&lt;/h3&gt;
&lt;p&gt;The current www is based on content (data) and addressing (hypelinks) and the main founder and visioner of the Web Tim Berner&amp;rsquo;s Lee cries out &amp;ldquo;put the data on the web&amp;rdquo;. But the point is how to represent and link the human knowledge on the web, things like concept maps (Novak), conceptual graphs (Sowa) and these are based on linking concepts, not data. I would like to see the web of linked concepts. I see an obsession in many for machine readable data. The point is how our technology can assist us in making fast and smart decisions, in solving extremely complicate problems of interdisciplinary nature and machine readable data is just part of it.&lt;/p&gt;
&lt;h3 id=&#34;domain-independent-abstraction-and-kinds-of-relations&#34;&gt;Domain Independent Abstraction and Kinds of Relations&lt;/h3&gt;
&lt;p&gt;I think it is fundamental for the improvement of this kind of “Semantic Web”, LinkedData Web, if there is going to be some effort to describe and represent abstraction and relation types. We would not have to deal with such a chaos of alignment and mapping on predicates if there was some generally acceptable template, formula on what kind of Domain Independent Abstractions exist and how we can formulate them.&lt;/p&gt;
&lt;p&gt;Part of my R3DM data model and the work in it, is to define such a schema. I will give you a flavour here with an example that is characteristic of the confusion that exists between two specific generic relation types, (1) inheritance-subtyping and (2) hypernymy-hyponymy. Consider the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;(1)	Music composition &amp;mdash;- isBroaderThan &amp;mdash;&amp;gt; Sonata&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(1)	Sonata &amp;mdash;- isNarrowerThan &amp;mdash;&amp;gt; Music Composition&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(2)	Music Instrument &amp;mdash;- isHypernymOf &amp;mdash;&amp;gt; Wind Instrument&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(2)	Wind Instrument &amp;mdash;- isHyponymOf &amp;mdash;&amp;gt; Music Instrument&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Notice that both relations are symmetric and we need to define both directions. Each entity plays also a specific role in that relation. Now, if we can find a consistent way to describe relations that will make life much easier for both the developers and the researchers in “Semantic Web” area.&lt;/p&gt;
&lt;p&gt;In my opinion, we can define three broad classes of hierarchical relations that create all kinds of taxonomies (read more about them in other recent posts in this group).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Generalization-Specialization expressed with the predicates
nulon:isBroaderThan and nulon:isNarrowerThan and the roles Superior, Subordinate&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hyponymy-Hypernymy expressed with the predicates
nulon:isHypernymOf and nulon:isHyponymOf and the roles Hypernym, Hyponym&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Holonymy-Meronymy expressed with the predicates
nulon:isWholeOf and nulon:isPartOf and the roles Whole, Part&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Triples can be seen as binary predicates, but n-ary relations is a very natural way of thinking about many things such as events. This is exactly the point of a big divergence among TopicMapDM, RelationalDM, GraphPropertyDM, Freebase DM, Associative DM, RDF/OWL DM and others.&lt;/p&gt;
&lt;p&gt;I think modelling n-ary relations is not the root of the problem. The mother of all problems in data modelling is the bootstrap mechanism of creating types and the absence of a single universal Upper Level Ontology as the gold standard to define core basic types. Take Freebase for example, they have defined from scratch their own type system.&lt;/p&gt;
&lt;p&gt;This again cannot be seen in isolation of the data structures, a low level issue, that one is using to permanently store or process the data. This is why I insist that software engineers have to think in at least three perspectives of R3DM semiotic data model, i.e. the semantic, the symbolic and the storage.&lt;/p&gt;
&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/2099362/2099362-228909136&#34;&gt;LinkedIn - 20130403 Greek IT Network&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/109285/109285-275236266&#34;&gt;LinkedIn - 20130920 Topic Maps Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/129217/129217-277065814&#34;&gt;LinkedIn - 20130927 Semantic Web Research&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/6514034/6514034-5812169398596702208&#34;&gt;LinkedIn - 20131129 Computational Semiotics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/129217/129217-5822403300636532737&#34;&gt;LinkedIn - 20131227 Semantic Web Research - Domain Independent Abstraction and Kinds of Relations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/129217/129217-5823055552451743745&#34;&gt;LinkedIn - 20131229 Semantic Web Research - Taxonomy Relations - My perspective&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/6514034/6514034-5932586289760079874&#34;&gt;LinkedIn - 20131129 Computational Semiotics - About Binary and N-ary relations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Origins of a new theoretical framework on information representation</title>
      <link>https://healis.eu/en/post/20130403/</link>
      <pubDate>Wed, 03 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20130403/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#information-resources-and-real-world-objects&#34;&gt;Information Resources and Real-World Objects&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#origins-of-a-new-theoretical-framework-on-information-representation&#34;&gt;Origins of a new theoretical framework on information representation&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#cross-references&#34;&gt;Cross-References&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;

&lt;h2 id=&#34;information-resources-and-real-world-objects&#34;&gt;Information Resources and Real-World Objects&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;The distinguishing characteristic of these resources is that all of their essential characteristics can be conveyed in a message. We identify this set as information resources&lt;/strong&gt; &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Assume we accept this definition for &amp;ldquo;information resources&amp;rdquo;. Let us take a real apple. Then we ask ourselves, is that apple an information resource according to the previous definition. In my opinion, the answer is No. Because &lt;strong&gt;we cannot convey all the essential characteristics&lt;/strong&gt; of an apple in a message, even if the message is transmitted through conventional human to human communication channels. If someone has not tasted an apple before then you cannot convey that characteristic in a message. One has to eat the apple to learn about that characteristic and many more.&lt;/p&gt;
&lt;p&gt;In addition to that, many will be familiar with pictures like the following one from artist Rene Magritte showing a pipe and underneath a text message in French saying &amp;ldquo;this is not a pipe&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Well this is not a pipe indeed, it is an information resource about a pipe. To be more specific this is a visual representation (image encoding) of a pipe. Or you may also say we present graphically, we draw a pipe. It is something that refers to a real pipe, but it is not the pipe. In fact, no matter what is the volume of information you are going to use about a real pipe, you will never manage to convey the &lt;strong&gt;true&lt;/strong&gt; or &lt;strong&gt;full&lt;/strong&gt; meaning of what a pipe is. But enen in the case we approach a very detailed description of something, then the main obstacle is the interpretant and the interpretation of the message.&lt;/p&gt;
&lt;p&gt;In a more recent effort of W3C to distinguish between digital information resources and real-world object &lt;a href=&#34;https://www.w3.org/TR/cooluris/#semweb&#34;&gt;it uses URIs to identify both of them&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;On the Semantic Web, URIs identify not just Web documents, but also real-world objects like people and cars, and even abstract ideas and non-existing things like a mythical unicorn. We call these real-world objects or things&lt;/strong&gt; &lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is part of a bigger problem due to the inherited weak logic, theory and definitions that support RDF data model. The reader can search for many of these discussions that have appeared on the web under the search term &amp;ldquo;web identity crisis&amp;rdquo;. I believe the root of the problem lies on the inadequate meaning of word information as it is expressed in English. Linguists are aware of the distinction between signifier and signified and Greek language is serving well that purpose as &lt;a href=&#34;https://en.wikipedia.org/wiki/Information#Etymology&#34;&gt;the word &amp;ldquo;plērophoria&amp;rdquo; (signifier) conveys better the meaning of the word &amp;ldquo;information&amp;rdquo; (signified)&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;The ancient Greek word for information is πληροφορία, which transliterates (plērophoria) from πλήρης (plērēs) &amp;ldquo;fully&amp;rdquo; and φέρω (phorein) frequentative of (pherein) to carry through. It literally means &amp;ldquo;bears fully&amp;rdquo; or &amp;ldquo;conveys fully&amp;rdquo;. In modern Greek the word Πληροφορία is still in daily use and has the same meaning as the word information in English. In addition to its primary meaning, the word Πληροφορία as a symbol has deep roots in Aristotle&amp;rsquo;s semiotic triangle. In this regard it can be interpreted to communicate information to the one decoding that specific type of sign.&lt;/strong&gt; &lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;origins-of-a-new-theoretical-framework-on-information-representation&#34;&gt;Origins of a new theoretical framework on information representation&lt;/h2&gt;
&lt;p&gt;We propose a new theoretical framework that will cover RDF/OWL and Topic Map data models, the EAV model in RDBMS and the object-attribute-value model in OOP. So far there have been very weak attempts to bridge the gap among the Semantic Web, the Relational Databases world, the Object-Oriented programming community and recently the NoSQL Databases arena. All these need a solid theoretical framework that unifies them and an implementation that exhibits that these technologies are simply different perspectives of the same approach to information representation.&lt;/p&gt;
&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/2099362/2099362-228909136&#34;&gt;LinkedIn - 20130403 Greek IT Network&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/109285/109285-228701193&#34;&gt;LinkedIn - 20130403 Topic Maps Community &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/38506/38506-228707355&#34;&gt;LinkedIn - 20130403 Semantic Technologies &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/129217/129217-228708177&#34;&gt;LinkedIn - 20130403 Semantic Web Research&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/45183/45183-228710356&#34;&gt;LinkedIn - 20130403 Database Experts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/6514034/6514034-5883270314305028098&#34;&gt;LinkedIn - 20140613 Computational Semiotics - Information vs Plerophoria&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/plerophoria-vs-information-athanassios-i-hatzis-phd/&#34;&gt;LinkedIn - 20150523 Article - Plerophoria vs Information&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Architecture of the WWW, W3C Recommendation 15/12/2004, &lt;a href=&#34;https://www.w3.org/TR/webarch/#id-resources&#34;&gt;section 2.2 URI/Resource Relationships&lt;/a&gt; &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Cool URIs for the Semantic Web, W3C Interest Group Note 3/12/2008, &lt;a href=&#34;https://www.w3.org/TR/cooluris/#semweb&#34;&gt;section 3 URIs for Real-World Objects&lt;/a&gt; &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Wikipedia, the &lt;a href=&#34;https://en.wikipedia.org/wiki/Information#Etymology&#34;&gt;Etymology section&lt;/a&gt; of the term Information was updated by user Healis with the quoted text above on the 13th of June 2014 &lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>MEDILIG Second Release</title>
      <link>https://healis.eu/en/post/20100913/</link>
      <pubDate>Mon, 13 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20100913/</guid>
      <description>&lt;h2 id=&#34;changes-on-this-release&#34;&gt;Changes on This Release&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;New file system structure and documentation&lt;/li&gt;
&lt;li&gt;Use of MEDILIG database with MySQL and OpenOffice&lt;/li&gt;
&lt;li&gt;Automation of installation and setup procedure of MEDILIG database and Microsoft Access front end&lt;/li&gt;
&lt;li&gt;Visualization of MEDILIG schema as an ontology with Protégé software tool&lt;/li&gt;
&lt;li&gt;Visualization of MEDILIG schema as a graph and database management with DBVisualizer software tool&lt;/li&gt;
&lt;li&gt;Web analytics from SourceForge&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;responsive-wrap&#34;&gt;
	&lt;object data=&#34;/documents/20100910-medilig-recent_changes.pdf&#34; type=&#34;application/pdf&#34; style=&#34;margin: 0 auto;height: 100vh;width: 100%;&#34;&gt;
		&lt;embed src=&#34;https://healis.eu/documents/20100910-medilig-recent_changes.pdf&#34; type=&#34;application/pdf &#34;style=&#34;margin: 0 auto;height: 100vh;width: 100%;&#34;&gt;
			&lt;em&gt;It seems that your browser cannot display the PDF file; Please use this &lt;a href=&#34;https://healis.eu/documents/20100910-medilig-recent_changes.pdf&#34;&gt;&lt;strong&gt;link&lt;/strong&gt; &lt;/a&gt;
			instead. Thanks!&lt;/em&gt;
	&lt;/object&gt;
&lt;/div&gt;
&lt;h2 id=&#34;download-statistics&#34;&gt;Download Statistics&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;./medilig-downloads-at-sourceforge-2010-2015.jpg&#34; alt=&#34;jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;The graph shows the number of downloads for a period of five years. MEDILIG main distribution file (.zip) has been downloaded on an average about 60 times/month and the average download rate for any file of the distribution is equal to 170 times/month.&lt;/p&gt;
&lt;h2 id=&#34;documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;h3 id=&#34;readme-first&#34;&gt;Readme First&lt;/h3&gt;
&lt;div class=&#34;responsive-wrap&#34;&gt;
	&lt;object data=&#34;/documents/20100910-medilig-readme_first.pdf&#34; type=&#34;application/pdf&#34; style=&#34;margin: 0 auto;height: 100vh;width: 100%;&#34;&gt;
		&lt;embed src=&#34;https://healis.eu/documents/20100910-medilig-readme_first.pdf&#34; type=&#34;application/pdf &#34;style=&#34;margin: 0 auto;height: 100vh;width: 100%;&#34;&gt;
			&lt;em&gt;It seems that your browser cannot display the PDF file; Please use this &lt;a href=&#34;https://healis.eu/documents/20100910-medilig-readme_first.pdf&#34;&gt;&lt;strong&gt;link&lt;/strong&gt; &lt;/a&gt;
			instead. Thanks!&lt;/em&gt;
	&lt;/object&gt;
&lt;/div&gt;
&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;div class=&#34;responsive-wrap&#34;&gt;
	&lt;object data=&#34;/documents/20100910-medilig-introduction.pdf&#34; type=&#34;application/pdf&#34; style=&#34;margin: 0 auto;height: 100vh;width: 100%;&#34;&gt;
		&lt;embed src=&#34;https://healis.eu/documents/20100910-medilig-introduction.pdf&#34; type=&#34;application/pdf &#34;style=&#34;margin: 0 auto;height: 100vh;width: 100%;&#34;&gt;
			&lt;em&gt;It seems that your browser cannot display the PDF file; Please use this &lt;a href=&#34;https://healis.eu/documents/20100910-medilig-introduction.pdf&#34;&gt;&lt;strong&gt;link&lt;/strong&gt; &lt;/a&gt;
			instead. Thanks!&lt;/em&gt;
	&lt;/object&gt;
&lt;/div&gt;
&lt;h3 id=&#34;microsoft-access-front-end&#34;&gt;Microsoft Access Front-End&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://healis.eu/documents/20100910-MEDILIGFE-MSAccess-Installation.pdf&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://healis.eu/documents/20100910-MEDILIGFE-MSAccess-UserGuide.pdf&#34;&gt;User Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;microsoft-msql-server-back-end&#34;&gt;Microsoft MSQL Server Back-End&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://healis.eu/documents/20100910-MEDILIGMSQL-INSTALLATION.pdf&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://healis.eu/documents/20100910-MEDILIGMSQL-UserGuide.pdf&#34;&gt;User Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Open Data vs Open Source Software</title>
      <link>https://healis.eu/en/post/20100810/</link>
      <pubDate>Tue, 10 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20100810/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;./featured.jpg&#34; alt=&#34;jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This is a summary from a post that I wrote for &lt;a href=&#34;http://comments.gmane.org/gmane.org.misc.open-knowledge-foundation.general/1485&#34;&gt;Open Knowledge Foundation discussion list&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;{&amp;lt; toc &amp;gt;}&lt;/p&gt;
&lt;h2 id=&#34;definitions&#34;&gt;Definitions&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Open_Data&#34;&gt;Wikipedia Open Data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Open_Source&#34;&gt;Wikipedia Open Source&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Open Source licenses control the use of computer programs (software) while open data licenses such as &lt;a href=&#34;http://www.opendatacommons.org/licenses/odbl/&#34;&gt;Open Database License (ODbL)&lt;/a&gt; concern primarily the use of databases and their content. Nevertheless a database often constitutes part of the software. Therefore there is some overlap between the two. The following questions and answers demonstrate a real life scenario that is based on &lt;a href=&#34;https://healis.eu/en/project/medilig/&#34;&gt;MEDILIG project&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;qa-session&#34;&gt;Q&amp;amp;A Session&lt;/h2&gt;
&lt;h3 id=&#34;why-do-you-apply-two-licenses-odbl-and-gpl-for-the-medilig-project-&#34;&gt;Why do you apply two licenses ODbL and GPL for the MEDILIG project ?&lt;/h3&gt;
&lt;p&gt;MEDILIG project is a software product/service and it also includes a database. The &lt;!-- raw HTML omitted --&gt;use of the database&lt;!-- raw HTML omitted --&gt; cannot be covered with a GPL license.&lt;/p&gt;
&lt;h3 id=&#34;software-is-normally-covered-by-software-licenses-why-did-not-you-apply-only-gpl-license-&#34;&gt;Software is normally covered by software licenses. Why did not you apply only GPL license ?&lt;/h3&gt;
&lt;p&gt;GPL does not tell you anything about who controls the database and what are the rights of the user on the database. For example consider the deployment scenario where the software is open but the database is locked.  Does the user have the right to unlock the database, does he have the right to export or import his data from/to the database and in what extent? Can he create a derivative database or use the existing one collectively as part of other system developed? Software developers and/or vendors often use databases as leverage to lock users into support contracts and licenses. ODbL grant rights to the user and prevents this behaviour. It is section 3.0 and 4.0 of the full license text .&lt;/p&gt;
&lt;h3 id=&#34;what-parts-of-the-database-you-cover-with-odbl-&#34;&gt;What parts of the database you cover with OdBL ?&lt;/h3&gt;
&lt;p&gt;Section 2.2a of ODbL license says that it is likely to cover database model or schema. This is true, you may cover the general design, but you cannot cover  specific details of the database schema, e.g. Microsoft SQL Server implementation. You can do that only by GPL because it is coding. Another useful distinction between ODbL and GNU GPL.&lt;/p&gt;
&lt;h3 id=&#34;what-about-the-contents-of-the-database-&#34;&gt;What about the contents of the database ?&lt;/h3&gt;
&lt;p&gt;There is the content of look-up tables which is usually static, it hardly ever changes, and the content of main tables where you expect to find all sort of information that is added dynamically or exists, such as factual data, images, etc. In my opinion there should be a distinction of the two because look-up data is part of the design and/or customisation of the database. On the contrary content data that the user added on an empty database delivered by the developer have a separate copyright.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Healthcare Software on Proprietary OS</title>
      <link>https://healis.eu/en/post/20100412/</link>
      <pubDate>Mon, 12 Apr 2010 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20100412/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;./featured.jpg&#34; alt=&#34;jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;extract-from-a-post-to-gnusolidario-forum-of-luis-falcon&#34;&gt;Extract from a post to gnusolidario forum of Luis Falcon&lt;/h2&gt;
&lt;p&gt;Recently I released to the public MEDILIG project v1.0 (MEDILIG Source at Sourceforge) under a combination of two licenses GPL and ODbL.&lt;/p&gt;
&lt;p&gt;The current implementation is based on a combination of Microsoft SQL Server and Microsoft Access and there is minimal coding. Therefore a quick conclusion would be that this is a health software under a proprietary operating system. But that limits completely the horizon for this project. Let me throw here a few critical MEDILIG features for discussion.&lt;/p&gt;
&lt;p&gt;I chose to implement the system under Microsoft Technology for two reasons&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Microsoft Technology is still very popular and there are millions of users that use a Windows PC.&lt;/li&gt;
&lt;li&gt;Microsoft SQL Server and Microsoft Access are also extremely popular. It is easy to maintain the server, it is easy to build a complex application in Access in days if not in a few weeks time! Leave aside all the toolkits for Microsoft Access and the great connectivity with other Microsoft Office applications. Since EMR/EHR applications need a lot of tuning and customization to cover the specific needs of the professional, I believe that this combination wins in speed as it concerns Rapid Application Development.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Conclusion:&lt;/strong&gt; The main financial burden for the user is not the cost to run you application on a proprietary system; this may come free or with a very low cost for the user (e.g. included in the hardware price). It has to do with the the resources spent on building, modifying, updating, maintaining, expanding an application, and it also has to do with connectivity and interoperability issues.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Now I will attempt to touch the last bit. Technical interoperability in HIT is only part of the problem. There is the semantics problem and the process/workflow dimension. You mentioned MEDICAL running in many different architectures. I consider the main point to be the architecture inside MEDICAL. If MEDICAL is based in a platform independent architecture, then that is the key issue for success. This is the main driving force behind MEDILIG&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;MEDILIG is using an extensive database schema for continuous health care that follow standard clinical practice terms with an easy nomenclature for developers. This is the main asset of MEDILIG, this is where most of my effort was concentrated on. I will be glad if others start comparing MEDILIG schema with any other open EMR/EHR software schema to realize the differences in the domain architecture. By the way, I started this project because I could hardly see any extensive relational database schema for continuous care. The domain schema in many projects is either too complex to understand, or it is hidden, etc. Why have we abandoned so easily relational databases for an object oriented approach? Aren’t there so many legacy and proprietary systems that are based on RDBMS. How easily migration can be achieved?&lt;/li&gt;
&lt;li&gt;I am an ambassador of open architecture techniques and not open software or open OS. I want to solve a domain problem as quickly as possible and as cheap as possible. MEDILIG supports complete separation of the database schema from the presentation layer. I strongly support the independent development for the database layer. Has there been any agreement worldwide on a minimal database ER schema for XHR (EHR, EMR, CCR, PHR,….) ? Have they discussed extensively how important is for a health professional to keep his data on a privately own database?&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Finally a few lines about the presentation layer, I am skipping the business layer. The modern approach is that there is an integrated environment that provides you the GUI tools to build it and there is some way to connect your form/GUI with the database layer. MEDILIG is using Access only for demonstration purposes, you will see that the code is minimal. I believe that open health IT community of developers/user should head for open services. I have been inspired also from the Infopath Technology, particularly the idea that you can use the form with a set of data independent of the database server. I believe the most successful XHR application would be the one that offers the user the same flexibility as a word processor document or a spreadsheet. Many health professionals are still stuck with pen and paper. Perhaps the easy transition to the e-health era is to use electronic forms and documents on a tablet or on a PDA.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>MEDILIG First Release</title>
      <link>https://healis.eu/en/post/20100325/</link>
      <pubDate>Thu, 25 Mar 2010 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20100325/</guid>
      <description>&lt;h2 id=&#34;definition&#34;&gt;Definition&lt;/h2&gt;
&lt;p&gt;MEDILIG – Medical Life Guard: An EHR/EMR cross-platform software for the design, implementation, and use of autonomous, open, database models for multilingual medical knowledge management systems from primary care to continuing care.&lt;/p&gt;
&lt;h2 id=&#34;at-a-glance&#34;&gt;At A Glance&lt;/h2&gt;
&lt;p&gt;Fully tested, fully operational open-platform EHR/EMR software for health professionals and IT developers. The main feature of the project is the extensive continuous health care record schema of the database built into popular and robust relational database management systems, Microsoft SQL Server and MySQL server, with multilingual, international health coding standards. Create entry forms, catalogues, and reports with a minimal effort from rapid application development environments such as Microsoft Office – Access and OpenOffice – Base. Connect to web hosting services and/or use email to exchange and share medical information with others.&lt;/p&gt;
&lt;h2 id=&#34;download-now&#34;&gt;Download Now&lt;/h2&gt;
&lt;p&gt;Latest version from &lt;a href=&#34;http://sourceforge.net/projects/medilig/files/MEDILIG_20100913.ZIP/download&#34;&gt;SourceForge&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NEUROHEALIS - Ειδική Βάση Σπαστικότητας</title>
      <link>https://healis.eu/en/post/20090123/</link>
      <pubDate>Fri, 23 Jan 2009 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20090123/</guid>
      <description>&lt;h2 id=&#34;διαγράμματα-προόδου-2008-2009&#34;&gt;Διαγράμματα Προόδου 2008-2009&lt;/h2&gt;
&lt;div class=&#34;responsive-wrap&#34;&gt;
	&lt;object data=&#34;/documents/20090123-neuroinformatics-report.pdf&#34; type=&#34;application/pdf&#34; style=&#34;margin: 0 auto;height: 100vh;width: 100%;&#34;&gt;
		&lt;embed src=&#34;https://healis.eu/documents/20090123-neuroinformatics-report.pdf&#34; type=&#34;application/pdf &#34;style=&#34;margin: 0 auto;height: 100vh;width: 100%;&#34;&gt;
			&lt;em&gt;It seems that your browser cannot display the PDF file; Please use this &lt;a href=&#34;https://healis.eu/documents/20090123-neuroinformatics-report.pdf&#34;&gt;&lt;strong&gt;link&lt;/strong&gt; &lt;/a&gt;
			instead. Thanks!&lt;/em&gt;
	&lt;/object&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
