<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Serialization on HEALIS</title>
    <link>https://healis.eu/en/tags/serialization/</link>
    <description>Recent content in Serialization on HEALIS</description>
    <generator>Source Themes academia (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <copyright>&amp;copy; HEALIS - Athanassios I. Hatzis, {year}</copyright>
    <lastBuildDate>Wed, 19 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	    <atom:link href="https://healis.eu/en/tags/serialization/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>50 Years of SQL, can you imagine a truly NoSQL approach ?</title>
      <link>https://healis.eu/en/post/20200219/</link>
      <pubDate>Wed, 19 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20200219/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#two-programming-paradigm-approaches-for-a-nosql-api&#34;&gt;Two programming paradigm approaches for a NoSQL API&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#functional-operations&#34;&gt;Functional operations&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#a-glimpse-from-the-future&#34;&gt;A glimpse from the future&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#epilogue&#34;&gt;Epilogue&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;

&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In a decade of investigating NoSQL systems, I noticed a huge effort from many vendors to create SQL compatible APIs. Yes, there is a pretty good reason behind this tendency to walk-the-line as usual. Everybody has learned to program in SQL, everybody knows how to access a DBMS using SQL.&lt;/p&gt;
&lt;p&gt;Well, I guess after 50 years of SQL based DBMS there has to be a better approach to win programmer&amp;rsquo;s acceptance but it seems nobody has managed to achieve such an ambitious goal in scale. Nobody dares to propose something different to be adopted as a better solution and even those few that tried something different, it just comes to my mind the &lt;a href=&#34;http://tinkerpop.apache.org/&#34;&gt;Apache Tinkpop-Gremlin&lt;/a&gt; language, &lt;a href=&#34;https://graphql.org/&#34;&gt;GraphQL&lt;/a&gt; and &lt;a href=&#34;https://www.opencypher.org/&#34;&gt;Cypher&lt;/a&gt;, those brave hearts have not managed to convince the majority of IT users to switch gears to their proposed query environment. Others were more radical in their approach and even imagined a connected semantic web, but when they designed their query language, &lt;a href=&#34;https://www.w3.org/TR/rdf-sparql-query/&#34;&gt;SPARQL&lt;/a&gt;, it looked very similar to SQL, and even its acronym reminds us SQL.&lt;/p&gt;
&lt;p&gt;I can start writing many reasons for why all these approaches have not reached the consensus for the majority of IT technical users. I could also state a number of facts for why the industry and several consortium keep using SQL as their favourite DBMS query language. But with this article I would like you to focus on a very specific point, and with that perhaps I can share a bit of my imagination on how it can be possible to access a DBMS differently, with more flexibility than SQL, without losing the comfort of your programming language, without the hurdles in SQL and most important with earning the interest and respect of developers.&lt;/p&gt;
&lt;h2 id=&#34;two-programming-paradigm-approaches-for-a-nosql-api&#34;&gt;Two programming paradigm approaches for a NoSQL API&lt;/h2&gt;
&lt;p&gt;What is SQL ? It&amp;rsquo;s a domain specific language designed specifically to manage data in a relational DBMS, although many proponents of relational theory correctly argue that these DBMS do not follow Codd&amp;rsquo;s relational principles. But that is another important story to tell some other time.&lt;/p&gt;
&lt;p&gt;Recently, in the last decade, graph databases started becoming very popular but interestingly many important vendors stretched SQL language to cover graph traversal and other related operations. Columnar databases another very successful NoSQL type also followed the same tactic regarding to the query language. Therefore, although the data model and the physical layer implementation can vary a lot, SQL attempts to create an artificial unity at the database client level.&lt;/p&gt;
&lt;p&gt;But again SQL is domain specific, started as data model specific and remains a declarative query language. The main question is what happens at the API side, i.e. at the side of the programming language and that is exactly where all interesting, peculiar things happen. How exactly do you connect to the DBMS server, what is the protocol DBMS driver uses to transfer data, how well objects match with entities and attributes in your DBMS, schema vs object model changes, nullable and partial loading of fields-atrributes, persistence, state, concurrency and caching of objects. For OOP aficionados and others what I briefly described is known as the &lt;a href=&#34;https://en.wikipedia.org/wiki/Object-relational_impedance_mismatch&#34;&gt;object-relational impedance mismatch&lt;/a&gt; problem, the &lt;a href=&#34;http://blogs.tedneward.com/post/the-vietnam-of-computer-science/&#34;&gt;Vietnam of Computer Science&lt;/a&gt;. And do not make a mistake it is still &amp;ldquo;Vietnam&amp;rdquo; out there.&lt;/p&gt;
&lt;p&gt;Chainable operators and operands
OOP is perhaps the most popular programming paradigm and yet because of the SQL magic spell everything had to be squeezed on a tabular form using one &lt;a href=&#34;https://en.wikipedia.org/wiki/Object-relational_mapping&#34;&gt;ORM&lt;/a&gt; or the other. But during all these years of my personal research and development effort I noticed one specific characteristic of these ORM APIs that is related to the data retrieval approach in use. There are three major trends here, &lt;a href=&#34;https://en.wikipedia.org/wiki/Query_by_Example&#34;&gt;Query-By-Example&lt;/a&gt; (QBE) the precursor of GraphQL, Query-By-API (QBA) the precursor of Gremlin and Query-By-Language (QBL) where all the SQL like query languages are categorised, &lt;a href=&#34;https://www.gqlstandards.org/&#34;&gt;GQL&lt;/a&gt; is not an exception. Developer&amp;rsquo;s practical experience showed that certain complex queries, particularly those with joins, were more difficult to represent in QBA and QBE and once more SQL won again this battle. But it is not a surprise that proponents of graph database technology have only partially touched the object-relational impedance mismatch. It requires a deeper architectural design and multi-perspective attitude than only comparing how well nodes of the graph match objects of a class.&lt;/p&gt;
&lt;p&gt;So, was that a fair battle between QBA and QBL, the answer is no because of the SQL existing dominance in DBMS and the mimicking of SQL join operations. That is where imagination enters the game, imagine that you could use object chainable operations using the &lt;a href=&#34;https://en.wikipedia.org/wiki/Fluent_interface&#34;&gt;fluent interface design method&lt;/a&gt;, a.k.a QBA, without the mismatch between the DBMS and OOP, i.e. imagine a loose connection between the DBMS and API, think of API database client more like a bridge to fetch or transfer data. The method of chaining query operators is very promising indeed, it can won a second round of boxing with SQL. I will briefly explain why.&lt;/p&gt;
&lt;p&gt;OOP is based on the concept of objects that can exchange messages and modify their internal state. Therefore that kind of fluent interface is very natural in OOP languages, on the other hand most complex queries can be visualised and processed as a data pipeline. My question to those that design GQL, the next international query language standard, is why you keep following a dead-end declarative approach ? Wouldn&amp;rsquo;t it be more natural and appealing to the users to follow a data pipeline methodology by standardising operands and operations ? There is plenty of hard evidence to verify that this is not an assumption. Recall TinkerPop-Gremlin reference above and in Python there is &lt;a href=&#34;https://github.com/pandas-dev/pandas&#34;&gt;Pandas&lt;/a&gt;, a very popular data analysis library (23621 starts at GitHub).&lt;/p&gt;
&lt;h2 id=&#34;functional-operations&#34;&gt;Functional operations&lt;/h2&gt;
&lt;p&gt;Speaking about programming languages, what is the other very competitive paradigm in software development. Arguably it is the functional one and yet the functional requirements for such an API are more obscure. But such an API exists in one of the most powerful functional programming languages of IT industry, Mathematica. See for example how carefully they designed Wolfram language functions on &lt;a href=&#34;https://reference.wolfram.com/language/guide/DatabaseLikeOperationsOnDatasets.html&#34;&gt;Database-Like Operations on Datasets&lt;/a&gt; and &lt;a href=&#34;https://reference.wolfram.com/language/guide/ComputationWithStructuredDatasets.html&#34;&gt;Computation with Structured Datasets&lt;/a&gt; and how perfectly these fit with many other functions of the same language.&lt;/p&gt;
&lt;h2 id=&#34;a-glimpse-from-the-future&#34;&gt;A glimpse from the future&lt;/h2&gt;
&lt;p&gt;Enough said, software engineering is not a theoretical thing, it is based on practice. I will give you an example. One of the drawbacks of SQL is that you don&amp;rsquo;t have a direct access to manage data dictionary information, this is handled more or less automatically by the DBMS. Gartner recently reported that data quality and data integration tools are incorporating data catalogs. This is certainly a step towards the right direction, you need a query API that is capable to manage both data and metadata using a unified approach.&lt;/p&gt;
&lt;p&gt;Consider the following code snippet in Python:&lt;/p&gt;
&lt;p&gt;The first command demonstrates fetching metadata using OOP chainable python methods:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;mis&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#ae81ff&#34;&gt;221&lt;/span&gt;)
   &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fields
   &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;over(select&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nid, dim4, dim3, dim2, cname, alias, ntype, ctype, counter&amp;#39;&lt;/span&gt;)
   &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_dataframe(index&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dim4, dim3, dim2&amp;#39;&lt;/span&gt;)
   &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;out()

Out[&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;]: 
                nid                 cname alias ntype ctype  counter
dim4 dim3 dim2                                                      
&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;605&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;227&lt;/span&gt;              Duration    NA   FLD   CSV        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
          &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;228&lt;/span&gt;            Start date    NA   FLD   CSV        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
          &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;229&lt;/span&gt;              End date    NA   FLD   CSV        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
          &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;230&lt;/span&gt;  Start station number    NA   FLD   CSV        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
          &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;231&lt;/span&gt;         Start station    NA   FLD   CSV        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
          &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;232&lt;/span&gt;    End station number    NA   FLD   CSV        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
          &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;233&lt;/span&gt;           End station    NA   FLD   CSV        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
          &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;234&lt;/span&gt;           Bike number    NA   FLD   CSV        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
          &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;235&lt;/span&gt;           Member type    NA   FLD   CSV        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The second command demonstrates fetching metadata using a functional approach:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;mis&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(nid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;221&lt;/span&gt;, 
        what&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fields&amp;#39;&lt;/span&gt;, 
        select&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nid, dim4, dim3, dim2, cname, alias, ntype, ctype, counter&amp;#39;&lt;/span&gt;,
        index&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dim4, dim3, dim2&amp;#39;&lt;/span&gt;, 
        out&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dataframe&amp;#39;&lt;/span&gt;)

Out[&lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;]: 
                nid                 cname alias ntype ctype  counter
dim4 dim3 dim2                                                      
&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;605&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;227&lt;/span&gt;              Duration    NA   FLD   CSV        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
          &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;228&lt;/span&gt;            Start date    NA   FLD   CSV        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
          &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;229&lt;/span&gt;              End date    NA   FLD   CSV        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
          &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;230&lt;/span&gt;  Start station number    NA   FLD   CSV        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
          &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;231&lt;/span&gt;         Start station    NA   FLD   CSV        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
          &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;232&lt;/span&gt;    End station number    NA   FLD   CSV        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
          &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;233&lt;/span&gt;           End station    NA   FLD   CSV        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
          &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;234&lt;/span&gt;           Bike number    NA   FLD   CSV        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
          &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;235&lt;/span&gt;           Member type    NA   FLD   CSV        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And the third command demonstrates fetching data using again a functional approach&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;mis&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#ae81ff&#34;&gt;221&lt;/span&gt;, what&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;, 
             select&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nid, dim4, dim3, dim2, cname, alias, ntype, ctype, counter&amp;#39;&lt;/span&gt;, 
             out&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dataframe&amp;#39;&lt;/span&gt;, 
             limit&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, 
             offset&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;)

Out[&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;]: 
    &lt;span style=&#34;color:#ae81ff&#34;&gt;534&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2012&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;06&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2012&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;38&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;31113&lt;/span&gt;  Columbia Rd &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; Belmont St NW  &lt;span style=&#34;color:#ae81ff&#34;&gt;31201&lt;/span&gt;                                &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;th &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; P St NW  W00663  Member
&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1937&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2012&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;07&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2012&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;31202&lt;/span&gt;               &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;th &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; R St NW  &lt;span style=&#34;color:#ae81ff&#34;&gt;31621&lt;/span&gt;              &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;th &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; D St NW &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; Judiciary Square  W00692  Casual
&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;470&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2012&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2012&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;37&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;08&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;31104&lt;/span&gt;  Adams Mill &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; Columbia Rd NW  &lt;span style=&#34;color:#ae81ff&#34;&gt;31200&lt;/span&gt;          Massachusetts Ave &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; Dupont Circle NW  W00020  Member
&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;727&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2012&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2012&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;38&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;31103&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;th &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; Harvard St NW  &lt;span style=&#34;color:#ae81ff&#34;&gt;31200&lt;/span&gt;          Massachusetts Ave &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; Dupont Circle NW  W00880  Member
&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1144&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2012&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2012&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;31110&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;th St &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; Florida Ave NW  &lt;span style=&#34;color:#ae81ff&#34;&gt;31236&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;37&lt;/span&gt;th &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; O St NW &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; Georgetown University  W00681  Casual
&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1698&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2012&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2012&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;58&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;31107&lt;/span&gt;      Lamont &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; Mt Pleasant NW  &lt;span style=&#34;color:#ae81ff&#34;&gt;31610&lt;/span&gt;  Eastern Market &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;th &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; North Carolina Ave SE  W01154  Member
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;epilogue&#34;&gt;Epilogue&lt;/h2&gt;
&lt;p&gt;I am sure it is not difficult for those few out there to imagine and even implement a better solution than SQL provided you have the motive and financial backup. In fact as I mentioned in this article that partly exists. But it is certainly far more challenging and difficult to loose the safety of your daily job and/or income for years to imagine and consequently strive to give flesh and bones to a truly NoSQL API that can be more productive, efficient and innovative to work with than what already exists. Keep an eye for the next release of TRIADB project and who knows you might be convinced that this is truly a unique and valuable tool to use.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Therefore, we need to investigate systems that combine relational algebra and linear algebra in a richer query paradigm, potentially as extensions to SQL. Two “holy grails” should continue to stay on our agenda. First, we must always explore any novel ideas to reduce the impedance mismatch between application development and writing database queries. Second, we must continue to find ways to make database systems less rigid (e.g., flexible schema evolution) without significantly sacrificing their performance &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;The Seattle Report on Database Research - the report summarizes the discussion and conclusions of the 9th such meeting, held during 9-10 October 2018. It appeared in the December 2019 issue of ACM SIGMOD Record &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>TRIADB</title>
      <link>https://healis.eu/en/project/triadb/</link>
      <pubDate>Mon, 11 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/project/triadb/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#at-a-glance&#34;&gt;At A Glance&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#architectural-design&#34;&gt;Architectural Design&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#architectural-overview-white-paper&#34;&gt;Architectural Overview (White Paper)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#implementations&#34;&gt;Implementations&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#conference-presentations&#34;&gt;Conference Presentations&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#key-differentiating-factors&#34;&gt;Key Differentiating Factors&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#business-strategy&#34;&gt;Business Strategy&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#cross-references&#34;&gt;Cross-References&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;TRIADB is discontinued, page is maintained here for the history.&lt;/strong&gt;


&lt;button class=&#34;btn  btn-danger&#34; type=&#34;button&#34;  onclick=&#34;location.href=&#39;\/en\/hmorph\/&#39;&#34; &gt; Visit HyperMorph the successor of this project &lt;/button&gt;


&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;at-a-glance&#34;&gt;At A Glance&lt;/h2&gt;
&lt;p&gt;TRIADB is an innovative, multi-perspective database framework. It is a Python library that sits on top of suitable NoSQL/SQL data store engines and enables the users to perform easily &lt;strong&gt;integration, correlation, aggregation and hypergraph exploration of multiple data resources&lt;/strong&gt;. TRIADB is founded on the principles of &lt;a href=&#34;https://healis.eu/en/project/r3dm/&#34;&gt;R3DM/S3DM&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;architectural-design&#34;&gt;Architectural Design&lt;/h2&gt;
&lt;p&gt;In terms of the architectural design TRIADB is based on &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000107/&#34;&gt;&lt;strong&gt;associative&lt;/strong&gt;, &lt;strong&gt;semiotic&lt;/strong&gt;, &lt;strong&gt;hypergraph&lt;/strong&gt; technology&lt;/a&gt; pioneered by &lt;a href=&#34;https://healis.eu/en/about/#athanassios&#34;&gt;Dr. Athanassios I. Hatzis&lt;/a&gt;. Foundational principles, theoretical formalization and ontological dimensions of the framework and the data model are &lt;a href=&#34;https://healis.eu/en/project/r3dm/#cross-references&#34;&gt;dating back to the year 2012&lt;/a&gt;. Our technology shares certain similarities with &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000104/&#34;&gt;Qlik&lt;/a&gt; associative technology, &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000002/&#34;&gt;AtomicDB and X10SYS&lt;/a&gt; associative technology, &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000103/#associative-model&#34;&gt;Sentences&lt;/a&gt; associative data model, &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000101/&#34;&gt;Topic Maps&lt;/a&gt; data model and &lt;a href=&#34;https://en.wikipedia.org/wiki/Correlation_database&#34;&gt;correlation database model&lt;/a&gt;. The &lt;span class=&#34;markup-quote&#34;&gt;main difference of our technology from other similar associative technologies&lt;/span&gt; is that it has a solid theoretical background, a unified data modeling architecture and at the same time it is distinct in its design and implementation.&lt;/p&gt;
&lt;h2 id=&#34;architectural-overview-white-paper&#34;&gt;Architectural Overview (White Paper)&lt;/h2&gt;
&lt;div class=&#34;responsive-wrap&#34;&gt;
	&lt;object data=&#34;/documents/WP-TriaClick-Architectural-Overview-Final.pdf&#34; type=&#34;application/pdf&#34; style=&#34;margin: 0 auto;height: 100vh;width: 100%;&#34;&gt;
		&lt;embed src=&#34;https://healis.eu/documents/WP-TriaClick-Architectural-Overview-Final.pdf&#34; type=&#34;application/pdf &#34;style=&#34;margin: 0 auto;height: 100vh;width: 100%;&#34;&gt;
			&lt;em&gt;It seems that your browser cannot display the PDF file; Please use this &lt;a href=&#34;https://healis.eu/documents/WP-TriaClick-Architectural-Overview-Final.pdf&#34;&gt;&lt;strong&gt;link&lt;/strong&gt; &lt;/a&gt;
			instead. Thanks!&lt;/em&gt;
	&lt;/object&gt;
&lt;/div&gt;
&lt;h2 id=&#34;implementations&#34;&gt;Implementations&lt;/h2&gt;
&lt;p&gt;There are four TRIADB prototypes implemented:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;TRIADB on &lt;a href=&#34;https://healis.eu/en/talk/triadb_wolfram/&#34;&gt;OrientDB with Mathematica&lt;/a&gt; - 2016&lt;/li&gt;
&lt;li&gt;TRIADB on &lt;a href=&#34;https://healis.eu/en/talk/triadb_connected_data/&#34;&gt;Intersystems Cache with Python&lt;/a&gt; - 2017&lt;/li&gt;
&lt;li&gt;TRIADB on Redis with Python - 2018&lt;/li&gt;
&lt;li&gt;TRIADB on &lt;a href=&#34;https://healis.eu/en/post/20191025/&#34;&gt;MariaDB and ClickHouse with Python&lt;/a&gt; - 2019&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In the last open-source release of TRIADB, MariaDB stores data dictionary information and ClickHouse data storage engines are used for processing and querying data. The associative, semiotic, hypergraph engine has a proprietary licence, although the sources are included in the release, and it is given the codename TriaClick.&lt;/p&gt;
&lt;h2 id=&#34;conference-presentations&#34;&gt;Conference Presentations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;16/11/2017&lt;/strong&gt; - &lt;a href=&#34;https://healis.eu/en/talk/triadb_connected_data/&#34;&gt;Connected Data London Conference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;19/06/2017&lt;/strong&gt; - &lt;a href=&#34;https://healis.eu/en/talk/triadb_wolfram/&#34;&gt;European Wolfram Technology Conference in Amsterdam&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;key-differentiating-factors&#34;&gt;Key Differentiating Factors&lt;/h2&gt;
&lt;p&gt;The following is a list of technical specifications and features in the design and implementation of TRIADB. This same list is what makes &lt;span class=&#34;markup-quote&#34;&gt;TRIADB a unique and valuable product&lt;/span&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Multi-Perspective Database Framework: tuples, domain sets, objects, hypergraph, hierarchical&lt;/li&gt;
&lt;li&gt;Act both as an operational and data warehouse database with a 360 degree view&lt;/li&gt;
&lt;li&gt;Automatic fixed, primary indexing schema instead of user-defined secondary indexing&lt;/li&gt;
&lt;li&gt;Manage the references instead of data: relying on reference-based associations and logical identifiers&lt;/li&gt;
&lt;li&gt;No duplicates: single value instance based on system defined primitive data types&lt;/li&gt;
&lt;li&gt;Consolidation of multiple data resources and mapping on user-defined data models&lt;/li&gt;
&lt;li&gt;Management of data resources, data models and metadata&lt;/li&gt;
&lt;li&gt;Python Chain Query Language (CQL) that avoids namespace and impedance mismatch problem&lt;/li&gt;
&lt;li&gt;Interactive, free-form, contextual queries&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;business-strategy&#34;&gt;Business Strategy&lt;/h2&gt;
&lt;p&gt;We create strong partnerships with database vendors to implement and fine-tune TRIADB on top of their technology stack and we offer consulting services on how to apply Associative, Semiotic, Hypergraph technology. We are not selling licenses or software, we provide full stack solutions and add-on value for our own clients, or for the clients of the vendor, thus the system we build inherits the scaling, performance, availability and TCO of the vendor.&lt;/p&gt;
&lt;p&gt;Our associative, semiotic, hypergraph technology is open-source. We are seeking for developer&amp;rsquo;s community consensus on the use of it and we strongly believe that our technology will be eventually adapted by major semantic and database technology players in the IT industry.&lt;/p&gt;
&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/triaclick-demo-athanassios-hatzis-phd/&#34;&gt;LinkedIn - 20190211 Pulse Article - TriaClick Demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/triaclick-architectural-overview-white-paper-athanassios-hatzis-phd/&#34;&gt;LinkedIn - 20190319 TriaClick Architectural Overview White Paper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/triadb-v09-athanassios-hatzis/&#34;&gt;LinkedIn - 20191025 Pulse Article - TRIADB v0.9&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>Back to the roots, Relational Data Model</title>
      <link>https://healis.eu/en/post/20180310/</link>
      <pubDate>Sat, 10 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20180310/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#back-to-the-roots&#34;&gt;Back to the roots&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#relational-model-vs-other-data-models&#34;&gt;Relational model vs Other data models&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#our-perspective&#34;&gt;Our perspective&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#cross-references&#34;&gt;Cross-References&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;

&lt;h2 id=&#34;back-to-the-roots&#34;&gt;Back to the roots&lt;/h2&gt;
&lt;p&gt;Recently, I realized that the &lt;strong&gt;associative, semiotic, hypergraph&lt;/strong&gt;, or in short the &lt;a href=&#34;https://healis.eu/en/post/20170412/&#34;&gt;R3DM/S3DM&lt;/a&gt;, technology framework we propose to be adopted in database management systems can be considered in many ways an extension to &lt;a href=&#34;https://en.wikipedia.org/wiki/Edgar_F._Codd&#34;&gt;Codd&amp;rsquo;s&lt;/a&gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/Relational_model&#34;&gt;Relational Model&lt;/a&gt;. I am aware that this is a big claim and certainly this is not the place or the time to lay down my arguments, suffice it to say how this occurred to me.&lt;/p&gt;
&lt;p&gt;I have partially implemented &lt;a href=&#34;https://healis.eu/en/project/triadb/&#34;&gt;TRIADB&lt;/a&gt; technology twice on top of two different &lt;a href=&#34;https://en.wikipedia.org/wiki/Data_store&#34;&gt;data stores&lt;/a&gt; and I noticed that those &lt;strong&gt;add and get operations&lt;/strong&gt; we defined are closely related to Codd&amp;rsquo;s &lt;a href=&#34;https://en.wikipedia.org/wiki/Relational_algebra&#34;&gt;relational algebra operations&lt;/a&gt;, while data sets, i.e. domains, and a user defined type system match the &lt;a href=&#34;https://en.wikipedia.org/wiki/Set_(mathematics)&#34;&gt;sets defined in mathematics&lt;/a&gt; and relational theory. Coincidentally Codd&amp;rsquo;s Relational logic goes back to Aristotle and the corner stone of our technology, which is the &lt;a href=&#34;https://healis.eu/en/project/r3dm/#computational-semiotic-triangle&#34;&gt;computational semiotic triangle&lt;/a&gt;, goes back to Aristotle too. I will briefly mention that one basic difference is that both the heading set and the body tuples of the Relation, in fact everything, are transformed and uniformly represented with numerical key references. Therefore it can also be called &lt;strong&gt;Reference Database Management System (RDBMS)&lt;/strong&gt;. All these are simply good indications. I believe we are on the right track.&lt;/p&gt;
&lt;p&gt;The truth is, and I will quote &lt;a href=&#34;https://en.wikipedia.org/wiki/Christopher_J._Date&#34;&gt;Chris Date&lt;/a&gt; here, that:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;if you are proposing to replace technology A by technology B first is counted on you to understand technology A and then it is counted on you that there is some problem that technology A does not solve and technology B does solve&lt;/em&gt; &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And the best person I have found to teach me Relational database technology, so that I can acquire an in-depth understanding, is Chris Date himself. The following video is a clip from an excellent, &lt;a href=&#34;http://shop.oreilly.com/product/0636920030553.do&#34;&gt;illuminating workshop that explains Codd&amp;rsquo;s Relational Theory&lt;/a&gt; to computer professionals, but most importantly, he shows what a real relational product would be like, and how and why it would be so much better than what’s currently available.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/qx0F7TfA8CI&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;relational-model-vs-other-data-models&#34;&gt;Relational model vs Other data models&lt;/h2&gt;
&lt;p&gt;That said, allow me to have my doubts about whether many of the proponents of other database technologies, including those in SQL databases and those in NoSQL databases, have understood what are really the differences with respect to Relational model and at what abstraction level they occur. Again this is not the place or time to elaborate on this. Instead, I am inviting you to ponder on the architectural design of modern database management systems.&lt;/p&gt;
&lt;p&gt;You see in practice, it is too difficult to make a very clean separation between the physical, logical and conceptual levels of information. From an engineer&amp;rsquo;s point of view it is hard to separate theoretical from practical purposes. Moreover, many of these NoSQL DBMS, that are in fashion nowadays, are suited to solve a particular type of problem and this is why you often hear that big corporations and large companies have many different kinds of DBMS at the back-end. Not to mention that nowadays there is the trend to market many DBMS as multi-model database systems. And that made me also to realize that:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;there has to be a distinction between those problems that one solves at the physical level e.g. physical layout, partition and availability and those that apply more at the logical-conceptual level e.g. integrity and data modeling. Therefore, I foresee that in the future systems will have to use a combination of these two levels that somehow will have to be tuned and made to work harmonically independent of each other&lt;/em&gt;&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;our-perspective&#34;&gt;Our perspective&lt;/h2&gt;
&lt;p&gt;This is our perspective towards the architectural design of modern database management systems that fully justifies our choice of &lt;strong&gt;marketing TRIADB as a &lt;a href=&#34;https://en.wikipedia.org/wiki/Middleware&#34;&gt;middleware&lt;/a&gt;&lt;/strong&gt;. We are focusing to provide an &lt;strong&gt;efficient and effective solution at the logical and conceptual level&lt;/strong&gt; using an existing implementation of the database physical layer. Relational modeling theory applies here too, from what I understand it was the implementation details at the physical level and perhaps other naive simplifications that made many to depart from the original Relational model. So it&amp;rsquo;s time to return back to the roots and make some real progress.&lt;/p&gt;
&lt;p&gt;In case you, as a reader, have the same feelings and see some truth on my writing, I would be more than happy to discuss with you about the progress we are making with TRIADB and associative, semiotic, hypergraph technology and definitely exchange ideas and share some common thoughts on these database topics. Stay tuned.&lt;/p&gt;
&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[LinkedIn - 20180305 Pulse Article - HEALIS: Build valuable relations; establish effective communications][1000]&lt;/li&gt;
&lt;/ul&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Chris Date - SQL and Relational Theory Master Class - O&amp;rsquo;Reilly Workshop &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Athanassios I. Hatzis, LinkedIn post, March 2018 &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>Are our old data model standards out of shape ?</title>
      <link>https://healis.eu/en/post/20170709/</link>
      <pubDate>Sun, 09 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20170709/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#comparison-with-other-data-model-standards&#34;&gt;Comparison with other data model standards&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#namespace-problem&#34;&gt;Namespace problem&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#separate-abstraction-layers&#34;&gt;Separate abstraction layers&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#granularity-with-air-units&#34;&gt;Granularity with AIR units&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#filtering-instead-of-querying&#34;&gt;Filtering instead of querying&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#a-solid-theoretical-background&#34;&gt;A solid theoretical background&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#summarize&#34;&gt;Summarize&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#cross-references&#34;&gt;Cross-References&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;

&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Both Topic Maps and RDF/OWL exhibit signs of aging. In my opinion these signs do not indicate maturity levels but on the contrary they signal a re-examination of the data modeling, information representation problem. There is an emergent need to unify and exchange transformations between serialization formats (XML, JSON, etc), (graph) DBMS data model standards and semantic web data models.&lt;/p&gt;
&lt;p&gt;Hence this is my speech at European Wolfram Technology Conference 2017 about a new data modeling framework &lt;a href=&#34;https://healis.eu/en/post/20170412/&#34;&gt;R3DM/S3DM&lt;/a&gt; that is implemented on top of OrientDB graph database and coded in Wolfram Mathematica.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/BZleqH7iMng&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;comparison-with-other-data-model-standards&#34;&gt;Comparison with other data model standards&lt;/h2&gt;
&lt;p&gt;These are a few critical points to consider when you compare this data model with Topic Maps and RDF/OWL:&lt;/p&gt;
&lt;h3 id=&#34;namespace-problem&#34;&gt;Namespace problem&lt;/h3&gt;
&lt;p&gt;Both RDF/OWL and Topic Maps are suffering from namespace problems and complexity. In topic maps for example, when you want to define associations, i.e. n-ary relations, relationships you must specify at least type and roles. For example:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Part(08:pid, &amp;quot;Acme Widget Washer&amp;quot;:pname, white:pcolor )&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;But in this representation you do not have a handle for the association instance and the context of roles has always to be present to assign meaning on values. Things become even more complicate with RDF association (type or instance) where everything has to be broken down in triples with labeled uni-directional edges.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;(Prt1 --pid--&amp;gt; 08, Prt1 --pname--&amp;gt; &amp;quot;Acme Widget Washer&amp;quot;, Prt1 --pcolor--&amp;gt; white}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The predicate of RDF triplet is causing more harm than good. Any SPARQL traversal algorithm is heavily dependent on these predicates, and in practice for large collaborative knowledge bases, e.g. Freebase, they used to label both directions to make traversal easier. You may also consider that owl:sameAs adds more complexity in the graph and traversal.&lt;/p&gt;
&lt;p&gt;Now compare these with the simplicity of Entity-Relationship model. The database vocabulary has the header of the association (relation) and the body contains tuples.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tuple type      : (pid, pname, pcolor)&lt;/code&gt;
&lt;code&gt;tuple instance  : (08, &amp;quot;Acme Widget Washer&amp;quot;, white)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Is there an alternative representation to combine these ? Yes there is, you make a &lt;strong&gt;uniform numerical representation&lt;/strong&gt; of types and instances, of entities and attributes, of data values and data types and you bind everything in a hypergraph space.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tuple type     : 233:0{85:0, 91:0, 34:0}&lt;/code&gt;
&lt;code&gt;tuple instance : 233:1[85:6, 91:2, 34:9]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The vocabulary of relational model (header) permits to have &lt;strong&gt;ordered tuples&lt;/strong&gt; of values (body), the numerical reference vectors of R3DM/S3DM model permits to have &lt;strong&gt;unordered tuples&lt;/strong&gt; and there is a handle that represents each tuple instance. In RDF to represent a tuple you have to break it down into triples where you repeat the &lt;code&gt;subject&lt;/code&gt;. And values (&lt;code&gt;objects&lt;/code&gt;) &lt;strong&gt;must be semantically accompanied by the predicate&lt;/strong&gt;. Thus R3DM/S3DM associative representation with numerical references is simpler and it proves to be more efficient with indexing too !&lt;/p&gt;
&lt;h3 id=&#34;separate-abstraction-layers&#34;&gt;Separate abstraction layers&lt;/h3&gt;
&lt;p&gt;It is important to separate digital information resources, e.g. web pages, files, folders, audio/video recordings, images, text documents etc from real things e.g. humans, organizations, objects, etc. It is also important to distinguish between a flexible model and its instances. But it is equally or more important to separate any abstract concept from data values (numerical, string, bits, etc). Because the first is the vehicle for human thinking and the second is the way computers are processing data. Therefore this gap has to be bridged somehow. R3DM/S3DM achieves this with an extra abstraction layer where everything is connected with &lt;a href=&#34;https://healis.eu/en/post/20150320/&#34;&gt;Atomic Information Resource&lt;/a&gt; (AIR) units. This AIR unit defines also the level of granularity. Instead of building everything with Topics, you use AIR units.&lt;/p&gt;
&lt;h3 id=&#34;granularity-with-air-units&#34;&gt;Granularity with AIR units&lt;/h3&gt;
&lt;p&gt;But the AIR unit has the advantage that can be indexed easily, it is represented with a numerical vector, an address that can pinpoint the exact location of an Entity-Attribute-Value item. It is similar to an IPv4 address of a machine (e.g. domain, network, server, node/device/machine). My question is the following. &lt;span class=&#34;markup-quote&#34;&gt;If we use such addresses for connecting machines on the internet, why don&amp;rsquo;t we establish a similar standard for connecting data ?&lt;/span&gt; An AIR unit is the fundamental powerful construction unit for smart data. It knows its siblings, its parent, its type, its nexus, its associated AIR units (nodes). A tuple of such units can stand on its own, without a header and its completely meaningful because the context has already been defined.&lt;/p&gt;
&lt;h3 id=&#34;filtering-instead-of-querying&#34;&gt;Filtering instead of querying&lt;/h3&gt;
&lt;p&gt;Thanks to the uniform representation of everything with AIR units that are connected with bidirectional edges there is no need to define a query language but instead you define powerful functional operations that filter and add data in an associative manner in a fully typed environment. R3DM/S3DM supports types for database metadata, data sources, models, entity types, attribute types, items (instances), link types and value types. Again everything is constructed with AIR units. Both bidirectional edges and a full type system that is based on primitives were key features of Metadata Freebase project and then Google&amp;rsquo;s knowledge graph.&lt;/p&gt;
&lt;h3 id=&#34;a-solid-theoretical-background&#34;&gt;A solid theoretical background&lt;/h3&gt;
&lt;p&gt;R3DM/S3DM data model is founded on the theory of semiosis. There have been attempts to connect RDF/OWL with Aristotle&amp;rsquo;s triangle of reference/meaning but in my opinion they fail to capture the essence of the abstraction mechanism in semiosis which is played by the sign as the vehicle of communication between the signifier and the signified.&lt;/p&gt;
&lt;h2 id=&#34;summarize&#34;&gt;Summarize&lt;/h2&gt;
&lt;p&gt;To summarize the power of R3DM/S3DM is hidden on its Atomic Information Resource units that are fully typed, addressable and can be dereferenced and the formation of n-ary bidirectional associations.&lt;/p&gt;
&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/109285/109285-6289775148434366465&#34;&gt;LinkedIn - 20170709 Topic Maps Group Post&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/129217/129217-6289922338628734979&#34;&gt;LinkedIn - 20170709 Semantic Web Research Group Post&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/our-old-data-model-standards-out-shape-athanassios-i-hatzis-phd&#34;&gt;LinkedIn - 20170709 Article&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/feed/update/urn:li:activity:6262704855635365889&#34;&gt;LinkedIn - 20170409 Update about namespace problem&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Many-to-Many Relationships</title>
      <link>https://healis.eu/en/post/20170420/</link>
      <pubDate>Thu, 20 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20170420/</guid>
      <description>&lt;h2 id=&#34;in-the-past&#34;&gt;In the Past&lt;/h2&gt;
&lt;p&gt;A many to many relationship is represented with an associative entity. Experts and non-experts in IT field know that this is one of the most important topics in Entity-Relationship and Relational theory. Seven years ago, when I started my data modeling saga, searching for SQL joins returned numerous results and few of them were on XML data. But I could hardly find any discussion about how a join table is related to the theory of two international data model standards, namely RDF and Topic Maps. A year later, in 2010 W3C started publishing &lt;a href=&#34;https://www.w3.org/TR/rdb-direct-mapping/&#34;&gt;&amp;ldquo;A Direct Mapping of Relational Data to RDF&amp;rdquo;&lt;/a&gt;. Coincidentally, back in 2009-2010 the &lt;a href=&#34;https://en.wikipedia.org/wiki/NoSQL&#34;&gt;NoSQL movement&lt;/a&gt; was born and Graph Databases started becoming a hot topic but nodes and edges were shrouded in disorientation for users of relational databases.&lt;/p&gt;
&lt;h2 id=&#34;in-the-present&#34;&gt;In the Present&lt;/h2&gt;
&lt;p&gt;It is 2017 and in my opinion the situation with associative entities has become darn confusing. Edges of a Property Graph data model are bidirectional but RDF links are unidirectional. A bridge-table of an Entity-Relationship schema has links only at the many side, i.e. we have an intersection of two one-to-many relationships. Foreign keys of a bridge table can be conveyed to RDF objects but for integrity and cardinality constrains you have to use OWL. Topic Maps use bidirectional associations with roles, therefore they are closer to the property graph data model. Each data model has a query language SQL, SPARQL, TMQL, Cypher, OrientDB SQL and GraphQL. There are significant differences among them and you have to understand the model in order to process or store efficiently data.&lt;/p&gt;
&lt;h2 id=&#34;epilogue&#34;&gt;Epilogue&lt;/h2&gt;
&lt;p&gt;I took a firm decision to clear a bit this info-glut with a series of articles in associative data modeling written with a hands-on practice style:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://healis.eu/en/post/20160825/&#34;&gt;Part 1/6&lt;/a&gt; is about Entity-Relationship data model&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://healis.eu/en/post/20160902/&#34;&gt;Part 2/6&lt;/a&gt; discusses Topic-Map data model&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://healis.eu/en/post/20160913/&#34;&gt;Part 3/6&lt;/a&gt; is focusing on Property Graph data model&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://healis.eu/en/post/20161220/&#34;&gt;Part 4/6&lt;/a&gt; is explaining RDF Graph data model and Sentences associative data model&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://healis.eu/en/post/20170211/&#34;&gt;Part 5/6&lt;/a&gt; is a demonstration of QlikView associative data model&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://healis.eu/en/post/20170412/&#34;&gt;Part 6/6&lt;/a&gt; presents R3DM/S3DM associative semiotic hypergraph data modeling perspective&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/49970/49970-6183777238341681155&#34;&gt;LinkedIn Semantic Web Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/2552968/2552968-6183777764466786305&#34;&gt;LinkedIn Graph Databases Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/2013423/2013423-6183768777587453956&#34;&gt;LinkedIn Data Scientists Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/108904/108904-6183776147260608513&#34;&gt;LinkedIn Data Warehouse &amp;amp; Business Intelligence Architects Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/3750024/3750024-6183774369735544834&#34;&gt;LinkedIn Database &amp;amp; Data Store Professionals Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/129217/129217-6183771432149884931&#34;&gt;LinkedIn Semantic Web Research Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/45183/45183-6183764505768534020&#34;&gt;LinkedIn Database Experts Group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Association in RDF Data Model</title>
      <link>https://healis.eu/en/post/20161220/</link>
      <pubDate>Tue, 20 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20161220/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#introduction-to-rdf&#34;&gt;Introduction to RDF&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#rdf-and-linked-data&#34;&gt;RDF and Linked Data&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#association-in-rdf&#34;&gt;Association in RDF&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#associative-model&#34;&gt;Associative Model&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#association-in-r3dm&#34;&gt;Association in R3DM&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#discussion&#34;&gt;Discussion&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#acknowledgements&#34;&gt;Acknowledgements&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#cross-references&#34;&gt;Cross-References&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;

&lt;h2 id=&#34;introduction-to-rdf&#34;&gt;Introduction to RDF&lt;/h2&gt;
&lt;p&gt;In the previous post, &lt;a href=&#34;https://healis.eu/en/post/20160913/&#34;&gt;Part-3&lt;/a&gt;, of this series we explored the Property Graph data model. It is now time to write about another Graph data model with a long history behind it, the Resource-Description-Framework (&lt;a href=&#34;https://en.wikipedia.org/wiki/Resource_Description_Framework&#34;&gt;RDF&lt;/a&gt;). We will see how we can define an association in RDF and what are the differences with other data models that we analyzed in previous posts of our series.&lt;/p&gt;
&lt;p&gt;RDF is a graph-based data model that has been designed to represent information as a &lt;strong&gt;labeled directed graph&lt;/strong&gt;. In RDF, a description of a resource, i.e. any type of thing, is represented as a number of triples. Each triple has a subject, predicate, and object. Alternatively if you want to think in terms of &lt;a href=&#34;https://en.wikipedia.org/wiki/Entity%E2%80%93relationship_model&#34;&gt;Entity-Relationship&lt;/a&gt; model, these three parts of the triple become the Entity-Attribute-Value. This is also known as the &lt;a href=&#34;https://en.wikipedia.org/wiki/Entity%E2%80%93attribute%E2%80%93value_model&#34;&gt;EAV&lt;/a&gt; model. For instance the Entity subject &lt;code&gt;Part:998&lt;/code&gt; of our &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/SupplierPartCatalogue/tsv/Parts.tsv&#34;&gt;Parts&lt;/a&gt; table in the &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/SupplierPartCatalogue&#34;&gt;example data set&lt;/a&gt; of our series can be &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/SupplierPartCatalogue/ttl/parts.ttl&#34;&gt;serialized&lt;/a&gt; in Turtle syntax as :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;Part:998 rdf&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;label        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fire Hydrant Cap&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@en&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
         schema&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;color     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Red&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@en&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
         schema&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;weight    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;7.2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^^&lt;/span&gt;xsd&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;double&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
         schema&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;unitText  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lb&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@en&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
         dc&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;identifier    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;998&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^^&lt;/span&gt;xsd&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;These &lt;code&gt;rdf:label&lt;/code&gt;, &lt;code&gt;schema:color&lt;/code&gt;, &lt;code&gt;schema:weight&lt;/code&gt;, &lt;code&gt;schema:unitText&lt;/code&gt;, &lt;code&gt;dc:identifier&lt;/code&gt; are attributes of this Entity instance and &amp;ldquo;Fire Hydrant Cap&amp;rdquo;, &amp;ldquo;Red&amp;rdquo;, &amp;ldquo;7.2&amp;rdquo;, &amp;ldquo;lb&amp;rdquo; and &amp;ldquo;998&amp;rdquo; are atomic values with an accompanied data type, see also &lt;a href=&#34;#fig7&#34;&gt;&lt;strong&gt;Fig. 7&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;rdf-and-linked-data&#34;&gt;RDF and Linked Data&lt;/h2&gt;
&lt;p&gt;But RDF is not like any other data model, it has been selected from &lt;a href=&#34;https://en.wikipedia.org/wiki/World_Wide_Web_Consortium&#34;&gt;W3C&lt;/a&gt; as one of the Web technologies, together with &lt;a href=&#34;https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol&#34;&gt;HTTP&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/Uniform_resource_identifier&#34;&gt;URIs&lt;/a&gt;, to &lt;strong&gt;extend the hyperlinking of documents to a set of best practices for publishing and interlinking structured data on global scale&lt;/strong&gt;. Today the term &lt;a href=&#34;https://en.wikipedia.org/wiki/Linked_data&#34;&gt;Linked Data&lt;/a&gt; refers to these standards, and the extension of the Web is also known as the &lt;a href=&#34;https://en.wikipedia.org/wiki/Semantic_Web&#34;&gt;Semantic Web&lt;/a&gt;. The predecessor of RDF, the &lt;a href=&#34;https://en.wikipedia.org/wiki/Semantic_network&#34;&gt;Semantic Network Model&lt;/a&gt;, was formed in the early 1960s. The main difference is that arcs and nodes in RDF are identified using HTTP URIs and dereferenced (i.e., looked up) over the HTTP protocol. If we use &lt;a href=&#34;https://en.wikipedia.org/wiki/N-Triples&#34;&gt;N-Triples&lt;/a&gt; syntax to serialize the same resource &lt;code&gt;Part:998&lt;/code&gt; we take:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//example.org/spc/Part/998&amp;gt;   &amp;lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#label&amp;gt;  &amp;#34;Fire Hydrant Cap&amp;#34;@en .
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//example.org/spc/Part/998&amp;gt;   &amp;lt;http://schema.org/color&amp;gt;                           &amp;#34;Red&amp;#34;@en .
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//example.org/spc/Part/998&amp;gt;   &amp;lt;http://schema.org/weight&amp;gt;                          &amp;#34;7.2&amp;#34;^^&amp;lt;http://www.w3.org/2001/XMLSchema#double&amp;gt; .
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//example.org/spc/Part/998&amp;gt;   &amp;lt;http://schema.org/unitText&amp;gt;                        &amp;#34;lb&amp;#34;@en .
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//example.org/spc/Part/998&amp;gt;   &amp;lt;http://purl.org/dc/elements/1.1/identifier&amp;gt;        &amp;#34;998&amp;#34;^^&amp;lt;http://www.w3.org/2001/XMLSchema#int&amp;gt; .
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Notice that the &lt;code&gt;object&lt;/code&gt; part of the triple is an &lt;a href=&#34;https://www.w3.org/TR/rdf11-concepts/#section-Datatypes&#34;&gt;RDF literal&lt;/a&gt; and datatypes are used to represent values such as strings, numbers and dates. These triples are called &lt;strong&gt;Literal triples&lt;/strong&gt; and describe the properties of resources. In our example these &lt;code&gt;literal triples&lt;/code&gt; describe five properties of the &lt;code&gt;Part:998&lt;/code&gt; resource. This type of RDF triples is distinguished from the other type which is &lt;strong&gt;RDF Links&lt;/strong&gt; and describe the relationship between two resources. For example if we want to express with the same syntax all the vendors of &lt;code&gt;Part:998&lt;/code&gt; we will form these triples:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//example.org/spc/Part/998&amp;gt;   &amp;lt;http://www.wikidata.org/property/hasVendor&amp;gt;  &amp;lt;http://example.org/spc/Supplier/1081&amp;gt; .
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//example.org/spc/Part/998&amp;gt;   &amp;lt;http://www.wikidata.org/property/hasVendor&amp;gt;  &amp;lt;http://example.org/spc/Supplier/1082&amp;gt; .
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//example.org/spc/Part/998&amp;gt;   &amp;lt;http://www.wikidata.org/property/hasVendor&amp;gt;  &amp;lt;http://example.org/spc/Supplier/1083&amp;gt; .
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//example.org/spc/Part/998&amp;gt;   &amp;lt;http://www.wikidata.org/property/hasVendor&amp;gt;  &amp;lt;http://example.org/spc/Supplier/1084&amp;gt; .
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is also the equivalent result set at &lt;a href=&#34;#fig1&#34;&gt;&lt;strong&gt;Fig. 1&lt;/strong&gt;&lt;/a&gt; presented in a compact form from the following &lt;a href=&#34;https://www.w3.org/TR/rdf-sparql-query/&#34;&gt;SPARQL&lt;/a&gt; query:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;Suppliers &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; Part &lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; Supplier: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;example.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;spc&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;Supplier&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; Part: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;example.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;spc&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;Part&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; xsd: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;www.w3.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2001&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;XMLSchema&lt;span style=&#34;color:#f92672&#34;&gt;#&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; wd: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;www.wikidata.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;property&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; dc: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;purl.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;dc&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;elements&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;sup &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
	BIND(wd:hasVendor &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;p)    

    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Start&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt that has id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt dc:identifier &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;998&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^^&lt;/span&gt;xsd:int .

    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; Find &lt;span style=&#34;color:#66d9ef&#34;&gt;all&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt; items (&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat) &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; a reference &lt;span style=&#34;color:#66d9ef&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat wd:hasPart &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt .

    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;For&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;any&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt; item (&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat) find the vendor that supplies &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;sup .
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;part998-suppliers-result-set.jpg&#34; data-caption=&#34;Result set from SPARQL query to find the suppliers of Part:98&#34;&gt;

&lt;img src=&#34;part998-suppliers-result-set.jpg&#34; alt=&#34;Result set from SPARQL query to find the suppliers of Part:98&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Result set from SPARQL query to find the suppliers of Part:98
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;In &lt;a href=&#34;#fig1&#34;&gt;&lt;strong&gt;Fig. 1&lt;/strong&gt;&lt;/a&gt; The URI with &lt;a href=&#34;https://en.wikipedia.org/wiki/QName&#34;&gt;QName&lt;/a&gt; &lt;code&gt;wd:hasVendor&lt;/code&gt;,  in the &lt;code&gt;predicate&lt;/code&gt; position defines the type of relationship between a &lt;code&gt;subject&lt;/code&gt; with QName &lt;code&gt;Part:998&lt;/code&gt; and an &lt;code&gt;object&lt;/code&gt; with any of these QNames (&lt;code&gt;Supplier:1081&lt;/code&gt;, &lt;code&gt;Supplier:1082&lt;/code&gt;, &lt;code&gt;Supplier:1083&lt;/code&gt;, &lt;code&gt;Supplier:1084&lt;/code&gt;). Both subject and object URIs are in the same namespace (&lt;code&gt;http://example.org/spc/&lt;/code&gt;), these are called &lt;strong&gt;Internal RDF links&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;One way to think these &lt;strong&gt;RDF links&lt;/strong&gt; is as a &lt;strong&gt;labeled directed graph&lt;/strong&gt;. Each triple is a directed arc that connects a subject, e.g. &lt;code&gt;Part:998&lt;/code&gt;, with an object, e.g. &lt;code&gt;Supplier:1084&lt;/code&gt;,  and the predicate is the label of the arc, &lt;code&gt;wd:hasVendor&lt;/code&gt;. For example the previous result set can be represented with the following graph in &lt;a href=&#34;#fig2&#34;&gt;&lt;strong&gt;Fig. 2&lt;/strong&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;gruff-part998-suppliers.jpg&#34; data-caption=&#34;Suppliers of Part:998&#34;&gt;

&lt;img src=&#34;gruff-part998-suppliers.jpg&#34; alt=&#34;Suppliers of Part:998&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Suppliers of Part:998
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;But the graph for the data model of our example is slightly more complicated because there are intermediate nodes, i.e. inventory items that represent records from the &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/SupplierPartCatalogue/tsv/Catalog.tsv&#34;&gt;Catalog&lt;/a&gt; table, that &lt;a href=&#34;https://en.wikipedia.org/wiki/Associative_entity&#34;&gt;&lt;strong&gt;associate&lt;/strong&gt;&lt;/a&gt;, bridge &lt;strong&gt;Suppliers&lt;/strong&gt; with &lt;strong&gt;Parts&lt;/strong&gt; &lt;a href=&#34;#fig3&#34;&gt;&lt;strong&gt;Fig. 3&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;gruff-part998-suppliers-and-inventory-items.jpg&#34; data-caption=&#34;Suppliers of Part:998 with intermediate Inventory Items nodes&#34;&gt;

&lt;img src=&#34;gruff-part998-suppliers-and-inventory-items.jpg&#34; alt=&#34;Suppliers of Part:998 with intermediate Inventory Items nodes&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Suppliers of Part:998 with intermediate Inventory Items nodes
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Another distinction of &lt;strong&gt;RDF links&lt;/strong&gt; to &lt;strong&gt;Outgoing&lt;/strong&gt; and &lt;strong&gt;Incoming&lt;/strong&gt; can be seen in &lt;a href=&#34;#fig3&#34;&gt;&lt;strong&gt;Fig. 3&lt;/strong&gt;&lt;/a&gt;. For example &lt;code&gt;Part:998&lt;/code&gt; has four incoming &lt;strong&gt;RDF links&lt;/strong&gt; of type &lt;code&gt;wd:hasPart&lt;/code&gt; and &lt;code&gt;Item:7&lt;/code&gt; has two outgoing &lt;strong&gt;RDF links&lt;/strong&gt; of type &lt;code&gt;wd:hasPart&lt;/code&gt; and &lt;code&gt;wd:hasVendor&lt;/code&gt; respectively.&lt;/p&gt;
&lt;p&gt;In fact the SPARQL query above has been written taking in consideration this graph. In order to traverse the nodes you must know both the type of &lt;strong&gt;RDF link&lt;/strong&gt; and its direction. &lt;strong&gt;In RDF graph data model edges are unidirectional&lt;/strong&gt;. In order to define bidirectional edges we have to define both outgoing and incoming  &lt;strong&gt;RDF links&lt;/strong&gt; for each node, i.e. two predicates &lt;a href=&#34;#fig4&#34;&gt;&lt;strong&gt;Fig. 4&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;gruff-part998-suppliers-bidirectional.jpg&#34; data-caption=&#34;RDF bidirectional&#34;&gt;

&lt;img src=&#34;gruff-part998-suppliers-bidirectional.jpg&#34; alt=&#34;RDF bidirectional&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    RDF bidirectional
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;association-in-rdf&#34;&gt;Association in RDF&lt;/h2&gt;
&lt;p&gt;We can now compare these &lt;a href=&#34;https://healis.eu/en/post/20160902/#topic-map-serialization&#34;&gt;five associations&lt;/a&gt; of &lt;code&gt;Part:998&lt;/code&gt; with &lt;strong&gt;RDF links&lt;/strong&gt; of the graph in &lt;a href=&#34;#fig6&#34;&gt;&lt;strong&gt;Fig. 6&lt;/strong&gt;&lt;/a&gt;.  One of them is composed with all outgoing triples of &lt;code&gt;Part:998&lt;/code&gt;, i.e. &lt;code&gt;Part:998&lt;/code&gt; is the subject of the triple &lt;a href=&#34;#fig5&#34;&gt;&lt;strong&gt;Fig. 5&lt;/strong&gt;&lt;/a&gt;. These &lt;code&gt;literal triples&lt;/code&gt; describe five properties of &lt;code&gt;Part:998&lt;/code&gt; resource, yellow boxes of &lt;a href=&#34;#fig6&#34;&gt;&lt;strong&gt;Fig. 6&lt;/strong&gt;&lt;/a&gt;, and another RDF link is for the type of resource, i.e. &lt;code&gt;Item&lt;/code&gt; (grey box).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Get&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;all&lt;/span&gt; outgoing triples &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; a &lt;span style=&#34;color:#66d9ef&#34;&gt;specific&lt;/span&gt; part
&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; Part: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;example.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;spc&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;Part&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;o &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
    BIND(Part:&lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt)
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;o .
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;part998-outgoing-triples-result-set.jpg&#34; data-caption=&#34;Result set of all outgoing triples for Part:998&#34;&gt;

&lt;img src=&#34;part998-outgoing-triples-result-set.jpg&#34; alt=&#34;Result set of all outgoing triples for `Part:998`&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Result set of all outgoing triples for &lt;code&gt;Part:998&lt;/code&gt;
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;The resource &lt;code&gt;Part:998&lt;/code&gt; participates in four associations with &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/SupplierPartCatalogue/ttl/catalog.ttl&#34;&gt;&lt;strong&gt;Inventory&lt;/strong&gt; resources&lt;/a&gt;,  as the object of a triple. These are the four incoming &lt;strong&gt;RDF links&lt;/strong&gt; of &lt;code&gt;Part:998&lt;/code&gt; in &lt;a href=&#34;#fig3&#34;&gt;&lt;strong&gt;Fig. 3&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;#fig6&#34;&gt;&lt;strong&gt;Fig. 6&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;#fig8&#34;&gt;&lt;strong&gt;Fig. 8&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;gruff-part998.jpg&#34; data-caption=&#34;Five associations of Part:998, four with the green boxes and one with the yellow boxes&#34;&gt;

&lt;img src=&#34;gruff-part998.jpg&#34; alt=&#34;Five associations of `Part:998`, four with the green boxes and one with the yellow boxes&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Five associations of &lt;code&gt;Part:998&lt;/code&gt;, four with the green boxes and one with the yellow boxes
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;We can write the following SPARQL query to ask for all the suppliers of &lt;code&gt;Part:998&lt;/code&gt; sorted by their catalog price.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;Suppliers &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; Part &lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt; (Red Fire Hydrant Cap) sorted &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; their &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt; price

&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; xsd: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;www.w3.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2001&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;XMLSchema&lt;span style=&#34;color:#f92672&#34;&gt;#&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; wd: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;www.wikidata.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;property&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;schema&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;schema&lt;/span&gt;.org&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; rdf: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;www.w3.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1999&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;02&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;rdf&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;syntax&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ns&lt;span style=&#34;color:#f92672&#34;&gt;#&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; dc: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;purl.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;dc&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;elements&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;sup &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;supName &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;supCountry &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;catPrice &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;catQuantity &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prtName &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prtColor &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Start&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt that has id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;get&lt;/span&gt; its name &lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; color &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt dc:identifier &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;998&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^^&lt;/span&gt;xsd:int .
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt rdf:label &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prtName .
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt &lt;span style=&#34;color:#66d9ef&#34;&gt;schema&lt;/span&gt;:color &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prtColor .            

    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; Find &lt;span style=&#34;color:#66d9ef&#34;&gt;all&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt; items (&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat) &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; a reference &lt;span style=&#34;color:#66d9ef&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt &lt;span style=&#34;color:#66d9ef&#34;&gt;get&lt;/span&gt; their price &lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; quantity &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat wd:hasPart &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt .
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat &lt;span style=&#34;color:#66d9ef&#34;&gt;schema&lt;/span&gt;:cost &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;catPrice
    OPTIONAL &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat &lt;span style=&#34;color:#66d9ef&#34;&gt;schema&lt;/span&gt;:quantity &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;catQuantity .&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;For&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;any&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt; item (&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat) find the vendor that supplies &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt &lt;span style=&#34;color:#66d9ef&#34;&gt;get&lt;/span&gt; their name &lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; the country &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; origin
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat wd:hasVendor &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;sup .
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;sup rdf:label &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;supName .
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;sup &lt;span style=&#34;color:#66d9ef&#34;&gt;schema&lt;/span&gt;:country &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;supCountry
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ASC&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;catPrice)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You may consider the analogy between this query and the result set at &lt;a href=&#34;#fig7&#34;&gt;&lt;strong&gt;Fig. 7&lt;/strong&gt;&lt;/a&gt; and the equivalent &lt;a href=&#34;https://healis.eu/en/post/20160913/#join-vs-edge&#34;&gt;OrientDB SQL query and the result set from a &lt;strong&gt;Property Graph&lt;/strong&gt; data model&lt;/a&gt;. The main differences are that in &lt;strong&gt;Property Graph&lt;/strong&gt; data model you can traverse edges in both directions, (incoming, outcoming), the filtering part (&lt;code&gt;where&lt;/code&gt;) in SPARQL is significantly longer, and the starting point is represented in a different manner (edge vs link).&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;graphdb-part998-sup-catprices-1137x178.jpg&#34; data-caption=&#34;Suppliers of Part 998 (Red Fire Hydrant Cap) sorted by their catalog price&#34;&gt;

&lt;img src=&#34;graphdb-part998-sup-catprices-1137x178.jpg&#34; alt=&#34;Suppliers of Part 998 (Red Fire Hydrant Cap) sorted by their catalog price&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;fig7&lt;/h4&gt;
  &lt;p&gt;
    Suppliers of Part 998 (Red Fire Hydrant Cap) sorted by their catalog price
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;gruff-part998-suppliers-catprices-1210x710.jpg&#34; data-caption=&#34;Associations of Part:998 with Suppliers and their Catalog prices&#34;&gt;

&lt;img src=&#34;gruff-part998-suppliers-catprices-1210x710.jpg&#34; alt=&#34;Associations of `Part:998` with Suppliers and their Catalog prices&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Associations of &lt;code&gt;Part:998&lt;/code&gt; with Suppliers and their Catalog prices
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;We can view a graph representation, &lt;a href=&#34;#fig8&#34;&gt;&lt;strong&gt;Fig. 8&lt;/strong&gt;&lt;/a&gt;, of this SPARQL query and its result data set &lt;a href=&#34;#fig7&#34;&gt;&lt;strong&gt;Fig. 7&lt;/strong&gt;&lt;/a&gt;. In the same screen capture, &lt;a href=&#34;#fig8&#34;&gt;&lt;strong&gt;Fig. 8&lt;/strong&gt;&lt;/a&gt;, a many-to-many relationship is modeled with RDF triples. &lt;code&gt;Supplier:1082&lt;/code&gt; is associated with three parts (&lt;code&gt;Part:991&lt;/code&gt;, &lt;code&gt;Part:997&lt;/code&gt; and &lt;code&gt;Part:998&lt;/code&gt;) and &lt;code&gt;Part998&lt;/code&gt; is associated with four suppliers (&lt;code&gt;Supplier:1081&lt;/code&gt;, &lt;code&gt;Supplier:1082&lt;/code&gt;, &lt;code&gt;Supplier:1083&lt;/code&gt;, &lt;code&gt;Supplier:1084&lt;/code&gt;), see also &lt;a href=&#34;#fig9&#34;&gt;&lt;strong&gt;Fig. 9&lt;/strong&gt;&lt;/a&gt;. From a semantic point of view, Parts and Suppliers participate in associations with Inventory items (green boxes - &lt;code&gt;Catalog:7&lt;/code&gt;, &lt;code&gt;Catalog:9&lt;/code&gt;, &lt;code&gt;Catalog:10&lt;/code&gt;, &lt;code&gt;Catalog:11&lt;/code&gt;, &lt;code&gt;Catalog:12&lt;/code&gt; and &lt;code&gt;Catalog:16&lt;/code&gt;). In contrast with the binary relations between Suppliers and Parts represented with directed edges in a &lt;strong&gt;Property Graph&lt;/strong&gt;, &lt;a href=&#34;https://healis.eu/en/post/20160913/#property-graph-with-directed-edges&#34;&gt;see here&lt;/a&gt;, instead of an &lt;strong&gt;edge type&lt;/strong&gt; we have explicit intermediate (bridge) nodes and instead of outgoing head (out) and incoming tail (in) we have two outgoing directional links (&lt;code&gt;wd:hasPart&lt;/code&gt; and &lt;code&gt;wd:hasVendor&lt;/code&gt;) from this intermediate node, e.g. Catalog/Inventory item to Supplier and Part. In such as case these outgoing directional links (&lt;code&gt;wd:hasPart&lt;/code&gt; and &lt;code&gt;wd:hasVendor&lt;/code&gt;) look like &lt;a href=&#34;https://healis.eu/en/post/20160902/#topic-map-serialization&#34;&gt;roles in a Topic Map binary association&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/* 4 Associations of catalog part no 998 with supplier Ids and catalog prices */&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;Catalog07&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;Part998&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;HasPart&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Supplier1081&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;HasVendor&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11.7&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Cost&lt;/span&gt; )
&lt;span style=&#34;color:#a6e22e&#34;&gt;Catalog11&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;Part998&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;HasPart&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Supplier1082&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;HasVendor&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7.95&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Cost&lt;/span&gt; )
&lt;span style=&#34;color:#a6e22e&#34;&gt;Catalog12&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;Part998&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;HasPart&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Supplier1083&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;HasVendor&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;12.5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Cost&lt;/span&gt; )
&lt;span style=&#34;color:#a6e22e&#34;&gt;Catalog16&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;Part998&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;HasPart&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Supplier1084&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;HasVendor&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;48.6&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Cost&lt;/span&gt; )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;gruff-4suppliers-3parts-1227x457.jpg&#34; data-caption=&#34;A Many-to-Many Relationship between Suppliers and Parts modeled with RDF triples&#34;&gt;

&lt;img src=&#34;gruff-4suppliers-3parts-1227x457.jpg&#34; alt=&#34;A Many-to-Many Relationship between Suppliers and Parts modeled with RDF triples&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    A Many-to-Many Relationship between Suppliers and Parts modeled with RDF triples
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;associative-model&#34;&gt;Associative Model&lt;/h2&gt;
&lt;p&gt;Although it has not become mainstream, we see &lt;a href=&#34;https://en.wikipedia.org/wiki/Associative_model_of_data&#34;&gt;associative model of data&lt;/a&gt; as an effort to enhance RDF data model in a new kind of DBMS. The logical layer of &lt;a href=&#34;http://www.sentences.com/sentences.htm&#34;&gt;Sentences&lt;/a&gt; associative database management system may be regarded as comprising of only two tables: one for &lt;code&gt;Items&lt;/code&gt; that represent &lt;code&gt;Entities&lt;/code&gt;, &lt;code&gt;Entity Types&lt;/code&gt;, &lt;code&gt;Values&lt;/code&gt; and &lt;code&gt;Value Types&lt;/code&gt; and one for &lt;code&gt;Links&lt;/code&gt; that represent among other things &lt;code&gt;Associations&lt;/code&gt; and &lt;code&gt;Association Types&lt;/code&gt; (&lt;strong&gt;[Fig. 15]&lt;/strong&gt;, &lt;strong&gt;[Fig. 16]&lt;/strong&gt;). Both &lt;code&gt;Items&lt;/code&gt; and &lt;code&gt;Links&lt;/code&gt; also represent meta-types and instances, which perform various functions in the database. Thanks to this simple consistent form of &lt;code&gt;Items&lt;/code&gt; and &lt;code&gt;Links&lt;/code&gt;, it is easy to write generic code that is capable of working with every type of data. Recording schema changes and transactions, a type system &lt;strong&gt;[Fig. 15]&lt;/strong&gt;, associative queries in the form of a request tree, business rules, data provenance, automated default data entry forms &lt;strong&gt;[Fig. 16]&lt;/strong&gt; and many other features of Sentences DBMS were designed and implemented based on this generic metacode programming.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;SentencesDB_SPC_Types.jpg&#34; data-caption=&#34;Types, Association Instances and their Properties&#34;&gt;

&lt;img src=&#34;SentencesDB_SPC_Types.jpg&#34; alt=&#34;Types, Association Instances and their Properties&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Types, Association Instances and their Properties
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;

&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;SentencesDB_SPC_DataEntryForms.jpg&#34; data-caption=&#34;Types, Entity Instances and Data Entry Forms&#34;&gt;

&lt;img src=&#34;SentencesDB_SPC_DataEntryForms.jpg&#34; alt=&#34;Types, Entity Instances and Data Entry Forms&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Types, Entity Instances and Data Entry Forms
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;In fact along similar principles &lt;a href=&#34;https://en.wikipedia.org/wiki/Freebase&#34;&gt;Freebase&lt;/a&gt; collaborative knowledge base, now known as Google&amp;rsquo;s &lt;a href=&#34;https://en.wikipedia.org/wiki/Knowledge_Graph&#34;&gt;Knowledge Graph&lt;/a&gt;, was serving its users.&lt;/p&gt;
&lt;p&gt;Both Freebase and Sentences added also reverse edges to their model. In Freebase notation, &lt;strong&gt;[Fig. 10]&lt;/strong&gt; we can see that &lt;code&gt;/film/film&lt;/code&gt; is &lt;code&gt;/directed_by&lt;/code&gt; a &lt;code&gt;/film/director&lt;/code&gt; and a &lt;code&gt;/film/director&lt;/code&gt; has directed (&lt;code&gt;/film&lt;/code&gt;) a &lt;code&gt;/film/film&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;freebase-film.jpg&#34; data-caption=&#34;Movies Data Model in Freebase&#34;&gt;

&lt;img src=&#34;freebase-film.jpg&#34; alt=&#34;Movies Data Model in Freebase&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Movies Data Model in Freebase
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Bidirectional links allow a 360° view of every data item in the database. Directed edges in &lt;strong&gt;Property Graph&lt;/strong&gt; share the same concept, &lt;a href=&#34;https://healis.eu/en/post/20160913/#property-graph-with-directed-edges&#34;&gt;see here&lt;/a&gt;. In the following three figures (&lt;a href=&#34;#fig11&#34;&gt;&lt;strong&gt;Fig. 11&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;#fig12&#34;&gt;&lt;strong&gt;Fig. 12&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;#fig13&#34;&gt;&lt;strong&gt;Fig. 13&lt;/strong&gt;&lt;/a&gt;) we present three alternative schema views for our Supplier-Part-Catalog database that we built on Sentences DBMS. &lt;a href=&#34;#fig11&#34;&gt;&lt;strong&gt;Fig. 11&lt;/strong&gt;&lt;/a&gt; illustrates that it is possible to add attributes on the link. &lt;a href=&#34;#fig12&#34;&gt;&lt;strong&gt;Fig. 12&lt;/strong&gt;&lt;/a&gt; shows that &lt;code&gt;Supplier&lt;/code&gt;, &lt;code&gt;Catalog&lt;/code&gt; and &lt;code&gt;Part&lt;/code&gt; entities are sharing common attributes while in &lt;a href=&#34;#fig13&#34;&gt;&lt;strong&gt;Fig. 13&lt;/strong&gt;&lt;/a&gt; they are directly connected with bidirectional links.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;








  
  


&lt;div class=&#34;gallery&#34;&gt;

  
  
  
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-screen_captures&#34; href=&#34;https://healis.eu/en/post/20161220/screen_captures/SPC-bidirectional_edges_associations_directconnections.jpg&#34; &gt;
  &lt;img src=&#34;https://healis.eu/en/post/20161220/screen_captures/SPC-bidirectional_edges_associations_directconnections_hu2f5ba3506c67aca4d5953246be86fb8c_118507_0x190_resize_q90_lanczos.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-screen_captures&#34; href=&#34;https://healis.eu/en/post/20161220/screen_captures/SPC-bidirectional_edges_associations_indirectconnections.jpg&#34; &gt;
  &lt;img src=&#34;https://healis.eu/en/post/20161220/screen_captures/_huf9a85b6d31db297a90a7e332a9e02929_142663_2be83408ec7f9a57b41252a8ecdc2a14.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-screen_captures&#34; href=&#34;https://healis.eu/en/post/20161220/screen_captures/SPC-bidirectional_edges_associations_propertygraph.jpg&#34; &gt;
  &lt;img src=&#34;https://healis.eu/en/post/20161220/screen_captures/SPC-bidirectional_edges_associations_propertygraph_hu854a3e7bd7fe75e3520da486490b9b8f_93442_0x190_resize_q90_lanczos.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  

  
&lt;/div&gt;
&lt;h2 id=&#34;association-in-r3dm&#34;&gt;Association in R3DM&lt;/h2&gt;
&lt;p&gt;According to &lt;a href=&#34;https://healis.eu/en/post/20160913/#r3dm-hypergraph-terminology&#34;&gt;R3DM Hypergaph Terminology&lt;/a&gt;, the objects of &lt;code&gt;RDF literal&lt;/code&gt; triples, i.e. values, are  &lt;strong&gt;HyperAtoms&lt;/strong&gt; and the resources of &lt;strong&gt;RDF links&lt;/strong&gt; are &lt;strong&gt;HyperBonds&lt;/strong&gt;. Thus the RDF graph of &lt;a href=&#34;#fig8&#34;&gt;&lt;strong&gt;Fig. 8&lt;/strong&gt;&lt;/a&gt; can be redrawn as a hypergraph with &lt;!-- raw HTML omitted --&gt; red &lt;!-- raw HTML omitted --&gt; nodes that play the role of &lt;strong&gt;HyperAtoms&lt;/strong&gt; and &lt;!-- raw HTML omitted --&gt; green &lt;!-- raw HTML omitted --&gt; nodes that play the role of &lt;strong&gt;HyperBonds&lt;/strong&gt;, see &lt;a href=&#34;#fig14&#34;&gt;&lt;strong&gt;Fig. 14&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;part998-R3DM_hypergraph.png&#34; data-caption=&#34;R3DM Hypergraph&#34;&gt;

&lt;img src=&#34;part998-R3DM_hypergraph.png&#34; alt=&#34;R3DM Hypergraph&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    R3DM Hypergraph
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;This R3DM hypergraph figure above, &lt;a href=&#34;#fig14&#34;&gt;&lt;strong&gt;Fig. 14&lt;/strong&gt;&lt;/a&gt;, has been created from the execution of the following Wolfram Language code. You will notice that &lt;strong&gt;HyperAtom&lt;/strong&gt; sets such as &lt;strong&gt;ha2-(catcost)&lt;/strong&gt; and &lt;strong&gt;ha5-(catqnt)&lt;/strong&gt; are attribute sets with value members that take part in the formation of &lt;strong&gt;Catalog&lt;/strong&gt; records with instances that are drawn from &lt;strong&gt;hb2 set&lt;/strong&gt;. &lt;strong&gt;Supplier&lt;/strong&gt; instances are drawn from the other &lt;strong&gt;HyperBond&lt;/strong&gt; set (&lt;strong&gt;hb3&lt;/strong&gt;) and &lt;strong&gt;ha3-(sname)&lt;/strong&gt;, &lt;strong&gt;ha4-(scountry)&lt;/strong&gt; are attribute sets with value members that describe the &lt;strong&gt;Suppliers&lt;/strong&gt;. Instances from these &lt;strong&gt;HyperBond&lt;/strong&gt; sets may share common values or associated with the same &lt;strong&gt;HyperBond&lt;/strong&gt;. For example we have two suppliers, &lt;strong&gt;Supplier:1082&lt;/strong&gt; and &lt;strong&gt;Supplier:1081&lt;/strong&gt; that are located in &lt;strong&gt;USA&lt;/strong&gt; or &lt;strong&gt;Catalog:11&lt;/strong&gt; and &lt;strong&gt;Catalog:16&lt;/strong&gt; entries that are associated with &lt;strong&gt;Part:998&lt;/strong&gt; and they both have the same quantity, i.e. &lt;strong&gt;200&lt;/strong&gt; pieces of this part.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;ha1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fire Hydrant Cap&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Red&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`,&amp;#34;lb&amp;#34;};
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ha2={11.7,7.95,12.5,48.6};
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ha3={&amp;#34;Acme Widget Suppliers&amp;#34;,&amp;#34;Big Red Tool and Die&amp;#34;,&amp;#34;Perfunctory Parts&amp;#34;,&amp;#34;Alien Aircaft Inc.&amp;#34;};
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ha4={&amp;#34;USA&amp;#34;,&amp;#34;USA&amp;#34;,&amp;#34;SPAIN&amp;#34;,&amp;#34;UK&amp;#34;};
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ha5={&amp;#34;400&amp;#34;,&amp;#34;200&amp;#34;,&amp;#34;200&amp;#34;};
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;hb1={&amp;#34;Part:998&amp;#34;,&amp;#34;schema:item&amp;#34;};
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;hb2={&amp;#34;Catalog:7&amp;#34;,&amp;#34;Catalog:11&amp;#34;,&amp;#34;Catalog:12&amp;#34;,&amp;#34;Catalog:16&amp;#34;};
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;hb3={&amp;#34;Supplier:1081&amp;#34;,&amp;#34;Supplier:1082&amp;#34;,&amp;#34;Supplier:1083&amp;#34;,&amp;#34;Supplier:1084&amp;#34;};
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;vstyle=Join[Thread[Join[ha1,ha2, ha3,ha4,ha5]-&amp;gt;Red],Thread[Join[hb1,hb2,hb3]-&amp;gt;Green]];
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;data=Join[
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  {&amp;#34;Part:998&amp;#34;-&amp;gt;&amp;#34;schema:item&amp;#34;},
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  Thread[&amp;#34;Part:998&amp;#34;-&amp;gt;ha1],Thread[hb2-&amp;gt;ha2],
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  Thread[hb2-&amp;gt;hb3],Thread[hb3-&amp;gt;ha3],
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  Thread[hb3-&amp;gt;ha4],Thread[hb2-&amp;gt;&amp;#34;Part:998&amp;#34;],  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  Thread[{&amp;#34;Catalog:7&amp;#34;,&amp;#34;Catalog:11&amp;#34;,&amp;#34;Catalog:16&amp;#34;}-&amp;gt;ha5]];
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Graph[
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  data,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  VertexLabels-&amp;gt;&amp;#34;Name&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  VertexSize-&amp;gt;{{&amp;#34;Nearest&amp;#34;,0.15}},
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  VertexStyle-&amp;gt;vstyle,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  EdgeShapeFunction-&amp;gt;GraphElementData[{&amp;#34;CarvedArrow&amp;#34;,&amp;#34;ArrowSize&amp;#34;-&amp;gt;.02}],
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  EdgeStyle-&amp;gt;Thick,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  GraphLayout-&amp;gt;&amp;#34;SpringEmbedding&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  ImageSize-&amp;gt;{400.,Automatic}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can rewrite now the following four associations :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/* 4 Associations of catalog part no 998 with supplier Ids and catalog prices */&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;CatalogID&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;catpid&lt;/span&gt;,  &lt;span style=&#34;color:#a6e22e&#34;&gt;catsid&lt;/span&gt;,       &lt;span style=&#34;color:#a6e22e&#34;&gt;catqnt&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;catcost&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;Catalog07&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;Part998&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Supplier1081&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt;,    &lt;span style=&#34;color:#ae81ff&#34;&gt;11.70&lt;/span&gt;  )
&lt;span style=&#34;color:#a6e22e&#34;&gt;Catalog11&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;Part998&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Supplier1082&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;,     &lt;span style=&#34;color:#ae81ff&#34;&gt;7.95&lt;/span&gt;  )
&lt;span style=&#34;color:#a6e22e&#34;&gt;Catalog12&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;Part998&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Supplier1083&lt;/span&gt;,         &lt;span style=&#34;color:#ae81ff&#34;&gt;12.50&lt;/span&gt;  )
&lt;span style=&#34;color:#a6e22e&#34;&gt;Catalog16&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;Part998&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Supplier1084&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;,    &lt;span style=&#34;color:#ae81ff&#34;&gt;48.60&lt;/span&gt;  )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Associations in this form greatly resemble tuples of &lt;strong&gt;Catalog&lt;/strong&gt; relation, see &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/SupplierPartCatalogue/tsv/Catalog.tsv&#34;&gt;TSV&lt;/a&gt; format, where the &lt;strong&gt;heading&lt;/strong&gt; of this relation is usually stored in a &lt;a href=&#34;https://en.wikipedia.org/wiki/Data_dictionary&#34;&gt;data dictionary&lt;/a&gt; and &lt;strong&gt;Null&lt;/strong&gt; marker indicates that a data value is absent from the tuple. On the contrary in case of &lt;strong&gt;RDF literal&lt;/strong&gt; triples the predicate position signifies the object part of the triple and in &lt;strong&gt;RDF links&lt;/strong&gt; Instances/Type of resources at subject and object positions are also signified by predicates such as (&lt;code&gt;rdf:type&lt;/code&gt;). But in &lt;strong&gt;R3DM associations&lt;/strong&gt; there is not any label on the edge that connects &lt;strong&gt;HyperAtoms&lt;/strong&gt; or &lt;strong&gt;HyperBonds&lt;/strong&gt;. Therefore the denotation of resources and literals, i.e. what they stand for, cannot be seen on this graph, &lt;a href=&#34;#fig14&#34;&gt;&lt;strong&gt;Fig. 14&lt;/strong&gt;&lt;/a&gt;. For example in &lt;code&gt;Catalog12&lt;/code&gt; association instance we have to know that the literal meaning of the value &lt;code&gt;12.5&lt;/code&gt; is the &lt;strong&gt;Catalog Cost&lt;/strong&gt;. Generally speaking, this is the &lt;strong&gt;granularity of data&lt;/strong&gt; problem. How we represent a piece of information at atomic level and how we construct higher structures. &lt;strong&gt;R3DM/S3DM unifies three perspectives, semantics at the conceptual layer, representation at the symbol layer and encoding at the physical layer&lt;/strong&gt;, in such a way that they are separable. R3DM/S3DM conceptual framework is based on the natural process of semiosis where &lt;strong&gt;the signified, i.e. concept, entity, attribute and the signifier, i.e. value, &lt;a href=&#34;https://healis.eu/en/post/20150320/#signified-sign-signifier-alternative-paradigm&#34;&gt;are referenced through symbols&lt;/a&gt;, i.e. signs, at discrete layers&lt;/strong&gt;. The main difference with RDF data model is that these references are not in the form of &lt;a href=&#34;https://en.wikipedia.org/wiki/Uniform_resource_identifier&#34;&gt;URIs&lt;/a&gt; but they resemble &lt;a href=&#34;https://en.wikipedia.org/wiki/IP_address&#34;&gt;IPs&lt;/a&gt;. For example the value &lt;code&gt;12.50&lt;/code&gt; can be referenced by a 4D vector of the form &lt;code&gt;{2, 8, 262, 1}&lt;/code&gt; where the first dimension is the database, the second dimension is the table (Entity), the third dimension is the field (Attribute) and the last dimension is a member of an attribute set.&lt;/p&gt;
&lt;h2 id=&#34;discussion&#34;&gt;Discussion&lt;/h2&gt;
&lt;p&gt;Although this is not the space or the time to elaborate more on &lt;strong&gt;R3DM/S3DM associations&lt;/strong&gt; it is important to mention that it is possible to escape from the predicate logic (&lt;code&gt;owl#sameAs&lt;/code&gt;) on how to identify that two URI aliases refer to the same entity. Moreover the alternative paradigm of &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; offers a more attractive and efficient approach on data integration and heterogeneous data representation than bridging between RDF vocabularies with mapping predicates such as &lt;code&gt;owl:equivalentClass&lt;/code&gt;  and &lt;code&gt;owl:equivalentProperty&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We foresee that the Internet of things will use a protocol with numerical reference vectors for data communication in a similar fashion to IP addresses that are used for connecting devices in a computer network. Hopefully one day it will become clear that the predicate part of RDF data model is causing more harm than good in the semantic interpretation and information representation.&lt;/p&gt;
&lt;p&gt;Last but not least, SPARQL query mechanism is heavily dependent on namespace vocabulary terms, especially predicate terms that connect resources and literals. To answer such queries, care must be taken to devise a suitable mechanism of indexes (e.g. spo, sop, pso, pos, osp, ops) to support RDF triple structure. Besides indexing, RDF edges by default are not bidirectional, therefore 360 degrees view and nodes navigation is problematic. In contrast with RDF, in R3DM/S3DM everything is bidirectionally linked and referenced with 4D numerical vectors and these are naturally used for indexing purposes. Instead of writing queries there is a functional way, i.e. you learn a single command with a standard number of optional or mandatory parameters, to filter the data space and retrieve any piece of information.&lt;/p&gt;
&lt;p&gt;Interactive and associative data exploration is the key, unique feature of &lt;a href=&#34;http://www.qlik.com/us/products/qlikview&#34;&gt;Qlikview&lt;/a&gt;/&lt;a href=&#34;http://www.qlik.com/us/products/qlik-sense&#34;&gt;Qliksense&lt;/a&gt;, one of the best data visualization and business intelligence software in the market today. Behind the scenes, columnar, binary indexing capability is the foundation for &lt;strong&gt;QIX Associative Data Indexing Engine&lt;/strong&gt;. In the next part of our series we will apply Qlik associative technology on our toy dataset and we will demonstrate how we build the domain model and how we filter our data.&lt;/p&gt;
&lt;h2 id=&#34;acknowledgements&#34;&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;We have serialized our &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/SupplierPartCatalogue&#34;&gt;Supplier-Part-Catalogue example&lt;/a&gt; in &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/SupplierPartCatalogue/ttl/&#34;&gt;Turtle&lt;/a&gt; and &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/SupplierPartCatalogue/n3/&#34;&gt;N-Triples&lt;/a&gt; syntax. Then we used &lt;a href=&#34;https://en.wikipedia.org/wiki/AllegroGraph&#34;&gt;AllegroGraph&lt;/a&gt; and &lt;a href=&#34;http://graphdb.ontotext.com/documentation/free/about-graphdb.html&#34;&gt;GraphDB&lt;/a&gt; triple-store to create a repository and run queries on their SPARQL interfaces. All graph-based images of this article were displayed and captured on &lt;a href=&#34;https://franz.com/agraph/gruff/&#34;&gt;Gruff&lt;/a&gt;, an RDF visual browser that displays a variety of the relationships in &lt;a href=&#34;https://en.wikipedia.org/wiki/AllegroGraph&#34;&gt;AllegroGraph&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/associative-data-modeling-demystified-part-4-hatzis-phd&#34;&gt;LinkedIn Published Posts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/49970/49970-6217358696947814400&#34;&gt;LinkedIn Semantic Web Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/2552968/2552968-6217357737450438660&#34;&gt;LinkedIn Graph Databases Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/108904/108904-6217358696935231488&#34;&gt;LinkedIn Data Warehouse &amp;amp; Business Intelligence Architects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/6514034/6514034-6217358562243543041&#34;&gt;LinkedIn Computational Semiotics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/38506/38506-6217358477753483266&#34;&gt;LinkedIn Semantic Technologies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/4737538/4737538-6217357595209015300&#34;&gt;LinkedIn Data Visualization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/3750024/3750024-6217358686722097153&#34;&gt;LinkedIn Database &amp;amp; Data Store Professionals ★ NoSQL ★ NewSQL ★ Relational&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/73235/73235-6217357914919837698&#34;&gt;LinkedIn Database Developers and Architects Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/60636/60636-6217357769868222467&#34;&gt;LinkedIn Linked Data Web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/62614/62614-6217357140789727236&#34;&gt;LinkedIn Mathematica Users&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/45183/45183-6217358477761875970&#34;&gt;LinkedIn Database Experts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/associative-data-modeling-demystified-part-iv&#34;&gt;DZone Article&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Association in Topic Map Data Model</title>
      <link>https://healis.eu/en/post/20160902/</link>
      <pubDate>Fri, 02 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20160902/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#associations-in-topic-map-data-model&#34;&gt;Associations in Topic Map Data Model&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#tuples-to-associations&#34;&gt;Tuples to Associations&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#sql-to-topic-map-filtering&#34;&gt;SQL to Topic Map Filtering&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#topic-map-serialization&#34;&gt;Topic Map Serialization&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#r3dm-type-system-in-wandora&#34;&gt;R3DM Type System in Wandora&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#summary&#34;&gt;Summary&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#cross-references&#34;&gt;Cross-References&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;

&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In the &lt;a href=&#34;https://healis.eu/en/post/20160825/&#34;&gt;previous article&lt;/a&gt; of this series we examined the association construct from the perspective of Entity-Relationship data model. In this post we demonstrate how Topic Map data model represents associations. In order to link the two we continue with another SQL query from our &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/tree/master/SupplierPartCatalogue/accdb&#34;&gt;relational database&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; suppliers.sid,
       suppliers.sname,
       suppliers.scountry,
       &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt;.catcost,
       &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt;.catqnt,
       parts.pid,
       parts.pname,
       parts.pcolor
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;   suppliers
       &lt;span style=&#34;color:#66d9ef&#34;&gt;INNER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; (parts
                   &lt;span style=&#34;color:#66d9ef&#34;&gt;INNER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; [&lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt;]
                           &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; parts.pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt;.catpid)
               &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; suppliers.sid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt;.catsid
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt;  (( ( parts.pid ) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt; ))
&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt;.catcost;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;





&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;cost_of_red_fire_hydrant_cap.jpg&#34; &gt;

&lt;img src=&#34;cost_of_red_fire_hydrant_cap.jpg&#34; &gt;
&lt;/a&gt;

&lt;/figure&gt;

&lt;p&gt;This will fetch all the rows of a result set where we are looking for the &lt;em&gt;minimum catalogue price of a Red Fire Hydrant Cap&lt;/em&gt; and who is the supplier that manufactures this part. The reader will notice that apart from the deficiensy of the nested JOINs, &lt;a href=&#34;https://healis.eu/en/post/20160825/#structured-query-language-sql&#34;&gt;(see here)&lt;/a&gt;, we had to formalize our search in SQL language in order to get back our result. Wouldn&amp;rsquo;t be nice if we could engage the user in a codeless style of search, independent of the business case. Let us see the difference with the Topic Map data model first.&lt;/p&gt;
&lt;h2 id=&#34;associations-in-topic-map-data-model&#34;&gt;Associations in Topic Map Data Model&lt;/h2&gt;
&lt;p&gt;Perhaps there is not a better software tool out there to introduce you to Topic Maps than &lt;a href=&#34;http://wandora.org&#34;&gt;Wandora&lt;/a&gt; information management application, see how.&lt;/p&gt;
&lt;h3 id=&#34;tuples-to-associations&#34;&gt;Tuples to Associations&lt;/h3&gt;
&lt;p&gt;Our first step is to build a Topic Map data model from the SQL result set above. With Wandora this is easy thanks to its powerful set of extractors. Here we use an &lt;a href=&#34;http://wandora.org/wiki/Excel_extractors#Excel_adjacency_list_extractor&#34;&gt;Excel adjacency list extractor&lt;/a&gt; to convert each spreadsheet row of this &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/SupplierPartCatalogue/xlsx/vwRedHydrantCap.xlsx&#34;&gt;Excel file&lt;/a&gt; to a Topic Map &lt;code&gt;Association&lt;/code&gt;.&lt;/p&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;wandora-tuples-cells.jpg&#34; data-caption=&#34;Tuples of a Relation - Wandora Associations&#34;&gt;

&lt;img src=&#34;wandora-tuples-cells.jpg&#34; alt=&#34;Tuples of a Relation - Wandora Associations&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Tuples of a Relation - Wandora Associations
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;

&lt;p&gt;In the right panel of the screen capture, you may see that we have four associations of type &lt;code&gt;Tuple&lt;/code&gt;. They are all sorted by the &lt;code&gt;catcost&lt;/code&gt; column. This is the role that cells of this column play in the Tuple association. In our example each Tuple is an instance of the &lt;code&gt;Excel&lt;/code&gt; class with a maximum of 8 members and &lt;strong&gt;each member plays a role in the association&lt;/strong&gt;. You may agree that this Topic Map model view of data looks already very familiar to the user that is accustomed with tables.&lt;/p&gt;
&lt;p&gt;But behind the scenes Topic Map associations are notably different from the n-ary tuples of the relational model. In the left panel of our screen capture you can see all the data that are extracted from the spreadsheet. Notice that no data value is repeated. Each association is constructed from &lt;strong&gt;single instance values&lt;/strong&gt; and this also means that associations are sharing values among them. We can visualize the network of associations by switching to Wandora&amp;rsquo;s &lt;a href=&#34;http://wandora.org/wiki/Graph_topic_panel&#34;&gt;Graph topic panel&lt;/a&gt;. From the left panel, we select the minimum price of the part, which is &lt;code&gt;11.7&lt;/code&gt; and then we expand this node on the &lt;code&gt;Graph topic panel&lt;/code&gt;. This way the first association will be drawn that includes as members all the other values that this cell is associated with. One of them is &lt;code&gt;USA&lt;/code&gt; and plays the &lt;code&gt;scountry&lt;/code&gt; role. We can right click on the value and expand again the nodes (associated members). Two associations are displayed now on the graph that share four common values between them.&lt;/p&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;wandora-graph-panel-with-two-associations.jpg&#34; data-caption=&#34;Two Associations in the Graph Topic Panel of Wandora. Brown labels indicate the type (Tuple) of association and the role (sname) of one of its members&#34;&gt;

&lt;img src=&#34;wandora-graph-panel-with-two-associations.jpg&#34; alt=&#34;Two Associations in the Graph Topic Panel of Wandora. Brown labels indicate the type (Tuple) of association and the role (sname) of one of its members&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Two Associations in the Graph Topic Panel of Wandora. Brown labels indicate the type (Tuple) of association and the role (sname) of one of its members
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;

&lt;h3 id=&#34;sql-to-topic-map-filtering&#34;&gt;SQL to Topic Map Filtering&lt;/h3&gt;
&lt;p&gt;Another important observation we should make at this point is that instead of writing any query to fetch those suppliers that are located in &lt;code&gt;USA&lt;/code&gt; we simply filtered the table based on this value. We are able to do this, because &lt;strong&gt;Topic Map data model works with single instance values that are linked bidirectionally&lt;/strong&gt;. Accordingly, data is always normalized and the main operations of the relational algebra such as set operations, selection and projection, can be performed. For instance, filtering associations that have &lt;code&gt;USA&lt;/code&gt; member is equivalent to selecting rows from SQL. Moreover, the user can traverse interactively the graph starting from any value without writing a single line of code.&lt;/p&gt;
&lt;h3 id=&#34;topic-map-serialization&#34;&gt;Topic Map Serialization&lt;/h3&gt;
&lt;p&gt;To understand better the underlying structure of data in the previous example, we have serialized a Topic Map in &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/SupplierPartCatalogue/ltm/suppliers-parts-catalogue-Part998Associations.ltm&#34;&gt;LTM format&lt;/a&gt;. Dropping this LTM file into an empty topic panel, we invoke the &lt;a href=&#34;http://wandora.org/wiki/How_to_import_existing_topic_map_to_Wandora&#34;&gt;import function of Wandora&lt;/a&gt;. Then we expand the &lt;a href=&#34;http://wandora.org/wiki/Working_with_topic_trees&#34;&gt;topic tree&lt;/a&gt; and double click on the &lt;code&gt;998&lt;/code&gt; cell. The following screen capture looks pretty much the same as the one we have generated from extracting the Excel spreadsheet above. The main difference is that now we have two association types, one for Catalogue tuples and another for Part tuples. Part &lt;code&gt;998&lt;/code&gt; participates in five associations (tuples) in total, four of them are from &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/SupplierPartCatalogue/tsv/Catalog.tsv&#34;&gt;Catalogue table&lt;/a&gt; and one from &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/SupplierPartCatalogue/tsv/Parts.tsv&#34;&gt;Part table&lt;/a&gt;. We have also taken a minimum number of members, i.e. fields (columns), for our associations to keep it simple.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;/* 1 Association of catalog part no 998 with &amp;#34;Red&amp;#34; and &amp;#34;Fire Hydrant Cap&amp;#34; */&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;Prt&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;prtName08&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;pname&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;prtID08&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;pid&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;prtColorRed&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;pcolor&lt;/span&gt; )

&lt;span style=&#34;color:#75715e&#34;&gt;/* 4 Associations of catalog part no 998 with supplier Ids and catalog prices */&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;Cat&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;prtID08&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;catpid&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;supPrice18&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;catcost&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;supID18&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;catsid&lt;/span&gt; )
&lt;span style=&#34;color:#a6e22e&#34;&gt;Cat&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;prtID08&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;catpid&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;supPrice14&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;catcost&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;supID14&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;catsid&lt;/span&gt; )
&lt;span style=&#34;color:#a6e22e&#34;&gt;Cat&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;prtID08&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;catpid&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;supPrice16&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;catcost&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;supID16&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;catsid&lt;/span&gt; )
&lt;span style=&#34;color:#a6e22e&#34;&gt;Cat&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;prtID08&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;catpid&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;supPrice12&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;catcost&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;supID12&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;catsid&lt;/span&gt; )

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;





&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;wandora-part998-ltm-example-842x491.jpg&#34; data-caption=&#34;Associations of part no. 998&#34;&gt;

&lt;img src=&#34;wandora-part998-ltm-example-842x491.jpg&#34; alt=&#34;Associations of part no. 998&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Associations of part no. 998
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;

&lt;p&gt;Because of the single instance feature of Topic Maps, If we switch to Wandora&amp;rsquo;s Graph topic panel we can visualize these associations.






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;wandora-part998-ltm-example-graph-650x500.jpg&#34; data-caption=&#34;Associations of part no. 998&#34;&gt;

&lt;img src=&#34;wandora-part998-ltm-example-graph-650x500.jpg&#34; alt=&#34;Associations of part no. 998&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Associations of part no. 998
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;r3dm-type-system-in-wandora&#34;&gt;R3DM Type System in Wandora&lt;/h3&gt;
&lt;p&gt;We expand our previous example with tuples from three tables and a rich type system, also known as &lt;a href=&#34;https://en.wikipedia.org/wiki/Ontology_(information_science)&#34;&gt;Ontology&lt;/a&gt; or &lt;a href=&#34;https://en.wikipedia.org/wiki/Database_schema&#34;&gt;database schema&lt;/a&gt;.&lt;/p&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;wandora-graph-panel-prt998-catalogue-and-suppliers.jpg&#34; data-caption=&#34;Associations of part no. 998, Supplier Associations and Symmetric Binary Predicates&#34;&gt;

&lt;img src=&#34;wandora-graph-panel-prt998-catalogue-and-suppliers.jpg&#34; alt=&#34;Associations of part no. 998, Supplier Associations and Symmetric Binary Predicates&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Associations of part no. 998, Supplier Associations and Symmetric Binary Predicates
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;

&lt;p&gt;We start again our exploration from the data item with the value &lt;code&gt;998&lt;/code&gt;. There is one association, labeled &lt;code&gt;Part8&lt;/code&gt;, representing a tuple from Part table &lt;strong&gt;(998, &amp;ldquo;Fire Hydrant Cap&amp;rdquo;, Red, 7.2, lb)&lt;/strong&gt; and four of them, labeled &lt;code&gt;Cat08&lt;/code&gt;, &lt;code&gt;Cat12&lt;/code&gt;, &lt;code&gt;Cat13&lt;/code&gt;, &lt;code&gt;Cat17&lt;/code&gt;, representing tuples from the Catalogue table (see result set above). Further on, &lt;code&gt;USA&lt;/code&gt; suppliers are expanded with two more associations, labeled &lt;code&gt;Supplier1&lt;/code&gt; and &lt;code&gt;Supplier2&lt;/code&gt;. The two previous graphs are combined in a single one. We can also observe other associations with only two members, we call these symmetric binary predicates &lt;strong&gt;(SBP)&lt;/strong&gt;. SBPs are used to define a prototype for our R3DM type system. For example, the member value &lt;code&gt;7.2&lt;/code&gt; of association &lt;code&gt;Part8&lt;/code&gt; is of type &lt;code&gt;Part Weight&lt;/code&gt; (Instantiation Predicate) and &lt;code&gt;Part Weight&lt;/code&gt; is hyponym of &lt;code&gt;Weight&lt;/code&gt; (HyperHypo Predicate). The reader may compare this graph with this &lt;a href=&#34;https://healis.eu/en/post/20160825/#structured-query-language-sql&#34;&gt;Entity-Relationship diagram&lt;/a&gt; and realize that we have both instances (values) and classes, i.e. Entities and Attribues, on the same graphics diagram. Not only that, but most important our type system is generic and we are able to merge and classify data from multiple datasets. Alternatively, Wandora&amp;rsquo;s Topics tree panel on the left part of the image displays a hierarchical structure for types and instances. Those that are expanded can also be seen on the graph panel.&lt;/p&gt;
&lt;p&gt;This is a good place to introduce our &lt;strong&gt;R3DM type system&lt;/strong&gt;. It is presented here for the first time and it will be fully analyzed in a forthcoming post of this series. In the next graph we have expanded several nodes of our hierarchical type system. For instance, &lt;code&gt;Catalogue&lt;/code&gt;, &lt;code&gt;Catalogue Part&lt;/code&gt;, &lt;code&gt;Catalog Supplier&lt;/code&gt; are represented as groups (&lt;code&gt;Grouping Predicate&lt;/code&gt;) of &lt;code&gt;Wandora&lt;/code&gt; class which is the Root of the Topic Tree. Each of these groups is also a type (&lt;code&gt;Instantiation Predicate&lt;/code&gt;) for a set of instances that represent associations. We have Cat01-16 for Catalogue associations, Part1-9 for Part associations, and Supplier1-4 for Supplier associations.&lt;/p&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;wandora-graph-panel-type-system.jpg&#34; &gt;

&lt;img src=&#34;wandora-graph-panel-type-system.jpg&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;R3DM Type System in Wandora&lt;/h4&gt;
  
&lt;/figcaption&gt;

&lt;/figure&gt;

&lt;p&gt;We have defined six SBPs in total, these are grouped under the &lt;code&gt;Symmetric Binary Predicates&lt;/code&gt; group. Five of them have been configured with special symbols to be used in Wandora&amp;rsquo;s Topic tree. Each one of them is expanded on Wandora&amp;rsquo;s graph panel to show the pair of its association members. The &lt;code&gt;Holonomy-Meronomy Predicate&lt;/code&gt; has been used to connect association members to association type.&lt;/p&gt;
&lt;p&gt;Wandora class has also five group members, we have already seen four of them. The fifth one is a Variable Type group and it has four sub-categories, &lt;code&gt;Categorical Variable Types&lt;/code&gt;, &lt;code&gt;Meta Variable Types&lt;/code&gt;, &lt;code&gt;Numeric Variable Types&lt;/code&gt; and &lt;code&gt;Time Variable Types&lt;/code&gt;. Each of these specialized types has instances and each instance can be further specialized. For example, starting from bottom to top :&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gr&lt;/code&gt; &lt;strong&gt;isInstanceOf&lt;/strong&gt; &lt;code&gt;Part Unit&lt;/code&gt; &lt;strong&gt;isHyponymOf&lt;/strong&gt; &lt;code&gt;Unit&lt;/code&gt; &lt;strong&gt;isInstanceOf&lt;/strong&gt; &lt;code&gt;Categorical Variable Type&lt;/code&gt; &lt;strong&gt;isHyponymOf&lt;/strong&gt; &lt;code&gt;Variable Type&lt;/code&gt; &lt;strong&gt;isMemberOf&lt;/strong&gt; &lt;code&gt;Wandora class&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;In this way all values are single instances of some type and they are hyperlinked to build associations (hyperedges). Each association is also an instance of some type.&lt;/p&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;We conclude our discussion of &lt;code&gt;Association&lt;/code&gt; in Topic Map data model. Topic map data model is profound and at the same time powerful and simple to start building higher constructs to model real things. &lt;code&gt;Association&lt;/code&gt; in Topic Map is a first class citizen. Here is a list of interesting features we discussed in this post :&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;We can define single instance Topics (and/or values) and then associate them.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Association&lt;/code&gt; is a bidirectional n-ary relation with &lt;code&gt;Type&lt;/code&gt; and &lt;code&gt;Roles&lt;/code&gt; embedded.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Because of 1. and 2. we can traverse the graph from any point to any other point simply by filtering nodes and edges.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We can display both &lt;code&gt;Topic&lt;/code&gt;/&lt;code&gt;Association&lt;/code&gt; types and instances on the same graph&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Data from multiple data sets cab be merged with R3DM type system that is based on symmetric binary associations.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;There are other powerful features of Topic Maps related to associations such as &lt;a href=&#34;http://www.wandora.org/wiki/Introduction_to_Layered_Topic_Maps&#34;&gt;merging&lt;/a&gt; and information resources that are attached to topics, i.e. &lt;a href=&#34;http://wandora.org/wiki/Refining_occurrences&#34;&gt;occurrences&lt;/a&gt;, we reserve time and space to highlight them in a forthcoming article.&lt;/p&gt;
&lt;p&gt;We will continue our demonstration with the Catalogue-Part-Supplier example. This time we will examine how associations can be represented on the &lt;a href=&#34;http://orientdb.com/docs/last/Tutorial-Document-and-graph-model.html&#34;&gt;Graph Model&lt;/a&gt; of OrientDB DBMS.&lt;/p&gt;
&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/associative-data-modeling-demystified-part1-hatzis-phd-1&#34;&gt;LinkedIn Published Posts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/129217/129217-6177536264963661827&#34;&gt;LinkedIn Semantic Web Research Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/109285/109285-6177532954038792196&#34;&gt;LinkedIn Topic Maps Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.datasciencecentral.com/m/blogpost?id=6448529%3ABlogPost%3A465093&#34;&gt;Data Science Central&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/associative-data-modeling-demystified-part-2&#34;&gt;DZone - Database Section&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Relation, Relationship and Association</title>
      <link>https://healis.eu/en/post/20160825/</link>
      <pubDate>Thu, 25 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20160825/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#supplier-part-catalogue-dataset&#34;&gt;Supplier-Part-Catalogue Dataset&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#the-er-data-model&#34;&gt;The ER Data Model&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#association-and-associative-array&#34;&gt;Association and Associative Array&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#wolfram-language---association&#34;&gt;Wolfram Language - Association&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#json-serialization&#34;&gt;JSON Serialization&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#association-vs-relation&#34;&gt;Association vs Relation&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#wolfram-language---relation&#34;&gt;Wolfram Language - Relation&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#data-redundancy&#34;&gt;Data Redundancy&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#structured-query-language-sql&#34;&gt;Structured Query Language (SQL)&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#summary&#34;&gt;Summary&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#cross-references&#34;&gt;Cross-References&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;

&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In early 2009 an increasing number of non-relational DBMS started to appear on the scene. They were based on data models such as Column, Document, Key-Value, Graph and Multi-Model. At about the same time, big corporations in IT industry were concerned with data processing of large and complex data sets. Big data movement was a major driving force to re-examine whether current DBMS were sufficient to cope with the new requirements on data processing. More specifically the &lt;a href=&#34;https://www.ibmbigdatahub.com/infographic/four-vs-big-data&#34;&gt;four V&amp;rsquo;s of Big Data&lt;/a&gt;, i.e. volume, variety, velocity and veracity, put an increasing demand in major companies and organizations. This had as a result a reinvestigation on what DBMS technology to apply. Many started realizing that physical representation of data on the disk or in memory and data modeling are key factors on how you build or integrate parts of your IT solution.&lt;/p&gt;
&lt;p&gt;While most players in the IT sector adopted Graph or Document databases and Hadoop based solutions, Hadoop is an enabler of &lt;a href=&#34;https://en.wikipedia.org/wiki/Apache_HBase&#34;&gt;HBase&lt;/a&gt; column store, it went almost unnoticed that several new DBMS, &lt;a href=&#34;https://www.aisys.us/&#34;&gt;AtomicDB&lt;/a&gt; previous database engine of &lt;a href=&#34;https://www.atomicdb.ch/x10sys.html&#34;&gt;X10SYS&lt;/a&gt;, and &lt;a href=&#34;https://www.sentences.com/sentences.htm&#34;&gt;Sentences&lt;/a&gt;, based on associative technology appeared on the scene. We have introduced and discussed about the &lt;a href=&#34;https://www.linkedin.com/pulse/towards-new-data-modelling-architecture-part-2-hatzis-phd&#34;&gt;data modelling architecture&lt;/a&gt; and the atomic information resource unit &lt;a href=&#34;https://www.linkedin.com/pulse/air-atomic-information-resource-athanassios-i-hatzis-phd&#34;&gt;(AIR)&lt;/a&gt; of AtomicDB. Similar technology has been the engine power of &lt;a href=&#34;https://www.qlik.com/us/&#34;&gt;Qlikview&lt;/a&gt;, a very popular software in Business Intelligence and Analytics, since 1993. Perhaps it is less known to the reader that the association construct is a first class citizen in &lt;a href=&#34;https://en.wikipedia.org/wiki/Topic_Maps&#34;&gt;Topic Map&lt;/a&gt; semantic web standard and it is translated to &lt;a href=&#34;https://en.wikipedia.org/wiki/Resource_Description_Framework&#34;&gt;(RDF)&lt;/a&gt;, the other semantic web standard. In other posts of this series we can see how it is possible to implement Associative Technology in multi-model graph databases such as &lt;a href=&#34;https://orientdb.org/&#34;&gt;OrientDB&lt;/a&gt;, in object-relational DBMS such as &lt;a href=&#34;https://www.intersystems.com/our-products/cache/cache-overview/&#34;&gt;Intersystems Cache&lt;/a&gt; and &lt;a href=&#34;https://docs.oracle.com/database/121/ADOBJ/toc.htm&#34;&gt;Oracle&lt;/a&gt; or build the engine for in-memory processing with Wolfram &lt;a href=&#34;https://www.wolfram.com/mathematica/&#34;&gt;Mathematica&lt;/a&gt;. In this article, we introduce the concept of association from the perspective of Entity-Relationship &lt;a href=&#34;https://en.wikipedia.org/wiki/Entity%E2%80%93relationship_model&#34;&gt;(ER)&lt;/a&gt; data model and illustrate it with the modelling of a toy dataset.&lt;/p&gt;
&lt;h2 id=&#34;supplier-part-catalogue-dataset&#34;&gt;Supplier-Part-Catalogue Dataset&lt;/h2&gt;
&lt;p&gt;Our dataset is a collection of three related database tables. Two of the tables, Supplier ( &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/SupplierPartCatalogue/tsv/Suppliers.tsv&#34;&gt;TSV&lt;/a&gt;, &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/SupplierPartCatalogue/xlsx/SuppliersPartsCatalogue.xlsx&#34;&gt;XLSX&lt;/a&gt; ) and Part ( &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/SupplierPartCatalogue/tsv/Parts.tsv&#34;&gt;TSV&lt;/a&gt;, &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/SupplierPartCatalogue/xlsx/SuppliersPartsCatalogue.xlsx&#34;&gt;XLSX&lt;/a&gt; ), represent and describe Entity Types, i.e. Relations. The third one, Catalogue ( &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/SupplierPartCatalogue/tsv/Catalog.tsv&#34;&gt;TSV&lt;/a&gt;, &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/SupplierPartCatalogue/xlsx/SuppliersPartsCatalogue.xlsx&#34;&gt;XLSX&lt;/a&gt; ) is the associative entity, a.k.a. bridge table, junction table, join table, etc. The typical case where data for the bridge table is captured is from a business inventory where each item is recorded with its unit price and a quantity in stock. Such  information is stored in our Catalogue table, together with a date the item record was modified and a flag that indicates inspection of the stock.&lt;/p&gt;
&lt;h2 id=&#34;the-er-data-model&#34;&gt;The ER Data Model&lt;/h2&gt;
&lt;p&gt;Quite often (ER) Data Model is confused with the &lt;a href=&#34;https://en.wikipedia.org/wiki/Relational_model&#34;&gt;Relational Data Model&lt;/a&gt;. The reader should become familiar with the following equivalent terminology.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ER Data Model&lt;/th&gt;
&lt;th&gt;Relational Data Model&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Entity Type (Set)&lt;/td&gt;
&lt;td&gt;Relation (Table, Base relvar)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Heading - ordered set of attributes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Body - set of n-tuples, extension of a predicate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Entity	(instance, member)&lt;/td&gt;
&lt;td&gt;Tuple (ordered set of attribute values)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Value Set&lt;/td&gt;
&lt;td&gt;Type name (data type)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Value&lt;/td&gt;
&lt;td&gt;Attribute value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Relationship set&lt;/td&gt;
&lt;td&gt;View (Result set or Derived relvar)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Relationship (association)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Attribute (function)&lt;/td&gt;
&lt;td&gt;Free variable of a predicate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mapping of Entity Set or&lt;/td&gt;
&lt;td&gt;Attribute name of the relation (column)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Relationship Set to Value Set&lt;/td&gt;
&lt;td&gt;ordered pair of attribute name and type name&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;In this classic paper, &lt;a href=&#34;https://dl.acm.org/citation.cfm?id=320440&#34;&gt;&amp;ldquo;The Entity-Relationship Model - Toward a Unified View of Data&amp;rdquo;&lt;/a&gt; &lt;strong&gt;Peter Chen defines relationship as an association among entities&lt;/strong&gt;. In the same paper &lt;strong&gt;entity and relationship are illustrated as hypergraphs&lt;/strong&gt;. In particular, &lt;em&gt;&lt;a href=&#34;#fig2&#34;&gt;Fig. 2&lt;/a&gt;&lt;/em&gt; at page 13 and &lt;em&gt;&lt;a href=&#34;#fig3&#34;&gt;Fig. 3&lt;/a&gt;&lt;/em&gt; at page 14 show how an instance from an Entity/Relationship set is linked to either values or other entities. Although Peter Chen did not describe these fundamental constructs of his data model with Hypegraph terms, it can be easily seen in these captured figures that a specific entity or relationship form hyperedges with other entities or values that play the role of hypernodes.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;peter_chen_ER_model_fig2.jpg&#34; data-caption=&#34;(Emploee):Ei at Fig.2 and (PROJECT-WORKER):Ri at Fig.3 form hyperedges&#34;&gt;

&lt;img src=&#34;peter_chen_ER_model_fig2.jpg&#34; alt=&#34;(Emploee):Ei at Fig.2 and (PROJECT-WORKER):Ri at Fig.3 form hyperedges&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    (Emploee):Ei at Fig.2 and (PROJECT-WORKER):Ri at Fig.3 form hyperedges
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;peter_chen_ER_model_fig3.jpg&#34; data-caption=&#34;(Emploee):Ei at Fig.2 and (PROJECT-WORKER):Ri at Fig.3 form hyperedges&#34;&gt;

&lt;img src=&#34;peter_chen_ER_model_fig3.jpg&#34; alt=&#34;(Emploee):Ei at Fig.2 and (PROJECT-WORKER):Ri at Fig.3 form hyperedges&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    (Emploee):Ei at Fig.2 and (PROJECT-WORKER):Ri at Fig.3 form hyperedges
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;association-and-associative-array&#34;&gt;Association and Associative Array&lt;/h3&gt;
&lt;p&gt;We extend the definition of association in the (ER) data model to cover both Entities and Relationships. In the aforementioned paper, Chen formally defines attribute as a function which maps a given entity to a single value (or a single tuple of values). He also mentions that relationships have their own attributes whose meaning depends on the associated entities. The (key,value) pair of an &lt;a href=&#34;https://en.wikipedia.org/wiki/Associative_array&#34;&gt;Associative array&lt;/a&gt;, a.k.a. map, symbol table, or dictionary, captures this functional operation of attribute.&lt;/p&gt;
&lt;h3 id=&#34;wolfram-language---association&#34;&gt;Wolfram Language - Association&lt;/h3&gt;
&lt;p&gt;Wolfram Language is using &lt;code&gt;Association&lt;/code&gt; fundamental construct to represent an associative array. The following three &lt;a href=&#34;https://reference.wolfram.com/language/guide/Associations.html&#34;&gt;Wolfram Language associations&lt;/a&gt; represent a relationship of a Catalog instance with a Supplier instance and some Part instance from our toy dataset.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Supplier&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Association&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;|&lt;/span&gt;supID&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1081&lt;/span&gt;, supName&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Acme Widget Suppliers&amp;#34;&lt;/span&gt;, supAddress&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1 Grub St., Potemkin Village, IL 61801&amp;#34;&lt;/span&gt;, supCity&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ILLINOIS&amp;#34;&lt;/span&gt;, supCountry&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;USA&amp;#34;&lt;/span&gt;, supStatus&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt;

(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Part&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Association&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;|&lt;/span&gt;prtID&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt;, prtName&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fire Hydrant Cap&amp;#34;&lt;/span&gt;, prtColor&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Red&amp;#34;&lt;/span&gt;, prtWeight&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, prtUnit&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gr&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt;

(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Catalogue&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Association&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;|&lt;/span&gt;supID&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1081&lt;/span&gt;, prtID&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt;, catPrice&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, catQuantity&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt;, catDate&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Wed 10 Sep 2014&amp;#34;&lt;/span&gt;, catCheck&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;What we are missing in this representation are the hyperedges, i.e. the nexuses that link together hypernodes. According to hypergraph terminology, the edge that connects a hyperedge to a hypernode is called hyperlink or connector. You may think of these hyperlinks/connectors as hash fields but we need another identifier for the hash key, i.e. an identifier for the instance. We could have used supID, prtID or a combination of these two but we prefer to define new identifiers for hyperedges. &lt;strong&gt;The main reason for this is that in principle we want to design a uniform way of addressing and identifying both hyperedge and hypernode instances at a low-dimensional, e.g. (2D,3D,4D), space&lt;/strong&gt;. If we encode this way, it is possible to avoid namespace problems. In this post we use names to compare the graph with figures from Peter Chen&amp;rsquo;s paper.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./three_associations.jpg&#34; alt=&#34;Three Associations in a Named-Row Dataset&#34;&gt;&lt;/p&gt;
&lt;p&gt;We may also connect hyperedges, e.g. we can add a &amp;ldquo;type&amp;rdquo; hyperlink that maps instances to classes, a &amp;ldquo;vendor&amp;rdquo; hyperlink that maps a Catalog instance to its Supplier instance and a &amp;ldquo;stockItem&amp;rdquo; hyperlink that connects Catalog instance to Part instance. In Wolfram Language it is relatively easy to make a graph of these Associations. We colorized the graph according to the different data types we have, i.e. hyperedges, strings, doubles, integers, dates, and booleans, &lt;a href=&#34;#fig4&#34;&gt;&lt;strong&gt;Fig.4&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;association-relation-relationship.jpg&#34; data-caption=&#34;Hyperedges are displayed in red, strings are in grey, doubles in lightblue, integers in green, dates in lightgreen and boolean in black&#34;&gt;

&lt;img src=&#34;association-relation-relationship.jpg&#34; alt=&#34;Hyperedges are displayed in red, strings are in grey, doubles in lightblue, integers in green, dates in lightgreen and boolean in black&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Hyperedges are displayed in red, strings are in grey, doubles in lightblue, integers in green, dates in lightgreen and boolean in black
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;json-serialization&#34;&gt;JSON Serialization&lt;/h3&gt;
&lt;p&gt;Another very popular representation for Association is JSON Serialization. Those associations we described above can be serialized with the following format.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;$PartI&amp;#34;&lt;/span&gt;: {
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$Item&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;prtID&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;prtName&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fire Hydrant Cap&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;prtColor&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Red&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;prtWeight&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;7.2&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;prtUnit&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gr&amp;#34;&lt;/span&gt;
  },
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;$SupplierJ&amp;#34;&lt;/span&gt;: {
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$Organization&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;supID&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1081&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;supName&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Acme Widget Suppliers&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;supAddress&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1 Grub St., Potemkin Village, IL 61801&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;supCity&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ILLINOIS&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;supCountry&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;USA&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;supStatus&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;
  },
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;$CatalogK&amp;#34;&lt;/span&gt;: {
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$Inventory&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;supID&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1081&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;prtID&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;catPrice&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;11.7&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;catQuantity&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;catDate&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2014-09-10&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;catCheck&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Catalogue, Parts and Suppliers tables are also available in &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/tree/master/SupplierPartCatalogue/json&#34;&gt;JSON&lt;/a&gt; format.&lt;/p&gt;
&lt;h3 id=&#34;association-vs-relation&#34;&gt;Association vs Relation&lt;/h3&gt;
&lt;p&gt;Although the logical view of Chen&amp;rsquo;s (ER) data model and his popular diagrammatic technique incorporates Entities, Relationships, Attributes and Values, at the physical layer of any relational DBMS we find records, i.e. Entities or Relationships are ordered tuples. A set of these ordered tuples that have the same heading, is called body. This header is another ordered tuple with attribute names. Theoretically speaking the body and the header of a table make the Relation. In practise the header is separated from the body and located at the database catalog together with other metadata for the schema of the database. SQL standard specifies a uniform mean to access this catalog.&lt;/p&gt;
&lt;h3 id=&#34;wolfram-language---relation&#34;&gt;Wolfram Language - Relation&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&#34;https://reference.wolfram.com/language/ref/List.html&#34;&gt;&lt;code&gt;List&lt;/code&gt; fundamental construct of Wolfram Language&lt;/a&gt; can be used to represent a Relation. An extensive analysis of various representations and transformations on the constructs of the Relational data model in Wolfram Language can be found &lt;a href=&#34;https://www.linkedin.com/pulse/towards-new-data-modelling-architecture-part-1-hatzis-phd&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Part&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Relation&lt;/span&gt; with a header &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; three tuples (body) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)
{
  {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pid&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pname&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pcolor&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pweight&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;punit&amp;#34;&lt;/span&gt;},
  {&lt;span style=&#34;color:#ae81ff&#34;&gt;991&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Left Handed Bacon Stretcher Cover&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Red&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lb&amp;#34;&lt;/span&gt;},
  {&lt;span style=&#34;color:#ae81ff&#34;&gt;992&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Smoke Shifter End&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Black&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;75&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lb&amp;#34;&lt;/span&gt;},
  {&lt;span style=&#34;color:#ae81ff&#34;&gt;993&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Acme Widget Washer&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Red&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;142&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;88&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;kg&amp;#34;&lt;/span&gt;}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The reader will notice that in both Associative array and Relation representations, the cell of a table, i.e. the value of an attribute, is always functionally dependent on the description of Attribute and Entity/Relationship. It cannot stand on its own without these semantic references. Moreover, for the Relation representation, the exact order of values has to be maintained together with any missing (NULL) values.&lt;/p&gt;
&lt;h3 id=&#34;data-redundancy&#34;&gt;Data Redundancy&lt;/h3&gt;
&lt;p&gt;Relational databases are usually normalized to eliminate duplication of information and ensure referential integrity. This is especially recommended in one-to-many relationships. &lt;a href=&#34;https://en.wikipedia.org/wiki/Database_normalization&#34;&gt;Normalization&lt;/a&gt; involves arranging attributes in tables, nevertheless in a relational database we cannot escape from data redundancy completely. For example if we take the unit attribute of the normalized Part table above we can see that values are still repeated. Most important the schema of a relational database is too rigid and cannot be easily modified without breaking normalization and compromising referential integrity.&lt;/p&gt;
&lt;h3 id=&#34;structured-query-language-sql&#34;&gt;Structured Query Language (SQL)&lt;/h3&gt;
&lt;p&gt;Performing queries of data in a relational database is highly dependent on these two factors we briefly mentioned above, the physical representation of data on the disk and the normalization procedure. One of the main bottlenecks with SQL is the natural join relational operator, counterpart of logical AND. An &lt;a href=&#34;https://en.wikipedia.org/wiki/Join_(SQL)&#34;&gt;SQL Join&lt;/a&gt; is a means for constructing a result set combining columns from two (or more) tables by using values common to each. The more tables you join and the bigger the size of each table the more time it takes to consolidate the data of the view. On the contrary in many graph databases, connected nodes, i.e. record instances, are directly linked to each other. Each node, contains a list of pointers of its edges, therefore avoiding look-ups. In fact you are not searching for records, you are traversing connections instead. This may dramatically reduce the speed of constructing the result set of a query.&lt;/p&gt;
&lt;p&gt;For demonstration and comparison purposes we provide such a JOIN sql query for our toy database together with an ER diagram of the database schema,&lt;a href=&#34;#fig5&#34;&gt;&lt;strong&gt;Fig.5&lt;/strong&gt;&lt;/a&gt; and the result set on a Microsoft Access table view, &lt;a href=&#34;#fig6&#34;&gt;&lt;strong&gt;Fig.6&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You may also download a Microsoft Access, &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/tree/master/SupplierPartCatalogue/accdb&#34;&gt;accdb&lt;/a&gt; file format, database to experiment with.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;SupplierPartCatalogue-ERModel-MSAccess.jpg&#34; data-caption=&#34;Image illustrates the ER diagram of database schema&#34;&gt;

&lt;img src=&#34;SupplierPartCatalogue-ERModel-MSAccess.jpg&#34; alt=&#34;Image illustrates the ER diagram of database schema&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Image illustrates the ER diagram of database schema
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;SupplierPartCatalogue-ERModel-MSAccess-JOINresultSet.jpg&#34; data-caption=&#34;Image illustrates the ER diagram of database schema&#34;&gt;

&lt;img src=&#34;SupplierPartCatalogue-ERModel-MSAccess-JOINresultSet.jpg&#34; alt=&#34;Image illustrates the ER diagram of database schema&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Image illustrates the ER diagram of database schema
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;Catalog&lt;/span&gt; . catsid ,
        &lt;span style=&#34;color:#66d9ef&#34;&gt;Catalog&lt;/span&gt; . catpid ,
        Suppliers . sname ,
        Parts . pname ,
        &lt;span style=&#34;color:#66d9ef&#34;&gt;Catalog&lt;/span&gt; . catcost ,
        &lt;span style=&#34;color:#66d9ef&#34;&gt;Catalog&lt;/span&gt; . catqnt ,
        &lt;span style=&#34;color:#66d9ef&#34;&gt;Catalog&lt;/span&gt; . catdate ,
        &lt;span style=&#34;color:#66d9ef&#34;&gt;Catalog&lt;/span&gt; . catchk
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;    Suppliers
        &lt;span style=&#34;color:#66d9ef&#34;&gt;INNER&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt;  ( Parts
                    &lt;span style=&#34;color:#66d9ef&#34;&gt;INNER&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt;  [&lt;span style=&#34;color:#66d9ef&#34;&gt;Catalog&lt;/span&gt;]
                            &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt;  Parts . pid  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;Catalog&lt;/span&gt; . catpid )
                &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt;  Suppliers . sid  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;Catalog&lt;/span&gt; . catsid
&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt;  Suppliers . sname  &lt;span style=&#34;color:#66d9ef&#34;&gt;DESC&lt;/span&gt; ,
           &lt;span style=&#34;color:#66d9ef&#34;&gt;Catalog&lt;/span&gt; . catcost  &lt;span style=&#34;color:#66d9ef&#34;&gt;DESC&lt;/span&gt; ;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;One can immediately notice the complexity of SQL query language on the nested SQL Join constructs.&lt;/p&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;In this article we described several limitations of the ER model that we wish to overcome, in brief these are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Functional dependence of values&lt;/li&gt;
&lt;li&gt;Data redundancy&lt;/li&gt;
&lt;li&gt;Join operations&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the next article of our series we continue with an international industry standard for information management and interchange, the &lt;a href=&#34;https://en.wikipedia.org/wiki/Topic_Maps&#34;&gt;Topic Maps Data Model&lt;/a&gt; (TMDM). Associations in TMDM are similar to tuples but they have types. Each member of an association plays a role that is defined explicitly. In fact this is in full agreement with Chen&amp;rsquo;s Entity-Relationship diagrams (see Fig.1 and Fig.2 above). Chen discusses the role of an entity in a relationship and the role of an attribute in a relation and he considers distinct constrains on allowable values for a value set and constraints on permitted values for a certain attribute.&lt;/p&gt;
&lt;p&gt;TMDM view is edifying because it divides information space in two layers. At the conceptual level we have topics that can be associated and represent any subject that can be conceived by a human being. At the occurrence level we have addressable information resources that describe those subjects.&lt;/p&gt;
&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/associative-data-modeling-demystified-part1-hatzis-phd&#34;&gt;LinkedIn Published Posts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/hp/update/6178589225793916928&#34;&gt;LinkedIn Update&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.datasciencecentral.com/profiles/blogs/associative-data-modeling-demystified-part1&#34;&gt;Data Science Central&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/associative-data-modeling-demystified-part1&#34;&gt;DZone - Database Section&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
