<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Database on HEALIS</title>
    <link>https://healis.eu/en/tags/database/</link>
    <description>Recent content in Database on HEALIS</description>
    <generator>Source Themes academia (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <copyright>&amp;copy; HEALIS - Athanassios I. Hatzis, {year}</copyright>
    <lastBuildDate>Sat, 22 Aug 2020 00:00:00 +0000</lastBuildDate>
    
	    <atom:link href="https://healis.eu/en/tags/database/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HyperMorph</title>
      <link>https://healis.eu/en/project/hypermorph/</link>
      <pubDate>Sat, 22 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/project/hypermorph/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#why-hypermorph&#34;&gt;Why HyperMorph&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#not-just-another-etl-tool&#34;&gt;Not just another ETL tool&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#not-only-a-data-storage-and-transformations-analytics-tool&#34;&gt;Not only a data storage and transformations-analytics tool&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#more-promising-than-data-virtualization-and-cloud-analytics-services&#34;&gt;More promising than data virtualization and cloud analytics services&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#speechless-hypermorph-screencast&#34;&gt;Speechless HyperMorph Screencast&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#hypermorph-speaks-for-itself&#34;&gt;Hypermorph speaks for itself&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#now-you-know-that-you-can-&#34;&gt;Now you know that you can &amp;hellip;&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#installation---demo-test---documentation&#34;&gt;Installation - Demo Test - Documentation&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#step-by-step-instructions&#34;&gt;Step by step instructions&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#demo-guide-to-test-package&#34;&gt;Demo Guide to Test package&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;

&lt;h2 id=&#34;why-hypermorph&#34;&gt;Why HyperMorph&lt;/h2&gt;
&lt;h3 id=&#34;not-just-another-etl-tool&#34;&gt;Not just another ETL tool&lt;/h3&gt;
&lt;p&gt;There are many open-source tools written in Python for ETL or ELT process, &lt;a href=&#34;https://github.com/petl-developers/petl&#34;&gt;petl&lt;/a&gt;, &lt;a href=&#34;https://github.com/Stiivi/bubbles&#34;&gt;bubbles&lt;/a&gt;, &lt;a href=&#34;https://github.com/mara/mara-pipelines&#34;&gt;mara-pipelines&lt;/a&gt;, &lt;a href=&#34;https://github.com/mara/mara-schema&#34;&gt;mara-schema&lt;/a&gt;, &lt;a href=&#34;https://github.com/python-bonobo/bonobo&#34;&gt;bonobo&lt;/a&gt;, &lt;a href=&#34;https://github.com/spotify/luigi&#34;&gt;luigi&lt;/a&gt;, &lt;a href=&#34;https://github.com/blaze/odo&#34;&gt;odo&lt;/a&gt;, &lt;a href=&#34;https://github.com/seanharr11/etlalchemy&#34;&gt;etlalchemy&lt;/a&gt;, &lt;a href=&#34;https://github.com/ceumicrodata/mETL&#34;&gt;mETL&lt;/a&gt;, &lt;a href=&#34;https://github.com/nerevu/riko&#34;&gt;riko&lt;/a&gt;, &lt;a href=&#34;https://github.com/toaco/carry%5D&#34;&gt;carry&lt;/a&gt;, &lt;a href=&#34;https://github.com/capitalone/Data-Load-and-Copy-using-Python&#34;&gt;locopy&lt;/a&gt;, &lt;a href=&#34;https://github.com/ferventdesert/etlpy&#34;&gt;etlpy&lt;/a&gt;, &lt;a href=&#34;https://github.com/chrthomsen/pygrametl&#34;&gt;pygrametl&lt;/a&gt;. Authors in many of these tools realized that Python developers need a uniform interface based on object oriented abstractions for commonly used operations.&lt;/p&gt;
&lt;h4 id=&#34;well-designed-powerful-oop-classes&#34;&gt;Well-designed powerful OOP classes&lt;/h4&gt;
&lt;p&gt;HyperMorph offers interactive console programming and development with high-level OOP components tailored to cover all aspects of database management and analytics. HyperMorph is very rich in that aspect and provides &lt;code&gt;DataSet&lt;/code&gt;, &lt;code&gt;Table&lt;/code&gt; and &lt;code&gt;Field&lt;/code&gt; classes for data resources, &lt;code&gt;DataModel&lt;/code&gt;, &lt;code&gt;Entity&lt;/code&gt;, &lt;code&gt;Attribute&lt;/code&gt; classes for data models, &lt;code&gt;SchemaGraph&lt;/code&gt;, &lt;code&gt;SchemaNode&lt;/code&gt;, &lt;code&gt;SchemaLink&lt;/code&gt;, &lt;code&gt;SchemaPipe&lt;/code&gt; classes for metadata management, &lt;code&gt;DataGraph&lt;/code&gt;, &lt;code&gt;DataNode&lt;/code&gt;, &lt;code&gt;DataLink&lt;/code&gt;, &lt;code&gt;DataPipe&lt;/code&gt; for data management, &lt;code&gt;Connector&lt;/code&gt; class for python drivers/clients and at the highest level of management we have &lt;code&gt;ASET&lt;/code&gt; (Associative Entity Set is similar to Relation) and &lt;code&gt;HACOL&lt;/code&gt; (HyperAtom collection).&lt;/p&gt;
&lt;h4 id=&#34;schema-and-data-as-objects-and-nodes-on-a-hypergraph&#34;&gt;Schema and data as objects and nodes on a hypergraph&lt;/h4&gt;
&lt;p&gt;HyperMorph goes one step ahead of the OOP design principle. It creates objects with 3D numerical vector identities and links them as nodes on a hypergraph. That graph is powered by &lt;a href=&#34;https://git.skewed.de/count0/graph-tool&#34;&gt;graph-tool&lt;/a&gt; one of the best and fastest network analysis tools in Python. Hypermorph keeps separate schema information, i.e. metadata, from stuctured data (&lt;em&gt;tuples&lt;/em&gt;, &lt;em&gt;hierarchical&lt;/em&gt;, &lt;em&gt;graph&lt;/em&gt;, &lt;em&gt;table&lt;/em&gt;, etc). This unique feature offers the possibility to organize easily data resources and to build complex customised data models in order to digest data. Data integration (consolidation) requires to manage successfully the complexity of mapping data resources on a data model something that can be easily done when our objects are hypergraph enabled and have numerical key vectors to identify their exact location in the schema, data graph.&lt;/p&gt;
&lt;h4 id=&#34;hypermorph-connectors&#34;&gt;HyperMorph Connectors&lt;/h4&gt;
&lt;p&gt;Another fundamental difference of HyperMorph with ETL tools is on the Python DB Driver/Adapter side. The current release supports:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clickhouse-Driver&lt;/li&gt;
&lt;li&gt;MySQL-Connector&lt;/li&gt;
&lt;li&gt;SQLAlchemy with the following three dialects
&lt;ul&gt;
&lt;li&gt;pymysql&lt;/li&gt;
&lt;li&gt;clickhouse&lt;/li&gt;
&lt;li&gt;sqlite&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;On top of these drivers HyperMorph uses a &lt;code&gt;Connector&lt;/code&gt; class to abstract and unify SQL command execution &lt;code&gt;sql()&lt;/code&gt; in a functional way and wrap commands to extract metadata &lt;code&gt;get_tables_metadata()&lt;/code&gt;, &lt;code&gt;get_columns_metadata()&lt;/code&gt;. Transformation to &lt;strong&gt;tuples&lt;/strong&gt;, &lt;strong&gt;json rows&lt;/strong&gt;, &lt;strong&gt;tuples&lt;/strong&gt;, &lt;strong&gt;columns&lt;/strong&gt;, and &lt;strong&gt;pyarrow batch/table&lt;/strong&gt; is taking place at this level. At this stage performance is a critical factor. In our design and implementation of HyperMorph connectors we are seeking to minimise the time delay and data transferring speed. Therefore the protocol of communication that is used in the python database driver/adopter is highly important.&lt;/p&gt;
&lt;h4 id=&#34;pipelines&#34;&gt;Pipelines&lt;/h4&gt;
&lt;p&gt;This is a standard approach in ETL frameworks and a very useful one because in general &lt;code&gt;pipelines&lt;/code&gt; are flexible and intuitive in programming. Hypermorph is not an exception we tried to make a difference here by designing same pipeline operators for fetching either data or metadata. For example there is an &lt;code&gt;over()&lt;/code&gt; operator for projection and &lt;code&gt;to_dataframe()&lt;/code&gt; for transformation to Python Pandas dataframe. We have even wrapped functional commands on pipelines so that you can choose between OOP (chaining) or functional style of programming.&lt;/p&gt;
&lt;h3 id=&#34;not-only-a-data-storage-and-transformations-analytics-tool&#34;&gt;Not only a data storage and transformations-analytics tool&lt;/h3&gt;
&lt;p&gt;There is another category of tools related with data storage (in-memory, on-disk), transformations and analytics processing, such as &lt;a href=&#34;https://github.com/TileDB-Inc/TileDB&#34;&gt;TileDB&lt;/a&gt;, &lt;a href=&#34;https://github.com/pandas-dev/pandas&#34;&gt;datatable&lt;/a&gt;, &lt;a href=&#34;https://github.com/h2oai/datatable&#34;&gt;pandas&lt;/a&gt;, &lt;a href=&#34;https://github.com/petl-developers/petl&#34;&gt;petl&lt;/a&gt;, &lt;a href=&#34;https://github.com/vaexio/vaex&#34;&gt;vaex&lt;/a&gt;, &lt;a href=&#34;https://github.com/PyTables&#34;&gt;pytables&lt;/a&gt;, &lt;a href=&#34;https://github.com/ibis-project/ibis&#34;&gt;ibis&lt;/a&gt;, &lt;a href=&#34;https://github.com/numpy/numpy&#34;&gt;numpy&lt;/a&gt;, &lt;a href=&#34;https://github.com/dask/dask&#34;&gt;dask&lt;/a&gt;, &lt;a href=&#34;https://github.com/apache/arrow&#34;&gt;pyarrow&lt;/a&gt;, &lt;a href=&#34;https://arrow.apache.org/blog/2018/12/05/gandiva-donation/&#34;&gt;gandiva&lt;/a&gt;. Usually most of them construct a table data structure in-memory or on-disk and use either a column layout or row layout to process the data. Hence they resemble database engines. In fact previous prototypes of HyperMorph (see &lt;a href=&#34;https://healis.eu/en/project/triadb/&#34;&gt;TRIADB&lt;/a&gt; project) were based on SQL database engines. This time the current, first, release of HyperMorph is powered by &lt;a href=&#34;https://arrow.apache.org/docs/python/index.html&#34;&gt;PyArrow&lt;/a&gt;. There are many reasons for that choice. Most important PyArrow is mature and provides a columnar memory format for flat and hierarchical data, organized for efficient analytic operations on modern hardware including GPUs. But regarding HyperMorph the killer feature of PyArrow package is &lt;a href=&#34;https://arrow.apache.org/docs/python/data.html#dictionary-arrays&#34;&gt;dictionary encoding&lt;/a&gt; which is utilized to implement associative filtering, part of our &lt;a href=&#34;https://healis.eu/en/post/20170412/&#34;&gt;associative semiotic hypergraph technology&lt;/a&gt;, in the style of &lt;a href=&#34;https://www.qlik.com/us/products/associative-difference&#34;&gt;Qlik&lt;/a&gt; analytics engine.&lt;/p&gt;
&lt;h3 id=&#34;more-promising-than-data-virtualization-and-cloud-analytics-services&#34;&gt;More promising than data virtualization and cloud analytics services&lt;/h3&gt;
&lt;p&gt;In recent years there is also another approach for data management and analytics aiming to skip the weary ETL process. Usually these are SaaS products on the cloud, such as &lt;a href=&#34;https://panoply.io/&#34;&gt;panoply&lt;/a&gt;, &lt;a href=&#34;https://www.dremio.com/&#34;&gt;dremio&lt;/a&gt;, &lt;a href=&#34;https://www.knowi.com/&#34;&gt;knowi&lt;/a&gt;, &lt;a href=&#34;https://www.denodo.com/en/data-virtualization/overview&#34;&gt;denodo&lt;/a&gt;, and many others. They provide GUIs and act as &lt;a href=&#34;https://en.wikipedia.org/wiki/Middleware&#34;&gt;middleware&lt;/a&gt; between DBMS and BI platforms. Naturally these are proprietary products and details on how they work under the hood are hidden. Developers or power users have to stick with menu-widget driven interfaces than having the ultimate flexibility of programming at the level of Python language. You may consider HyperMorph as an open-source API with the same role to fetch data for graph visualisation platforms. HyperMorph has three key differentiating points here data consolidation, user defined data modeling and interactive associative filtering for analytics with the option to visualize connected data on a graph. And because HyperMorph is open-source it is more promising that potentially our technology can be used from many software vendors for BI applications.&lt;/p&gt;
&lt;h2 id=&#34;speechless-hypermorph-screencast&#34;&gt;Speechless HyperMorph Screencast&lt;/h2&gt;
&lt;h3 id=&#34;hypermorph-speaks-for-itself&#34;&gt;Hypermorph speaks for itself&lt;/h3&gt;
&lt;p&gt;Watch the demo, check youtube settings and make sure &lt;strong&gt;video quality is at 1080p&lt;/strong&gt; HD.
You may also set the &lt;strong&gt;playback speed at 0.75&lt;/strong&gt; to increase the time of executing commands.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ZMjlkw6tw3o&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h3 id=&#34;now-you-know-that-you-can-&#34;&gt;Now you know that you can &amp;hellip;&lt;/h3&gt;
&lt;p&gt;and the only limit on what you can is your imagination.&lt;/p&gt;
&lt;h2 id=&#34;installation---demo-test---documentation&#34;&gt;Installation - Demo Test - Documentation&lt;/h2&gt;
&lt;h3 id=&#34;step-by-step-instructions&#34;&gt;Step by step instructions&lt;/h3&gt;
&lt;p&gt;on how to &lt;a href=&#34;https://healis.eu/en/hmorph/#install&#34;&gt;install&lt;/a&gt; release.&lt;/p&gt;
&lt;h3 id=&#34;demo-guide-to-test-package&#34;&gt;Demo Guide to Test package&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://healis.eu/en/hmorph/#demo_test&#34;&gt;Demonstration of HyperMorph functionality&lt;/a&gt; on data resources and demo scripts that are included in the distribution.&lt;/p&gt;
&lt;h3 id=&#34;documentation&#34;&gt;Documentation&lt;/h3&gt;
&lt;p&gt;A draft of the &lt;a href=&#34;https://hypermorph.healis.eu/docs&#34;&gt;documentation&lt;/a&gt; from comments in source code is generated automatically with Sphinx and it is hosted at GitHub.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>TRIACLICK 2nd Release</title>
      <link>https://healis.eu/en/post/20191025/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20191025/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;TRIADB is discontinued, page is maintained here for the history.&lt;/strong&gt;


&lt;button class=&#34;btn  btn-danger&#34; type=&#34;button&#34;  onclick=&#34;location.href=&#39;\/en\/hmorph\/&#39;&#34; &gt; Visit HyperMorph the successor of this project &lt;/button&gt;


&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;self-service-data-management--visual-interactive-analytics-framework&#34;&gt;Self-Service Data Management &amp;amp; Visual Interactive Analytics Framework&lt;/h2&gt;
&lt;p&gt;This is a public announcement of the second open-source release of TRIADB, codename TRIACLICK. Repository of the project can be found at &lt;a href=&#34;https://github.com/healiseu/triadb&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can use TRIACLICK to manage your disparate data sources, create custom data models with an integrated, whole view of your business and get a business insight by building easily dashboard web applications that work with the associative selection/filtering of Triaclick engine.&lt;/p&gt;
&lt;h3 id=&#34;tutorial-and-installation-guides&#34;&gt;Tutorial and Installation Guides&lt;/h3&gt;
&lt;p&gt;Analytic instructions on how to install TRIADB are written on the &lt;a href=&#34;https://github.com/healiseu/triadb/blob/master/INSTALLATION.rst&#34;&gt;installation guide&lt;/a&gt;. If you decide to go deeper, read the &lt;a href=&#34;https://github.com/healiseu/triadb/blob/master/TUTORIAL.rst&#34;&gt;tutorial guide&lt;/a&gt; to get into the basics of programming with TRIADB.&lt;/p&gt;
&lt;h2 id=&#34;screen-capture-demo&#34;&gt;Screen Capture Demo&lt;/h2&gt;
&lt;p&gt;Watch a screencast demonstration of the main features of TRIADB in the current release with a focus on the key aspects highlighted and illustrated in the following section.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/QSk1ldfb7ow&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h3 id=&#34;at-a-glance&#34;&gt;At A Glance&lt;/h3&gt;
&lt;p&gt;TRIADB is an innovative, multi-perspective development framework written in Python with the scope to assist power BI users and developers to build easily web applications and/or Jupyter notebooks, i.e. reports, that are based on interactive computing and exploratory, visual analysis. It’s main unique and valuable characteristics are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Interactive visual exploratory analytics&lt;/strong&gt; powered by TriaClick associative semiotic hypergraph engine. The technology is based on ClickHouse columnar DBMS and its output can be easily transformed to enable hypergraph traversal, associative selection and cross-filtering with states on coordinated visualizations.&lt;/li&gt;
&lt;/ol&gt;






&lt;figure&gt;

&lt;img src=&#34;triaclick_animated_chart.gif&#34; alt=&#34;Coordinated update of GUI components based on associative selection and filtering&#34; &gt;



&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;TRIACLICK Animated Chart&lt;/h4&gt;
  &lt;p&gt;
    Coordinated update of GUI components based on associative selection and filtering
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;







&lt;figure&gt;

&lt;img src=&#34;hypergraph_paths.png&#34; alt=&#34;Visualization of hypergraph paths based on TRIACLICK associations&#34; &gt;



&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;TRIACLICK Hypergraph&lt;/h4&gt;
  &lt;p&gt;
    Visualization of hypergraph paths based on TRIACLICK associations
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;

&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;User defined business models&lt;/strong&gt; in the form of a hypergraph. Data modeling plays a central role in TRIADB. Management of meta-data, loading and filtering processes are innately related, associated, with the business model you define.&lt;/li&gt;
&lt;/ol&gt;






&lt;figure&gt;

&lt;img src=&#34;business_model.png&#34; alt=&#34;Business model based on Northwind database with Associative Entities in yellow&#34; &gt;



&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;Business Model Graph&lt;/h4&gt;
  &lt;p&gt;
    Business model based on Northwind database with Associative Entities in yellow
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;

&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;strong&gt;Interactive programming with high-level OOP components and methods&lt;/strong&gt; tailored to fit database management and analytics. TRIADB powerful transformations, including list items, tuples and associations enable the user to analyze data quickly and intuitively.&lt;/li&gt;
&lt;/ol&gt;






&lt;figure&gt;

&lt;img src=&#34;associative_filtering.png&#34; alt=&#34;Examine visually how the domain set values of attributes are related&#34; &gt;



&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;Associative Filtering&lt;/h4&gt;
  &lt;p&gt;
    Examine visually how the domain set values of attributes are related
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;







&lt;figure&gt;

&lt;img src=&#34;barchart_from_aggregations.png&#34; alt=&#34;Aggregation in a filtered state and transformation to tuples and bar chart&#34; &gt;



&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;Transformation of aggregation&lt;/h4&gt;
  &lt;p&gt;
    Aggregation in a filtered state and transformation to tuples and bar chart
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;

&lt;h2 id=&#34;what-problem-triadb-solves-and-how&#34;&gt;What problem TRIADB solves and how&lt;/h2&gt;
&lt;p&gt;The project started long time ago from a personal need to integrate an electronic medical record database used in a neurosurgery clinic with several other specialized databases for neurosurgical disorders. &lt;code&gt;Integration&lt;/code&gt;, &lt;code&gt;correlation&lt;/code&gt;, &lt;code&gt;aggregation&lt;/code&gt; and &lt;code&gt;visual exploration&lt;/code&gt; will always be the holy grail of business analytics. Associative technology in general is a specific solution that has not been opened to the public until now although it is applied by one of the most successful BI companies for two decades. The implementation of associative semiotic hypergraph engine (TRIACLICK) in TRIADB project opens a path for other competitive, cost effective (not only RAM based), efficient solutions sharing the same principles in data modeling and database management.&lt;/p&gt;
&lt;h2 id=&#34;future-plans&#34;&gt;Future Plans&lt;/h2&gt;
&lt;p&gt;TRIADB is a middleware, one part is closely coupled with the physical layer of the data store engine and the other part is closer to the application layer. Therefore the project can be expanded in two directions, optimization and improvement of associative semiotic hypergraph engine on one hand, efficient and effective transformations and visual exploration on the other hand.&lt;/p&gt;
&lt;p&gt;In spite of the growing development of TRIADB which requires urgently funding for resources, the critical factor for the success of this project is how exactly it is going to be applied to solve particular users’ problems. This step requires that users become aware of what are the advantages in using TRIADB and what they can achieve.&lt;/p&gt;
&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/triadb-v09-athanassios-hatzis/&#34;&gt;LinkedIn - 20191025 Pulse Article - TRIADB v0.9&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>TRIACLICK 1st Release</title>
      <link>https://healis.eu/en/post/20190211/</link>
      <pubDate>Mon, 11 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20190211/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;TRIADB is discontinued, page is maintained here for the history.&lt;/strong&gt;


&lt;button class=&#34;btn  btn-danger&#34; type=&#34;button&#34;  onclick=&#34;location.href=&#39;\/en\/hmorph\/&#39;&#34; &gt; Visit HyperMorph the successor of this project &lt;/button&gt;


&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;TriaClick is my long standing effort to revitalize Relational and Topic Maps data model. &lt;code&gt;Associative filtering&lt;/code&gt;, similar to &lt;a href=&#34;https://www.qlik.com/us/products/associative-difference&#34;&gt;Qlik associative engine&lt;/a&gt;, has been &lt;strong&gt;implemented for the first time&lt;/strong&gt; with a fast columnar DBMS on non-volatile memory and tested with a relatively large file on commodity hardware.&lt;/p&gt;
&lt;h2 id=&#34;screencast&#34;&gt;Screencast&lt;/h2&gt;
&lt;p&gt;Screen Capture Demo of TriaClick, a python library that implements &lt;a href=&#34;https://healis.eu/en/post/20170412/&#34;&gt;associative, semiotic, hypergraph technology&lt;/a&gt; on top of &lt;a href=&#34;https://clickhouse.yandex/&#34;&gt;ClickHouse columnar DBMS&lt;/a&gt; and &lt;a href=&#34;https://mariadb.org/&#34;&gt;MariaDB&lt;/a&gt;. We show the execution of commands from two python console applications that are built with TriaClick library. The various operations (methods) of our &lt;code&gt;Chain Query Language (CQL)&lt;/code&gt; aim to make the processing pipeline of data integration, exploratory data analysis and visualization easier, faster, intuitive, and more efficient and accurate for the database/data analyst expert. Currently the focus is on management of data resources and data models, associative filtering, hypergraph exploration and aggregations.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/WJh5o59aXOw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;performance&#34;&gt;Performance&lt;/h2&gt;
&lt;p&gt;On my 10 years old Intel i3 core machine, TriaClick takes about a minute to load a 42 x 2.8M Physician records TSV flat file (856MB) on SSD and the average elapsed time for processing user selections, i.e. filters with an exploratory QlikView style, is 3 seconds. Output can be transformed and seen as associations, tuples, and columns with distinct values, frequencies and filtering states. The result set can also be driven to a hypergraph for further exploration.&lt;/p&gt;
&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/triaclick-demo-athanassios-hatzis-phd/&#34;&gt;LinkedIn - 20190211 Pulse Article - TriaClick Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>TRIADB</title>
      <link>https://healis.eu/en/project/triadb/</link>
      <pubDate>Mon, 11 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/project/triadb/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#at-a-glance&#34;&gt;At A Glance&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#architectural-design&#34;&gt;Architectural Design&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#architectural-overview-white-paper&#34;&gt;Architectural Overview (White Paper)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#implementations&#34;&gt;Implementations&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#conference-presentations&#34;&gt;Conference Presentations&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#key-differentiating-factors&#34;&gt;Key Differentiating Factors&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#business-strategy&#34;&gt;Business Strategy&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#cross-references&#34;&gt;Cross-References&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;TRIADB is discontinued, page is maintained here for the history.&lt;/strong&gt;


&lt;button class=&#34;btn  btn-danger&#34; type=&#34;button&#34;  onclick=&#34;location.href=&#39;\/en\/hmorph\/&#39;&#34; &gt; Visit HyperMorph the successor of this project &lt;/button&gt;


&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;at-a-glance&#34;&gt;At A Glance&lt;/h2&gt;
&lt;p&gt;TRIADB is an innovative, multi-perspective database framework. It is a Python library that sits on top of suitable NoSQL/SQL data store engines and enables the users to perform easily &lt;strong&gt;integration, correlation, aggregation and hypergraph exploration of multiple data resources&lt;/strong&gt;. TRIADB is founded on the principles of &lt;a href=&#34;https://healis.eu/en/project/r3dm/&#34;&gt;R3DM/S3DM&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;architectural-design&#34;&gt;Architectural Design&lt;/h2&gt;
&lt;p&gt;In terms of the architectural design TRIADB is based on &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000107/&#34;&gt;&lt;strong&gt;associative&lt;/strong&gt;, &lt;strong&gt;semiotic&lt;/strong&gt;, &lt;strong&gt;hypergraph&lt;/strong&gt; technology&lt;/a&gt; pioneered by &lt;a href=&#34;https://healis.eu/en/about/#athanassios&#34;&gt;Dr. Athanassios I. Hatzis&lt;/a&gt;. Foundational principles, theoretical formalization and ontological dimensions of the framework and the data model are &lt;a href=&#34;https://healis.eu/en/project/r3dm/#cross-references&#34;&gt;dating back to the year 2012&lt;/a&gt;. Our technology shares certain similarities with &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000104/&#34;&gt;Qlik&lt;/a&gt; associative technology, &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000002/&#34;&gt;AtomicDB and X10SYS&lt;/a&gt; associative technology, &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000103/#associative-model&#34;&gt;Sentences&lt;/a&gt; associative data model, &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000101/&#34;&gt;Topic Maps&lt;/a&gt; data model and &lt;a href=&#34;https://en.wikipedia.org/wiki/Correlation_database&#34;&gt;correlation database model&lt;/a&gt;. The &lt;span class=&#34;markup-quote&#34;&gt;main difference of our technology from other similar associative technologies&lt;/span&gt; is that it has a solid theoretical background, a unified data modeling architecture and at the same time it is distinct in its design and implementation.&lt;/p&gt;
&lt;h2 id=&#34;architectural-overview-white-paper&#34;&gt;Architectural Overview (White Paper)&lt;/h2&gt;
&lt;div class=&#34;responsive-wrap&#34;&gt;
	&lt;object data=&#34;/documents/WP-TriaClick-Architectural-Overview-Final.pdf&#34; type=&#34;application/pdf&#34; style=&#34;margin: 0 auto;height: 100vh;width: 100%;&#34;&gt;
		&lt;embed src=&#34;https://healis.eu/documents/WP-TriaClick-Architectural-Overview-Final.pdf&#34; type=&#34;application/pdf &#34;style=&#34;margin: 0 auto;height: 100vh;width: 100%;&#34;&gt;
			&lt;em&gt;It seems that your browser cannot display the PDF file; Please use this &lt;a href=&#34;https://healis.eu/documents/WP-TriaClick-Architectural-Overview-Final.pdf&#34;&gt;&lt;strong&gt;link&lt;/strong&gt; &lt;/a&gt;
			instead. Thanks!&lt;/em&gt;
	&lt;/object&gt;
&lt;/div&gt;
&lt;h2 id=&#34;implementations&#34;&gt;Implementations&lt;/h2&gt;
&lt;p&gt;There are four TRIADB prototypes implemented:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;TRIADB on &lt;a href=&#34;https://healis.eu/en/talk/triadb_wolfram/&#34;&gt;OrientDB with Mathematica&lt;/a&gt; - 2016&lt;/li&gt;
&lt;li&gt;TRIADB on &lt;a href=&#34;https://healis.eu/en/talk/triadb_connected_data/&#34;&gt;Intersystems Cache with Python&lt;/a&gt; - 2017&lt;/li&gt;
&lt;li&gt;TRIADB on Redis with Python - 2018&lt;/li&gt;
&lt;li&gt;TRIADB on &lt;a href=&#34;https://healis.eu/en/post/20191025/&#34;&gt;MariaDB and ClickHouse with Python&lt;/a&gt; - 2019&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In the last open-source release of TRIADB, MariaDB stores data dictionary information and ClickHouse data storage engines are used for processing and querying data. The associative, semiotic, hypergraph engine has a proprietary licence, although the sources are included in the release, and it is given the codename TriaClick.&lt;/p&gt;
&lt;h2 id=&#34;conference-presentations&#34;&gt;Conference Presentations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;16/11/2017&lt;/strong&gt; - &lt;a href=&#34;https://healis.eu/en/talk/triadb_connected_data/&#34;&gt;Connected Data London Conference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;19/06/2017&lt;/strong&gt; - &lt;a href=&#34;https://healis.eu/en/talk/triadb_wolfram/&#34;&gt;European Wolfram Technology Conference in Amsterdam&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;key-differentiating-factors&#34;&gt;Key Differentiating Factors&lt;/h2&gt;
&lt;p&gt;The following is a list of technical specifications and features in the design and implementation of TRIADB. This same list is what makes &lt;span class=&#34;markup-quote&#34;&gt;TRIADB a unique and valuable product&lt;/span&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Multi-Perspective Database Framework: tuples, domain sets, objects, hypergraph, hierarchical&lt;/li&gt;
&lt;li&gt;Act both as an operational and data warehouse database with a 360 degree view&lt;/li&gt;
&lt;li&gt;Automatic fixed, primary indexing schema instead of user-defined secondary indexing&lt;/li&gt;
&lt;li&gt;Manage the references instead of data: relying on reference-based associations and logical identifiers&lt;/li&gt;
&lt;li&gt;No duplicates: single value instance based on system defined primitive data types&lt;/li&gt;
&lt;li&gt;Consolidation of multiple data resources and mapping on user-defined data models&lt;/li&gt;
&lt;li&gt;Management of data resources, data models and metadata&lt;/li&gt;
&lt;li&gt;Python Chain Query Language (CQL) that avoids namespace and impedance mismatch problem&lt;/li&gt;
&lt;li&gt;Interactive, free-form, contextual queries&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;business-strategy&#34;&gt;Business Strategy&lt;/h2&gt;
&lt;p&gt;We create strong partnerships with database vendors to implement and fine-tune TRIADB on top of their technology stack and we offer consulting services on how to apply Associative, Semiotic, Hypergraph technology. We are not selling licenses or software, we provide full stack solutions and add-on value for our own clients, or for the clients of the vendor, thus the system we build inherits the scaling, performance, availability and TCO of the vendor.&lt;/p&gt;
&lt;p&gt;Our associative, semiotic, hypergraph technology is open-source. We are seeking for developer&amp;rsquo;s community consensus on the use of it and we strongly believe that our technology will be eventually adapted by major semantic and database technology players in the IT industry.&lt;/p&gt;
&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/triaclick-demo-athanassios-hatzis-phd/&#34;&gt;LinkedIn - 20190211 Pulse Article - TriaClick Demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/triaclick-architectural-overview-white-paper-athanassios-hatzis-phd/&#34;&gt;LinkedIn - 20190319 TriaClick Architectural Overview White Paper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/triadb-v09-athanassios-hatzis/&#34;&gt;LinkedIn - 20191025 Pulse Article - TRIADB v0.9&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>Cache Python ORM</title>
      <link>https://healis.eu/en/project/cache_python/</link>
      <pubDate>Mon, 23 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/project/cache_python/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#source-code&#34;&gt;Source Code&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#about-the-project&#34;&gt;About the project&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#tests-and-demos&#34;&gt;Tests and Demos&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#cross-references&#34;&gt;Cross-References&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;

&lt;h2 id=&#34;source-code&#34;&gt;Source Code&lt;/h2&gt;
&lt;p&gt;The project&amp;rsquo;s &lt;a href=&#34;https://github.com/healiseu/IntersystemsCacheORM&#34;&gt;source code at GitHub&lt;/a&gt;, was originally written and used as a module of &lt;a href=&#34;https://healis.eu/en/talk/triadb_connected_data/&#34;&gt;TRIADB&lt;/a&gt; project.&lt;/p&gt;
&lt;h2 id=&#34;about-the-project&#34;&gt;About the project&lt;/h2&gt;
&lt;p&gt;CacheORM module is an enhanced OOP porting of &lt;a href=&#34;https://docs.intersystems.com/latest/csp/docbook/DocBook.UI.Page.cls?KEY=GBPY_using&#34;&gt;Intersystems Cache-Python binding&lt;/a&gt;. There are three classes implemented:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;CacheClient This is the super class of CachePython module. It wraps two functions from intersys.pythonbind module &lt;a href=&#34;https://docs.intersystems.com/latest/csp/docbook/DocBook.UI.Page.cls?KEY=GBPY_using#GBPY_using_basics&#34;&gt;pythonbind3.connection()&lt;/a&gt; and &lt;a href=&#34;https://docs.intersystems.com/latest/csp/docbook/DocBook.UI.Page.cls?KEY=GBPY_classes#GBPY_classes_database&#34;&gt;pythonbind3.database()&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CacheQuery A subclass of CacheClient that wraps methods and adds extra functionality in &lt;a href=&#34;https://docs.intersystems.com/latest/csp/docbook/DocBook.UI.Page.cls?KEY=GBPY_classes#GBPY_classes_database&#34;&gt;intersys.pythonbind.database&lt;/a&gt; and &lt;a href=&#34;https://docs.intersystems.com/latest/csp/docbook/DocBook.UI.Page.cls?KEY=GBPY_classes#GBPY_classes_queries&#34;&gt;intersys.pythonbind.query classes&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CacheClass A subclass of CacheClient, that wraps methods and adds extra functionality in &lt;a href=&#34;https://docs.intersystems.com/latest/csp/docbook/DocBook.UI.Page.cls?KEY=GBPY_classes#GBPY_classes_database&#34;&gt;intersys.pythonbind.database&lt;/a&gt; and &lt;a href=&#34;https://docs.intersystems.com/latest/csp/docbook/DocBook.UI.Page.cls?KEY=GBPY_classes#GBPY_classes_objects&#34;&gt;intersys.pythonbind.object&lt;/a&gt; classes&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;a href=&#34;https://docs.intersystems.com/latest/csp/docbook/DocBook.UI.Page.cls?KEY=GBPY&#34;&gt;intersys.pythonbind&lt;/a&gt; package is a Python C extension that provides Python application with transparent connectivity to the objects stored in the Caché database.&lt;/p&gt;
&lt;h2 id=&#34;tests-and-demos&#34;&gt;Tests and Demos&lt;/h2&gt;
&lt;p&gt;There are two folders in this release:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/healiseu/IntersystemsCacheORM/tree/master/testCacheORM&#34;&gt;testCacheORM&lt;/a&gt; contains python jupyter notebook files that demonstrate CacheQuery and CacheClass&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/healiseu/IntersystemsCacheORM/tree/master/testCacheBinding&#34;&gt;testCacheBinding&lt;/a&gt; are tests written for Intersystems Cache python binding&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One can simply compare tests with demos to appreciate the work in this project to leverage intersystems cache python binding.&lt;/p&gt;
&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/intersystems-cache-python-orm-athanassios-hatzis-phd/&#34;&gt;LinkedIn - 20180305 Pulse Article - HEALIS: Build valuable relations; establish effective communications&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>TRIADB at Connected Data London</title>
      <link>https://healis.eu/en/talk/triadb_connected_data/</link>
      <pubDate>Thu, 16 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/talk/triadb_connected_data/</guid>
      <description>&lt;h2 id=&#34;video-recording-of-speech&#34;&gt;Video Recording of Speech&lt;/h2&gt;
&lt;p&gt;The following video is from a presentation and demonstration of TRIADB at &lt;a href=&#34;https://connected-data.london/connected-data-london-2017/&#34;&gt;Connected Data London conference on the 16th of November 2017&lt;/a&gt;. The event brings together top class innovators, thought leaders and practitioners in the field of Artificial Intelligence and Semantic Technology.

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/BiEAbpCOC1A&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;Unfortunately the light conditions were not ideal for the demonstration of our system. We recommend you visit the links at the right side of the following table to view Pandas notebooks in addition to the video above. You may also start the video at the corresponding time.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Time&lt;/th&gt;
&lt;th&gt;Pandas Notebook&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://youtu.be/BiEAbpCOC1A?t=5m1s&#34;&gt;05:00&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://test.healis.eu/TRIADB20171116/Traversal.html&#34;&gt;Traversal and Hypergraph&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://youtu.be/BiEAbpCOC1A?t=9m1s&#34;&gt;09:00&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://test.healis.eu/TRIADB20171116/NodeObjects.html&#34;&gt;Hypernodes, Hyperedges and Tuples&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://youtu.be/BiEAbpCOC1A?t=11m45s&#34;&gt;11:45&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://test.healis.eu/TRIADB20171116/HyperCollections.html&#34;&gt;Hypercollections&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://youtu.be/BiEAbpCOC1A?t=13m1s&#34;&gt;13:00&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://test.healis.eu/TRIADB20171116/Data_Model.html&#34;&gt;Data Model&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://youtu.be/BiEAbpCOC1A?t=15m30s&#34;&gt;15:30&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://test.healis.eu/TRIADB20171116/Mapping.html&#34;&gt;Mapping&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;slides-of-the-talk&#34;&gt;Slides of the talk&lt;/h2&gt;
&lt;iframe
  style=&#34;width: 100%; height: 500px;&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34;
  src=&#34;http://www.slideshare.net/slideshow/embed_code/82217659?rel=0&#34; allowfullscreen webkitallowfullscreen mozallowfullscreen&gt;
&lt;/iframe&gt;

&lt;h2 id=&#34;screen-captures&#34;&gt;Screen Captures&lt;/h2&gt;








  
  


&lt;div class=&#34;gallery&#34;&gt;

  
  
  
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-screen_captures&#34; href=&#34;https://healis.eu/en/talk/triadb_connected_data/screen_captures/img1.png&#34; &gt;
  &lt;img src=&#34;https://healis.eu/en/talk/triadb_connected_data/screen_captures/img1_hu9f2fbc5a7b2b6140b1e520132ee249ed_140448_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-screen_captures&#34; href=&#34;https://healis.eu/en/talk/triadb_connected_data/screen_captures/img2.png&#34; &gt;
  &lt;img src=&#34;https://healis.eu/en/talk/triadb_connected_data/screen_captures/img2_hu4df91ef5ca4966b9794e52585d3f29da_130096_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-screen_captures&#34; href=&#34;https://healis.eu/en/talk/triadb_connected_data/screen_captures/img3.png&#34; &gt;
  &lt;img src=&#34;https://healis.eu/en/talk/triadb_connected_data/screen_captures/img3_hu85db5d9239943d2756c8f2f354328790_81239_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-screen_captures&#34; href=&#34;https://healis.eu/en/talk/triadb_connected_data/screen_captures/img4.png&#34; &gt;
  &lt;img src=&#34;https://healis.eu/en/talk/triadb_connected_data/screen_captures/img4_hu676c730d7a702c63cec8582f15e1e412_85147_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-screen_captures&#34; href=&#34;https://healis.eu/en/talk/triadb_connected_data/screen_captures/img5.png&#34; &gt;
  &lt;img src=&#34;https://healis.eu/en/talk/triadb_connected_data/screen_captures/img5_hu5ff3b3f03d263e02c1ef7e7531bc07c3_77785_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-screen_captures&#34; href=&#34;https://healis.eu/en/talk/triadb_connected_data/screen_captures/img6.png&#34; &gt;
  &lt;img src=&#34;https://healis.eu/en/talk/triadb_connected_data/screen_captures/img6_hu826266c34aa39368339914b8e817fd28_107259_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-screen_captures&#34; href=&#34;https://healis.eu/en/talk/triadb_connected_data/screen_captures/img7.png&#34; &gt;
  &lt;img src=&#34;https://healis.eu/en/talk/triadb_connected_data/screen_captures/img7_hu7059e637d75a091a938cb26a84c93be7_150986_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-screen_captures&#34; href=&#34;https://healis.eu/en/talk/triadb_connected_data/screen_captures/img8.png&#34; &gt;
  &lt;img src=&#34;https://healis.eu/en/talk/triadb_connected_data/screen_captures/img8_hu1a8d983db4a57324f4f553234fc6af27_95827_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-screen_captures&#34; href=&#34;https://healis.eu/en/talk/triadb_connected_data/screen_captures/img9.png&#34; &gt;
  &lt;img src=&#34;https://healis.eu/en/talk/triadb_connected_data/screen_captures/img9_hu7a79b6d4577f08d747f8650a08aab1be_202333_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  

  
&lt;/div&gt;
&lt;p&gt;The &lt;strong&gt;first two images&lt;/strong&gt; of our collection portray a hypegraph of seven records, two on the left (Parts), three in the center (Catalog Entries) and another two on the right (Suppliers). The main difference is that in the first one nodes are shown with values and in the second one with 2D numerical references. Images are aligned so you can switch back and forth with the left and right arrow keys.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;third image&lt;/strong&gt; shows execution of TRIADB Python commands on a Jupyter notebook. This is a traversal query that fetches the tuples that make the neighbourhood of the two parts that we saw in the first two images.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;fourth image&lt;/strong&gt; two records are drawn, they have common values for the weight and the name of the part. There is a red (partID=993) and a silver (partID=994) Acme Widget Washer but they do not share a common unit for the weight. This cleansing problem is solved in the &lt;strong&gt;fifth image&lt;/strong&gt; where the two parts share three common values.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;sixth image&lt;/strong&gt; visualizes the bipartite mapping solution. The fields on the left are mapped onto attributes on the right and the pandas 2D frame in the seventh image presents their names and key references.&lt;/p&gt;
&lt;p&gt;Finally the &lt;strong&gt;last two images&lt;/strong&gt; display a hypergraph data model for movies and a movie instance with many participants. Again you can switch back and forth with the left and right arrow keys.&lt;/p&gt;
&lt;h2 id=&#34;video-screen-capture-of-triadb&#34;&gt;Video Screen Capture of TRIADB&lt;/h2&gt;
&lt;p&gt;Screencast of TRIADB on a toy problem dataset with a junction table (Catalog) that bridges the other two tables (Supplier and Part). Videos demonstrate in detail the python client API functional operations of TRIADB system such as add models, add resources and records, get operations to retrieve data and hypergraph traversal operations.&lt;/p&gt;
&lt;p&gt;There are five videos in &lt;a href=&#34;https://www.youtube.com/playlist?list=PL_Z7O8S4ThCxqPZmqZiZTQx9pdMpt3dsj&#34;&gt;this playlist&lt;/a&gt; of HEALIS &lt;a href=&#34;https://www.youtube.com/channel/UCoCkNTkn1dAbtyr5EMvzc7w&#34;&gt;youtube channel&lt;/a&gt;. You may start watching the last video of this series to get an overall impression of TRIADB&lt;/p&gt;
&lt;h3 id=&#34;part-15&#34;&gt;Part 1/5&lt;/h3&gt;
&lt;p&gt;In this recording session we demonstrate the first Jupyter Notebook. We show how to use TRIADB functional commands to reset and rebuild the framework. And we explain a bit the associatve and semiotic architectural design of our framework.

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/-yYGU99mi2s&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;part-25&#34;&gt;Part 2/5&lt;/h3&gt;
&lt;p&gt;In this video you will learn how to add a data model, how to search and retrieve information from the data model environment of TRIADB framework and how to visualize your data model.

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/GIlECSJEx3k&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;part-35&#34;&gt;Part 3/5&lt;/h3&gt;
&lt;p&gt;In this video we continue with adding resources, mapping these resources to the data model and finally adding records into TRIADB.

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/SpxHBmlHAZw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;part-45&#34;&gt;Part 4/5&lt;/h3&gt;
&lt;p&gt;In this video we continue with GET operations on Supplier-Part-Catalog data set and we describe various environments according to S3DM/R3DM data model. These include the Data Types Environment (DTE), Data Values Environment (DVE), Data Resources Environment (DRE), Data Models Environment (DME) and Data Sets Environment (DSE).

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/_-Ve7XZ8OT0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;part-55&#34;&gt;Part 5/5&lt;/h3&gt;
&lt;p&gt;In this video, first we explain the hypergraph visual representation of our data model, then we compare it with relational data model and finally we traverse the hypergraph.

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/uTchBCyfyxI&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;acknowledgement&#34;&gt;Acknowledgement&lt;/h2&gt;
&lt;p&gt;We would like to thank Intersystems Cache for providing us with a license of Caché DBMS to test TRIADB.&lt;/p&gt;
&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/triadb-connected-data-london-athanassios-i-hatzis-phd/&#34;&gt;LinkedIn - 20180103 Pulse Article - TRIADB at Connected Data London&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PL_Z7O8S4ThCxqPZmqZiZTQx9pdMpt3dsj&#34;&gt;Youtube - HEALIS Channel Playlist - TRIADB Supplier Part Catalog (SPC)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://connected-data.london/connected-data-london-2017/&#34;&gt;Connected Data London - 2017 Event&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Associative Semiotic Hypergraph API in Mathematica for Next-Generation BI Systems</title>
      <link>https://healis.eu/en/talk/triadb_wolfram/</link>
      <pubDate>Mon, 19 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/talk/triadb_wolfram/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://healis.eu/en/project/r3dm/&#34;&gt;R3DM/S3DM&lt;/a&gt; is a conceptual data model that attempts to unify existing data model standards by elevating n-ary relationships on a &lt;a href=&#34;https://en.wikipedia.org/wiki/Hypergraph&#34;&gt;hypergraph&lt;/a&gt;, a.k.a associations. In this framework semantics are defined and explained with three alternative paradigms (&lt;a href=&#34;https://en.wikipedia.org/wiki/Object-oriented_programming&#34;&gt;object-oriented&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Graph_(discrete_mathematics)&#34;&gt;network graph&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/Semiotics&#34;&gt;semiotics&lt;/a&gt;). It is the last one that gives birth to its name and this is also the cornerstone of its reference mechanism. R3DM/S3DM redefines RDBMS as a &lt;strong&gt;Reference Database Management System&lt;/strong&gt; with a set of functional operations that match those of SQL statements and are implemented in Wolfram Language.&lt;/p&gt;
&lt;p&gt;Based on these operations we demonstrate interactively using Wolfram Notebook interface how we can create R3DM/S3DM environment on top of &lt;a href=&#34;https://orientdb.org/&#34;&gt;OrientDB Graph Database&lt;/a&gt; and how we can add a Domain Model or a Data Set. We also present R3DM/S3DM filtering mechanism for traversing and cleansing and we compare and review these command operations in &lt;a href=&#34;https://www.qlik.com/us/products/qlikview&#34;&gt;Qlikview&lt;/a&gt; graphical user environment.&lt;/p&gt;
&lt;p&gt;The output of this interactive exploration of data modeling, processing and analysis and any result set can be returned in the form of a table using Wolfram Language constructs such as &lt;a href=&#34;https://reference.wolfram.com/language/ref/List.html&#34;&gt;List(s)&lt;/a&gt;, &lt;a href=&#34;https://reference.wolfram.com/language/ref/Rule.html&#34;&gt;Rule(s)&lt;/a&gt;, &lt;a href=&#34;https://reference.wolfram.com/language/ref/Association.html&#34;&gt;Association(s)&lt;/a&gt; and &lt;a href=&#34;https://reference.wolfram.com/language/ref/Dataset.html&#34;&gt;Dataset(s)&lt;/a&gt;. There is also the option of visualizing hypergraphs with the &lt;a href=&#34;https://reference.wolfram.com/language/ref/Graph.html&#34;&gt;Graph network&lt;/a&gt; function and attribute sets as column charts.&lt;/p&gt;
&lt;p&gt;Finally we discuss our future business plan and we share with you our mantra:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;We build powerful meaningful relationships easily&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;recording-of-the-talk&#34;&gt;Recording of the talk&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/BZleqH7iMng&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/feed/update/urn:li:activity:6289712416192372736/&#34;&gt;LinkedIn - 09/07/2017 Update about my youtube video presentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Qlik Associative Model</title>
      <link>https://healis.eu/en/post/20170211/</link>
      <pubDate>Sat, 11 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20170211/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#introduction-to-qliks-associative-model&#34;&gt;Introduction to Qlik&amp;rsquo;s Associative Model&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#qliks-in-memory-associative-architecture&#34;&gt;Qlik&amp;rsquo;s In-Memory Associative Architecture&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#loading-the-data&#34;&gt;Loading the data&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#explorefilter-data-via-selections&#34;&gt;Explore/Filter Data via Selections&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#r3dm-hypergraph-representation&#34;&gt;R3DM Hypergraph Representation&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#air-units&#34;&gt;AIR Units&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#future-plans&#34;&gt;Future Plans&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#cross-references&#34;&gt;Cross-References&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;

&lt;h2 id=&#34;introduction-to-qliks-associative-model&#34;&gt;Introduction to Qlik&amp;rsquo;s Associative Model&lt;/h2&gt;
&lt;p&gt;In the &lt;a href=&#34;https://healis.eu/en/post/20161220/#discussion&#34;&gt;discussion session&lt;/a&gt; of the previous post of our series we mentioned two basic reasons that make &lt;a href=&#34;https://en.wikipedia.org/wiki/Resource_Description_Framework&#34;&gt;RDF&lt;/a&gt; data modeling and consequently &lt;a href=&#34;https://www.w3.org/TR/rdf-sparql-query/&#34;&gt;SPARQL&lt;/a&gt; query mechanism disadvantageous with an interactive and associative data exploration and data integration as that of &lt;a href=&#34;http://www.qlik.com/us/products/qlikview&#34;&gt;QlikView&lt;/a&gt;/&lt;a href=&#34;http://www.qlik.com/us/products/qlik-sense&#34;&gt;Qliksense&lt;/a&gt;. These are the naming of predicate terms that connect resources and literals and the unidirectional architectural design of the edges. We have already demonstrated this issue with the &lt;a href=&#34;https://healis.eu/en/post/20161220/#associative-model&#34;&gt;associative model schema design&lt;/a&gt; of a Movies domain in Freebase, &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig10&#34;&gt;&lt;strong&gt;Fig.10&lt;/strong&gt;&lt;/a&gt;, and the modeling of our Supplier-Parts-Catalogue toy example in Sentences, &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig15&#34;&gt;&lt;strong&gt;Fig.15&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig16&#34;&gt;&lt;strong&gt;Fig.16&lt;/strong&gt;&lt;/a&gt; and OrientDB Property Graph, &lt;a href=&#34;https://healis.eu/en/post/20160913/#fig4&#34;&gt;&lt;strong&gt;Fig.4&lt;/strong&gt;&lt;/a&gt;. In this post we continue our journey with Qlik&amp;rsquo;s associative data model.&lt;/p&gt;
&lt;h2 id=&#34;qliks-in-memory-associative-architecture&#34;&gt;Qlik&amp;rsquo;s In-Memory Associative Architecture&lt;/h2&gt;
&lt;p&gt;Qlik&amp;rsquo;s competitive advantage over other BI tools is that it manages associations in memory at the engine level and not at the application level [(English,2010)]&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. This management of data, is deep down to an atomic level of data (&lt;a href=&#34;http://www.businessdictionary.com/definition/granularity.html&#34;&gt;Granularity&lt;/a&gt;), i.e. &lt;strong&gt;every data point in every field of a table is associated with every other data point anywhere in the entire schema&lt;/strong&gt; [(English,2010)]&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. We will follow Qlik&amp;rsquo;x QIX engine stepwise approach with the goal of performing an interactive data exploration [(Ferguson,2015,p.10)]&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; of our Suppliers-Parts-Catalogue data set.&lt;/p&gt;
&lt;h3 id=&#34;loading-the-data&#34;&gt;Loading the data&lt;/h3&gt;
&lt;p&gt;The first step is to bring data into memory. A multi-table &lt;strong&gt;read-only&lt;/strong&gt;, in-memory, compressed, binary, columnar data model is created. Data from each source data table is converted into two types of in memory data structure : [(Ferguson,2015,p.12)]&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A set of columns that contain binary values, i.e. references, &lt;strong&gt;for each distinct original value&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;A compressed binary data table by &lt;strong&gt;replacing each row/column cell value with a binary reference&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example, the following statements, [QlikView script syntax, p.242]&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;, load data from the &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/media/SupplierPartCatalogue/tsv/Parts.tsv&#34;&gt;Parts&lt;/a&gt; and &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/media/SupplierPartCatalogue/tsv/Suppliers.tsv&#34;&gt;Suppliers&lt;/a&gt; tables that are stored in Excel files and reconstruct eleven unique columns and two read-only binary representation of these tables in memory.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;LOAD&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prtID&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;prtName&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;prtColor&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;prtWeight&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;prtUnit&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;FROM&lt;/span&gt; [&lt;span style=&#34;color:#a6e22e&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tmp&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;SupplierPartCatalogue&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;SuppliersPartsCatalogue&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;xlsx&lt;/span&gt;]
(&lt;span style=&#34;color:#a6e22e&#34;&gt;ooxml&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;embedded&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;labels&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;table&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Part&lt;/span&gt;);

&lt;span style=&#34;color:#a6e22e&#34;&gt;LOAD&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;supID&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;supName&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;supAddress&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;supCity&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;supCountry&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;supStatus&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;FROM&lt;/span&gt; [&lt;span style=&#34;color:#a6e22e&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tmp&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;SupplierPartCatalogue&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;SuppliersPartsCatalogue&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;xlsx&lt;/span&gt;]
(&lt;span style=&#34;color:#a6e22e&#34;&gt;ooxml&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;embedded&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;labels&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;table&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Supplier&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If two fields have the same name in two different tables (i.e. a relationship) then they have the same columnar binary representation. In order to resolve ambiguities and to associate over fields that have the same name, unique column naming is required. This is the case for our third associative, i.e. bridge, junction table. Field names &lt;code&gt;catSID&lt;/code&gt; and &lt;code&gt;catPID&lt;/code&gt; have already been loaded and represented with the columns &lt;code&gt;supID&lt;/code&gt; and &lt;code&gt;prtID&lt;/code&gt;. The next &lt;code&gt;LOAD&lt;/code&gt; statement is using the alias operator (&lt;code&gt;as&lt;/code&gt;) to handle unique column naming.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;LOAD&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;catSID&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;supID&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;catPID&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prtID&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;catPrice&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;catTotal&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;catDate&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;catChk&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;FROM&lt;/span&gt; [&lt;span style=&#34;color:#a6e22e&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tmp&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;SupplierPartCatalogue&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;SuppliersPartsCatalogue&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;xlsx&lt;/span&gt;]
(&lt;span style=&#34;color:#a6e22e&#34;&gt;ooxml&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;embedded&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;labels&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;table&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Catalogue&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;qlikview-spc-TableView-390x360.jpg&#34; &gt;

&lt;img src=&#34;qlikview-spc-TableView-390x360.jpg&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;QlikView Internal/Source Table View&lt;/h4&gt;
  
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Once the script is executed we can review the data table structure, &lt;a href=&#34;#fig1&#34;&gt;&lt;strong&gt;Fig. 1&lt;/strong&gt;&lt;/a&gt;, with the Table Viewer. The three tables are associated with two connectors that bidirectionally link them through their common fields. This layout is quite similar with the Entity-Relationship diagram of Microsoft Access database schema, &lt;a href=&#34;https://healis.eu/en/post/20160825/#fig5&#34;&gt;&lt;strong&gt;Fig.5&lt;/strong&gt;&lt;/a&gt;. A QlikView association resembles a SQL natural outer join. However, an outer join in SQL is unidirectional. An association always results in a full (bidirectional) linkage. In practice we have two completely different approaches. In a typical SQL join query we repeatedly search the index because of the join condition.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;QlikView associative engine (QIX) knows how every data point is associated, therefore it can effectively determine (infers) and flag all distinct column values and all rows in each data table upon user&amp;rsquo;s selection&lt;/strong&gt; &lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;the-blind-spot&#34;&gt;The Blind Spot&lt;/h4&gt;
&lt;p&gt;Depending only on memory, QlikView can load many whole tables without joins, instead of a limited view from the main dataset. Other query-based BI tools usually aggregate an extracted subset of data and return it in the form of a result set. This result set is completely divorced from the original data set and this very act of extraction breaks associations. For example, find out how a piece of data contained in a query relates to another piece of data outside the query [(QlikView Whitepaper, October 2010, p.3)]&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;. You may think also of an internal combustion engine analogy . With the query-based paradigm, we would look at individual parts of the engine in isolation, (see the header image of our post). Using QlikView associative technology, we have access to a digital model of a complete working engine and we can tweak any part to see how that affects other parts and the engine on the whole.&lt;/p&gt;
&lt;h3 id=&#34;explorefilter-data-via-selections&#34;&gt;Explore/Filter Data via Selections&lt;/h3&gt;
&lt;p&gt;In this section we will examine QlikView associative aspect from the user&amp;rsquo;s experience point of view. &amp;ldquo;&lt;em&gt;Central to QlikView is the concept of a user-defined selection state. As users click around in a QlikView document, they indicate which subsets of data they are interested in analyzing and which subsets should be ignored&lt;/em&gt;, [(QlikView Whitepaper, September 2011, p.10)]&lt;sup id=&#34;fnref:5&#34;&gt;&lt;a href=&#34;#fn:5&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;. To demonstrate the visual effect of associations, i.e. the relationship between a value in one field and a value in another, we arranged a number of [Sheet Objects, p.457]&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; in our Main worksheet. We chose [Table Boxes, p.507]&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; to present rows of data from our Tables and [List Boxes, p.459]&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; to display a list of all possible values of a specific field. We have also added a [Current Selections Box, p.519]&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; to list user&amp;rsquo;s selected field values and a [Search Object, p.569]&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; for searching for information anywhere in the document, &lt;a href=&#34;#fig2&#34;&gt;&lt;strong&gt;Fig.2&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;qlikview-spc-NoneSelected-2138x741.jpg&#34; data-caption=&#34;QlikView Sheet Object in an unselected state with Table Boxes, Current Selections, and a Search Box on the left side and a Container with List Boxes for Fields representation on the right side&#34;&gt;

&lt;img src=&#34;qlikview-spc-NoneSelected-2138x741.jpg&#34; alt=&#34;QlikView Sheet Object in an unselected state with Table Boxes, Current Selections, and a Search Box on the left side and a Container with List Boxes for Fields representation on the right side&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    QlikView Sheet Object in an unselected state with Table Boxes, Current Selections, and a Search Box on the left side and a Container with List Boxes for Fields representation on the right side
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Now you can see visually what is associated and is not associated with any particular selection. For instance, [&lt;strong&gt;Fig.3&lt;/strong&gt;]&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; displays the state of our Worksheet when the user selected the Part item with ID value equal to &lt;code&gt;998&lt;/code&gt;. The &lt;code&gt;List Box&lt;/code&gt; of the field (&lt;strong&gt;prtID&lt;/strong&gt;) with the value &lt;code&gt;998&lt;/code&gt; appears in green and it has also been added to the &lt;code&gt;Current Selections&lt;/code&gt; list. In other &lt;code&gt;List Boxes&lt;/code&gt;, unrelated values in all other fields appear in gray and those that are related appear in white. At the same time, when the user interacts with this particular &lt;code&gt;List Box&lt;/code&gt; all the rows of &lt;code&gt;Table Boxes&lt;/code&gt; are instantly filtered to reflect this new context.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;qlikview-spc-PartSelected-2138x741.jpg&#34; data-caption=&#34;Table Boxes on the left side are filtered and values of the List Boxes on the right appear in white or gray according to the current selection (green)&#34;&gt;

&lt;img src=&#34;qlikview-spc-PartSelected-2138x741.jpg&#34; alt=&#34;Table Boxes on the left side are filtered and values of the List Boxes on the right appear in white or gray according to the current selection (green)&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Table Boxes on the left side are filtered and values of the List Boxes on the right appear in white or gray according to the current selection (green)
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;So far we have seen how we can get the resulting data after user&amp;rsquo;s selection in two possible formats, a list of values (&lt;code&gt;List Box&lt;/code&gt;) for each field of the data Table, &lt;a href=&#34;#fig5&#34;&gt;&lt;strong&gt;Fig.5&lt;/strong&gt;&lt;/a&gt;, and a grid (&lt;code&gt;Table Box&lt;/code&gt;) with tuples (records), &lt;a href=&#34;#fig4&#34;&gt;&lt;strong&gt;Fig.4&lt;/strong&gt;&lt;/a&gt;. You may also notice in our visual setup that we have a &lt;code&gt;Derived Relation&lt;/code&gt; red grid with selected fields from all three Tables of our data set. This grid is automatically constructed with those tuples that appear in the other three grids (&lt;code&gt;Catalogue Table Box&lt;/code&gt;, &lt;code&gt;Part Table Box&lt;/code&gt; and &lt;code&gt;Supplier Table Box&lt;/code&gt;). We should make it clear that the update of this &lt;code&gt;Derived Relation&lt;/code&gt; under the hood is not performing any kind of &lt;a href=&#34;https://en.wikipedia.org/wiki/Join_(SQL)&#34;&gt;Join (SQL)&lt;/a&gt; operation. The effect of tuples filtering and shading of list values is demonstrated with &lt;strong&gt;animated gif images&lt;/strong&gt; in three states. There is the &lt;strong&gt;Unselected State&lt;/strong&gt;, then there is the &lt;strong&gt;Part with ID value &lt;code&gt;998&lt;/code&gt;&lt;/strong&gt; selected state, and from those &lt;code&gt;Catalog&lt;/code&gt; entries for this specific &lt;code&gt;Part&lt;/code&gt;, (4 entries, one for each &lt;code&gt;Supplier&lt;/code&gt;), we &lt;strong&gt;select the &lt;code&gt;Supplier&lt;/code&gt; with the minimum &lt;code&gt;Catalog&lt;/code&gt; price&lt;/strong&gt; and that is our third state.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;tables.gif&#34; data-caption=&#34;Animated Grids of Tuples&#34;&gt;

&lt;img src=&#34;tables.gif&#34; alt=&#34;Animated Grids of Tuples&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Animated Grids of Tuples
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;columns.gif&#34; data-caption=&#34;Animated Lists of Values from Table Fields&#34;&gt;

&lt;img src=&#34;columns.gif&#34; alt=&#34;Animated Lists of Values from Table Fields&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Animated Lists of Values from Table Fields
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;r3dm-hypergraph-representation&#34;&gt;R3DM Hypergraph Representation&lt;/h2&gt;
&lt;p&gt;With the Associative Data Modeling there can be a third way to present data. This is the one that engages the user with the visualization of network graphs. In the previous post of our series, we have drawn an R3DM Hypergraph, &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig14&#34;&gt;&lt;strong&gt;Fig. 14&lt;/strong&gt;&lt;/a&gt;, and we described associations according to R3DM terminology. We have used exactly the same data of this case study example, i.e. find the **Supplier** with the minimum &lt;strong&gt;Catalog** price for &lt;strong&gt;Part** with &lt;code&gt;prtID&lt;/code&gt; value &lt;code&gt;998&lt;/code&gt;, to draw &lt;a href=&#34;#fig2&#34;&gt;&lt;strong&gt;Fig.2&lt;/strong&gt; &lt;/a&gt;, &lt;a href=&#34;#fig3&#34;&gt;&lt;strong&gt;Fig.3&lt;/strong&gt; &lt;/a&gt;, &lt;a href=&#34;#fig4&#34;&gt;&lt;strong&gt;Fig.4&lt;/strong&gt; &lt;/a&gt; and &lt;a href=&#34;#fig5&#34;&gt;&lt;strong&gt;Fig.5&lt;/strong&gt; &lt;/a&gt;. This time we have redrawn hypergraph of &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig14&#34;&gt;&lt;strong&gt;Fig. 14&lt;/strong&gt;&lt;/a&gt; with the help of &lt;a href=&#34;http://orientdb.com/docs/last/Graph-Editor.html&#34;&gt;OrientDB Graph Editor&lt;/a&gt;, &lt;a href=&#34;#fig6&#34;&gt;&lt;strong&gt;Fig.6&lt;/strong&gt;&lt;/a&gt;. Every string label and numerical value of &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig14&#34;&gt;&lt;strong&gt;Fig. 14&lt;/strong&gt;&lt;/a&gt; has been replaced with a unique OrientDB record identifier, &lt;/strong&gt;(RID - clusterID : clusterPosition)&lt;/strong&gt;&lt;a href=&#34;http://orientdb.com/docs/last/Tutorial-Record-ID.html&#34;&gt;&lt;/a&gt;. In effect, this is how we implemented R3DM/S3DM &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000002/#signified-sign-signifier-alternative-paradigm&#34;&gt;&lt;code&gt;Sign&lt;/code&gt; layer&lt;/a&gt;. Each data item becomes an Atomic Information Resource &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000002/#atomicdb-computational-semiotic-analysis-in-r3dm&#34;&gt;(AIR) unit&lt;/a&gt; with a symbolic representation of a 2D vector &lt;strong&gt;(Entity/Attribute Type : Instance)&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&#34;air-units&#34;&gt;AIR Units&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;From Data Items in any structure (Table/Entity/Triple/JSON/XML) to data model reconstruction with Information Atoms&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;
&lt;span class=&#34;markup-quote&#34;&gt;AIR units can represent in a uniform way anything, i.e. Entities, Attributes, Values, Types, Databases, etc. Their vector form can be indexed, linked, retrieved, stored efficiently, and we can use AIR units to build associations and assimilate composite information structures such as records (tuples).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;To visualize R3DM associations using AIR units we have color coded the graph and we added a legend at the left side, &lt;a href=&#34;#fig6&#34;&gt;&lt;strong&gt;Fig.6&lt;/strong&gt;&lt;/a&gt;. Entities are distinguished from attributes by the size of the disk and grouping of entities and attributes is depicted with different shades of a color (green for Suppliers, brown for Parts, purple for Catalog items). We can easily see four &lt;code&gt;Catalog&lt;/code&gt; items (#70:7, #70:11, #70:12, #70:16) associations with the four &lt;code&gt;Suppliers&lt;/code&gt; (#68:0, #68:1, #68:2, #68:3) and the &lt;code&gt;Part&lt;/code&gt; (#69:7) with ID value &lt;code&gt;998&lt;/code&gt; (#77:7) that is drawn in the center of the graph with the black disk around it. USA suppliers (#68:0, #68:1) share the value of their common &lt;code&gt;supCountry&lt;/code&gt; attribute (#75:0). One of them (#68:1) has a Catalog entry (#70:11) with the minimum catalog price,&lt;code&gt;catPrice&lt;/code&gt;, (#82:9). We can also see the formation of tuples for Supplier (4), Catalog (4) and Part (1).&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;OrientDB-GraphCanvas-Part998-1312x723.png&#34; data-caption=&#34;R3DM Color Coded Associations with AIR units&#34;&gt;

&lt;img src=&#34;OrientDB-GraphCanvas-Part998-1312x723.png&#34; alt=&#34;R3DM Color Coded Associations with AIR units&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    R3DM Color Coded Associations with AIR units
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Regarding to the immense advantage of using AIR units to reconstruct hierarchical, table, or graph structures, we can also refer to the following QlikTech patent. In the &amp;ldquo;&lt;em&gt;Summary of the Invention&lt;/em&gt;&amp;rdquo; section we read:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;each different data element value of each data element type is assigned a binary code and the data records are stored in binary-coded form. On account of the binary coding, very rapid searches can be conducted in the tables&lt;/strong&gt;. - Qliktech International AB Patent, May 2001&lt;sup id=&#34;fnref:6&#34;&gt;&lt;a href=&#34;#fn:6&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;future-plans&#34;&gt;Future Plans&lt;/h2&gt;
&lt;p&gt;It is rather unfortunate that the basis of QlikView&amp;rsquo;s evolutionary associative technology has been confined to the market of proprietary software products. In HEALIS we have made the difference by opening up these database design key principles for discussion with experts of the field and we have made them part of our R3DM/S3DM conceptual framework.&lt;/p&gt;
&lt;p&gt;We have gone a step further to implement our framework on top of OrientDB and Intersystems Cache DBMS and instead of writing SQL queries, we have abstracted the programming of a set of functional operations that match the selection and filtering of data. We plan to continue with the last part of this post series in order to fully demonstrate how we build our system and how we test it with the Suppliers-Parts-Catalogue data set.&lt;/p&gt;
&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/associative-data-modeling-demystified-part-5-hatzis-phd&#34;&gt;LinkedIn - Published Posts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/129217/129217-6236167845613568004&#34;&gt;LinkedIn - Semantic Web Research Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/2552968/2552968-6236180969989251073&#34;&gt;LinkedIn - Graph Databases Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/108904/108904-6236172407980326916&#34;&gt;LinkedIn - Data Warehouse &amp;amp; Business Intelligence Architects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/6514034/6514034-6236177589032099844&#34;&gt;LinkedIn - Computational Semiotics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/138726/138726-6236177288338251780&#34;&gt;LinkedIn - Semantic Technologies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/4737538/4737538-6236176794991624196&#34;&gt;LinkedIn - Data Visualization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/3750024/3750024-6236179423113154563&#34;&gt;LinkedIn - Database &amp;amp; Data Store Professionals ★ NoSQL ★ NewSQL ★ Relational&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/73235/73235-6236176889279582212&#34;&gt;LinkedIn - Database Developers and Architects Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/60636/60636-6236177288338251779&#34;&gt;LinkedIn - Linked Data Web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/hp/update/6236171505877815296&#34;&gt;LinkedIn - Update&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/45183/45183-6236177294906523652&#34;&gt;LinkedIn - Database Experts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/72977/72977-6238347871217942530&#34;&gt;LinkedIn - QlikView&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://community.qlik.com/groups/german-user-group/blog/2017/02/12/qlikview-associative-model-explained-a-perspective-on-r3dm-hypergraph&#34;&gt;Qlik Community - German User Group - Post&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://community.qlik.com/thread/249547&#34;&gt;Qlik Community - Discussion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;D. English, &amp;ldquo;White Paper: Understanding QlikView&amp;rsquo;s Associative Architecture&amp;rdquo;, QlikTech International AB, May 2010 &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;M. Ferguson, &amp;ldquo;White Paper: Interactive Data Exploration With An In-Memory Analytics Engine&amp;rdquo;, QlikTech International AB, May 2015 &lt;a href=&#34;https://www.google.gr/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=1&amp;amp;cad=rja&amp;amp;uact=8&amp;amp;ved=0ahUKEwjm1aKMne_RAhUCtBoKHWqZBKsQFggkMAA&amp;amp;url=http%3A%2F%2Fglobal.qlik.com%2Fuk%2F~%2Fmedia%2FFiles%2Fresource-library%2Fglobal-us%2Fregister%2Fwhitepapers%2FWP-Interactive-Data-Exploration-and-Analysis-EN.ashx&amp;amp;usg=AFQjCNHPdA7lr1ztLjYmx8Vgv7Qxkbx65g&amp;amp;bvm=bv.145822982,d.d2s&#34;&gt;(pdf)&lt;/a&gt; &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&amp;ldquo;QlikView Reference Manual v11.20 SR2&amp;rdquo;, QlikTech International AB, Lund, Sweden, 2013 &lt;a href=&#34;http://semanticommunity.info/@api/deki/files/24990/QlikView_Reference_Manual.pdf&#34;&gt;(pdf)&lt;/a&gt; &lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&amp;ldquo;The Associative Experience QlikView&amp;rsquo;s Overwhelming Advantage&amp;rdquo;, QlikTech International AB, October 2010 &lt;a href=&#34;https://www.google.gr/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=2&amp;amp;ved=0ahUKEwidjr_8rvHRAhXKuBoKHVDgBJsQFggtMAE&amp;amp;url=http%3A%2F%2Fwww.hyperintel.com%2Fwp-content%2Fuploads%2FQV-10-AssocExp_Whitepaper_A4.pdf&amp;amp;usg=AFQjCNE-Ttjtu2qH-fGZry_rn9WA9kOVcQ&amp;amp;sig2=ns6WuIBNLd_S2-LYYtE9gg&#34;&gt;(pdf)&lt;/a&gt; &lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:5&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&amp;ldquo;QlikView Architectural Overview&amp;rdquo;, QlikTech International AB, September 2011 &lt;a href=&#34;https://community.qlik.com/servlet/JiveServlet/downloadBody/7673-102-1-10318/WP-QlikView-Architectural-Overview-EN.pdf&#34;&gt;(pdf)&lt;/a&gt; &lt;a href=&#34;#fnref:5&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:6&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&amp;ldquo;&lt;a href=&#34;https://www.google.com/patents/US6236986&#34;&gt;Method and Device for Extracting Information from a Database&lt;/a&gt;&amp;rdquo;, QlikTech International AB, May 2001 &lt;a href=&#34;#fnref:6&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>Association in RDF Data Model</title>
      <link>https://healis.eu/en/post/20161220/</link>
      <pubDate>Tue, 20 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20161220/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#introduction-to-rdf&#34;&gt;Introduction to RDF&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#rdf-and-linked-data&#34;&gt;RDF and Linked Data&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#association-in-rdf&#34;&gt;Association in RDF&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#associative-model&#34;&gt;Associative Model&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#association-in-r3dm&#34;&gt;Association in R3DM&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#discussion&#34;&gt;Discussion&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#acknowledgements&#34;&gt;Acknowledgements&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#cross-references&#34;&gt;Cross-References&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;

&lt;h2 id=&#34;introduction-to-rdf&#34;&gt;Introduction to RDF&lt;/h2&gt;
&lt;p&gt;In the previous post, &lt;a href=&#34;https://healis.eu/en/post/20160913/&#34;&gt;Part-3&lt;/a&gt;, of this series we explored the Property Graph data model. It is now time to write about another Graph data model with a long history behind it, the Resource-Description-Framework (&lt;a href=&#34;https://en.wikipedia.org/wiki/Resource_Description_Framework&#34;&gt;RDF&lt;/a&gt;). We will see how we can define an association in RDF and what are the differences with other data models that we analyzed in previous posts of our series.&lt;/p&gt;
&lt;p&gt;RDF is a graph-based data model that has been designed to represent information as a &lt;strong&gt;labeled directed graph&lt;/strong&gt;. In RDF, a description of a resource, i.e. any type of thing, is represented as a number of triples. Each triple has a subject, predicate, and object. Alternatively if you want to think in terms of &lt;a href=&#34;https://en.wikipedia.org/wiki/Entity%E2%80%93relationship_model&#34;&gt;Entity-Relationship&lt;/a&gt; model, these three parts of the triple become the Entity-Attribute-Value. This is also known as the &lt;a href=&#34;https://en.wikipedia.org/wiki/Entity%E2%80%93attribute%E2%80%93value_model&#34;&gt;EAV&lt;/a&gt; model. For instance the Entity subject &lt;code&gt;Part:998&lt;/code&gt; of our &lt;a href=&#34;https://healis.eu/SupplierPartCatalogue/tsv/Parts.tsv&#34;&gt;Parts&lt;/a&gt; table in the &lt;a href=&#34;https://healis.eu/SupplierPartCatalogue&#34;&gt;example data set&lt;/a&gt; of our series can be &lt;a href=&#34;https://healis.eu/SupplierPartCatalogue/ttl/parts.ttl&#34;&gt;serialized&lt;/a&gt; in Turtle syntax as :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;Part:998 rdf&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;label        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fire Hydrant Cap&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@en&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
         schema&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;color     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Red&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@en&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
         schema&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;weight    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;7.2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^^&lt;/span&gt;xsd&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;double&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
         schema&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;unitText  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lb&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@en&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
         dc&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;identifier    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;998&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^^&lt;/span&gt;xsd&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;These &lt;code&gt;rdf:label&lt;/code&gt;, &lt;code&gt;schema:color&lt;/code&gt;, &lt;code&gt;schema:weight&lt;/code&gt;, &lt;code&gt;schema:unitText&lt;/code&gt;, &lt;code&gt;dc:identifier&lt;/code&gt; are attributes of this Entity instance and &amp;ldquo;Fire Hydrant Cap&amp;rdquo;, &amp;ldquo;Red&amp;rdquo;, &amp;ldquo;7.2&amp;rdquo;, &amp;ldquo;lb&amp;rdquo; and &amp;ldquo;998&amp;rdquo; are atomic values with an accompanied data type, see also &lt;a href=&#34;#fig7&#34;&gt;&lt;strong&gt;Fig. 7&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;rdf-and-linked-data&#34;&gt;RDF and Linked Data&lt;/h2&gt;
&lt;p&gt;But RDF is not like any other data model, it has been selected from &lt;a href=&#34;https://en.wikipedia.org/wiki/World_Wide_Web_Consortium&#34;&gt;W3C&lt;/a&gt; as one of the Web technologies, together with &lt;a href=&#34;https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol&#34;&gt;HTTP&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/Uniform_resource_identifier&#34;&gt;URIs&lt;/a&gt;, to &lt;strong&gt;extend the hyperlinking of documents to a set of best practices for publishing and interlinking structured data on global scale&lt;/strong&gt;. Today the term &lt;a href=&#34;https://en.wikipedia.org/wiki/Linked_data&#34;&gt;Linked Data&lt;/a&gt; refers to these standards, and the extension of the Web is also known as the &lt;a href=&#34;https://en.wikipedia.org/wiki/Semantic_Web&#34;&gt;Semantic Web&lt;/a&gt;. The predecessor of RDF, the &lt;a href=&#34;https://en.wikipedia.org/wiki/Semantic_network&#34;&gt;Semantic Network Model&lt;/a&gt;, was formed in the early 1960s. The main difference is that arcs and nodes in RDF are identified using HTTP URIs and dereferenced (i.e., looked up) over the HTTP protocol. If we use &lt;a href=&#34;https://en.wikipedia.org/wiki/N-Triples&#34;&gt;N-Triples&lt;/a&gt; syntax to serialize the same resource &lt;code&gt;Part:998&lt;/code&gt; we take:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//example.org/spc/Part/998&amp;gt;   &amp;lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#label&amp;gt;  &amp;#34;Fire Hydrant Cap&amp;#34;@en .
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//example.org/spc/Part/998&amp;gt;   &amp;lt;http://schema.org/color&amp;gt;                           &amp;#34;Red&amp;#34;@en .
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//example.org/spc/Part/998&amp;gt;   &amp;lt;http://schema.org/weight&amp;gt;                          &amp;#34;7.2&amp;#34;^^&amp;lt;http://www.w3.org/2001/XMLSchema#double&amp;gt; .
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//example.org/spc/Part/998&amp;gt;   &amp;lt;http://schema.org/unitText&amp;gt;                        &amp;#34;lb&amp;#34;@en .
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//example.org/spc/Part/998&amp;gt;   &amp;lt;http://purl.org/dc/elements/1.1/identifier&amp;gt;        &amp;#34;998&amp;#34;^^&amp;lt;http://www.w3.org/2001/XMLSchema#int&amp;gt; .
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Notice that the &lt;code&gt;object&lt;/code&gt; part of the triple is an &lt;a href=&#34;https://www.w3.org/TR/rdf11-concepts/#section-Datatypes&#34;&gt;RDF literal&lt;/a&gt; and datatypes are used to represent values such as strings, numbers and dates. These triples are called &lt;strong&gt;Literal triples&lt;/strong&gt; and describe the properties of resources. In our example these &lt;code&gt;literal triples&lt;/code&gt; describe five properties of the &lt;code&gt;Part:998&lt;/code&gt; resource. This type of RDF triples is distinguished from the other type which is &lt;strong&gt;RDF Links&lt;/strong&gt; and describe the relationship between two resources. For example if we want to express with the same syntax all the vendors of &lt;code&gt;Part:998&lt;/code&gt; we will form these triples:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//example.org/spc/Part/998&amp;gt;   &amp;lt;http://www.wikidata.org/property/hasVendor&amp;gt;  &amp;lt;http://example.org/spc/Supplier/1081&amp;gt; .
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//example.org/spc/Part/998&amp;gt;   &amp;lt;http://www.wikidata.org/property/hasVendor&amp;gt;  &amp;lt;http://example.org/spc/Supplier/1082&amp;gt; .
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//example.org/spc/Part/998&amp;gt;   &amp;lt;http://www.wikidata.org/property/hasVendor&amp;gt;  &amp;lt;http://example.org/spc/Supplier/1083&amp;gt; .
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//example.org/spc/Part/998&amp;gt;   &amp;lt;http://www.wikidata.org/property/hasVendor&amp;gt;  &amp;lt;http://example.org/spc/Supplier/1084&amp;gt; .
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is also the equivalent result set at &lt;a href=&#34;#fig1&#34;&gt;&lt;strong&gt;Fig. 1&lt;/strong&gt;&lt;/a&gt; presented in a compact form from the following &lt;a href=&#34;https://www.w3.org/TR/rdf-sparql-query/&#34;&gt;SPARQL&lt;/a&gt; query:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;Suppliers &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; Part &lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; Supplier: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;example.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;spc&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;Supplier&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; Part: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;example.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;spc&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;Part&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; xsd: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;www.w3.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2001&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;XMLSchema&lt;span style=&#34;color:#f92672&#34;&gt;#&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; wd: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;www.wikidata.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;property&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; dc: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;purl.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;dc&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;elements&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;sup &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
	BIND(wd:hasVendor &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;p)    

    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Start&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt that has id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt dc:identifier &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;998&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^^&lt;/span&gt;xsd:int .

    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; Find &lt;span style=&#34;color:#66d9ef&#34;&gt;all&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt; items (&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat) &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; a reference &lt;span style=&#34;color:#66d9ef&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat wd:hasPart &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt .

    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;For&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;any&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt; item (&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat) find the vendor that supplies &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;sup .
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;part998-suppliers-result-set.jpg&#34; data-caption=&#34;Result set from SPARQL query to find the suppliers of Part:98&#34;&gt;

&lt;img src=&#34;part998-suppliers-result-set.jpg&#34; alt=&#34;Result set from SPARQL query to find the suppliers of Part:98&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Result set from SPARQL query to find the suppliers of Part:98
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;In &lt;a href=&#34;#fig1&#34;&gt;&lt;strong&gt;Fig. 1&lt;/strong&gt;&lt;/a&gt; The URI with &lt;a href=&#34;https://en.wikipedia.org/wiki/QName&#34;&gt;QName&lt;/a&gt; &lt;code&gt;wd:hasVendor&lt;/code&gt;,  in the &lt;code&gt;predicate&lt;/code&gt; position defines the type of relationship between a &lt;code&gt;subject&lt;/code&gt; with QName &lt;code&gt;Part:998&lt;/code&gt; and an &lt;code&gt;object&lt;/code&gt; with any of these QNames (&lt;code&gt;Supplier:1081&lt;/code&gt;, &lt;code&gt;Supplier:1082&lt;/code&gt;, &lt;code&gt;Supplier:1083&lt;/code&gt;, &lt;code&gt;Supplier:1084&lt;/code&gt;). Both subject and object URIs are in the same namespace (&lt;code&gt;http://example.org/spc/&lt;/code&gt;), these are called &lt;strong&gt;Internal RDF links&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;One way to think these &lt;strong&gt;RDF links&lt;/strong&gt; is as a &lt;strong&gt;labeled directed graph&lt;/strong&gt;. Each triple is a directed arc that connects a subject, e.g. &lt;code&gt;Part:998&lt;/code&gt;, with an object, e.g. &lt;code&gt;Supplier:1084&lt;/code&gt;,  and the predicate is the label of the arc, &lt;code&gt;wd:hasVendor&lt;/code&gt;. For example the previous result set can be represented with the following graph in &lt;a href=&#34;#fig2&#34;&gt;&lt;strong&gt;Fig. 2&lt;/strong&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;gruff-part998-suppliers.jpg&#34; data-caption=&#34;Suppliers of Part:998&#34;&gt;

&lt;img src=&#34;gruff-part998-suppliers.jpg&#34; alt=&#34;Suppliers of Part:998&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Suppliers of Part:998
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;But the graph for the data model of our example is slightly more complicated because there are intermediate nodes, i.e. inventory items that represent records from the &lt;a href=&#34;https://healis.eu/SupplierPartCatalogue/tsv/Catalog.tsv&#34;&gt;Catalog&lt;/a&gt; table, that &lt;a href=&#34;https://en.wikipedia.org/wiki/Associative_entity&#34;&gt;&lt;strong&gt;associate&lt;/strong&gt;&lt;/a&gt;, bridge &lt;strong&gt;Suppliers&lt;/strong&gt; with &lt;strong&gt;Parts&lt;/strong&gt; &lt;a href=&#34;#fig3&#34;&gt;&lt;strong&gt;Fig. 3&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;gruff-part998-suppliers-and-inventory-items.jpg&#34; data-caption=&#34;Suppliers of Part:998 with intermediate Inventory Items nodes&#34;&gt;

&lt;img src=&#34;gruff-part998-suppliers-and-inventory-items.jpg&#34; alt=&#34;Suppliers of Part:998 with intermediate Inventory Items nodes&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Suppliers of Part:998 with intermediate Inventory Items nodes
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Another distinction of &lt;strong&gt;RDF links&lt;/strong&gt; to &lt;strong&gt;Outgoing&lt;/strong&gt; and &lt;strong&gt;Incoming&lt;/strong&gt; can be seen in &lt;a href=&#34;#fig3&#34;&gt;&lt;strong&gt;Fig. 3&lt;/strong&gt;&lt;/a&gt;. For example &lt;code&gt;Part:998&lt;/code&gt; has four incoming &lt;strong&gt;RDF links&lt;/strong&gt; of type &lt;code&gt;wd:hasPart&lt;/code&gt; and &lt;code&gt;Item:7&lt;/code&gt; has two outgoing &lt;strong&gt;RDF links&lt;/strong&gt; of type &lt;code&gt;wd:hasPart&lt;/code&gt; and &lt;code&gt;wd:hasVendor&lt;/code&gt; respectively.&lt;/p&gt;
&lt;p&gt;In fact the SPARQL query above has been written taking in consideration this graph. In order to traverse the nodes you must know both the type of &lt;strong&gt;RDF link&lt;/strong&gt; and its direction. &lt;strong&gt;In RDF graph data model edges are unidirectional&lt;/strong&gt;. In order to define bidirectional edges we have to define both outgoing and incoming  &lt;strong&gt;RDF links&lt;/strong&gt; for each node, i.e. two predicates &lt;a href=&#34;#fig4&#34;&gt;&lt;strong&gt;Fig. 4&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;gruff-part998-suppliers-bidirectional.jpg&#34; data-caption=&#34;RDF bidirectional&#34;&gt;

&lt;img src=&#34;gruff-part998-suppliers-bidirectional.jpg&#34; alt=&#34;RDF bidirectional&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    RDF bidirectional
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;association-in-rdf&#34;&gt;Association in RDF&lt;/h2&gt;
&lt;p&gt;We can now compare these &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000101/#topic-map-serialization&#34;&gt;five associations&lt;/a&gt; of &lt;code&gt;Part:998&lt;/code&gt; with &lt;strong&gt;RDF links&lt;/strong&gt; of the graph in &lt;a href=&#34;#fig6&#34;&gt;&lt;strong&gt;Fig. 6&lt;/strong&gt;&lt;/a&gt;.  One of them is composed with all outgoing triples of &lt;code&gt;Part:998&lt;/code&gt;, i.e. &lt;code&gt;Part:998&lt;/code&gt; is the subject of the triple &lt;a href=&#34;#fig5&#34;&gt;&lt;strong&gt;Fig. 5&lt;/strong&gt;&lt;/a&gt;. These &lt;code&gt;literal triples&lt;/code&gt; describe five properties of &lt;code&gt;Part:998&lt;/code&gt; resource, yellow boxes of &lt;a href=&#34;#fig6&#34;&gt;&lt;strong&gt;Fig. 6&lt;/strong&gt;&lt;/a&gt;, and another RDF link is for the type of resource, i.e. &lt;code&gt;Item&lt;/code&gt; (grey box).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Get&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;all&lt;/span&gt; outgoing triples &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; a &lt;span style=&#34;color:#66d9ef&#34;&gt;specific&lt;/span&gt; part
&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; Part: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;example.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;spc&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;Part&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;o &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
    BIND(Part:&lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt)
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;o .
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;part998-outgoing-triples-result-set.jpg&#34; data-caption=&#34;Result set of all outgoing triples for Part:998&#34;&gt;

&lt;img src=&#34;part998-outgoing-triples-result-set.jpg&#34; alt=&#34;Result set of all outgoing triples for `Part:998`&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Result set of all outgoing triples for &lt;code&gt;Part:998&lt;/code&gt;
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;The resource &lt;code&gt;Part:998&lt;/code&gt; participates in four associations with &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/media/SupplierPartCatalogue/ttl/catalog.ttl&#34;&gt;&lt;strong&gt;Inventory&lt;/strong&gt; resources&lt;/a&gt;,  as the object of a triple. These are the four incoming &lt;strong&gt;RDF links&lt;/strong&gt; of &lt;code&gt;Part:998&lt;/code&gt; in &lt;a href=&#34;#fig3&#34;&gt;&lt;strong&gt;Fig. 3&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;#fig6&#34;&gt;&lt;strong&gt;Fig. 6&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;#fig8&#34;&gt;&lt;strong&gt;Fig. 8&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;gruff-part998.jpg&#34; data-caption=&#34;Five associations of Part:998, four with the green boxes and one with the yellow boxes&#34;&gt;

&lt;img src=&#34;gruff-part998.jpg&#34; alt=&#34;Five associations of `Part:998`, four with the green boxes and one with the yellow boxes&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Five associations of &lt;code&gt;Part:998&lt;/code&gt;, four with the green boxes and one with the yellow boxes
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;We can write the following SPARQL query to ask for all the suppliers of &lt;code&gt;Part:998&lt;/code&gt; sorted by their catalog price.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;Suppliers &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; Part &lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt; (Red Fire Hydrant Cap) sorted &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; their &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt; price

&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; xsd: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;www.w3.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2001&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;XMLSchema&lt;span style=&#34;color:#f92672&#34;&gt;#&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; wd: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;www.wikidata.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;property&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;schema&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;schema&lt;/span&gt;.org&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; rdf: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;www.w3.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1999&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;02&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;rdf&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;syntax&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ns&lt;span style=&#34;color:#f92672&#34;&gt;#&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; dc: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;purl.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;dc&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;elements&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;sup &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;supName &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;supCountry &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;catPrice &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;catQuantity &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prtName &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prtColor &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Start&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt that has id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;get&lt;/span&gt; its name &lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; color &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt dc:identifier &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;998&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^^&lt;/span&gt;xsd:int .
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt rdf:label &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prtName .
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt &lt;span style=&#34;color:#66d9ef&#34;&gt;schema&lt;/span&gt;:color &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prtColor .            

    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; Find &lt;span style=&#34;color:#66d9ef&#34;&gt;all&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt; items (&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat) &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; a reference &lt;span style=&#34;color:#66d9ef&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt &lt;span style=&#34;color:#66d9ef&#34;&gt;get&lt;/span&gt; their price &lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; quantity &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat wd:hasPart &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt .
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat &lt;span style=&#34;color:#66d9ef&#34;&gt;schema&lt;/span&gt;:cost &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;catPrice
    OPTIONAL &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat &lt;span style=&#34;color:#66d9ef&#34;&gt;schema&lt;/span&gt;:quantity &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;catQuantity .&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;For&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;any&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt; item (&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat) find the vendor that supplies &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt &lt;span style=&#34;color:#66d9ef&#34;&gt;get&lt;/span&gt; their name &lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; the country &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; origin
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat wd:hasVendor &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;sup .
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;sup rdf:label &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;supName .
    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;sup &lt;span style=&#34;color:#66d9ef&#34;&gt;schema&lt;/span&gt;:country &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;supCountry
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ASC&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;catPrice)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You may consider the analogy between this query and the result set at &lt;a href=&#34;#fig7&#34;&gt;&lt;strong&gt;Fig. 7&lt;/strong&gt;&lt;/a&gt; and the equivalent &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000102/#join-vs-edge&#34;&gt;OrientDB SQL query and the result set from a &lt;strong&gt;Property Graph&lt;/strong&gt; data model&lt;/a&gt;. The main differences are that in &lt;strong&gt;Property Graph&lt;/strong&gt; data model you can traverse edges in both directions, (incoming, outcoming), the filtering part (&lt;code&gt;where&lt;/code&gt;) in SPARQL is significantly longer, and the starting point is represented in a different manner (edge vs link).&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;graphdb-part998-sup-catprices-1137x178.jpg&#34; data-caption=&#34;Suppliers of Part 998 (Red Fire Hydrant Cap) sorted by their catalog price&#34;&gt;

&lt;img src=&#34;graphdb-part998-sup-catprices-1137x178.jpg&#34; alt=&#34;Suppliers of Part 998 (Red Fire Hydrant Cap) sorted by their catalog price&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Suppliers of Part 998 (Red Fire Hydrant Cap) sorted by their catalog price
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;gruff-part998-suppliers-catprices-1210x710.jpg&#34; data-caption=&#34;Associations of Part:998 with Suppliers and their Catalog prices&#34;&gt;

&lt;img src=&#34;gruff-part998-suppliers-catprices-1210x710.jpg&#34; alt=&#34;Associations of `Part:998` with Suppliers and their Catalog prices&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Associations of &lt;code&gt;Part:998&lt;/code&gt; with Suppliers and their Catalog prices
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;We can view a graph representation, &lt;a href=&#34;#fig8&#34;&gt;&lt;strong&gt;Fig. 8&lt;/strong&gt;&lt;/a&gt;, of this SPARQL query and its result data set &lt;a href=&#34;#fig7&#34;&gt;&lt;strong&gt;Fig. 7&lt;/strong&gt;&lt;/a&gt;. In the same screen capture, &lt;a href=&#34;#fig8&#34;&gt;&lt;strong&gt;Fig. 8&lt;/strong&gt;&lt;/a&gt;, a many-to-many relationship is modeled with RDF triples. &lt;code&gt;Supplier:1082&lt;/code&gt; is associated with three parts (&lt;code&gt;Part:991&lt;/code&gt;, &lt;code&gt;Part:997&lt;/code&gt; and &lt;code&gt;Part:998&lt;/code&gt;) and &lt;code&gt;Part998&lt;/code&gt; is associated with four suppliers (&lt;code&gt;Supplier:1081&lt;/code&gt;, &lt;code&gt;Supplier:1082&lt;/code&gt;, &lt;code&gt;Supplier:1083&lt;/code&gt;, &lt;code&gt;Supplier:1084&lt;/code&gt;), see also &lt;a href=&#34;#fig9&#34;&gt;&lt;strong&gt;Fig. 9&lt;/strong&gt;&lt;/a&gt;. From a semantic point of view, Parts and Suppliers participate in associations with Inventory items (green boxes - &lt;code&gt;Catalog:7&lt;/code&gt;, &lt;code&gt;Catalog:9&lt;/code&gt;, &lt;code&gt;Catalog:10&lt;/code&gt;, &lt;code&gt;Catalog:11&lt;/code&gt;, &lt;code&gt;Catalog:12&lt;/code&gt; and &lt;code&gt;Catalog:16&lt;/code&gt;). In contrast with the binary relations between Suppliers and Parts represented with directed edges in a &lt;strong&gt;Property Graph&lt;/strong&gt;, &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000102/#property-graph-with-directed-edges&#34;&gt;see here&lt;/a&gt;, instead of an &lt;strong&gt;edge type&lt;/strong&gt; we have explicit intermediate (bridge) nodes and instead of outgoing head (out) and incoming tail (in) we have two outgoing directional links (&lt;code&gt;wd:hasPart&lt;/code&gt; and &lt;code&gt;wd:hasVendor&lt;/code&gt;) from this intermediate node, e.g. Catalog/Inventory item to Supplier and Part. In such as case these outgoing directional links (&lt;code&gt;wd:hasPart&lt;/code&gt; and &lt;code&gt;wd:hasVendor&lt;/code&gt;) look like &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000101/#topic-map-serialization&#34;&gt;roles in a Topic Map binary association&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/* 4 Associations of catalog part no 998 with supplier Ids and catalog prices */&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;Catalog07&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;Part998&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;HasPart&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Supplier1081&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;HasVendor&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11.7&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Cost&lt;/span&gt; )
&lt;span style=&#34;color:#a6e22e&#34;&gt;Catalog11&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;Part998&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;HasPart&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Supplier1082&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;HasVendor&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7.95&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Cost&lt;/span&gt; )
&lt;span style=&#34;color:#a6e22e&#34;&gt;Catalog12&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;Part998&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;HasPart&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Supplier1083&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;HasVendor&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;12.5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Cost&lt;/span&gt; )
&lt;span style=&#34;color:#a6e22e&#34;&gt;Catalog16&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;Part998&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;HasPart&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Supplier1084&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;HasVendor&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;48.6&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Cost&lt;/span&gt; )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;gruff-4suppliers-3parts-1227x457.jpg&#34; data-caption=&#34;A Many-to-Many Relationship between Suppliers and Parts modeled with RDF triples&#34;&gt;

&lt;img src=&#34;gruff-4suppliers-3parts-1227x457.jpg&#34; alt=&#34;A Many-to-Many Relationship between Suppliers and Parts modeled with RDF triples&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    A Many-to-Many Relationship between Suppliers and Parts modeled with RDF triples
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;associative-model&#34;&gt;Associative Model&lt;/h2&gt;
&lt;p&gt;Although it has not become mainstream, we see &lt;a href=&#34;https://en.wikipedia.org/wiki/Associative_model_of_data&#34;&gt;associative model of data&lt;/a&gt; as an effort to enhance RDF data model in a new kind of DBMS. The logical layer of &lt;a href=&#34;http://www.sentences.com/sentences.htm&#34;&gt;Sentences&lt;/a&gt; associative database management system may be regarded as comprising of only two tables: one for &lt;code&gt;Items&lt;/code&gt; that represent &lt;code&gt;Entities&lt;/code&gt;, &lt;code&gt;Entity Types&lt;/code&gt;, &lt;code&gt;Values&lt;/code&gt; and &lt;code&gt;Value Types&lt;/code&gt; and one for &lt;code&gt;Links&lt;/code&gt; that represent among other things &lt;code&gt;Associations&lt;/code&gt; and &lt;code&gt;Association Types&lt;/code&gt; (&lt;strong&gt;[Fig. 15]&lt;/strong&gt;, &lt;strong&gt;[Fig. 16]&lt;/strong&gt;). Both &lt;code&gt;Items&lt;/code&gt; and &lt;code&gt;Links&lt;/code&gt; also represent meta-types and instances, which perform various functions in the database. Thanks to this simple consistent form of &lt;code&gt;Items&lt;/code&gt; and &lt;code&gt;Links&lt;/code&gt;, it is easy to write generic code that is capable of working with every type of data. Recording schema changes and transactions, a type system &lt;strong&gt;[Fig. 15]&lt;/strong&gt;, associative queries in the form of a request tree, business rules, data provenance, automated default data entry forms &lt;strong&gt;[Fig. 16]&lt;/strong&gt; and many other features of Sentences DBMS were designed and implemented based on this generic metacode programming.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;SentencesDB_SPC_Types.jpg&#34; data-caption=&#34;Types, Association Instances and their Properties&#34;&gt;

&lt;img src=&#34;SentencesDB_SPC_Types.jpg&#34; alt=&#34;Types, Association Instances and their Properties&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Types, Association Instances and their Properties
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;

&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;SentencesDB_SPC_DataEntryForms.jpg&#34; data-caption=&#34;Types, Entity Instances and Data Entry Forms&#34;&gt;

&lt;img src=&#34;SentencesDB_SPC_DataEntryForms.jpg&#34; alt=&#34;Types, Entity Instances and Data Entry Forms&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Types, Entity Instances and Data Entry Forms
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;In fact along similar principles &lt;a href=&#34;https://en.wikipedia.org/wiki/Freebase&#34;&gt;Freebase&lt;/a&gt; collaborative knowledge base, now known as Google&amp;rsquo;s &lt;a href=&#34;https://en.wikipedia.org/wiki/Knowledge_Graph&#34;&gt;Knowledge Graph&lt;/a&gt;, was serving its users.&lt;/p&gt;
&lt;p&gt;Both Freebase and Sentences added also reverse edges to their model. In Freebase notation, &lt;strong&gt;[Fig. 10]&lt;/strong&gt; we can see that &lt;code&gt;/film/film&lt;/code&gt; is &lt;code&gt;/directed_by&lt;/code&gt; a &lt;code&gt;/film/director&lt;/code&gt; and a &lt;code&gt;/film/director&lt;/code&gt; has directed (&lt;code&gt;/film&lt;/code&gt;) a &lt;code&gt;/film/film&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;freebase-film.jpg&#34; data-caption=&#34;Movies Data Model in Freebase&#34;&gt;

&lt;img src=&#34;freebase-film.jpg&#34; alt=&#34;Movies Data Model in Freebase&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Movies Data Model in Freebase
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Bidirectional links allow a 360° view of every data item in the database. Directed edges in &lt;strong&gt;Property Graph&lt;/strong&gt; share the same concept, &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000102/#property-graph-with-directed-edges&#34;&gt;see here&lt;/a&gt;. In the following three figures (&lt;a href=&#34;#fig11&#34;&gt;&lt;strong&gt;Fig. 11&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;#fig12&#34;&gt;&lt;strong&gt;Fig. 12&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;#fig13&#34;&gt;&lt;strong&gt;Fig. 13&lt;/strong&gt;&lt;/a&gt;) we present three alternative schema views for our Supplier-Part-Catalog database that we built on Sentences DBMS. &lt;a href=&#34;#fig11&#34;&gt;&lt;strong&gt;Fig. 11&lt;/strong&gt;&lt;/a&gt; illustrates that it is possible to add attributes on the link. &lt;a href=&#34;#fig12&#34;&gt;&lt;strong&gt;Fig. 12&lt;/strong&gt;&lt;/a&gt; shows that &lt;code&gt;Supplier&lt;/code&gt;, &lt;code&gt;Catalog&lt;/code&gt; and &lt;code&gt;Part&lt;/code&gt; entities are sharing common attributes while in &lt;a href=&#34;#fig13&#34;&gt;&lt;strong&gt;Fig. 13&lt;/strong&gt;&lt;/a&gt; they are directly connected with bidirectional links.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;








  
  


&lt;div class=&#34;gallery&#34;&gt;

  
  
  
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-screen_captures&#34; href=&#34;https://healis.eu/en/post/20161220/screen_captures/SPC-bidirectional_edges_associations_directconnections.jpg&#34; &gt;
  &lt;img src=&#34;https://healis.eu/en/post/20161220/screen_captures/SPC-bidirectional_edges_associations_directconnections_hu2f5ba3506c67aca4d5953246be86fb8c_118507_0x190_resize_q90_lanczos.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-screen_captures&#34; href=&#34;https://healis.eu/en/post/20161220/screen_captures/SPC-bidirectional_edges_associations_indirectconnections.jpg&#34; &gt;
  &lt;img src=&#34;https://healis.eu/en/post/20161220/screen_captures/_huf9a85b6d31db297a90a7e332a9e02929_142663_2be83408ec7f9a57b41252a8ecdc2a14.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-screen_captures&#34; href=&#34;https://healis.eu/en/post/20161220/screen_captures/SPC-bidirectional_edges_associations_propertygraph.jpg&#34; &gt;
  &lt;img src=&#34;https://healis.eu/en/post/20161220/screen_captures/SPC-bidirectional_edges_associations_propertygraph_hu854a3e7bd7fe75e3520da486490b9b8f_93442_0x190_resize_q90_lanczos.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  

  
&lt;/div&gt;
&lt;h2 id=&#34;association-in-r3dm&#34;&gt;Association in R3DM&lt;/h2&gt;
&lt;p&gt;According to &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000102/#r3dm-hypergraph-terminology&#34;&gt;R3DM Hypergaph Terminology&lt;/a&gt;, the objects of &lt;code&gt;RDF literal&lt;/code&gt; triples, i.e. values, are  &lt;strong&gt;HyperAtoms&lt;/strong&gt; and the resources of &lt;strong&gt;RDF links&lt;/strong&gt; are &lt;strong&gt;HyperBonds&lt;/strong&gt;. Thus the RDF graph of &lt;a href=&#34;#fig8&#34;&gt;&lt;strong&gt;Fig. 8&lt;/strong&gt;&lt;/a&gt; can be redrawn as a hypergraph with &lt;!-- raw HTML omitted --&gt; red &lt;!-- raw HTML omitted --&gt; nodes that play the role of &lt;strong&gt;HyperAtoms&lt;/strong&gt; and &lt;!-- raw HTML omitted --&gt; green &lt;!-- raw HTML omitted --&gt; nodes that play the role of &lt;strong&gt;HyperBonds&lt;/strong&gt;, see &lt;a href=&#34;#fig14&#34;&gt;&lt;strong&gt;Fig. 14&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;part998-R3DM_hypergraph.png&#34; data-caption=&#34;R3DM Hypergraph&#34;&gt;

&lt;img src=&#34;part998-R3DM_hypergraph.png&#34; alt=&#34;R3DM Hypergraph&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    R3DM Hypergraph
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;This R3DM hypergraph figure above, &lt;a href=&#34;#fig14&#34;&gt;&lt;strong&gt;Fig. 14&lt;/strong&gt;&lt;/a&gt;, has been created from the execution of the following Wolfram Language code. You will notice that &lt;strong&gt;HyperAtom&lt;/strong&gt; sets such as &lt;strong&gt;ha2-(catcost)&lt;/strong&gt; and &lt;strong&gt;ha5-(catqnt)&lt;/strong&gt; are attribute sets with value members that take part in the formation of &lt;strong&gt;Catalog&lt;/strong&gt; records with instances that are drawn from &lt;strong&gt;hb2 set&lt;/strong&gt;. &lt;strong&gt;Supplier&lt;/strong&gt; instances are drawn from the other &lt;strong&gt;HyperBond&lt;/strong&gt; set (&lt;strong&gt;hb3&lt;/strong&gt;) and &lt;strong&gt;ha3-(sname)&lt;/strong&gt;, &lt;strong&gt;ha4-(scountry)&lt;/strong&gt; are attribute sets with value members that describe the &lt;strong&gt;Suppliers&lt;/strong&gt;. Instances from these &lt;strong&gt;HyperBond&lt;/strong&gt; sets may share common values or associated with the same &lt;strong&gt;HyperBond&lt;/strong&gt;. For example we have two suppliers, &lt;strong&gt;Supplier:1082&lt;/strong&gt; and &lt;strong&gt;Supplier:1081&lt;/strong&gt; that are located in &lt;strong&gt;USA&lt;/strong&gt; or &lt;strong&gt;Catalog:11&lt;/strong&gt; and &lt;strong&gt;Catalog:16&lt;/strong&gt; entries that are associated with &lt;strong&gt;Part:998&lt;/strong&gt; and they both have the same quantity, i.e. &lt;strong&gt;200&lt;/strong&gt; pieces of this part.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;ha1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fire Hydrant Cap&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Red&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`,&amp;#34;lb&amp;#34;};
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ha2={11.7,7.95,12.5,48.6};
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ha3={&amp;#34;Acme Widget Suppliers&amp;#34;,&amp;#34;Big Red Tool and Die&amp;#34;,&amp;#34;Perfunctory Parts&amp;#34;,&amp;#34;Alien Aircaft Inc.&amp;#34;};
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ha4={&amp;#34;USA&amp;#34;,&amp;#34;USA&amp;#34;,&amp;#34;SPAIN&amp;#34;,&amp;#34;UK&amp;#34;};
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ha5={&amp;#34;400&amp;#34;,&amp;#34;200&amp;#34;,&amp;#34;200&amp;#34;};
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;hb1={&amp;#34;Part:998&amp;#34;,&amp;#34;schema:item&amp;#34;};
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;hb2={&amp;#34;Catalog:7&amp;#34;,&amp;#34;Catalog:11&amp;#34;,&amp;#34;Catalog:12&amp;#34;,&amp;#34;Catalog:16&amp;#34;};
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;hb3={&amp;#34;Supplier:1081&amp;#34;,&amp;#34;Supplier:1082&amp;#34;,&amp;#34;Supplier:1083&amp;#34;,&amp;#34;Supplier:1084&amp;#34;};
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;vstyle=Join[Thread[Join[ha1,ha2, ha3,ha4,ha5]-&amp;gt;Red],Thread[Join[hb1,hb2,hb3]-&amp;gt;Green]];
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;data=Join[
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  {&amp;#34;Part:998&amp;#34;-&amp;gt;&amp;#34;schema:item&amp;#34;},
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  Thread[&amp;#34;Part:998&amp;#34;-&amp;gt;ha1],Thread[hb2-&amp;gt;ha2],
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  Thread[hb2-&amp;gt;hb3],Thread[hb3-&amp;gt;ha3],
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  Thread[hb3-&amp;gt;ha4],Thread[hb2-&amp;gt;&amp;#34;Part:998&amp;#34;],  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  Thread[{&amp;#34;Catalog:7&amp;#34;,&amp;#34;Catalog:11&amp;#34;,&amp;#34;Catalog:16&amp;#34;}-&amp;gt;ha5]];
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Graph[
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  data,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  VertexLabels-&amp;gt;&amp;#34;Name&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  VertexSize-&amp;gt;{{&amp;#34;Nearest&amp;#34;,0.15}},
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  VertexStyle-&amp;gt;vstyle,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  EdgeShapeFunction-&amp;gt;GraphElementData[{&amp;#34;CarvedArrow&amp;#34;,&amp;#34;ArrowSize&amp;#34;-&amp;gt;.02}],
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  EdgeStyle-&amp;gt;Thick,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  GraphLayout-&amp;gt;&amp;#34;SpringEmbedding&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  ImageSize-&amp;gt;{400.,Automatic}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can rewrite now the following four associations :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/* 4 Associations of catalog part no 998 with supplier Ids and catalog prices */&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;CatalogID&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;catpid&lt;/span&gt;,  &lt;span style=&#34;color:#a6e22e&#34;&gt;catsid&lt;/span&gt;,       &lt;span style=&#34;color:#a6e22e&#34;&gt;catqnt&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;catcost&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;Catalog07&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;Part998&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Supplier1081&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt;,    &lt;span style=&#34;color:#ae81ff&#34;&gt;11.70&lt;/span&gt;  )
&lt;span style=&#34;color:#a6e22e&#34;&gt;Catalog11&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;Part998&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Supplier1082&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;,     &lt;span style=&#34;color:#ae81ff&#34;&gt;7.95&lt;/span&gt;  )
&lt;span style=&#34;color:#a6e22e&#34;&gt;Catalog12&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;Part998&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Supplier1083&lt;/span&gt;,         &lt;span style=&#34;color:#ae81ff&#34;&gt;12.50&lt;/span&gt;  )
&lt;span style=&#34;color:#a6e22e&#34;&gt;Catalog16&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;Part998&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Supplier1084&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;,    &lt;span style=&#34;color:#ae81ff&#34;&gt;48.60&lt;/span&gt;  )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Associations in this form greatly resemble tuples of &lt;strong&gt;Catalog&lt;/strong&gt; relation, see &lt;a href=&#34;https://healis.eu/SupplierPartCatalogue/tsv/Catalog.tsv&#34;&gt;TSV&lt;/a&gt; format, where the &lt;strong&gt;heading&lt;/strong&gt; of this relation is usually stored in a &lt;a href=&#34;https://en.wikipedia.org/wiki/Data_dictionary&#34;&gt;data dictionary&lt;/a&gt; and &lt;strong&gt;Null&lt;/strong&gt; marker indicates that a data value is absent from the tuple. On the contrary in case of &lt;strong&gt;RDF literal&lt;/strong&gt; triples the predicate position signifies the object part of the triple and in &lt;strong&gt;RDF links&lt;/strong&gt; Instances/Type of resources at subject and object positions are also signified by predicates such as (&lt;code&gt;rdf:type&lt;/code&gt;). But in &lt;strong&gt;R3DM associations&lt;/strong&gt; there is not any label on the edge that connects &lt;strong&gt;HyperAtoms&lt;/strong&gt; or &lt;strong&gt;HyperBonds&lt;/strong&gt;. Therefore the denotation of resources and literals, i.e. what they stand for, cannot be seen on this graph, &lt;a href=&#34;#fig14&#34;&gt;&lt;strong&gt;Fig. 14&lt;/strong&gt;&lt;/a&gt;. For example in &lt;code&gt;Catalog12&lt;/code&gt; association instance we have to know that the literal meaning of the value &lt;code&gt;12.5&lt;/code&gt; is the &lt;strong&gt;Catalog Cost&lt;/strong&gt;. Generally speaking, this is the &lt;strong&gt;granularity of data&lt;/strong&gt; problem. How we represent a piece of information at atomic level and how we construct higher structures. &lt;strong&gt;R3DM/S3DM unifies three perspectives, semantics at the conceptual layer, representation at the symbol layer and encoding at the physical layer&lt;/strong&gt;, in such a way that they are separable. R3DM/S3DM conceptual framework is based on the natural process of semiosis where &lt;strong&gt;the signified, i.e. concept, entity, attribute and the signifier, i.e. value, &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000002/#signified-sign-signifier-alternative-paradigm&#34;&gt;are referenced through symbols&lt;/a&gt;, i.e. signs, at discrete layers&lt;/strong&gt;. The main difference with RDF data model is that these references are not in the form of &lt;a href=&#34;https://en.wikipedia.org/wiki/Uniform_resource_identifier&#34;&gt;URIs&lt;/a&gt; but they resemble &lt;a href=&#34;https://en.wikipedia.org/wiki/IP_address&#34;&gt;IPs&lt;/a&gt;. For example the value &lt;code&gt;12.50&lt;/code&gt; can be referenced by a 4D vector of the form &lt;code&gt;{2, 8, 262, 1}&lt;/code&gt; where the first dimension is the database, the second dimension is the table (Entity), the third dimension is the field (Attribute) and the last dimension is a member of an attribute set.&lt;/p&gt;
&lt;h2 id=&#34;discussion&#34;&gt;Discussion&lt;/h2&gt;
&lt;p&gt;Although this is not the space or the time to elaborate more on &lt;strong&gt;R3DM/S3DM associations&lt;/strong&gt; it is important to mention that it is possible to escape from the predicate logic (&lt;code&gt;owl#sameAs&lt;/code&gt;) on how to identify that two URI aliases refer to the same entity. Moreover the alternative paradigm of &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; offers a more attractive and efficient approach on data integration and heterogeneous data representation than bridging between RDF vocabularies with mapping predicates such as &lt;code&gt;owl:equivalentClass&lt;/code&gt;  and &lt;code&gt;owl:equivalentProperty&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We foresee that the Internet of things will use a protocol with numerical reference vectors for data communication in a similar fashion to IP addresses that are used for connecting devices in a computer network. Hopefully one day it will become clear that the predicate part of RDF data model is causing more harm than good in the semantic interpretation and information representation.&lt;/p&gt;
&lt;p&gt;Last but not least, SPARQL query mechanism is heavily dependent on namespace vocabulary terms, especially predicate terms that connect resources and literals. To answer such queries, care must be taken to devise a suitable mechanism of indexes (e.g. spo, sop, pso, pos, osp, ops) to support RDF triple structure. Besides indexing, RDF edges by default are not bidirectional, therefore 360 degrees view and nodes navigation is problematic. In contrast with RDF, in R3DM/S3DM everything is bidirectionally linked and referenced with 4D numerical vectors and these are naturally used for indexing purposes. Instead of writing queries there is a functional way, i.e. you learn a single command with a standard number of optional or mandatory parameters, to filter the data space and retrieve any piece of information.&lt;/p&gt;
&lt;p&gt;Interactive and associative data exploration is the key, unique feature of &lt;a href=&#34;http://www.qlik.com/us/products/qlikview&#34;&gt;Qlikview&lt;/a&gt;/&lt;a href=&#34;http://www.qlik.com/us/products/qlik-sense&#34;&gt;Qliksense&lt;/a&gt;, one of the best data visualization and business intelligence software in the market today. Behind the scenes, columnar, binary indexing capability is the foundation for &lt;strong&gt;QIX Associative Data Indexing Engine&lt;/strong&gt;. In the next part of our series we will apply Qlik associative technology on our toy dataset and we will demonstrate how we build the domain model and how we filter our data.&lt;/p&gt;
&lt;h2 id=&#34;acknowledgements&#34;&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;We have serialized our &lt;a href=&#34;https://healis.eu/SupplierPartCatalogue&#34;&gt;Supplier-Part-Catalogue example&lt;/a&gt; in &lt;a href=&#34;https://healis.eu/SupplierPartCatalogue/ttl/&#34;&gt;Turtle&lt;/a&gt; and &lt;a href=&#34;https://healis.eu/SupplierPartCatalogue/n3/&#34;&gt;N-Triples&lt;/a&gt; syntax. Then we used &lt;a href=&#34;https://en.wikipedia.org/wiki/AllegroGraph&#34;&gt;AllegroGraph&lt;/a&gt; and &lt;a href=&#34;http://graphdb.ontotext.com/documentation/free/about-graphdb.html&#34;&gt;GraphDB&lt;/a&gt; triple-store to create a repository and run queries on their SPARQL interfaces. All graph-based images of this article were displayed and captured on &lt;a href=&#34;http://franz.com/agraph/gruff/&#34;&gt;Gruff&lt;/a&gt;, an RDF visual browser that displays a variety of the relationships in &lt;a href=&#34;https://en.wikipedia.org/wiki/AllegroGraph&#34;&gt;AllegroGraph&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/associative-data-modeling-demystified-part-4-hatzis-phd&#34;&gt;LinkedIn Published Posts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/49970/49970-6217358696947814400&#34;&gt;LinkedIn Semantic Web Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/2552968/2552968-6217357737450438660&#34;&gt;LinkedIn Graph Databases Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/108904/108904-6217358696935231488&#34;&gt;LinkedIn Data Warehouse &amp;amp; Business Intelligence Architects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/6514034/6514034-6217358562243543041&#34;&gt;LinkedIn Computational Semiotics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/38506/38506-6217358477753483266&#34;&gt;LinkedIn Semantic Technologies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/4737538/4737538-6217357595209015300&#34;&gt;LinkedIn Data Visualization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/3750024/3750024-6217358686722097153&#34;&gt;LinkedIn Database &amp;amp; Data Store Professionals ★ NoSQL ★ NewSQL ★ Relational&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/73235/73235-6217357914919837698&#34;&gt;LinkedIn Database Developers and Architects Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/60636/60636-6217357769868222467&#34;&gt;LinkedIn Linked Data Web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/62614/62614-6217357140789727236&#34;&gt;LinkedIn Mathematica Users&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/45183/45183-6217358477761875970&#34;&gt;LinkedIn Database Experts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/associative-data-modeling-demystified-part-iv&#34;&gt;DZone Article&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Association in Property Graph Data Model</title>
      <link>https://healis.eu/en/post/20160913/</link>
      <pubDate>Tue, 13 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20160913/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#wolfram-language-entitypropertyassociation&#34;&gt;Wolfram Language EntityPropertyAssociation&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#r3dm-hypergraph-terminology&#34;&gt;R3DM Hypergraph Terminology&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#property-graph&#34;&gt;Property Graph&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#property-graph-nodes&#34;&gt;Property Graph Nodes&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#property-graph-with-directed-edges&#34;&gt;Property Graph with Directed Edges&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#property-graph-with-bidirectional-links&#34;&gt;Property Graph with Bidirectional Links&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#property-graph-and-object-oriented-database&#34;&gt;Property Graph and Object-Oriented database&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#association-vs-edge&#34;&gt;Association vs Edge&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#join-vs-edge&#34;&gt;Join vs Edge&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#summary&#34;&gt;Summary&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#cross-references&#34;&gt;Cross-References&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;

&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In previous posts of this series, (&lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000100/&#34;&gt;Part-1&lt;/a&gt;, &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000101/&#34;&gt;Part-2&lt;/a&gt;), we have seen several representations of the association construct. In this article we continue our investigation with the Graph Data model. Despite its mere representation as nodes and edges, the &lt;a href=&#34;https://en.wikipedia.org/wiki/Graph_(abstract_data_type)&#34;&gt;structure of this model&lt;/a&gt; and its implementation details varies a lot in &lt;a href=&#34;https://en.wikipedia.org/wiki/Graph_database&#34;&gt;Graph Databases&lt;/a&gt;. There is still a strong controversy and perhaps confusion on &lt;a href=&#34;https://www.arangodb.com/2016/04/index-free-adjacency-hybrid-indexes-graph-databases/&#34;&gt;what makes a database, a Graph database&lt;/a&gt; and many are not fully aware that there exist other types of Graph Databases apart from Property Graph Database. Things get more complicated because the engine of a &lt;a href=&#34;http://tinkerpop.apache.org/docs/current/reference/#intro&#34;&gt;Property Graph Database&lt;/a&gt; is not the same kind of engine with either an &lt;a href=&#34;https://en.wikipedia.org/wiki/Triplestore&#34;&gt;RDF store&lt;/a&gt; or engines based on &lt;a href=&#34;http://www.isotopicmaps.org/sam/sam-model/&#34;&gt;Topic Maps&lt;/a&gt; or &lt;a href=&#34;https://en.wikipedia.org/wiki/Relational_model&#34;&gt;Relational&lt;/a&gt; data model. Property Graph data model is neither close to &lt;a href=&#34;https://en.wikipedia.org/wiki/Object_model&#34;&gt;Object Model&lt;/a&gt;, a data model that is found in &lt;a href=&#34;https://en.wikipedia.org/wiki/Object_database&#34;&gt;Object-oriented database management systems&lt;/a&gt;. There are &lt;strong&gt;significant differences of the Property Graph data model at both the logical and the physical level with all other models and it has not been established yet as a standard&lt;/strong&gt;. Which brings us to the question whether there is indeed a necessity for another data model standard based on the association construct to fill the space of Property Graph databases and bridge also the gap with other Semantic Web technologies, especially &lt;a href=&#34;http://json-ld.org/&#34;&gt;JSON for Linking Data&lt;/a&gt;. This question will not be answered in this post, we will make an attempt instead to give a formal definition of the association construct using the mighty Wolfram Language and compare it with RDF and Property Graph components and this will prepare also the ground for introducing our R3DM data model later on.&lt;/p&gt;
&lt;h2 id=&#34;wolfram-language-entitypropertyassociation&#34;&gt;Wolfram Language EntityPropertyAssociation&lt;/h2&gt;
&lt;p&gt;Real-world entities are another kind of symbolic expression that exists in latest versions of the Wolfram Language. You can get the values of specific properties for an &lt;a href=&#34;http://reference.wolfram.com/language/ref/Entity.html&#34;&gt;&lt;code&gt;Entity&lt;/code&gt;&lt;/a&gt;, if it exists in &lt;a href=&#34;https://www.wolfram.com/knowledgebase/&#34;&gt;&lt;code&gt;Wolfram Knowledgebase&lt;/code&gt;&lt;/a&gt;, world&amp;rsquo;s largest and broadest repository of computable information according to Wolfram. But you do not write a query to fetch the data, you use a functional approach instead. The network delay for a first time search on specific values of &lt;a href=&#34;http://reference.wolfram.com/language/ref/EntityProperties.html&#34;&gt;EntityProperties&lt;/a&gt; is minimal. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Socrates&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Entity&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Person&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Socrates::dnz7w&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;EntityValue&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;
  {&lt;span style=&#34;color:#66d9ef&#34;&gt;Socrates&lt;/span&gt;},
  {gender,date of birth,place of birth,parents,children},
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;EntityPropertyAssociation&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Notice the third argument of the &lt;a href=&#34;http://reference.wolfram.com/language/ref/EntityValue.html&#34;&gt;EntityValue&lt;/a&gt; function here, &lt;code&gt;EntityPropertyAssociation&lt;/code&gt; will format the output, &lt;a href=&#34;#fig1&#34;&gt;&lt;strong&gt;Fig. 1&lt;/strong&gt;&lt;/a&gt;, of this calculation as an association in which the specified entity is the key, and value is another nested association of properties and &lt;code&gt;EntityProperties&lt;/code&gt; values.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;socrates_EntityPropertyAssociation-817x90.jpg&#34; data-caption=&#34;Wolfram Language EntityPropertyAssociation&#34;&gt;

&lt;img src=&#34;socrates_EntityPropertyAssociation-817x90.jpg&#34; alt=&#34;Wolfram Language EntityPropertyAssociation&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Wolfram Language EntityPropertyAssociation
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;A boxed word is the symbolic Wolfram Language &lt;a href=&#34;http://reference.wolfram.com/language/guide/KnowledgeRepresentationAndAccess.html&#34;&gt;&lt;code&gt;Knowledge Representation&lt;/code&gt;&lt;/a&gt; of a named entity of any type, (e.g. Person, City, Property), that is used as a handler to access records of information about that &lt;code&gt;Entity&lt;/code&gt; that are stored in &lt;code&gt;Wolfram Knowledgebase&lt;/code&gt;. The reader should realize how important this symbolic representation is in data modeling. Although the developer/user may compute a solution with a boxed &lt;code&gt;CommonName&lt;/code&gt;, e.g. Socrates, behind the scenes a canonical name, e.g. &lt;strong&gt;Socrates::dnz7w&lt;/strong&gt;, is used as the unique identifier for the &lt;code&gt;Entity&lt;/code&gt; to disambiguate and to interpret user&amp;rsquo;s instructions.&lt;/p&gt;
&lt;p&gt;This &lt;code&gt;EntityPropertyAssociation&lt;/code&gt; representation extends Wolfram Language fundamental &lt;a href=&#34;http://reference.wolfram.com/language/guide/Associations.html&#34;&gt;&lt;code&gt;Association&lt;/code&gt;&lt;/a&gt; construct, and it is in accordance with Topic Map Association serialization that we discussed in the &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000101/#topic-map-serialization&#34;&gt;second part of our series&lt;/a&gt;. The following figure, &lt;a href=&#34;#fig2&#34;&gt;&lt;strong&gt;Fig. 2&lt;/strong&gt;&lt;/a&gt;, is from a previous example that is included in &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000100/#wolfram-language---association&#34;&gt;Part 1&lt;/a&gt; of our series and depicts three associations of this kind in a &lt;a href=&#34;http://reference.wolfram.com/language/ref/Dataset.html&#34;&gt;Wolfram Dataset&lt;/a&gt;. Each association represents an Entity type instance (&lt;strong&gt;$PartI&lt;/strong&gt;, &lt;strong&gt;$SupplierJ&lt;/strong&gt; and &lt;strong&gt;$CatalogK&lt;/strong&gt;) and for each instance the entity type (&lt;strong&gt;$Item&lt;/strong&gt;, &lt;strong&gt;$Organization&lt;/strong&gt;, &lt;strong&gt;$Inventory&lt;/strong&gt;) is embedded as a key value pair together with other &lt;code&gt;EntityProperties&lt;/code&gt; key-value pairs.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;three_associations.jpg&#34; data-caption=&#34;Three Associations in a Named-Row Dataset&#34;&gt;

&lt;img src=&#34;three_associations.jpg&#34; alt=&#34;Three Associations in a Named-Row Dataset&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Three Associations in a Named-Row Dataset
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Contrast this with mere tuples from the three tables of our relational database, &lt;strong&gt;Supplier&lt;/strong&gt;, &lt;strong&gt;Part&lt;/strong&gt;, &lt;strong&gt;Catalog&lt;/strong&gt;. Semantically speaking, the three tuples cannot stand alone without the header of the relation body and their relation type. In addition to that observation, each value of either an &lt;code&gt;EntityPropertyAssociation&lt;/code&gt; or member of a  tuple, is always dependent on their sibling nodes. &lt;strong&gt;Therefore values cannot be handled in isolation&lt;/strong&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;{ {&lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fire Hydrant Cap&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Red&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gr&amp;#34;&lt;/span&gt;},
  {&lt;span style=&#34;color:#ae81ff&#34;&gt;1081&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Acme Widget Suppliers&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1 Grub St., Potemkin Village, IL 61801&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ILLINOIS&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;USA&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;},
  {&lt;span style=&#34;color:#ae81ff&#34;&gt;1081&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2014-9-10&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;} }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;r3dm-hypergraph-terminology&#34;&gt;R3DM Hypergraph Terminology&lt;/h3&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;partNo998-EntityPropertyAssociation-420x300.jpg&#34; data-caption=&#34;A Hyperbond hyperlinked to HyperAtoms&#34;&gt;

&lt;img src=&#34;partNo998-EntityPropertyAssociation-420x300.jpg&#34; alt=&#34;A Hyperbond hyperlinked to HyperAtoms&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    A Hyperbond hyperlinked to HyperAtoms
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;The figure on the left, &lt;a href=&#34;#fig3&#34;&gt;&lt;strong&gt;Fig. 3&lt;/strong&gt;&lt;/a&gt;, illustrates a single &lt;code&gt;EntityPropertyAssociation&lt;/code&gt; of &lt;strong&gt;Part no. 998&lt;/strong&gt; with its properties and values. According to Hypergraph theory, red nodes are hypernodes and the green node is the hyperedge where here connects a set of hypernodes. In R3DM we use the following definitions and terminology.&lt;/p&gt;
&lt;p&gt;An &lt;code&gt;EntityPropertyAssociation&lt;/code&gt; can be defined as an &lt;code&gt;Association&lt;/code&gt; of entity&amp;rsquo;s attributes (properties) with values. Each attribute-value pair is represented on the hypergraph by a &lt;code&gt;hyperatom&lt;/code&gt;. Therefore the general form of a &lt;code&gt;hyperatom&lt;/code&gt; is a key-value pair. Each &lt;code&gt;hyperatom&lt;/code&gt; is &lt;strong&gt;always connected bidirectionally&lt;/strong&gt; to a &lt;code&gt;hyperbond&lt;/code&gt; with a &lt;code&gt;hyperlink&lt;/code&gt;. Normally &lt;code&gt;hyperlinks&lt;/code&gt; do not have labels or direction. A &lt;code&gt;hyperbond&lt;/code&gt; represents a complex structure, such as a tuple of a relation or instance of a class. The role of a &lt;code&gt;hyperbond&lt;/code&gt; is to connect a set of &lt;code&gt;hyperatoms&lt;/code&gt;. A &lt;code&gt;hyperbond&lt;/code&gt; to &lt;code&gt;hyperbond&lt;/code&gt; connection is also possible.&lt;/p&gt;
&lt;p&gt;Two important observations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You can easily spot similarities between R3DM hypergraph paradigm and JSON documents. A JSON object can be represented with a &lt;code&gt;hyperbond&lt;/code&gt; and a field-value pair (property) can be represented with a &lt;code&gt;hyperatom&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Entities, attributes (variables), and values each has its own type system in R3DM. These type systems will be analyzed methodically in another post but you can get a taste of what they look like &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000101/#r3dm-type-system-in-wandora&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;property-graph&#34;&gt;Property Graph&lt;/h2&gt;
&lt;p&gt;We defined &lt;code&gt;EntityPropertyAssociation&lt;/code&gt; and we got familiar with the terminology of R3DM hypergraph. We can now proceed to examine the analogy with the Property Graph data model.&lt;/p&gt;
&lt;p&gt;Recall that a property graph has vertices and edges where :&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;each vertex has&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a set of outgoing edges.&lt;/li&gt;
&lt;li&gt;a set of incoming edges.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;each edge has&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;an outgoing tail vertex.&lt;/li&gt;
&lt;li&gt;an incoming head vertex.&lt;/li&gt;
&lt;li&gt;a label that denotes the type of relationship between its two vertices.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;vertex and edge have&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a unique identifier&lt;/li&gt;
&lt;li&gt;a collection of properties defined by a map from key to value.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We built a property graph data model for our &lt;strong&gt;Supplier&lt;/strong&gt;-&lt;strong&gt;Part&lt;/strong&gt;-&lt;strong&gt;Catalog&lt;/strong&gt; example in &lt;a href=&#34;http://orientdb.com/&#34;&gt;OrientDB&lt;/a&gt;, a very popular, open-source, and free multi-model database.&lt;/p&gt;
&lt;h3 id=&#34;property-graph-nodes&#34;&gt;Property Graph Nodes&lt;/h3&gt;
&lt;p&gt;OrientDB allows both schema-full and schema-less creation of classes. Each class represents either a type of nodes or a type of edges on the graph. In the manner of a relational schema, we can add properties of a class with OrientDB SQL commands.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CLASS&lt;/span&gt; Part EXTENDS V;
&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; PROPERTY Part.pid INTEGER;
&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; PROPERTY Part.pname STRING;
&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; PROPERTY Part.pcolor STRING;
&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; PROPERTY Part.pweight DOUBLE;
&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; PROPERTY Part.punit STRING;
&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CLASS&lt;/span&gt; Part SHORTNAME P;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then we can populate the class with records, e.g. create a vertex (an instance of type &lt;strong&gt;Part&lt;/strong&gt;) that represents &lt;strong&gt;Part no. 998&lt;/strong&gt; (Red Fire Hydrant Cap)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; VERTEX Part CONTENT
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pid&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pname&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fire Hydrant Cap&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pcolor&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Red&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pweight&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;punit&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lb&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;property-graph-with-directed-edges&#34;&gt;Property Graph with Directed Edges&lt;/h3&gt;
&lt;p&gt;Now comes the tricky part, we want to associate &lt;strong&gt;Suppliers&lt;/strong&gt; with &lt;strong&gt;Parts&lt;/strong&gt;. Notice that in Property Graph data model there is not an &lt;a href=&#34;https://en.wikipedia.org/wiki/Associative_entity&#34;&gt;associative entity&lt;/a&gt; to resolve a many-to-many relationship. We only have the concept of a directed edge that links one vertex with another vertex. Let us define the type of edge first.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CLASS&lt;/span&gt; inCatalog EXTENDS E;
&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; PROPERTY inCatalog.catsid INTEGER;
&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; PROPERTY inCatalog.catpid INTEGER;
&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; PROPERTY inCatalog.catprice DOUBLE;
&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; PROPERTY inCatalog.catqnt INTEGER;
&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; PROPERTY inCatalog.catdate DATETIME;
&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; PROPERTY inCatalog.catchk BOOLEAN;
&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CLASS&lt;/span&gt; inCatalog SHORTNAME &lt;span style=&#34;color:#66d9ef&#34;&gt;C&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In this OrientDB DDL &lt;code&gt;inCatalog.catsid&lt;/code&gt; and &lt;code&gt;inCatalog.catpid&lt;/code&gt; are superfluous, we added them for comparison purposes with the relational model. Records of edge type &lt;code&gt;inCatalog&lt;/code&gt; contain record identifiers for the outgoing tail vertex and the incoming head vertex &lt;a href=&#34;#fig11&#34;&gt;&lt;strong&gt;Fig. 11&lt;/strong&gt;&lt;/a&gt;. Secondly, it is not specified in the schema that this type of edge, &lt;code&gt;inCatalog&lt;/code&gt;, connects &lt;strong&gt;Suppliers&lt;/strong&gt; with &lt;strong&gt;Parts&lt;/strong&gt;, neither is specified any direction on how to link these two types. These are defined during the creation of an edge.&lt;/p&gt;
&lt;p&gt;One way of creating &lt;code&gt;inCatalog&lt;/code&gt; instances is to read each &lt;strong&gt;Catalog&lt;/strong&gt; record from the table, get OrientDB record identifiers (&lt;a href=&#34;http://orientdb.com/docs/2.2/Tutorial-Record-ID.html&#34;&gt;RIDs&lt;/a&gt;) for the specific &lt;strong&gt;Supplier&lt;/strong&gt; and &lt;strong&gt;Part&lt;/strong&gt; and then execute OrientDB &lt;code&gt;CREATE EDGE&lt;/code&gt; SQL command to create a bidirectional edge. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; EDGE inCatalog &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TO&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; CONTENT
 &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;catsid&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;1081&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;catpid&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;catprice&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;catqnt&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;catdate&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2014-09-10&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;catchk&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Newcomers can easily get confused with Property Graph edges. This is because although the outgoing tail and the incoming head of the edge implies a directed graph, in practice &lt;strong&gt;we can traverse the graph bidirectionally&lt;/strong&gt;, i.e. start from any node to reach another node independent of the direction of the edge.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;SPCPGraph-4suppliers-3parts-800x400.jpg&#34; data-caption=&#34;A Many to Many Relationship on a Property Graph&#34;&gt;

&lt;img src=&#34;SPCPGraph-4suppliers-3parts-800x400.jpg&#34; alt=&#34;A Many to Many Relationship on a Property Graph&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    A Many to Many Relationship on a Property Graph
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;In this screen capture, &lt;a href=&#34;#fig4&#34;&gt;&lt;strong&gt;Fig. 4&lt;/strong&gt;&lt;/a&gt;, of OrientDB graph canvas one &lt;strong&gt;Supplier&lt;/strong&gt; is associated with three &lt;strong&gt;Parts&lt;/strong&gt; and one &lt;strong&gt;Part&lt;/strong&gt; is associated with three &lt;strong&gt;Suppliers&lt;/strong&gt;. We observe that &lt;code&gt;inCatalog&lt;/code&gt; edges are always from a &lt;strong&gt;Supplier&lt;/strong&gt; to a &lt;strong&gt;Part&lt;/strong&gt;. This is because we created edges this way, we could have created them equally in the opposite direction. Semantically speaking, both &lt;strong&gt;Supplier&lt;/strong&gt; and &lt;strong&gt;Part&lt;/strong&gt; participate in a &lt;strong&gt;Catalog&lt;/strong&gt; association and their binary relation is not directed. In such a case Property Graph edges look like &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000101/#topic-map-serialization&#34;&gt;Topic Map binary associations&lt;/a&gt;. The label of the edge is the type and the roles of its members are played by the outgoing head (&lt;code&gt;out&lt;/code&gt;) and incoming tail (&lt;code&gt;in&lt;/code&gt;), &lt;a href=&#34;#fig5&#34;&gt;&lt;strong&gt;Fig. 5&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;SPCPGraph-bidirectional-edge-814x162.jpg&#34; data-caption=&#34;Directed Bidirectional Edge&#34;&gt;

&lt;img src=&#34;SPCPGraph-bidirectional-edge-814x162.jpg&#34; alt=&#34;Directed Bidirectional Edge&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Directed Bidirectional Edge
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;property-graph-with-bidirectional-links&#34;&gt;Property Graph with Bidirectional Links&lt;/h3&gt;
&lt;p&gt;Hence the bidirectional nature of the edge can be seen in two ways.&lt;/p&gt;
&lt;p&gt;Firstly the &lt;code&gt;out&lt;/code&gt; and &lt;code&gt;in&lt;/code&gt; links can be considered as one-to-one relationship of an edge with vertices. One &lt;strong&gt;Supplier&lt;/strong&gt;/&lt;strong&gt;Part&lt;/strong&gt; is referenced by Many &lt;strong&gt;Catalog&lt;/strong&gt; items. The fields that are linked are the RID of &lt;strong&gt;Catalog&lt;/strong&gt; with the RID of &lt;strong&gt;Part&lt;/strong&gt; or &lt;strong&gt;Supplier&lt;/strong&gt;, &lt;a href=&#34;#fig11&#34;&gt;&lt;strong&gt;Fig. 11&lt;/strong&gt;&lt;/a&gt;. This type of direct linking is similar to the many-to-many relationship with a join-table, &lt;a href=&#34;#fig6&#34;&gt;&lt;strong&gt;Fig. 6&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;one-to-many.jpg&#34; data-caption=&#34;Many-to-Many relationship with direct links on Associative Entity (edge)&#34;&gt;

&lt;img src=&#34;one-to-many.jpg&#34; alt=&#34;Many-to-Many relationship with direct links on Associative Entity (edge)&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Many-to-Many relationship with direct links on Associative Entity (edge)
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Secondly, on the &lt;code&gt;one&lt;/code&gt; side of the relationship, i.e. on the vertex we have the link set of outgoing/incoming edges, &lt;a href=&#34;#fig8&#34;&gt;&lt;strong&gt;Fig. 8&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;#fig9&#34;&gt;&lt;strong&gt;Fig. 9&lt;/strong&gt;&lt;/a&gt;. For example, many &lt;strong&gt;Catalog&lt;/strong&gt; items (&lt;a href=&#34;http://orientdb.com/docs/2.2/Types.html&#34;&gt;LinkSet&lt;/a&gt;) have One &lt;strong&gt;Supplier&lt;/strong&gt;/&lt;strong&gt;Part&lt;/strong&gt;, &lt;a href=&#34;#fig7&#34;&gt;&lt;strong&gt;Fig. 7&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;many-to-one.jpg&#34; data-caption=&#34;Many-to-Many relationship with sets of direct links&#34;&gt;

&lt;img src=&#34;many-to-one.jpg&#34; alt=&#34;Many-to-Many relationship with sets of direct links&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Many-to-Many relationship with sets of direct links
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;The following query returns a list of both the outgoing edges for &lt;code&gt;Big Red Tool and Die&lt;/code&gt; &lt;strong&gt;Supplier&lt;/strong&gt;, see &lt;a href=&#34;#fig4&#34;&gt;&lt;strong&gt;Fig. 4&lt;/strong&gt;&lt;/a&gt;, and the list of associated &lt;strong&gt;Parts&lt;/strong&gt;, &lt;a href=&#34;#fig8&#34;&gt;&lt;strong&gt;Fig. 8&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;rid &lt;span style=&#34;color:#66d9ef&#34;&gt;As&lt;/span&gt; Supplier,
       out_inCatalog &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Catalog&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;out&lt;/span&gt;() &lt;span style=&#34;color:#66d9ef&#34;&gt;As&lt;/span&gt; Part,
       sid &lt;span style=&#34;color:#66d9ef&#34;&gt;As&lt;/span&gt; supplierID, &lt;span style=&#34;color:#66d9ef&#34;&gt;out&lt;/span&gt;().pid &lt;span style=&#34;color:#66d9ef&#34;&gt;As&lt;/span&gt; partID,
       scountry, scity
&lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;SPCPGraph-Supplier-LinkSet.jpg&#34; data-caption=&#34;Set of Outgoing Edges for Supplier&#34;&gt;

&lt;img src=&#34;SPCPGraph-Supplier-LinkSet.jpg&#34; alt=&#34;Set of Outgoing Edges for Supplier&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Set of Outgoing Edges for Supplier
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;In a similar fashion, we can ask for the list of incoming edges to &lt;strong&gt;Part no. 998&lt;/strong&gt;, see &lt;a href=&#34;#fig4&#34;&gt;&lt;strong&gt;Fig. 4&lt;/strong&gt;&lt;/a&gt;, and the list of &lt;strong&gt;Suppliers&lt;/strong&gt; that provide that &lt;strong&gt;Part&lt;/strong&gt;, &lt;a href=&#34;#fig9&#34;&gt;&lt;strong&gt;Fig. 9&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;rid &lt;span style=&#34;color:#66d9ef&#34;&gt;As&lt;/span&gt; Part,
       in_inCatalog &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Catalog&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt;() &lt;span style=&#34;color:#66d9ef&#34;&gt;As&lt;/span&gt; Supplier,
       pid &lt;span style=&#34;color:#66d9ef&#34;&gt;As&lt;/span&gt; partID, &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt;().sid &lt;span style=&#34;color:#66d9ef&#34;&gt;As&lt;/span&gt; supplierID,
       pname, pcolor
&lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;SPCPGraph-Part-LinkSet.jpg&#34; data-caption=&#34;Set of Incoming Edges for Part&#34;&gt;

&lt;img src=&#34;SPCPGraph-Part-LinkSet.jpg&#34; alt=&#34;Set of Incoming Edges for Part&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Set of Incoming Edges for Part
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;The set of outgoing edges from the &lt;strong&gt;Supplier&lt;/strong&gt; and the set of incoming edges to &lt;strong&gt;Part no. 998&lt;/strong&gt; have a common edge, &lt;code&gt;17:11&lt;/code&gt;, that connects this &lt;strong&gt;Supplier&lt;/strong&gt; with this &lt;strong&gt;Part&lt;/strong&gt;, see &lt;a href=&#34;#fig4&#34;&gt;&lt;strong&gt;Fig. 4&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;property-graph-and-object-oriented-database&#34;&gt;Property Graph and Object-Oriented database&lt;/h3&gt;
&lt;p&gt;We could have implemented bidirectional edges on top of OrientDB &lt;a href=&#34;http://orientdb.com/docs/2.2/Tutorial-Document-and-graph-model.html&#34;&gt;Document&lt;/a&gt; data model using Link, Link list, Link set data structures and the &lt;a href=&#34;http://orientdb.com/docs/2.2/SQL-Create-Link.html&#34;&gt;&lt;code&gt;CREATE LINK&lt;/code&gt;&lt;/a&gt; SQL command. If you take also into account its class &lt;a href=&#34;http://orientdb.com/docs/2.2/Inheritance.html&#34;&gt;inheritance&lt;/a&gt;, &lt;a href=&#34;http://orientdb.com/docs/2.2/Graph-Schema.html&#34;&gt;schema-full&lt;/a&gt;, and &lt;a href=&#34;http://orientdb.com/docs/2.2/SQL-Methods.html&#34;&gt;SQL methods&lt;/a&gt; features, that brings us pretty close to the &lt;a href=&#34;https://en.wikipedia.org/wiki/Object_database&#34;&gt;object-oriented database&lt;/a&gt; model. Objects, in turn, may reference one another and therefore form a network graph. A relationship, in particular, is an association between two persistent objects, each of a specific type. In Intersystems Cache, &lt;a href=&#34;http://docs.intersystems.com/latest/csp/docbook/DocBook.UI.Page.cls?KEY=GOBJ_relationships&#34;&gt;relationships&lt;/a&gt; are binary, i.e. defined between two classes and bidirectional, i.e. both sides of a relationship must be defined by creating a pair of complementary relationship properties, one in each class. Two-way reference property in both classes, &lt;a href=&#34;http://docs.intersystems.com/latest/csp/docbook/DocBook.UI.Page.cls?KEY=GOBJ_propcoll&#34;&gt;collection&lt;/a&gt; in &amp;ldquo;one&amp;rdquo; side and simple reference in &amp;ldquo;many&amp;rdquo; side are analogous to the link set of outgoing/incoming edges in a vertex and the &lt;code&gt;out&lt;/code&gt;/&lt;code&gt;in&lt;/code&gt; links in edge of Property Graph data model, &lt;a href=&#34;#fig8&#34;&gt;&lt;strong&gt;Fig. 8&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;#fig9&#34;&gt;&lt;strong&gt;Fig. 9&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;#fig11&#34;&gt;&lt;strong&gt;Fig. 11&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;association-vs-edge&#34;&gt;Association vs Edge&lt;/h2&gt;
&lt;p&gt;If we take these &amp;ldquo;Three Associations in a Named-Row Dataset&amp;rdquo;, &lt;a href=&#34;#fig2&#34;&gt;&lt;strong&gt;Fig. 2&lt;/strong&gt;&lt;/a&gt;, and create a graph with analogy to the Property Graph data model, we can see that &lt;strong&gt;$PartI&lt;/strong&gt; (green node), &lt;strong&gt;$CatalogK&lt;/strong&gt; (red edge), and &lt;strong&gt;$SupplierJ&lt;/strong&gt; (blue node) are &lt;code&gt;hyperbonds&lt;/code&gt;, i.e. they are &lt;code&gt;EntityProperty&lt;/code&gt; associations and they are connected with &lt;code&gt;hyperlinks&lt;/code&gt; i.e. undirected bidirectional links, [&lt;strong&gt;Fig. 10&lt;/strong&gt;].&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;binary-association-630x120.jpg&#34; data-caption=&#34;Three Hyperbonds connected with Hyperlinks&#34;&gt;

&lt;img src=&#34;binary-association-630x120.jpg&#34; alt=&#34;Three Hyperbonds connected with Hyperlinks&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Three Hyperbonds connected with Hyperlinks
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;There are three main advantages using R3DM hypergraph instead of a Property Graph:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;There is a uniform treatment of records for both entities (nodes) and associative entities (edges). In R3DM these are &lt;strong&gt;symbolically represented&lt;/strong&gt; by &lt;code&gt;hyperbonds&lt;/code&gt;. Hyperlinking &lt;code&gt;hyperatoms&lt;/code&gt; or &lt;code&gt;hyperbonds&lt;/code&gt; is not the same as connecting property nodes with property edges.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Entities, attributes and values are completely separable. There is not an Entity-Attribute neither an Entity-Attribute-Value &amp;lsquo;Silo&amp;rsquo; structure. This will become clear at a later post on the associative characteristics of R3DM. Here it is enough to say that the collection of properties defined by a map from key to value are enclosed in the structure of property graph node/edge. On the contrary in data models such as RDF, Topic Map and our R3DM hypergraph each key-value pair (&lt;code&gt;hyperatom&lt;/code&gt;) can be a single instance and the same value can be linked to more than one classes (&lt;code&gt;hyperbonds&lt;/code&gt;) or instances of the same class, see the discussion &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000101/#tuples-to-associations&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Under the hood, in a Property Graph each regular edge between two nodes creates another record. You cannot link one node record directly to another node record, you must always cross the edge record either from its tail or from the head. But with a &lt;code&gt;hyperlink&lt;/code&gt; things are different, you do not need to load any edge record to resolve the other part of the relationship, no edge document is created. Thankfully, OrientDB provides such a data structure, it is the &lt;a href=&#34;http://orientdb.com/docs/2.2/Lightweight-Edges.html&#34;&gt;Lightweight Edge&lt;/a&gt;. We have implemented R3DM in OrientDB using Lightweight Edges and it will be fully described in an upcoming post.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;join-vs-edge&#34;&gt;Join vs Edge&lt;/h2&gt;
&lt;p&gt;Now, examine this relational database sql query &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000101/#introduction&#34;&gt;here&lt;/a&gt; with the following comparable OrientDB Property Graph query:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/* Suppliers of a Red Fire Hydrant Cap sorted by their Catalog price */&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; supRID,
       &lt;span style=&#34;color:#66d9ef&#34;&gt;out&lt;/span&gt;.sname &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; supName,
       &lt;span style=&#34;color:#66d9ef&#34;&gt;out&lt;/span&gt;.scountry &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; supCountry,       
       catprice &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; catPrice,
       catqnt &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; catQuantity,       
       &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; prtRID,
       &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt;.pname &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; prtName,
       &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt;.pcolor &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; prtColor,       
       &lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;rid &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; catRID       
&lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; inCatalog
&lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt;.pid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;order&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; catPrice
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;partNo999-Suppliers-dataset-879x165.jpg&#34; data-caption=&#34;Suppliers of a Red Fire Hydrant Cap&#34;&gt;

&lt;img src=&#34;partNo999-Suppliers-dataset-879x165.jpg&#34; alt=&#34;Suppliers of a Red Fire Hydrant Cap&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Suppliers of a Red Fire Hydrant Cap
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;partNo998-Suppliers-graph-403x261.jpg&#34; data-caption=&#34;Suppliers of a Red Fire Hydrant Cap on OrientDB Graph Canvas&#34;&gt;

&lt;img src=&#34;partNo998-Suppliers-graph-403x261.jpg&#34; alt=&#34;Suppliers of a Red Fire Hydrant Cap on OrientDB Graph Canvas&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Suppliers of a Red Fire Hydrant Cap on OrientDB Graph Canvas
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;This OrientDB SQL query is clearly more compact and with a faster performance, because there are no JOIN operations anymore. We can get back the result set represented with a Wolfram Dataset structure, &lt;a href=&#34;#fig11&#34;&gt;&lt;strong&gt;Fig. 11&lt;/strong&gt;&lt;/a&gt;. Instead of having supplier IDs and part IDs, these are now replaced with OrientDB record IDs (&lt;a href=&#34;http://orientdb.com/docs/2.2/Tutorial-Record-ID.html&#34;&gt;RIDs&lt;/a&gt;). We have also added another column at the end which is the RID of the edge record, i.e. &lt;strong&gt;Catalog&lt;/strong&gt; record.&lt;/p&gt;
&lt;p&gt;Check also this &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000101/#topic-map-serialization&#34;&gt;Topic Map graph representation&lt;/a&gt;. The main difference is that these &lt;strong&gt;Catalog&lt;/strong&gt; relationships and the &lt;strong&gt;Part&lt;/strong&gt; tuple are drawn explicitly on the Topic Map and all values of properties are visible on the same graph. In this Property Graph, &lt;a href=&#34;#fig12&#34;&gt;&lt;strong&gt;Fig. 12&lt;/strong&gt;&lt;/a&gt;, only one of the enclosed properties of any node or edge type is displayed.&lt;/p&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;We can summarize the critical points of our investigation in Property Graph data model:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;We introduced R3DM Hypergraph as the harbinger of R3DM associations. R3DM hypergraph is based on Wolfram &lt;code&gt;EntityPropertyAssociations&lt;/code&gt; and extends Property Graph with &lt;code&gt;hyperbonds&lt;/code&gt; that represent in a uniform way &lt;code&gt;nodes&lt;/code&gt; and &lt;code&gt;edges&lt;/code&gt;; while &lt;code&gt;hyperatoms&lt;/code&gt; are &lt;code&gt;hyperlinked&lt;/code&gt; to &lt;code&gt;hyperbonds&lt;/code&gt; and are analogous to a property-value pair. From this perspective:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;There is not an Entity-Attribute or Entity-Attribute-Value &amp;lsquo;Silo&amp;rsquo; structure.&lt;/li&gt;
&lt;li&gt;Hypelink, i.e. bidirectional edge &lt;strong&gt;without&lt;/strong&gt; a record, can link directly &lt;code&gt;hyperatoms&lt;/code&gt; to &lt;code&gt;hyperbonds&lt;/code&gt; and &lt;code&gt;hyperbond&lt;/code&gt; to &lt;code&gt;hyperbond&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;In all the data models we have described so far in our series, every value is accessible only by knowing its context. Thus far, values are either dependent on a relation variable and attribute in a &lt;strong&gt;Relational model&lt;/strong&gt;, or they come as field-value pairs in the object of a &lt;strong&gt;Document model&lt;/strong&gt; / &lt;strong&gt;Object-Oriented model&lt;/strong&gt;, or you have Topic Type and Topic Roles in Associations of &lt;strong&gt;Topic Map model&lt;/strong&gt;, or they form property-value pairs that are enclosed in the node structure of &lt;strong&gt;Property Graph model&lt;/strong&gt;. Even in the triplets of &lt;strong&gt;RDF model&lt;/strong&gt;, that we will examine in the next article, you have an entity-property-value context.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Generally speaking, in Property Graph data model schema specifications for Node and Edge types are weak and it is not easy to define referential integrity and handling of many-to-many relationships. OrientDB object-oriented features alleviate that problem.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In a Property Graph data model edges are always directed but we can traverse them in both ways, i.e. they link bidirectionally nodes of the graph. In this sense, the label of the edge is comparable to the Topic type of a binary association in Topic Map data model; whereas, the labels &lt;code&gt;out&lt;/code&gt; and &lt;code&gt;in&lt;/code&gt; that signify the outgoing head and incoming tail are the roles of its members.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In object-oriented database model, it is possible to represent Property Graph edge with a two-way reference property in both classes, collection in &amp;ldquo;one&amp;rdquo; side and simple reference in &amp;ldquo;many&amp;rdquo; side.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are no JOIN operations in Property Graph data model. The edge record associates each half of the relationship with direct links.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We will examine separately RDF data model, one of the W3C standards for the Semantic Web. From our perspective, RDF and Property Graph are in conflict for reasons that we will discuss in the next article of our series. It seems the rivalry of these two data models is in succession of an older one between RDF and Topic Map.&lt;/p&gt;
&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/associative-data-modeling-demystified-part-iii&#34;&gt;DZone Article&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/associative-data-modeling-demystified-part-3-hatzis-phd&#34;&gt;LinkedIn Published Posts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/109285/109285-6181790749382713344&#34;&gt;LinkedIn Topic Maps Community Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/2552968/2552968-6181590335416737795&#34;&gt;LinkedIn Graph Databases Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/3750024/3750024-6181588327662133251&#34;&gt;LinkedIn Database &amp;amp; Data Store Professionals Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/1969109&#34;&gt;LinkedIn MUMPS and Cache Development Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/62614/62614-6181585290390441986&#34;&gt;LinkedIn Mathematica Users Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/4344857/4344857-6181586484169052161&#34;&gt;LinkedIn OrientDB Users Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/129217/129217-6181582020477489152&#34;&gt;LinkedIn Semantic Web Research Group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Association in Topic Map Data Model</title>
      <link>https://healis.eu/en/post/20160902/</link>
      <pubDate>Fri, 02 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20160902/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#associations-in-topic-map-data-model&#34;&gt;Associations in Topic Map Data Model&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#tuples-to-associations&#34;&gt;Tuples to Associations&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#sql-to-topic-map-filtering&#34;&gt;SQL to Topic Map Filtering&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#topic-map-serialization&#34;&gt;Topic Map Serialization&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#r3dm-type-system-in-wandora&#34;&gt;R3DM Type System in Wandora&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#summary&#34;&gt;Summary&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#cross-references&#34;&gt;Cross-References&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;

&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In the &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000100/&#34;&gt;previous article&lt;/a&gt; of this series we examined the association construct from the perspective of Entity-Relationship data model. In this post we demonstrate how Topic Map data model represents associations. In order to link the two we continue with another SQL query from our &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/tree/master/media/SupplierPartCatalogue/accdb&#34;&gt;relational database&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; suppliers.sid,
       suppliers.sname,
       suppliers.scountry,
       &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt;.catcost,
       &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt;.catqnt,
       parts.pid,
       parts.pname,
       parts.pcolor
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;   suppliers
       &lt;span style=&#34;color:#66d9ef&#34;&gt;INNER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; (parts
                   &lt;span style=&#34;color:#66d9ef&#34;&gt;INNER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; [&lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt;]
                           &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; parts.pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt;.catpid)
               &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; suppliers.sid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt;.catsid
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt;  (( ( parts.pid ) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt; ))
&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt;.catcost;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;





&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;cost_of_red_fire_hydrant_cap.jpg&#34; &gt;

&lt;img src=&#34;cost_of_red_fire_hydrant_cap.jpg&#34; &gt;
&lt;/a&gt;

&lt;/figure&gt;

&lt;p&gt;This will fetch all the rows of a result set where we are looking for the &lt;em&gt;minimum catalogue price of a Red Fire Hydrant Cap&lt;/em&gt; and who is the supplier that manufactures this part. The reader will notice that apart from the deficiensy of the nested JOINs, &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000100/#structured-query-language-sql&#34;&gt;(see here)&lt;/a&gt;, we had to formalize our search in SQL language in order to get back our result. Wouldn&amp;rsquo;t be nice if we could engage the user in a codeless style of search, independent of the business case. Let us see the difference with the Topic Map data model first.&lt;/p&gt;
&lt;h2 id=&#34;associations-in-topic-map-data-model&#34;&gt;Associations in Topic Map Data Model&lt;/h2&gt;
&lt;p&gt;Perhaps there is not a better software tool out there to introduce you to Topic Maps than &lt;a href=&#34;http://wandora.org&#34;&gt;Wandora&lt;/a&gt; information management application, see how.&lt;/p&gt;
&lt;h3 id=&#34;tuples-to-associations&#34;&gt;Tuples to Associations&lt;/h3&gt;
&lt;p&gt;Our first step is to build a Topic Map data model from the SQL result set above. With Wandora this is easy thanks to its powerful set of extractors. Here we use an &lt;a href=&#34;http://wandora.org/wiki/Excel_extractors#Excel_adjacency_list_extractor&#34;&gt;Excel adjacency list extractor&lt;/a&gt; to convert each spreadsheet row of this &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/media/SupplierPartCatalogue/xlsx/vwRedHydrantCap.xlsx&#34;&gt;Excel file&lt;/a&gt; to a Topic Map &lt;code&gt;Association&lt;/code&gt;.&lt;/p&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;wandora-tuples-cells.jpg&#34; data-caption=&#34;Tuples of a Relation - Wandora Associations&#34;&gt;

&lt;img src=&#34;wandora-tuples-cells.jpg&#34; alt=&#34;Tuples of a Relation - Wandora Associations&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Tuples of a Relation - Wandora Associations
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;

&lt;p&gt;In the right panel of the screen capture, you may see that we have four associations of type &lt;code&gt;Tuple&lt;/code&gt;. They are all sorted by the &lt;code&gt;catcost&lt;/code&gt; column. This is the role that cells of this column play in the Tuple association. In our example each Tuple is an instance of the &lt;code&gt;Excel&lt;/code&gt; class with a maximum of 8 members and &lt;strong&gt;each member plays a role in the association&lt;/strong&gt;. You may agree that this Topic Map model view of data looks already very familiar to the user that is accustomed with tables.&lt;/p&gt;
&lt;p&gt;But behind the scenes Topic Map associations are notably different from the n-ary tuples of the relational model. In the left panel of our screen capture you can see all the data that are extracted from the spreadsheet. Notice that no data value is repeated. Each association is constructed from &lt;strong&gt;single instance values&lt;/strong&gt; and this also means that associations are sharing values among them. We can visualize the network of associations by switching to Wandora&amp;rsquo;s &lt;a href=&#34;http://wandora.org/wiki/Graph_topic_panel&#34;&gt;Graph topic panel&lt;/a&gt;. From the left panel, we select the minimum price of the part, which is &lt;code&gt;11.7&lt;/code&gt; and then we expand this node on the &lt;code&gt;Graph topic panel&lt;/code&gt;. This way the first association will be drawn that includes as members all the other values that this cell is associated with. One of them is &lt;code&gt;USA&lt;/code&gt; and plays the &lt;code&gt;scountry&lt;/code&gt; role. We can right click on the value and expand again the nodes (associated members). Two associations are displayed now on the graph that share four common values between them.&lt;/p&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;wandora-graph-panel-with-two-associations.jpg&#34; data-caption=&#34;Two Associations in the Graph Topic Panel of Wandora. Brown labels indicate the type (Tuple) of association and the role (sname) of one of its members&#34;&gt;

&lt;img src=&#34;wandora-graph-panel-with-two-associations.jpg&#34; alt=&#34;Two Associations in the Graph Topic Panel of Wandora. Brown labels indicate the type (Tuple) of association and the role (sname) of one of its members&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Two Associations in the Graph Topic Panel of Wandora. Brown labels indicate the type (Tuple) of association and the role (sname) of one of its members
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;

&lt;h3 id=&#34;sql-to-topic-map-filtering&#34;&gt;SQL to Topic Map Filtering&lt;/h3&gt;
&lt;p&gt;Another important observation we should make at this point is that instead of writing any query to fetch those suppliers that are located in &lt;code&gt;USA&lt;/code&gt; we simply filtered the table based on this value. We are able to do this, because &lt;strong&gt;Topic Map data model works with single instance values that are linked bidirectionally&lt;/strong&gt;. Accordingly, data is always normalized and the main operations of the relational algebra such as set operations, selection and projection, can be performed. For instance, filtering associations that have &lt;code&gt;USA&lt;/code&gt; member is equivalent to selecting rows from SQL. Moreover, the user can traverse interactively the graph starting from any value without writing a single line of code.&lt;/p&gt;
&lt;h3 id=&#34;topic-map-serialization&#34;&gt;Topic Map Serialization&lt;/h3&gt;
&lt;p&gt;To understand better the underlying structure of data in the previous example, we have serialized a Topic Map in &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/media/SupplierPartCatalogue/ltm/suppliers-parts-catalogue-Part998Associations.ltm&#34;&gt;LTM format&lt;/a&gt;. Dropping this LTM file into an empty topic panel, we invoke the &lt;a href=&#34;http://wandora.org/wiki/How_to_import_existing_topic_map_to_Wandora&#34;&gt;import function of Wandora&lt;/a&gt;. Then we expand the &lt;a href=&#34;http://wandora.org/wiki/Working_with_topic_trees&#34;&gt;topic tree&lt;/a&gt; and double click on the &lt;code&gt;998&lt;/code&gt; cell. The following screen capture looks pretty much the same as the one we have generated from extracting the Excel spreadsheet above. The main difference is that now we have two association types, one for Catalogue tuples and another for Part tuples. Part &lt;code&gt;998&lt;/code&gt; participates in five associations (tuples) in total, four of them are from &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/media/SupplierPartCatalogue/tsv/Catalog.tsv&#34;&gt;Catalogue table&lt;/a&gt; and one from &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/media/SupplierPartCatalogue/tsv/Parts.tsv&#34;&gt;Part table&lt;/a&gt;. We have also taken a minimum number of members, i.e. fields (columns), for our associations to keep it simple.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;/* 1 Association of catalog part no 998 with &amp;#34;Red&amp;#34; and &amp;#34;Fire Hydrant Cap&amp;#34; */&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;Prt&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;prtName08&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;pname&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;prtID08&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;pid&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;prtColorRed&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;pcolor&lt;/span&gt; )

&lt;span style=&#34;color:#75715e&#34;&gt;/* 4 Associations of catalog part no 998 with supplier Ids and catalog prices */&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;Cat&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;prtID08&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;catpid&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;supPrice18&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;catcost&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;supID18&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;catsid&lt;/span&gt; )
&lt;span style=&#34;color:#a6e22e&#34;&gt;Cat&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;prtID08&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;catpid&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;supPrice14&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;catcost&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;supID14&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;catsid&lt;/span&gt; )
&lt;span style=&#34;color:#a6e22e&#34;&gt;Cat&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;prtID08&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;catpid&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;supPrice16&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;catcost&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;supID16&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;catsid&lt;/span&gt; )
&lt;span style=&#34;color:#a6e22e&#34;&gt;Cat&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;prtID08&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;catpid&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;supPrice12&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;catcost&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;supID12&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;catsid&lt;/span&gt; )

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;





&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;wandora-part998-ltm-example-842x491.jpg&#34; data-caption=&#34;Associations of part no. 998&#34;&gt;

&lt;img src=&#34;wandora-part998-ltm-example-842x491.jpg&#34; alt=&#34;Associations of part no. 998&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Associations of part no. 998
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;

&lt;p&gt;Because of the single instance feature of Topic Maps, If we switch to Wandora&amp;rsquo;s Graph topic panel we can visualize these associations.






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;wandora-part998-ltm-example-graph-650x500.jpg&#34; data-caption=&#34;Associations of part no. 998&#34;&gt;

&lt;img src=&#34;wandora-part998-ltm-example-graph-650x500.jpg&#34; alt=&#34;Associations of part no. 998&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Associations of part no. 998
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;r3dm-type-system-in-wandora&#34;&gt;R3DM Type System in Wandora&lt;/h3&gt;
&lt;p&gt;We expand our previous example with tuples from three tables and a rich type system, also known as &lt;a href=&#34;https://en.wikipedia.org/wiki/Ontology_(information_science)&#34;&gt;Ontology&lt;/a&gt; or &lt;a href=&#34;https://en.wikipedia.org/wiki/Database_schema&#34;&gt;database schema&lt;/a&gt;.&lt;/p&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;wandora-graph-panel-prt998-catalogue-and-suppliers.jpg&#34; data-caption=&#34;Associations of part no. 998, Supplier Associations and Symmetric Binary Predicates&#34;&gt;

&lt;img src=&#34;wandora-graph-panel-prt998-catalogue-and-suppliers.jpg&#34; alt=&#34;Associations of part no. 998, Supplier Associations and Symmetric Binary Predicates&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Associations of part no. 998, Supplier Associations and Symmetric Binary Predicates
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;

&lt;p&gt;We start again our exploration from the data item with the value &lt;code&gt;998&lt;/code&gt;. There is one association, labeled &lt;code&gt;Part8&lt;/code&gt;, representing a tuple from Part table &lt;strong&gt;(998, &amp;ldquo;Fire Hydrant Cap&amp;rdquo;, Red, 7.2, lb)&lt;/strong&gt; and four of them, labeled &lt;code&gt;Cat08&lt;/code&gt;, &lt;code&gt;Cat12&lt;/code&gt;, &lt;code&gt;Cat13&lt;/code&gt;, &lt;code&gt;Cat17&lt;/code&gt;, representing tuples from the Catalogue table (see result set above). Further on, &lt;code&gt;USA&lt;/code&gt; suppliers are expanded with two more associations, labeled &lt;code&gt;Supplier1&lt;/code&gt; and &lt;code&gt;Supplier2&lt;/code&gt;. The two previous graphs are combined in a single one. We can also observe other associations with only two members, we call these symmetric binary predicates &lt;strong&gt;(SBP)&lt;/strong&gt;. SBPs are used to define a prototype for our R3DM type system. For example, the member value &lt;code&gt;7.2&lt;/code&gt; of association &lt;code&gt;Part8&lt;/code&gt; is of type &lt;code&gt;Part Weight&lt;/code&gt; (Instantiation Predicate) and &lt;code&gt;Part Weight&lt;/code&gt; is hyponym of &lt;code&gt;Weight&lt;/code&gt; (HyperHypo Predicate). The reader may compare this graph with this &lt;a href=&#34;%7B%7Bbase_path%7D%7D/r3dm_project/post000100/#structured-query-language-sql&#34;&gt;Entity-Relationship diagram&lt;/a&gt; and realize that we have both instances (values) and classes, i.e. Entities and Attribues, on the same graphics diagram. Not only that, but most important our type system is generic and we are able to merge and classify data from multiple datasets. Alternatively, Wandora&amp;rsquo;s Topics tree panel on the left part of the image displays a hierarchical structure for types and instances. Those that are expanded can also be seen on the graph panel.&lt;/p&gt;
&lt;p&gt;This is a good place to introduce our &lt;strong&gt;R3DM type system&lt;/strong&gt;. It is presented here for the first time and it will be fully analyzed in a forthcoming post of this series. In the next graph we have expanded several nodes of our hierarchical type system. For instance, &lt;code&gt;Catalogue&lt;/code&gt;, &lt;code&gt;Catalogue Part&lt;/code&gt;, &lt;code&gt;Catalog Supplier&lt;/code&gt; are represented as groups (&lt;code&gt;Grouping Predicate&lt;/code&gt;) of &lt;code&gt;Wandora&lt;/code&gt; class which is the Root of the Topic Tree. Each of these groups is also a type (&lt;code&gt;Instantiation Predicate&lt;/code&gt;) for a set of instances that represent associations. We have Cat01-16 for Catalogue associations, Part1-9 for Part associations, and Supplier1-4 for Supplier associations.&lt;/p&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;wandora-graph-panel-type-system.jpg&#34; &gt;

&lt;img src=&#34;wandora-graph-panel-type-system.jpg&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;R3DM Type System in Wandora&lt;/h4&gt;
  
&lt;/figcaption&gt;

&lt;/figure&gt;

&lt;p&gt;We have defined six SBPs in total, these are grouped under the &lt;code&gt;Symmetric Binary Predicates&lt;/code&gt; group. Five of them have been configured with special symbols to be used in Wandora&amp;rsquo;s Topic tree. Each one of them is expanded on Wandora&amp;rsquo;s graph panel to show the pair of its association members. The &lt;code&gt;Holonomy-Meronomy Predicate&lt;/code&gt; has been used to connect association members to association type.&lt;/p&gt;
&lt;p&gt;Wandora class has also five group members, we have already seen four of them. The fifth one is a Variable Type group and it has four sub-categories, &lt;code&gt;Categorical Variable Types&lt;/code&gt;, &lt;code&gt;Meta Variable Types&lt;/code&gt;, &lt;code&gt;Numeric Variable Types&lt;/code&gt; and &lt;code&gt;Time Variable Types&lt;/code&gt;. Each of these specialized types has instances and each instance can be further specialized. For example, starting from bottom to top :&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gr&lt;/code&gt; &lt;strong&gt;isInstanceOf&lt;/strong&gt; &lt;code&gt;Part Unit&lt;/code&gt; &lt;strong&gt;isHyponymOf&lt;/strong&gt; &lt;code&gt;Unit&lt;/code&gt; &lt;strong&gt;isInstanceOf&lt;/strong&gt; &lt;code&gt;Categorical Variable Type&lt;/code&gt; &lt;strong&gt;isHyponymOf&lt;/strong&gt; &lt;code&gt;Variable Type&lt;/code&gt; &lt;strong&gt;isMemberOf&lt;/strong&gt; &lt;code&gt;Wandora class&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;In this way all values are single instances of some type and they are hyperlinked to build associations (hyperedges). Each association is also an instance of some type.&lt;/p&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;We conclude our discussion of &lt;code&gt;Association&lt;/code&gt; in Topic Map data model. Topic map data model is profound and at the same time powerful and simple to start building higher constructs to model real things. &lt;code&gt;Association&lt;/code&gt; in Topic Map is a first class citizen. Here is a list of interesting features we discussed in this post :&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;We can define single instance Topics (and/or values) and then associate them.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Association&lt;/code&gt; is a bidirectional n-ary relation with &lt;code&gt;Type&lt;/code&gt; and &lt;code&gt;Roles&lt;/code&gt; embedded.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Because of 1. and 2. we can traverse the graph from any point to any other point simply by filtering nodes and edges.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We can display both &lt;code&gt;Topic&lt;/code&gt;/&lt;code&gt;Association&lt;/code&gt; types and instances on the same graph&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Data from multiple data sets cab be merged with R3DM type system that is based on symmetric binary associations.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;There are other powerful features of Topic Maps related to associations such as &lt;a href=&#34;http://www.wandora.org/wiki/Introduction_to_Layered_Topic_Maps&#34;&gt;merging&lt;/a&gt; and information resources that are attached to topics, i.e. &lt;a href=&#34;http://wandora.org/wiki/Refining_occurrences&#34;&gt;occurrences&lt;/a&gt;, we reserve time and space to highlight them in a forthcoming article.&lt;/p&gt;
&lt;p&gt;We will continue our demonstration with the Catalogue-Part-Supplier example. This time we will examine how associations can be represented on the &lt;a href=&#34;http://orientdb.com/docs/last/Tutorial-Document-and-graph-model.html&#34;&gt;Graph Model&lt;/a&gt; of OrientDB DBMS.&lt;/p&gt;
&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/associative-data-modeling-demystified-part1-hatzis-phd-1&#34;&gt;LinkedIn Published Posts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/129217/129217-6177536264963661827&#34;&gt;LinkedIn Semantic Web Research Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/109285/109285-6177532954038792196&#34;&gt;LinkedIn Topic Maps Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.datasciencecentral.com/m/blogpost?id=6448529%3ABlogPost%3A465093&#34;&gt;Data Science Central&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/associative-data-modeling-demystified-part-2&#34;&gt;DZone - Database Section&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Relation, Relationship and Association</title>
      <link>https://healis.eu/en/post/20160825/</link>
      <pubDate>Thu, 25 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20160825/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#supplier-part-catalogue-dataset&#34;&gt;Supplier-Part-Catalogue Dataset&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#the-er-data-model&#34;&gt;The ER Data Model&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#association-and-associative-array&#34;&gt;Association and Associative Array&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#wolfram-language---association&#34;&gt;Wolfram Language - Association&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#json-serialization&#34;&gt;JSON Serialization&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#association-vs-relation&#34;&gt;Association vs Relation&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#wolfram-language---relation&#34;&gt;Wolfram Language - Relation&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#data-redundancy&#34;&gt;Data Redundancy&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#structured-query-language-sql&#34;&gt;Structured Query Language (SQL)&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#summary&#34;&gt;Summary&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#cross-references&#34;&gt;Cross-References&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;

&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In early 2009 an increasing number of non-relational DBMS started to appear on the scene. They were based on data models such as Column, Document, Key-Value, Graph and Multi-Model. At about the same time, big corporations in IT industry were concerned with data processing of large and complex data sets. Big data movement was a major driving force to re-examine whether current DBMS were sufficient to cope with the new requirements on data processing. More specifically the &lt;a href=&#34;http://www.ibmbigdatahub.com/infographic/four-vs-big-data&#34;&gt;four V&amp;rsquo;s of Big Data&lt;/a&gt;, i.e. volume, variety, velocity and veracity, put an increasing demand in major companies and organizations. This had as a result a reinvestigation on what DBMS technology to apply. Many started realizing that physical representation of data on the disk or in memory and data modeling are key factors on how you build or integrate parts of your IT solution.&lt;/p&gt;
&lt;p&gt;While most players in the IT sector adopted Graph or Document databases and Hadoop based solutions, Hadoop is an enabler of &lt;a href=&#34;https://en.wikipedia.org/wiki/Apache_HBase&#34;&gt;HBase&lt;/a&gt; column store, it went almost unnoticed that several new DBMS, &lt;a href=&#34;http://www.atomicdb.ch/x10sys.html&#34;&gt;AtomicDB&lt;/a&gt; previous database engine of &lt;a href=&#34;https://www.aisys.us/&#34;&gt;X10SYS&lt;/a&gt;, and &lt;a href=&#34;http://www.sentences.com/sentences.htm&#34;&gt;Sentences&lt;/a&gt;, based on associative technology appeared on the scene. We have introduced and discussed about the &lt;a href=&#34;https://www.linkedin.com/pulse/towards-new-data-modelling-architecture-part-2-hatzis-phd&#34;&gt;data modelling architecture&lt;/a&gt; and the atomic information resource unit &lt;a href=&#34;https://www.linkedin.com/pulse/air-atomic-information-resource-athanassios-i-hatzis-phd&#34;&gt;(AIR)&lt;/a&gt; of AtomicDB. Similar technology has been the engine power of &lt;a href=&#34;http://www.qlik.com/us/&#34;&gt;Qlikview&lt;/a&gt;, a very popular software in Business Intelligence and Analytics, since 1993. Perhaps it is less known to the reader that the association construct is a first class citizen in &lt;a href=&#34;https://en.wikipedia.org/wiki/Topic_Maps&#34;&gt;Topic Map&lt;/a&gt; semantic web standard and it is translated to &lt;a href=&#34;https://en.wikipedia.org/wiki/Resource_Description_Framework&#34;&gt;(RDF)&lt;/a&gt;, the other semantic web standard. In other posts of this series we can see how it is possible to implement Associative Technology in multi-model graph databases such as &lt;a href=&#34;http://orientdb.com/orientdb/&#34;&gt;OrientDB&lt;/a&gt;, in object-relational DBMS such as &lt;a href=&#34;http://www.intersystems.com/our-products/cache/cache-overview/&#34;&gt;Intersystems Cache&lt;/a&gt; and &lt;a href=&#34;https://docs.oracle.com/database/121/ADOBJ/toc.htm&#34;&gt;Oracle&lt;/a&gt; or build the engine for in-memory processing with Wolfram &lt;a href=&#34;https://www.wolfram.com/mathematica/&#34;&gt;Mathematica&lt;/a&gt;. In this article, we introduce the concept of association from the perspective of Entity-Relationship &lt;a href=&#34;https://en.wikipedia.org/wiki/Entity%E2%80%93relationship_model&#34;&gt;(ER)&lt;/a&gt; data model and illustrate it with the modelling of a toy dataset.&lt;/p&gt;
&lt;h2 id=&#34;supplier-part-catalogue-dataset&#34;&gt;Supplier-Part-Catalogue Dataset&lt;/h2&gt;
&lt;p&gt;Our dataset is a collection of three related database tables. Two of the tables, Supplier ( &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/media/SupplierPartCatalogue/tsv/Suppliers.tsv&#34;&gt;TSV&lt;/a&gt;, &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/media/SupplierPartCatalogue/xlsx/SuppliersPartsCatalogue.xlsx&#34;&gt;XLSX&lt;/a&gt; ) and Part ( &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/media/SupplierPartCatalogue/tsv/Parts.tsv&#34;&gt;TSV&lt;/a&gt;, &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/media/SupplierPartCatalogue/xlsx/SuppliersPartsCatalogue.xlsx&#34;&gt;XLSX&lt;/a&gt; ), represent and describe Entity Types, i.e. Relations. The third one, Catalogue ( &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/media/SupplierPartCatalogue/tsv/Catalog.tsv&#34;&gt;TSV&lt;/a&gt;, &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/media/SupplierPartCatalogue/xlsx/SuppliersPartsCatalogue.xlsx&#34;&gt;XLSX&lt;/a&gt; ) is the associative entity, a.k.a. bridge table, junction table, join table, etc. The typical case where data for the bridge table is captured is from a business inventory where each item is recorded with its unit price and a quantity in stock. Such  information is stored in our Catalogue table, together with a date the item record was modified and a flag that indicates inspection of the stock.&lt;/p&gt;
&lt;h2 id=&#34;the-er-data-model&#34;&gt;The ER Data Model&lt;/h2&gt;
&lt;p&gt;Quite often (ER) Data Model is confused with the &lt;a href=&#34;https://en.wikipedia.org/wiki/Relational_model&#34;&gt;Relational Data Model&lt;/a&gt;. The reader should become familiar with the following equivalent terminology.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ER Data Model&lt;/th&gt;
&lt;th&gt;Relational Data Model&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Entity Type (Set)&lt;/td&gt;
&lt;td&gt;Relation (Table, Base relvar)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Heading - ordered set of attributes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Body - set of n-tuples, extension of a predicate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Entity	(instance, member)&lt;/td&gt;
&lt;td&gt;Tuple (ordered set of attribute values)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Value Set&lt;/td&gt;
&lt;td&gt;Type name (data type)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Value&lt;/td&gt;
&lt;td&gt;Attribute value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Relationship set&lt;/td&gt;
&lt;td&gt;View (Result set or Derived relvar)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Relationship (association)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Attribute (function)&lt;/td&gt;
&lt;td&gt;Free variable of a predicate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mapping of Entity Set or&lt;/td&gt;
&lt;td&gt;Attribute name of the relation (column)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Relationship Set to Value Set&lt;/td&gt;
&lt;td&gt;ordered pair of attribute name and type name&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;In this classic paper, &lt;a href=&#34;http://dl.acm.org/citation.cfm?id=320440&#34;&gt;&amp;ldquo;The Entity-Relationship Model - Toward a Unified View of Data&amp;rdquo;&lt;/a&gt; &lt;strong&gt;Peter Chen defines relationship as an association among entities&lt;/strong&gt;. In the same paper &lt;strong&gt;entity and relationship are illustrated as hypergraphs&lt;/strong&gt;. In particular, &lt;em&gt;&lt;a href=&#34;#fig2&#34;&gt;Fig. 2&lt;/a&gt;&lt;/em&gt; at page 13 and &lt;em&gt;&lt;a href=&#34;#fig3&#34;&gt;Fig. 3&lt;/a&gt;&lt;/em&gt; at page 14 show how an instance from an Entity/Relationship set is linked to either values or other entities. Although Peter Chen did not describe these fundamental constructs of his data model with Hypegraph terms, it can be easily seen in these captured figures that a specific entity or relationship form hyperedges with other entities or values that play the role of hypernodes.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;peter_chen_ER_model_fig2.jpg&#34; data-caption=&#34;(Emploee):Ei at Fig.2 and (PROJECT-WORKER):Ri at Fig.3 form hyperedges&#34;&gt;

&lt;img src=&#34;peter_chen_ER_model_fig2.jpg&#34; alt=&#34;(Emploee):Ei at Fig.2 and (PROJECT-WORKER):Ri at Fig.3 form hyperedges&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    (Emploee):Ei at Fig.2 and (PROJECT-WORKER):Ri at Fig.3 form hyperedges
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;peter_chen_ER_model_fig3.jpg&#34; data-caption=&#34;(Emploee):Ei at Fig.2 and (PROJECT-WORKER):Ri at Fig.3 form hyperedges&#34;&gt;

&lt;img src=&#34;peter_chen_ER_model_fig3.jpg&#34; alt=&#34;(Emploee):Ei at Fig.2 and (PROJECT-WORKER):Ri at Fig.3 form hyperedges&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    (Emploee):Ei at Fig.2 and (PROJECT-WORKER):Ri at Fig.3 form hyperedges
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;association-and-associative-array&#34;&gt;Association and Associative Array&lt;/h3&gt;
&lt;p&gt;We extend the definition of association in the (ER) data model to cover both Entities and Relationships. In the aforementioned paper, Chen formally defines attribute as a function which maps a given entity to a single value (or a single tuple of values). He also mentions that relationships have their own attributes whose meaning depends on the associated entities. The (key,value) pair of an &lt;a href=&#34;https://en.wikipedia.org/wiki/Associative_array&#34;&gt;Associative array&lt;/a&gt;, a.k.a. map, symbol table, or dictionary, captures this functional operation of attribute.&lt;/p&gt;
&lt;h3 id=&#34;wolfram-language---association&#34;&gt;Wolfram Language - Association&lt;/h3&gt;
&lt;p&gt;Wolfram Language is using &lt;code&gt;Association&lt;/code&gt; fundamental construct to represent an associative array. The following three &lt;a href=&#34;https://reference.wolfram.com/language/guide/Associations.html&#34;&gt;Wolfram Language associations&lt;/a&gt; represent a relationship of a Catalog instance with a Supplier instance and some Part instance from our toy dataset.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Supplier&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Association&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;|&lt;/span&gt;supID&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1081&lt;/span&gt;, supName&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Acme Widget Suppliers&amp;#34;&lt;/span&gt;, supAddress&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1 Grub St., Potemkin Village, IL 61801&amp;#34;&lt;/span&gt;, supCity&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ILLINOIS&amp;#34;&lt;/span&gt;, supCountry&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;USA&amp;#34;&lt;/span&gt;, supStatus&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt;

(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Part&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Association&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;|&lt;/span&gt;prtID&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt;, prtName&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fire Hydrant Cap&amp;#34;&lt;/span&gt;, prtColor&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Red&amp;#34;&lt;/span&gt;, prtWeight&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, prtUnit&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gr&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt;

(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Catalogue&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Association&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;|&lt;/span&gt;supID&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1081&lt;/span&gt;, prtID&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt;, catPrice&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, catQuantity&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt;, catDate&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Wed 10 Sep 2014&amp;#34;&lt;/span&gt;, catCheck&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;What we are missing in this representation are the hyperedges, i.e. the nexuses that link together hypernodes. According to hypergraph terminology, the edge that connects a hyperedge to a hypernode is called hyperlink or connector. You may think of these hyperlinks/connectors as hash fields but we need another identifier for the hash key, i.e. an identifier for the instance. We could have used supID, prtID or a combination of these two but we prefer to define new identifiers for hyperedges. &lt;strong&gt;The main reason for this is that in principle we want to design a uniform way of addressing and identifying both hyperedge and hypernode instances at a low-dimensional, e.g. (2D,3D,4D), space&lt;/strong&gt;. If we encode this way, it is possible to avoid namespace problems. In this post we use names to compare the graph with figures from Peter Chen&amp;rsquo;s paper.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./three_associations.jpg&#34; alt=&#34;Three Associations in a Named-Row Dataset&#34;&gt;&lt;/p&gt;
&lt;p&gt;We may also connect hyperedges, e.g. we can add a &amp;ldquo;type&amp;rdquo; hyperlink that maps instances to classes, a &amp;ldquo;vendor&amp;rdquo; hyperlink that maps a Catalog instance to its Supplier instance and a &amp;ldquo;stockItem&amp;rdquo; hyperlink that connects Catalog instance to Part instance. In Wolfram Language it is relatively easy to make a graph of these Associations. We colorized the graph according to the different data types we have, i.e. hyperedges, strings, doubles, integers, dates, and booleans, &lt;a href=&#34;#fig4&#34;&gt;&lt;strong&gt;Fig.4&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;association-relation-relationship.jpg&#34; data-caption=&#34;Hyperedges are displayed in red, strings are in grey, doubles in lightblue, integers in green, dates in lightgreen and boolean in black&#34;&gt;

&lt;img src=&#34;association-relation-relationship.jpg&#34; alt=&#34;Hyperedges are displayed in red, strings are in grey, doubles in lightblue, integers in green, dates in lightgreen and boolean in black&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Hyperedges are displayed in red, strings are in grey, doubles in lightblue, integers in green, dates in lightgreen and boolean in black
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;json-serialization&#34;&gt;JSON Serialization&lt;/h3&gt;
&lt;p&gt;Another very popular representation for Association is JSON Serialization. Those associations we described above can be serialized with the following format.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;$PartI&amp;#34;&lt;/span&gt;: {
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$Item&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;prtID&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;prtName&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fire Hydrant Cap&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;prtColor&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Red&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;prtWeight&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;7.2&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;prtUnit&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gr&amp;#34;&lt;/span&gt;
  },
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;$SupplierJ&amp;#34;&lt;/span&gt;: {
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$Organization&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;supID&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1081&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;supName&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Acme Widget Suppliers&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;supAddress&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1 Grub St., Potemkin Village, IL 61801&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;supCity&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ILLINOIS&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;supCountry&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;USA&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;supStatus&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;
  },
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;$CatalogK&amp;#34;&lt;/span&gt;: {
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$Inventory&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;supID&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1081&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;prtID&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;catPrice&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;11.7&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;catQuantity&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;catDate&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2014-09-10&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;catCheck&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Catalogue, Parts and Suppliers tables are also available in &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/tree/master/media/SupplierPartCatalogue/json&#34;&gt;JSON&lt;/a&gt; format.&lt;/p&gt;
&lt;h3 id=&#34;association-vs-relation&#34;&gt;Association vs Relation&lt;/h3&gt;
&lt;p&gt;Although the logical view of Chen&amp;rsquo;s (ER) data model and his popular diagrammatic technique incorporates Entities, Relationships, Attributes and Values, at the physical layer of any relational DBMS we find records, i.e. Entities or Relationships are ordered tuples. A set of these ordered tuples that have the same heading, is called body. This header is another ordered tuple with attribute names. Theoretically speaking the body and the header of a table make the Relation. In practise the header is separated from the body and located at the database catalog together with other metadata for the schema of the database. SQL standard specifies a uniform mean to access this catalog.&lt;/p&gt;
&lt;h3 id=&#34;wolfram-language---relation&#34;&gt;Wolfram Language - Relation&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&#34;https://reference.wolfram.com/language/ref/List.html&#34;&gt;&lt;code&gt;List&lt;/code&gt; fundamental construct of Wolfram Language&lt;/a&gt; can be used to represent a Relation. An extensive analysis of various representations and transformations on the constructs of the Relational data model in Wolfram Language can be found &lt;a href=&#34;https://www.linkedin.com/pulse/towards-new-data-modelling-architecture-part-1-hatzis-phd&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Part&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Relation&lt;/span&gt; with a header &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; three tuples (body) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)
{
  {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pid&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pname&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pcolor&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pweight&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;punit&amp;#34;&lt;/span&gt;},
  {&lt;span style=&#34;color:#ae81ff&#34;&gt;991&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Left Handed Bacon Stretcher Cover&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Red&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lb&amp;#34;&lt;/span&gt;},
  {&lt;span style=&#34;color:#ae81ff&#34;&gt;992&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Smoke Shifter End&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Black&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;75&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lb&amp;#34;&lt;/span&gt;},
  {&lt;span style=&#34;color:#ae81ff&#34;&gt;993&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Acme Widget Washer&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Red&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;142&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;88&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;kg&amp;#34;&lt;/span&gt;}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The reader will notice that in both Associative array and Relation representations, the cell of a table, i.e. the value of an attribute, is always functionally dependent on the description of Attribute and Entity/Relationship. It cannot stand on its own without these semantic references. Moreover, for the Relation representation, the exact order of values has to be maintained together with any missing (NULL) values.&lt;/p&gt;
&lt;h3 id=&#34;data-redundancy&#34;&gt;Data Redundancy&lt;/h3&gt;
&lt;p&gt;Relational databases are usually normalized to eliminate duplication of information and ensure referential integrity. This is especially recommended in one-to-many relationships. &lt;a href=&#34;https://en.wikipedia.org/wiki/Database_normalization&#34;&gt;Normalization&lt;/a&gt; involves arranging attributes in tables, nevertheless in a relational database we cannot escape from data redundancy completely. For example if we take the unit attribute of the normalized Part table above we can see that values are still repeated. Most important the schema of a relational database is too rigid and cannot be easily modified without breaking normalization and compromising referential integrity.&lt;/p&gt;
&lt;h3 id=&#34;structured-query-language-sql&#34;&gt;Structured Query Language (SQL)&lt;/h3&gt;
&lt;p&gt;Performing queries of data in a relational database is highly dependent on these two factors we briefly mentioned above, the physical representation of data on the disk and the normalization procedure. One of the main bottlenecks with SQL is the natural join relational operator, counterpart of logical AND. An &lt;a href=&#34;https://en.wikipedia.org/wiki/Join_(SQL)&#34;&gt;SQL Join&lt;/a&gt; is a means for constructing a result set combining columns from two (or more) tables by using values common to each. The more tables you join and the bigger the size of each table the more time it takes to consolidate the data of the view. On the contrary in many graph databases, connected nodes, i.e. record instances, are directly linked to each other. Each node, contains a list of pointers of its edges, therefore avoiding look-ups. In fact you are not searching for records, you are traversing connections instead. This may dramatically reduce the speed of constructing the result set of a query.&lt;/p&gt;
&lt;p&gt;For demonstration and comparison purposes we provide such a JOIN sql query for our toy database together with an ER diagram of the database schema,&lt;a href=&#34;#fig5&#34;&gt;&lt;strong&gt;Fig.5&lt;/strong&gt;&lt;/a&gt; and the result set on a Microsoft Access table view, &lt;a href=&#34;#fig6&#34;&gt;&lt;strong&gt;Fig.6&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You may also download a Microsoft Access, &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/tree/master/media/SupplierPartCatalogue/accdb&#34;&gt;accdb&lt;/a&gt; file format, database to experiment with.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;SupplierPartCatalogue-ERModel-MSAccess.jpg&#34; data-caption=&#34;Image illustrates the ER diagram of database schema&#34;&gt;

&lt;img src=&#34;SupplierPartCatalogue-ERModel-MSAccess.jpg&#34; alt=&#34;Image illustrates the ER diagram of database schema&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Image illustrates the ER diagram of database schema
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;SupplierPartCatalogue-ERModel-MSAccess-JOINresultSet.jpg&#34; data-caption=&#34;Image illustrates the ER diagram of database schema&#34;&gt;

&lt;img src=&#34;SupplierPartCatalogue-ERModel-MSAccess-JOINresultSet.jpg&#34; alt=&#34;Image illustrates the ER diagram of database schema&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Image illustrates the ER diagram of database schema
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;Catalog&lt;/span&gt; . catsid ,
        &lt;span style=&#34;color:#66d9ef&#34;&gt;Catalog&lt;/span&gt; . catpid ,
        Suppliers . sname ,
        Parts . pname ,
        &lt;span style=&#34;color:#66d9ef&#34;&gt;Catalog&lt;/span&gt; . catcost ,
        &lt;span style=&#34;color:#66d9ef&#34;&gt;Catalog&lt;/span&gt; . catqnt ,
        &lt;span style=&#34;color:#66d9ef&#34;&gt;Catalog&lt;/span&gt; . catdate ,
        &lt;span style=&#34;color:#66d9ef&#34;&gt;Catalog&lt;/span&gt; . catchk
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;    Suppliers
        &lt;span style=&#34;color:#66d9ef&#34;&gt;INNER&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt;  ( Parts
                    &lt;span style=&#34;color:#66d9ef&#34;&gt;INNER&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt;  [&lt;span style=&#34;color:#66d9ef&#34;&gt;Catalog&lt;/span&gt;]
                            &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt;  Parts . pid  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;Catalog&lt;/span&gt; . catpid )
                &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt;  Suppliers . sid  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;Catalog&lt;/span&gt; . catsid
&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt;  Suppliers . sname  &lt;span style=&#34;color:#66d9ef&#34;&gt;DESC&lt;/span&gt; ,
           &lt;span style=&#34;color:#66d9ef&#34;&gt;Catalog&lt;/span&gt; . catcost  &lt;span style=&#34;color:#66d9ef&#34;&gt;DESC&lt;/span&gt; ;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;One can immediately notice the complexity of SQL query language on the nested SQL Join constructs.&lt;/p&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;In this article we described several limitations of the ER model that we wish to overcome, in brief these are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Functional dependence of values&lt;/li&gt;
&lt;li&gt;Data redundancy&lt;/li&gt;
&lt;li&gt;Join operations&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the next article of our series we continue with an international industry standard for information management and interchange, the &lt;a href=&#34;https://en.wikipedia.org/wiki/Topic_Maps&#34;&gt;Topic Maps Data Model&lt;/a&gt; (TMDM). Associations in TMDM are similar to tuples but they have types. Each member of an association plays a role that is defined explicitly. In fact this is in full agreement with Chen&amp;rsquo;s Entity-Relationship diagrams (see Fig.1 and Fig.2 above). Chen discusses the role of an entity in a relationship and the role of an attribute in a relation and he considers distinct constrains on allowable values for a value set and constraints on permitted values for a certain attribute.&lt;/p&gt;
&lt;p&gt;TMDM view is edifying because it divides information space in two layers. At the conceptual level we have topics that can be associated and represent any subject that can be conceived by a human being. At the occurrence level we have addressable information resources that describe those subjects.&lt;/p&gt;
&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/associative-data-modeling-demystified-part1-hatzis-phd&#34;&gt;LinkedIn Published Posts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/hp/update/6178589225793916928&#34;&gt;LinkedIn Update&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.datasciencecentral.com/profiles/blogs/associative-data-modeling-demystified-part1&#34;&gt;Data Science Central&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/associative-data-modeling-demystified-part1&#34;&gt;DZone - Database Section&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>From Declarative to Functional Database Operations</title>
      <link>https://healis.eu/en/post/20160210/</link>
      <pubDate>Wed, 10 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20160210/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;This is a new release of OrientDB RESTful API in Mathematica, enhanced with new commands such as &lt;strong&gt;addIndex&lt;/strong&gt;, &lt;strong&gt;addInstance&lt;/strong&gt; and &lt;strong&gt;addEdge&lt;/strong&gt; used especially in Graph Database modeling. Most important the functional set of API commands is built in a concise and succinct way. Database operations are now grouped in four main categories, &lt;strong&gt;GET&lt;/strong&gt;, &lt;strong&gt;UPDATE&lt;/strong&gt;, &lt;strong&gt;DELETE&lt;/strong&gt;, and &lt;strong&gt;ADD&lt;/strong&gt;, a.k.a. (&lt;strong&gt;GUDA&lt;/strong&gt;), that resemble &lt;strong&gt;Create&lt;/strong&gt;, &lt;strong&gt;Read&lt;/strong&gt;, &lt;strong&gt;Update&lt;/strong&gt;, and &lt;strong&gt;Delete&lt;/strong&gt;, a.k.a. (&lt;strong&gt;CRUD&lt;/strong&gt;), major functions that are implemented in relational database applications. The number of functional arguments have been also significantly revised and classified as optional and mandatory depending on the command that they are applied.&lt;/p&gt;
&lt;div class=&#34;responsive-wrap&#34;&gt;
	&lt;object data=&#34;http://test.healis.eu/dbapi/DocumentationPDF/GUDA.pdf&#34; type=&#34;application/pdf&#34; style=&#34;margin: 0 auto;height: 100vh;width: 100%;&#34;&gt;
		&lt;embed src=&#34;http://test.healis.eu/dbapi/DocumentationPDF/GUDA.pdf&#34; type=&#34;application/pdf &#34;style=&#34;margin: 0 auto;height: 100vh;width: 100%;&#34;&gt;
			&lt;em&gt;It seems that your browser cannot display the PDF file; Please use this &lt;a href=&#34;http://test.healis.eu/dbapi/DocumentationPDF/GUDA.pdf&#34;&gt;&lt;strong&gt;link&lt;/strong&gt; &lt;/a&gt;
			instead. Thanks!&lt;/em&gt;
	&lt;/object&gt;
&lt;/div&gt;
&lt;p&gt;The implementation of the package is based on the &lt;a href=&#34;https://orientdb.org/docs/3.0.x/misc/OrientDB-REST.html&#34;&gt;HTTP RESTful SQL commands of OrientDB&lt;/a&gt;. The &lt;a href=&#34;https://healis.eu/en/project/wolfram_apis/&#34;&gt;Mathematica API&lt;/a&gt; project, can be extended to cover also the programming operations of other DBMS, in an analogy of the functional patterns and operations of this package.&lt;/p&gt;
&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;
&lt;p&gt;These are a few &lt;strong&gt;CRUD&lt;/strong&gt; examples that are transformed to &lt;strong&gt;GUDA&lt;/strong&gt; in order to compare the functional with the declarative form of SQL operations.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; Create bidirectional linking&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; i&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; association
CREATE EDGE isOwnerOf FROM 12&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;0 TO 16&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;0
ODBapi&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;com&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;addEdge&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; class&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;isOwnerOf&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; from&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;12:0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; to&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;16:0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; Read records with projection and filtering
SELECT &lt;span style=&#34;color:#a6e22e&#34;&gt;@rid&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; DOB FROM Person WHERE lastName&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Smith&amp;#34;&lt;/span&gt;
ODBapi&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;com&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;getRecords&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; prjkt&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@rid, DOB&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; class&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Person&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; propnam&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lastName&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; propval&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Smith&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; Update with restrictions
UPDATE Person set age&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;57 WHERE age&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;60
ODBapi&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;com&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;updValues&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; class&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Person&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; propnam&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;age&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; propval&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;57 where age&amp;lt;60&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; Delete all the records of a &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;table&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; vertex&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; document&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;....)&lt;/span&gt;
DELETE VERTEX Person
ODBapi&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;com&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;delRecords&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; class&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Person&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; all&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;True&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; construct&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;VERTEX&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;https://healis.eu/en/project/wolfram_apis/&#34;&gt;DBAPI application project&lt;/a&gt; is open source and free. You are most welcome to contribute in the Github repository of the project that can be found &lt;a href=&#34;https://github.com/healiseu/dbapiProject&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Download the latest release of DBAPI from &lt;a href=&#34;https://test.healis.eu/dbapi/Release/dbapi-latest-release.zip&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download and run this &lt;a href=&#34;https://test.healis.eu/dbapi/Test/Installation.nb&#34;&gt;Mathematica Notebook code&lt;/a&gt; to test the installation of the package&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;testing&#34;&gt;Testing&lt;/h2&gt;
&lt;p&gt;The OrientDB API Package can be tested with &lt;a href=&#34;https://test.healis.eu/dbapi/Test/OrientDB%20API%20Demo%201%20-%20Test%20API%20Commands.nb&#34;&gt;Demo 1-Test API Commands&lt;/a&gt; and &lt;a href=&#34;https://test.healis.eu/dbapi/Test/OrientDB%20API%20Demo%203%20-%20Schemaless%20vs%20Schemafull%20Operations.nb&#34;&gt;Demo 3-Schemaless vs Schemafull Operations&lt;/a&gt; Notebooks.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This functional RESTful API can be served as a prototype for a uniform, universal treatment of data language (&lt;strong&gt;UDL&lt;/strong&gt;) that will be independent of the DBMS implementation. Commands and parameters can become more efficient and execution can be simplified if we take on account the hierarchical relationship of &lt;strong&gt;Server&lt;/strong&gt;, &lt;strong&gt;Database&lt;/strong&gt;, &lt;strong&gt;Class&lt;/strong&gt;, &lt;strong&gt;Property&lt;/strong&gt; and &lt;strong&gt;Record&lt;/strong&gt; containers. We foresee that it will be far more intuitive, user-friendly, and easier to program with a functional style than the declarative commands of its SQL ancestor.&lt;/p&gt;
&lt;h2 id=&#34;documentation-pages&#34;&gt;Documentation Pages&lt;/h2&gt;
&lt;p&gt;If you have already installed the DBAPI project, then you can search Wolfram Mathematica documentation for &lt;code&gt;DBAPI&lt;/code&gt;. This is your starting point for browsing the documentation. For demonstration purposes, we have included here the following documentation pages in pdf format for the &lt;code&gt;ODBapi&lt;/code&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>RESTful API in Mathematica</title>
      <link>https://healis.eu/en/project/wolfram_apis/</link>
      <pubDate>Thu, 31 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/project/wolfram_apis/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#testing&#34;&gt;Testing&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#documentation-pages&#34;&gt;Documentation Pages&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;

&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;Packages in this project extend Wolfram Language with commands that are related to data management and especially generic database management. There is a basic &lt;code&gt;Utilities Package&lt;/code&gt; that is used in transformations between Wolfram Language constructs such as &lt;a href=&#34;https://reference.wolfram.com/language/ref/List.html&#34;&gt;List&lt;/a&gt;, &lt;a href=&#34;https://reference.wolfram.com/language/ref/Rule.html&#34;&gt;Rule&lt;/a&gt;, &lt;a href=&#34;https://reference.wolfram.com/language/ref/Association.html&#34;&gt;Association&lt;/a&gt;, and &lt;a href=&#34;https://reference.wolfram.com/language/ref/Dataset.html&#34;&gt;Dataset&lt;/a&gt;, and external serialization standards such as &lt;a href=&#34;https://json.org&#34;&gt;JSON&lt;/a&gt; and comma-separated values (CSV) files. On top of that package we are porting RESTful APIs from various web services through &lt;a href=&#34;https://reference.wolfram.com/language/ref/URLFetch.html&#34;&gt;URLFetch&lt;/a&gt; into Wolfram Language building commands with arguments that specify options with rules of the form name-&amp;gt;value. An example of such a RESTful API is the &lt;a href=&#34;https://orientdb.org/docs/3.0.x/misc/OrientDB-REST.html&#34;&gt;OrientDB HTTP API&lt;/a&gt; and the &lt;code&gt;OrientDB package&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./orientdb_logo.png&#34; alt=&#34;jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Enhanced &lt;a href=&#34;https://orientdb.org/docs/3.0.x/misc/OrientDB-REST.html&#34;&gt;OrientDB HTTP RESTful API&lt;/a&gt; functionality with powerful new commands for Mathematica users&lt;/li&gt;
&lt;li&gt;Fully documented functions and packages in the native documentation system of Wolfram Mathematica&lt;/li&gt;
&lt;li&gt;Build interactive demos, powerful presentations and applications in the vast environment of Wolfram Language with nearly 5,000 built-in functions at a fraction of time it would require to build, test, and support these, in other programming languages.&lt;/li&gt;
&lt;li&gt;Debug easily your applications by dynamic programming and interactive sessions&lt;/li&gt;
&lt;li&gt;Deploy your application anywhere thanks to &lt;a href=&#34;https://www.wolfram.com/universal-deployment-system&#34;&gt;Wolfram Universal Deployment System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create multiple visualization schemes, network topologies, data mining and search indexing algorithms powered by dynamically configured GUIs for the non-experienced user.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;You can download the latest release of DBAPI from &lt;a href=&#34;https://test.healis.eu/dbapi/Release/dbapi-latest-release.zip&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download and run this &lt;a href=&#34;https://test.healis.eu/dbapi/Test/Installation.nb&#34;&gt;Mathematica Notebook code&lt;/a&gt; to test the installation of the package&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;testing&#34;&gt;Testing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href=&#34;https://test.healis.eu/dbapi/Test/Transformations_on_Expressions.nb&#34;&gt;Transformations on Wolfram expressions&lt;/a&gt; Mathematica Notebook is a demonstration of functions in the Utilities package&lt;/li&gt;
&lt;li&gt;The OrientDB API Package can be tested with &lt;a href=&#34;https://test.healis.eu/dbapi/Test/OrientDB%20API%20Demo%201%20-%20Test%20API%20Commands.nb&#34;&gt;Demo 1-Test API Commands&lt;/a&gt; and &lt;a href=&#34;https://test.healis.eu/dbapi/Test/OrientDB%20API%20Demo%203%20-%20Schemaless%20vs%20Schemafull%20Operations.nb&#34;&gt;Demo 3-Schemaless vs Schemafull Operations&lt;/a&gt; Notebooks&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;documentation-pages&#34;&gt;Documentation Pages&lt;/h2&gt;
&lt;p&gt;If you have already installed the DBAPI project, then you can search Wolfram Mathematica documentation for &lt;code&gt;DBAPI&lt;/code&gt;. This is your starting point for browsing the documentation.&lt;/p&gt;
&lt;p&gt;For demonstration purposes, we have included here the following documentation pages in pdf format for the &lt;code&gt;ODBapi&lt;/code&gt; and &lt;code&gt;ODBgetFieldAttributes&lt;/code&gt; functions of the &lt;code&gt;OrientDB Package&lt;/code&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;div class=&#34;responsive-wrap&#34;&gt;
	&lt;object data=&#34;http://test.healis.eu/dbapi/DocumentationPDF/ODBapi.pdf&#34; type=&#34;application/pdf&#34; style=&#34;margin: 0 auto;height: 100vh;width: 100%;&#34;&gt;
		&lt;embed src=&#34;http://test.healis.eu/dbapi/DocumentationPDF/ODBapi.pdf&#34; type=&#34;application/pdf &#34;style=&#34;margin: 0 auto;height: 100vh;width: 100%;&#34;&gt;
			&lt;em&gt;It seems that your browser cannot display the PDF file; Please use this &lt;a href=&#34;http://test.healis.eu/dbapi/DocumentationPDF/ODBapi.pdf&#34;&gt;&lt;strong&gt;link&lt;/strong&gt; &lt;/a&gt;
			instead. Thanks!&lt;/em&gt;
	&lt;/object&gt;
&lt;/div&gt;
&lt;div class=&#34;responsive-wrap&#34;&gt;
	&lt;object data=&#34;http://test.healis.eu/dbapi/DocumentationPDF/ODBgetFieldAttributes.pdf&#34; type=&#34;application/pdf&#34; style=&#34;margin: 0 auto;height: 100vh;width: 100%;&#34;&gt;
		&lt;embed src=&#34;http://test.healis.eu/dbapi/DocumentationPDF/ODBgetFieldAttributes.pdf&#34; type=&#34;application/pdf &#34;style=&#34;margin: 0 auto;height: 100vh;width: 100%;&#34;&gt;
			&lt;em&gt;It seems that your browser cannot display the PDF file; Please use this &lt;a href=&#34;http://test.healis.eu/dbapi/DocumentationPDF/ODBgetFieldAttributes.pdf&#34;&gt;&lt;strong&gt;link&lt;/strong&gt; &lt;/a&gt;
			instead. Thanks!&lt;/em&gt;
	&lt;/object&gt;
&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>OrientDB Mathematica Package</title>
      <link>https://healis.eu/en/post/20151230/</link>
      <pubDate>Wed, 30 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20151230/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;The main function of this Mathematica package, &lt;code&gt;ODBapi&lt;/code&gt;, is built on top of the &lt;a href=&#34;https://reference.wolfram.com/language/ref/URLFetch.html&#34;&gt;URLFetch&lt;/a&gt; built-in function. &lt;a href=&#34;https://orientdb.org/docs/3.0.x/misc/OrientDB-REST.html&#34;&gt;OrientDB RESTful HTTP API&lt;/a&gt; commands are ported into Wolfram Language through &lt;a href=&#34;https://reference.wolfram.com/language/ref/URLFetch.html&#34;&gt;URLFetch&lt;/a&gt; and then &lt;code&gt;ODBapi&lt;/code&gt; commands are built with arguments that specify options with rules of the form &lt;code&gt;name -&amp;gt; value&lt;/code&gt;. This package has also other utility functions especially implemented for OrientDB. &lt;code&gt;OrientDB Package&lt;/code&gt; is part of the &lt;a href=&#34;https://healis.eu/en/project/wolfram_apis/&#34;&gt;Wolfram API application project&lt;/a&gt;. Visit the official page of the project for installation and testing instructions.&lt;/p&gt;
&lt;h2 id=&#34;discussion&#34;&gt;Discussion&lt;/h2&gt;
&lt;p&gt;OrientDB is a multi-model, NoSQL, DBMS based on 16 years of research. Orient Technologies, the company that supports the product, has published more than 60 releases and there is constant and frequent adaptation to user demand and the latest technology available. OrientDB is Open Source and FREE for any purpose. Good news are that this &lt;strong&gt;OrientDB Mathematica Package is also Open Source and Free&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;OrientDB is using an SQL-like programming language for managing data. We consider that this can be a turning point for innovation, adaptation, and extension of SQL language. Although SQL is widely used and familiar to many programmers, we argue that its use becomes complicated on graph data models. OrientDB SQL, i.e. &lt;strong&gt;OSQL&lt;/strong&gt;, has been extended to cover operations on Graph Model, but with the cost of adding extra SQL commands. This level of detail can be hidden from the user, and a more abstracted language can be built to cover both the Graph Model and the underlying Document Model.&lt;/p&gt;
&lt;p&gt;Moreover, normally SQL consists of a &lt;strong&gt;Data Definition Language&lt;/strong&gt;, &lt;strong&gt;Data Manipulation Language&lt;/strong&gt; and &lt;strong&gt;Data Control Language&lt;/strong&gt;. In OrientDB there are 34 different commands divided into six categories. Four of them are related to the manipulation of data structure (Graph,Schema,Index,Database) and two of them concern operations (Create-Read-Update-Delete and Utility).&lt;/p&gt;
&lt;p&gt;There is some analogy of &lt;strong&gt;OSQL&lt;/strong&gt; with the &lt;code&gt;ODBapi&lt;/code&gt; function of the &lt;code&gt;OrientDB Package&lt;/code&gt;. We are overloading the function with multiple definitions that are derived from the use of optional and mandatory arguments. This differentation is based on the commands (Add, Del, Get, Update, Import/Export, Login/Logout) and the various data structures (Server, Database, Class-Vertex-Edge, Property, Record, Document, Value). See the documentation page below for more information.&lt;/p&gt;
&lt;p&gt;We argue that this effort to transform the OrientDB SQL set of commands to a function with parameters is a good start for a uniform, universal treatment of data language (&lt;strong&gt;UDL&lt;/strong&gt;). Most important in such a design are: the parameter for the basic operation (&lt;strong&gt;ADD, DEL, GET, UPD, LNK, IRT, LOG&lt;/strong&gt;), and the parameter for the type of construct e.g. &lt;strong&gt;Database, Class, Property, Record, and Value&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;With that guideline in mind, SELECT becomes &lt;strong&gt;GET&lt;/strong&gt;, INSERT and CREATE become &lt;strong&gt;ADD&lt;/strong&gt;, TRUNCATE AND DELETE become &lt;strong&gt;DEL&lt;/strong&gt;, UPDATE and ALTER become &lt;strong&gt;UPD&lt;/strong&gt;. The current OrientDB package needs more programming effort to reach the state we described. But we foresee that it will be far more intuitive, user-friendly and easy to program than its SQL ancestor.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Most of the functionality of &lt;a href=&#34;https://orientdb.org/docs/3.0.x/misc/OrientDB-REST.html&#34;&gt;OrientDB HTTP-JSON API&lt;/a&gt; is embedded in Mathematica.  The user is able to work with OrientDB database in the native Wolfram Language environment. &lt;a href=&#34;https://healis.eu/en/project/wolfram_apis/&#34;&gt;Wolfram API application project&lt;/a&gt; in general combines fundamental bult-in data structures, &lt;a href=&#34;https://reference.wolfram.com/language/ref/List.html&#34;&gt;List&lt;/a&gt;, &lt;a href=&#34;https://reference.wolfram.com/language/ref/Rule.html&#34;&gt;Rule&lt;/a&gt;, &lt;a href=&#34;https://reference.wolfram.com/language/ref/Association.html&#34;&gt;Association&lt;/a&gt; and &lt;a href=&#34;https://reference.wolfram.com/language/ref/Dataset.html&#34;&gt;Dataset&lt;/a&gt; of the Wolfram Language with the native JSON permanent storage, retrieval  and manipulation mechanism of OrientDB database. The project is open source and free, therefore it can be downloaded from those interested in building &lt;a href=&#34;https://reference.wolfram.com/workbench/index.jsp?topic=/com.wolfram.eclipse.help/html/tasks/applications/mathematicaapps.html&#34;&gt;Mathematica application projects&lt;/a&gt; and those interested in porting data from RESTful services and NoSQL databases into Mathematica.&lt;/p&gt;
&lt;h2 id=&#34;documentation-pages&#34;&gt;Documentation Pages&lt;/h2&gt;
&lt;p&gt;For demonstration purposes, we have included here the following documentation pages in pdf format for the &lt;code&gt;ODBapi&lt;/code&gt; and &lt;code&gt;ODBgetFieldAttributes&lt;/code&gt; functions of the &lt;code&gt;OrientDB Package&lt;/code&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;div class=&#34;responsive-wrap&#34;&gt;
	&lt;object data=&#34;http://test.healis.eu/dbapi/DocumentationPDF/ODBapi.pdf&#34; type=&#34;application/pdf&#34; style=&#34;margin: 0 auto;height: 100vh;width: 100%;&#34;&gt;
		&lt;embed src=&#34;http://test.healis.eu/dbapi/DocumentationPDF/ODBapi.pdf&#34; type=&#34;application/pdf &#34;style=&#34;margin: 0 auto;height: 100vh;width: 100%;&#34;&gt;
			&lt;em&gt;It seems that your browser cannot display the PDF file; Please use this &lt;a href=&#34;http://test.healis.eu/dbapi/DocumentationPDF/ODBapi.pdf&#34;&gt;&lt;strong&gt;link&lt;/strong&gt; &lt;/a&gt;
			instead. Thanks!&lt;/em&gt;
	&lt;/object&gt;
&lt;/div&gt;
&lt;div class=&#34;responsive-wrap&#34;&gt;
	&lt;object data=&#34;http://test.healis.eu/dbapi/DocumentationPDF/ODBgetFieldAttributes.pdf&#34; type=&#34;application/pdf&#34; style=&#34;margin: 0 auto;height: 100vh;width: 100%;&#34;&gt;
		&lt;embed src=&#34;http://test.healis.eu/dbapi/DocumentationPDF/ODBgetFieldAttributes.pdf&#34; type=&#34;application/pdf &#34;style=&#34;margin: 0 auto;height: 100vh;width: 100%;&#34;&gt;
			&lt;em&gt;It seems that your browser cannot display the PDF file; Please use this &lt;a href=&#34;http://test.healis.eu/dbapi/DocumentationPDF/ODBgetFieldAttributes.pdf&#34;&gt;&lt;strong&gt;link&lt;/strong&gt; &lt;/a&gt;
			instead. Thanks!&lt;/em&gt;
	&lt;/object&gt;
&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtomicDB Mathematica AddOn (ADBM)</title>
      <link>https://healis.eu/en/post/20151009/</link>
      <pubDate>Fri, 09 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20151009/</guid>
      <description>&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Enhanced AtomicDB current API functionality with powerful new commands for Mathematica users&lt;/li&gt;
&lt;li&gt;Build interactive demos, powerful presentations and application in the vast environment of Wolfram Language with nearly 5,000 built-in functions at a fraction of time it would require to build, test, and support these, in other programming languages.&lt;/li&gt;
&lt;li&gt;Debug easily your applications by dynamic programming and interactive sessions&lt;/li&gt;
&lt;li&gt;Create multiple visualization schemes, network topologies, data mining and search indexing algorithms powered by dynamically configured GUIs for the non-experienced user.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;adbm-demo-version-installation&#34;&gt;ADBM Demo Version Installation&lt;/h2&gt;
&lt;p&gt;Here is some &lt;a href=&#34;http://test.healis.eu/atomicdb/20150409-api-windows-x86-64/nb/demoVersion-installation.nb&#34;&gt;Mathematica Notebook code&lt;/a&gt; to test the installation of the package .dll&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://test.healis.eu/atomicdb/20150409-api-windows-x86-64/zip/adb-demo.zip&#34;&gt;Unzip .DLL file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Check &lt;!-- raw HTML omitted --&gt;$LibraryPath&lt;!-- raw HTML omitted --&gt; and find out the exact location of &lt;!-- raw HTML omitted --&gt;$UserBaseLibrary&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Place the DLL file under &lt;!-- raw HTML omitted --&gt;$UserBaseLibrary&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Execute the rest of the code above.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you succeed, a new window with the title &amp;ldquo;AtomicDB Output Window&amp;rdquo; will be opened. The API package has been loaded. You can close all the windows.&lt;/p&gt;
&lt;h2 id=&#34;adbm-demo-version-testing&#34;&gt;ADBM Demo Version Testing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Download and Run &lt;a href=&#34;http://test.healis.eu/atomicdb/20150409-api-windows-x86-64/nb/demoVersion-test.nb&#34;&gt;Mathematica Notebook Demo Version of ADBM&lt;/a&gt; or view the file in a &lt;a href=&#34;http://test.healis.eu/atomicdb/20150409-api-windows-x86-64/pdf/demoVersion-test.pdf&#34;&gt;pdf format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;That will open automatically another &lt;a href=&#34;http://test.healis.eu/atomicdb/20150409-api-windows-x86-64/nb/demoVersion-output.nb&#34;&gt;Mathematica Notebook file to output the result of computation&lt;/a&gt;. View the output file in a &lt;a href=&#34;http://test.healis.eu/atomicdb/20150409-api-windows-x86-64/pdf/demoVersion-output.pdf&#34;&gt;pdf format&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;adbm-professional-version-comparison&#34;&gt;ADBM Professional Version Comparison&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Compare Mathematica Notebook Demo version testing file with the &lt;a href=&#34;http://test.healis.eu/atomicdb/20150409-api-windows-x86-64/nb/proVersion-test.nb&#34;&gt;testing of ADBM professional version&lt;/a&gt;, view that file in a &lt;a href=&#34;http://test.healis.eu/atomicdb/20150409-api-windows-x86-64/pdf/proVersion-test.pdf&#34;&gt;pdf format&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Compare Mathematica Notebook Demo Output with that of &lt;a href=&#34;http://test.healis.eu/atomicdb/20150409-api-windows-x86-64/nb/proVersion-output.nb&#34;&gt;ADBM professional output&lt;/a&gt;, view that file in a &lt;a href=&#34;http://test.healis.eu/atomicdb/20150409-api-windows-x86-64/pdf/proVersion-output.pdf&#34;&gt;pdf format&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;AtomicDB AddOn Professional Version makes it a lot easier to get the same result; it boosts functionality and programmability !&lt;/p&gt;
&lt;h2 id=&#34;adbm-pro-version-includes&#34;&gt;ADBM Pro Version Includes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Full Set of API Primitive Instructions&lt;/li&gt;
&lt;li&gt;Powerful Enhanced Commands&lt;/li&gt;
&lt;li&gt;Output Commands for any type of AtomicDB API objects&lt;/li&gt;
&lt;li&gt;Transformation Commands for any type of AtomicDB API objects&lt;/li&gt;
&lt;li&gt;Type Checking of Commands with new Mathematica Test Predicates&lt;/li&gt;
&lt;li&gt;Get Data By Key or By Value from Native Mathematica Structures&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Contact us to discuss your needs and learn more about the ADBM Pro version we use for our consultancy services and solutions we offer on top of this Add-On.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
