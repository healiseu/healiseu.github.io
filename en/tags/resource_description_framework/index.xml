<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Resource_Description_Framework on HEALIS</title>
    <link>https://healis.eu/en/tags/resource_description_framework/</link>
    <description>Recent content in Resource_Description_Framework on HEALIS</description>
    <generator>Source Themes academia (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <copyright>&amp;copy; HEALIS - Athanassios I. Hatzis, {year}</copyright>
    <lastBuildDate>Tue, 28 Feb 2017 00:00:00 +0000</lastBuildDate>
    
	    <atom:link href="https://healis.eu/en/tags/resource_description_framework/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Data Modelling Topologies of a Graph Database</title>
      <link>https://healis.eu/en/post/20170228/</link>
      <pubDate>Tue, 28 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20170228/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#definition&#34;&gt;Definition&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#graph-databases-per-data-model&#34;&gt;Graph Databases Per Data Model&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#epilogue&#34;&gt;Epilogue&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#cross-references&#34;&gt;Cross-References&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;

&lt;h2 id=&#34;definition&#34;&gt;Definition&lt;/h2&gt;
&lt;p&gt;There is a lot of confusion with the definition of graph databases. In my opinion, any definition that avoids any reference to the semantics of nodes and edges or their internal structure is preferable. Failing to follow this guideline, it is unavoidable to favor specific implementations, e.g. &lt;a href=&#34;http://neo4j.com/developer/graph-database/&#34;&gt;Property Graph Databases&lt;/a&gt; or &lt;a href=&#34;http://en.wikipedia.org/wiki/Triplestore&#34;&gt;Triple Stores&lt;/a&gt;, and you may easily become myopic to other types that are based on different models, e.g. &lt;a href=&#34;http://hypergraphdb.org/&#34;&gt;hypergraph databases&lt;/a&gt;, or different data storage paradigms, e.g. &lt;a href=&#34;http://en.wikipedia.org/wiki/Key-value_database&#34;&gt;key-value stores&lt;/a&gt;. Therefore, I propose we adopt a vendor neutral definition, such as the following one, which cannot exclude any future type of graph database.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;A Graph Database is a database that uses a graph topology, i.e. vertices and edges, to manage information at the conceptual level independent of the logical and physical implementation of the graph data structure - &lt;a href=&#34;https://www.linkedin.com/pulse/data-modelling-topologies-graph-database-athanassios-i-hatzis-phd&#34;&gt;Athanassios I. Hatzis&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;graph-databases-per-data-model&#34;&gt;Graph Databases Per Data Model&lt;/h2&gt;
&lt;p&gt;That said, there are many differences regarding to the &lt;a href=&#34;https://en.wikipedia.org/wiki/Database_abstraction_layer&#34;&gt;abstraction layer&lt;/a&gt; of databases. These affect everything â€” visualization, query language, indexing, scaling, and transactions. Now, let me focus on the conceptual/logical layer, where my work is based. Depending on the structure of nodes and edges, one can describe the following three different data models.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Property Graph Data Model&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Directed Labeled Graph&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Entity-centric with embedded properties and edges with bidirectional linking to nodes&lt;/li&gt;
&lt;li&gt;Neo4J, OrientDB, ArrangoDB, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Triple/Quadruple Data Model&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Directed Labeled Graph&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Edge-centric with unidirectional linking on vertices&lt;/li&gt;
&lt;li&gt;GraphDB, AllegroGraph, OpenLink Virtuoso, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Associative Data Model&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Hypergraph/Bipartite Graph&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Hypernodes, Hyperedges with bidirectional linking&lt;/li&gt;
&lt;li&gt;Topic Map Data Model, R3DM/S3DM, X10SYS (AtomicDB), HypergraphDB, Qlik Technology&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;There are two main differences between &lt;strong&gt;(1)&lt;/strong&gt; and &lt;strong&gt;(2)&lt;/strong&gt;. First, the type of edges in a property graph, by definition, is bidirectional. You can traverse any edge both ways, despite the fact there is a direction on the edge. On the contrary, with RDF, you have to define two labeled edges with opposite directions to achieve bidirectional linking. And secondly, in literal triples, object parts are properties of a subject part, but they are not first-class citizens and they are not embedded inside the structure of Entity nodes of a property graph.&lt;/p&gt;
&lt;p&gt;I left the associative data model as the last thing to mention. &lt;strong&gt;R3DM/S3DM is the reincarnation of Topic Maps&lt;/strong&gt;, the de facto standard for the representation of associations. The following series of posts on associative data modeling is written with a hands-on practice style. It is an attempt to clear the information glut of many-to-many relationships (a.k.a associations) with a thorough examination of well-known data models and at the same time introduce R3DM/S3DM to the public.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://healis.eu/en/post/20160825/&#34;&gt;Part 1/6&lt;/a&gt; - Relation, Relationship, and Association&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://healis.eu/en/post/20160902/&#34;&gt;Part 2/6&lt;/a&gt; - Association in Topic Map Data Model&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://healis.eu/en/post/20160913/&#34;&gt;Part 3/6&lt;/a&gt; - Association in Property Graph Data Model&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://healis.eu/en/post/20161220/&#34;&gt;Part 4/6&lt;/a&gt; - Association in RDF Data Model and Sentences associative data model&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://healis.eu/en/post/20170211/&#34;&gt;Part 5/6&lt;/a&gt; - Qlik Associative Mode&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://healis.eu/en/post/20170412/&#34;&gt;Part 6/6&lt;/a&gt; - R3DM/S3DM Associative Semiotic Hypergraph Data Model&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;epilogue&#34;&gt;Epilogue&lt;/h2&gt;
&lt;p&gt;The verdict from this quick review on graph databases is that I have reasons to believe that associative data modeling is far more powerful and expressive than the other two. I foresee that DBMS vendors that will incorporate in their products R3DM/S3DM technology will eventually have a significant competitive advantage.&lt;/p&gt;
&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/data-modelling-topologies-graph-database-athanassios-i-hatzis-phd&#34;&gt;LinkedIn - 27/02/2017 Pulse Article&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/hp/update/6263485831336599552&#34;&gt;LinkedIn - 28/04/2017 Post about Robin Bloor on driving BI in real-time&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/hp/update/6263495928863432704&#34;&gt;LinkedIn - 28/04/2017 Post about Thomas Frisendal on atomic data&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/groups/129217&#34;&gt;LinkedIn - 04/05/2017 Featured on Semantic Web Research Group&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/groups/6514034&#34;&gt;LinkedIn - 04/05/2017 Featured on Computational Semiotics Group&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/groups/3732032/3732032-6265904280549629955&#34;&gt;LinkedIn - 04/05/2017 IT Professionals Group&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/groups/62438/62438-6265907308967137283&#34;&gt;LinkedIn - 04/05/2017 Business Analytics Group&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/groups/1814785/1814785-6265911933967433731&#34;&gt;LinkedIn - 04/05/2017 Big Data Analytics Strategy Group&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/groups/23006/23006-6265914043991752705&#34;&gt;LinkedIn - 04/05/2017 Big Data Analytics BI &amp;amp; Visualization Group&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/feed/update/urn:li:activity:6273393604094492672/&#34;&gt;LinkedIn - 25/05/2017 Post Comment SQL to NoSQL translator&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/data-modelling-topologies-of-a-graph-database&#34;&gt;DZone    - 17/03/2017 Article&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.facebook.com/permalink.php?story_fbid=1260208257411844&amp;id=811804875585520&#34;&gt;Facebook - 04/05/2017 HEALIS Page&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.datasciencecentral.com/profiles/blogs/data-modelling-topologies-of-a-graph-database&#34;&gt;Data Science Central - 17/06/2017 Blog Post&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>A Quick Guide on How to Prevail in the Graph Database Arena</title>
      <link>https://healis.eu/en/post/20170213/</link>
      <pubDate>Mon, 13 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20170213/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#definition-of-graph-databases&#34;&gt;Definition of Graph Databases&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#many-to-many-relationships&#34;&gt;Many-to-many Relationships&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#multi-model-database-engine&#34;&gt;Multi-model Database Engine&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#physical-versus-logical-perspective&#34;&gt;Physical versus Logical Perspective&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#conceptual-framework&#34;&gt;Conceptual Framework&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#query-language&#34;&gt;Query Language&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#business-analytics&#34;&gt;Business Analytics&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#epilogue&#34;&gt;Epilogue&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#cross-references&#34;&gt;Cross-References&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;

&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;There are endless discussions in the databases arena about which DBMS is best suited for operational or data warehousing analytics, which one is the most efficient for online transaction processing, or which one is suitable for semantic integration. Recently graph databases are growing in popularity, especially in the enterprise space, and perhaps that adds more headache on those vendors that try to differentiate from competition and on those clients that are completely uncertain how to embrace this database technology.&lt;/p&gt;
&lt;h2 id=&#34;definition-of-graph-databases&#34;&gt;Definition of Graph Databases&lt;/h2&gt;
&lt;p&gt;Recently &lt;a href=&#34;http://www.bloor.eu/&#34;&gt;Bloor&lt;/a&gt; published a report about &lt;a href=&#34;http://www.bloorresearch.com/research/market-report/graph-and-rdf-databases-2016/&#34;&gt;Graph and RDF Databases&lt;/a&gt;. The author, &lt;a href=&#34;http://www.bloorresearch.com/profiles/philip-howard/https://en.wikipedia.org/wiki/ACID&#34;&gt;Philip Howard&lt;/a&gt;, claims that &amp;ldquo;&lt;em&gt;the difference between a true graph product and a triple store is that the former supports index free adjacency (which means you can traverse a graph without needing an index) and the latter doesn&amp;rsquo;t&lt;/em&gt;&amp;rdquo;. On the contrary Weinberger, CEO of ArrangoDB, argues that this is not a fundamental criterion on what is a graph database. In a post titled &amp;ldquo;&lt;a href=&#34;https://www.arangodb.com/2016/04/index-free-adjacency-hybrid-indexes-graph-databases/&#34;&gt;Index Free Adjacency or Hybrid Indexes for Graph Databases&lt;/a&gt;&amp;rdquo; he proposes that the definition of graph database remains&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;a database that uses graph structures for semantic queries with nodes, edges and properties to represent and store data independent of the way the data is stored internally - Claudius Weinberger&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Indeed, in the same Bloor report a distinction between native and non-native graph databases is made based on their engine. In my opinion, any definition that avoids any reference to the semantics of nodes and edges or their internal structure is preferable. Failing to follow this guideline, it is unavoidable to favor specific implementations, e.g. Property Graph Databases or Triple Stores, and you may easily become myopic to other types that are based on different models, e.g. hypergraph databases, or different data storage paradigms, e.g. key-value stores. Therefore, I propose we adopt a vendor neutral definition, such as the following one, which cannot exclude any future type of graph database.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;A Graph Database is a database that uses a graph topology, i.e. vertices and edges, to manage information at the conceptual level independent of the logical and physical implementation of the graph data structure - Athanassios I. Hatzis, 28th February 2017&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;many-to-many-relationships&#34;&gt;Many-to-many Relationships&lt;/h2&gt;
&lt;p&gt;In another recently published Spotlight paper by Bloor, &lt;a href=&#34;http://www.bloorresearch.com/research/spotlight/all-about-graphs-a-primer/&#34;&gt;&amp;ldquo;All about graphs: a primer&amp;rdquo;&lt;/a&gt;, the author discusses the Graph data model and highlights the representational differences of a many-to-many relationship including those of bipartite, hypergraph and associative graphs. He observes that&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;unlike other new database approaches, graphs cannot easily be subsumed by the leading relational database vendors because the architectural constraints of graphs do not fit easily within the relational paradigm - Philip Howard&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;He mentions that the two main variants on entity relationships are labeled property graphs and &lt;code&gt;subject-predicate-object&lt;/code&gt; triples. In practice, although the idea of relationships (associations) between entities is at the heart of Peter Chen&amp;rsquo;s Entity-Relationship model, &lt;a href=&#34;https://healis.eu/en/post/20160825#fig2&#34;&gt;&lt;strong&gt;Fig.2&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;https://healis.eu/en/post/20160825#fig3&#34;&gt;&lt;strong&gt;Fig.3&lt;/strong&gt;&lt;/a&gt;, there are subtle dissimilarities in its implementation on various graph databases. &lt;a href=&#34;https://healis.eu/en/about#athanassios&#34;&gt;A. Hatzis&lt;/a&gt;, in a &lt;a href=&#34;https://healis.eu/en/post/20170420/&#34;&gt;series of posts on associative data modeling&lt;/a&gt;, that is written with a hands-on practice style, attempts to clear the information glut of this topic with a thorough examination of graph data models.&lt;/p&gt;
&lt;h2 id=&#34;multi-model-database-engine&#34;&gt;Multi-model Database Engine&lt;/h2&gt;
&lt;p&gt;The graph engine and the type of data model are critical factors for any graph database. Therefore it is not strange that many vendors have started marketing their DBMS as a multi-model. We have extensive and long experience with two such products, &lt;a href=&#34;http://orientdb.com/orientdb/&#34;&gt;OrientDB&lt;/a&gt; and &lt;a href=&#34;http://docs.intersystems.com/latest/csp/docbook/DocBook.UI.Page.cls?KEY=GIC_intro&#34;&gt;Intersystems Cache&lt;/a&gt;. The former supports Graph, Document, Key/Value, and Object models, the latter is an object database with relational access, integrated support for JSON documents and a multidimensional key-value storage mechanism that can be easily extended to cover Graph data model. Generally speaking, we have reasons to believe that &lt;strong&gt;multi-model DBMS will dominate the database market&lt;/strong&gt;. Currently OrientDB has become a leading player in the graph databases and Intersystems Cache is one of the best operational DBMS according to &lt;a href=&#34;https://www.gartner.com/doc/3467318/magic-quadrant-operational-database-management&#34;&gt;Magic Quadrant report&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;physical-versus-logical-perspective&#34;&gt;Physical versus Logical Perspective&lt;/h2&gt;
&lt;p&gt;Not only has a multi-model database been flexible with its logical schema, but it also has a unified storage data architecture. Although the developer should hardly need access to the physical implementation details of the storage engine, an API for direct use of the engine is desirable and beneficial for many reasons. Most important, this kind of architecture allows someone to build a customized database management system. In theory, ANSI/SPARC three level architecture (external, conceptual/logical and physical) is an effort to allow these three perspectives to be relatively independent of each other, but &lt;strong&gt;in practice the front-end of a DBMS is most often strongly dependent on the back-end storage data model&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;A &lt;a href=&#34;https://en.wikipedia.org/wiki/Loose_coupling&#34;&gt;loose coupling&lt;/a&gt; can be achieved with associative/multidimensional arrays. No matter what is their physical implementation, i.e. hash tables or trees, based on this abstract data type you can &lt;a href=&#34;http://mgateway.com/docs/universalNoSQL.pdf&#34;&gt;model all four NoSQL database types&lt;/a&gt;, (Key/Value, Tabular/Columnar, Document, Graph). For one reason or another, we are of the opinion that &lt;strong&gt;associative/multidimensional arrays will eventually prevail in the world of databases&lt;/strong&gt;. There is already strong competition for their best physical implementation and sparse, column-family store, databases have proven to be very popular (&lt;a href=&#34;http://hbase.apache.org/book.html#architecture&#34;&gt;HBase&lt;/a&gt;, &lt;a href=&#34;http://www.hypertable.com/documentation/architecture/&#34;&gt;Hypertable&lt;/a&gt;, &lt;a href=&#34;https://cloud.google.com/bigtable/&#34;&gt;BigTable&lt;/a&gt;, &lt;a href=&#34;http://docs.intersystems.com/latest/csp/docbook/DocBook.UI.Page.cls?KEY=GIC_intro&#34;&gt;Intersystems Cache&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;There are other properties that are crucial for &lt;a href=&#34;https://en.wikipedia.org/wiki/Operational_database&#34;&gt;operational database management systems&lt;/a&gt; such as &lt;a href=&#34;https://en.wikipedia.org/wiki/ACID&#34;&gt;ACID transactions&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Distributed_database&#34;&gt;distributed data architecture&lt;/a&gt;, and &lt;a href=&#34;https://en.wikipedia.org/wiki/Scalability&#34;&gt;scalability&lt;/a&gt;. Whether we are talking for a multi-model or single model graph databases, there is a tendency to use them for on-line transaction processing therefore these properties are worth having. And again in terms of architectural design there is always the problem of how to achieve a loose coupling between the physical structures of a database and the application logic.&lt;/p&gt;
&lt;h2 id=&#34;conceptual-framework&#34;&gt;Conceptual Framework&lt;/h2&gt;
&lt;p&gt;With that said it brings us to the question on what kind of logical/conceptual data model architecture to use. Our R3DM/S3DM framework is based on the powerful theory of the &lt;a href=&#34;https://en.wikipedia.org/wiki/Triangle_of_reference&#34;&gt;semiotic triangle&lt;/a&gt;. We use numerical vectors (signs), to encode abstract things in our mind (signified) to which the sign refers, e.g. Person, name, Car, model. We associate these with  data containers-forms that the sign takes for the storage of data values (signifier), i.e. primitive data types (see also &lt;a href=&#34;https://en.wikipedia.org/wiki/Signified_and_signifier&#34;&gt;Signified and Signifier&lt;/a&gt;). This trilateral principle of our framework permits a uniform treatment of semantics, syntax and storage of information based on a symbolic representation. This way we define a fundamental, atomic information resource unit, &lt;a href=&#34;https://healis.eu/en/post/20150320/&#34;&gt;(AIR)&lt;/a&gt;. Those units, in turn, can be easily shaped to form any tabular, hierarchical, or graph data structure in a unified way. For example, study this &lt;a href=&#34;https://healis.eu/en/post/20170211#r3dm-hypergraph-representation&#34;&gt;R3DM hypergraph representation&lt;/a&gt; of Qlikview associative model. &lt;a href=&#34;https://en.wikipedia.org/wiki/Granularity&#34;&gt;Data granularity&lt;/a&gt; can be also deeply connected and related to the definition of a fundamental unit of processing.&lt;/p&gt;
&lt;p&gt;Based on this single primitive construct as a building block, (AIR), we have implemented seven type systems for an upper level management of any DBMS. These are:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;SYSTEM&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;SHORTNAME&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1. SYS_Dataset&lt;/td&gt;
&lt;td&gt;DSS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2. SYS_DomainModel&lt;/td&gt;
&lt;td&gt;DMS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3. SYS_EntityType&lt;/td&gt;
&lt;td&gt;ETS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4. SYS_AttributeType&lt;/td&gt;
&lt;td&gt;ATS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5. SYS_ValueType&lt;/td&gt;
&lt;td&gt;VTS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6. SYS_LinkType&lt;/td&gt;
&lt;td&gt;LTS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7. SYS_Database&lt;/td&gt;
&lt;td&gt;DBS&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;We characterize Datasets, Domain Models (schemas), Entities, Attributes, etc, as information resources, values are information realization and our AIR units that represent everything are called information representations or simply references. Our current implementation phase has been completed on top of OrientDB and a forthcoming article will present R3DM/S3DM architecture in detail. In the past, &lt;a href=&#34;https://www.linkedin.com/pulse/why-google-shuts-down-freebase-30th-june-2015-hatzis-phd&#34;&gt;Freebase collaborative knowledge graph&lt;/a&gt; had a type system that was built on primitive constructs.&lt;/p&gt;
&lt;h2 id=&#34;query-language&#34;&gt;Query Language&lt;/h2&gt;
&lt;p&gt;Yet another decisive norm in databases is the &lt;a href=&#34;https://en.wikipedia.org/wiki/Query_language&#34;&gt;query language&lt;/a&gt;. With RDF directed, labeled graph data format and with &lt;a href=&#34;https://en.wikipedia.org/wiki/Triplestore&#34;&gt;RDF store&lt;/a&gt; databases respectively, e.g. &lt;a href=&#34;https://virtuoso.openlinksw.com/&#34;&gt;OpenLink Virtuoso&lt;/a&gt;, &lt;a href=&#34;http://allegrograph.com/allegrograph/&#34;&gt;AllegroGraph&lt;/a&gt; and &lt;a href=&#34;http://ontotext.com/products/graphdb/&#34;&gt;Ontotext GraphDB&lt;/a&gt;, &lt;a href=&#34;https://www.w3.org/TR/rdf-sparql-query/&#34;&gt;SPARQL&lt;/a&gt; query language is a standard way to retrieve data. On the contrary the query language of property graph databases varies a lot. There are similar to SQL APIs such as those of &lt;a href=&#34;http://orientdb.com/orientdb/&#34;&gt;OrientDB&lt;/a&gt; and &lt;a href=&#34;https://www.arangodb.com/&#34;&gt;ArrangoDB&lt;/a&gt;, &lt;a href=&#34;https://neo4j.com/&#34;&gt;Neo4J&lt;/a&gt; is using its own Cypher declarative graph query language and there is also the Gremlin open-source graph programming language.&lt;/p&gt;
&lt;p&gt;Another approach is that of &lt;a href=&#34;http://graphql.org/&#34;&gt;GraphQL&lt;/a&gt; which is similar to &lt;a href=&#34;https://en.wikipedia.org/wiki/Freebase#Overview&#34;&gt;Freebase MQL query language&lt;/a&gt;. Queries are shaped in JSON hierarchical format with patterns that follow the schema of the graph database.&lt;/p&gt;
&lt;p&gt;We have developed a &lt;a href=&#34;https://healis.eu/en/post/20160210/&#34;&gt;functional RESTful API&lt;/a&gt; that can be served as a prototype for a uniform, universal treatment of data language. Commands and their parameters can become more efficient and they can be simplified if we take on account the hierarchical relationship of Server, Database, Class, Property and Record containers. There are five sets of commands for getting, updating, deleting, adding and linking information. Current implementation is built with Wolfram Language and we will expose more details in a forthcoming article where we analyze R3DM/S3DM architecture.&lt;/p&gt;
&lt;h2 id=&#34;business-analytics&#34;&gt;Business Analytics&lt;/h2&gt;
&lt;p&gt;Last but not least, there is an emerging need for databases that can function as both analytic and operational. In particular, the modern data warehouse should unify all client&amp;rsquo;s transactional databases as well as integrate other external data sources that enable data cleansing, validation and enhancement. Not only that, but for quick and smart business analytics the interface should be both user friendly and functionally powerful. We are aware of such a player in this market segment with a technology that possess similar features to our R3DM/S3DM framework. This is the reason that we devoted &lt;a href=&#34;https://healis.eu/en/post/20170211/&#34;&gt;one of our articles&lt;/a&gt; to describe &lt;a href=&#34;http://www.qlik.com/us/products/qlikview&#34;&gt;QlikView&amp;rsquo;s&lt;/a&gt; unique, award-winning, in-memory associative technology.&lt;/p&gt;
&lt;h2 id=&#34;epilogue&#34;&gt;Epilogue&lt;/h2&gt;
&lt;p&gt;Make no mistake, relational databases are the past of computer database technology. Graph databases are the present and the future. This quick review on what we considered important criteria for graph database related technology products might leave the reader in more perplexity than satisfaction. This is our perspective, we wanted to share some of our knowledge with experts and chief technology persons on this field so that we could discuss the matter in more detail with them. The future will show in how many of these discussion topics we were right.&lt;/p&gt;
&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/quick-guide-how-prevail-graph-database-arena-hatzis-phd&#34;&gt;LinkedIn - Published Posts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/129217/129217-6236916644548091906&#34;&gt;LinkedIn - Semantic Web Research Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/2552968/2552968-6236916721563901952&#34;&gt;LinkedIn - Graph Databases Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/108904/108904-6236916684649828353&#34;&gt;LinkedIn - Data Warehouse &amp;amp; Business Intelligence Architects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/6514034/6514034-6236916721589059584&#34;&gt;LinkedIn - Computational Semiotics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/3750024/3750024-6236916585051881475&#34;&gt;LinkedIn - Database &amp;amp; Data Store Professionals â˜… NoSQL â˜… NewSQL â˜… Relational&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/73235/73235-6236915823848628225&#34;&gt;LinkedIn - Database Developers and Architects Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/2357895/2357895-6273464481200902148&#34;&gt;LinkedIn - Data Modeling Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/hp/update/6236886400814452736&#34;&gt;LinkedIn - Update&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/45183/45183-6236916721589059585&#34;&gt;LinkedIn - Database Experts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/4344857/4344857-6236916644548091907&#34;&gt;LinkedIn - OrientDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/1969109/1969109-6236915855192657924&#34;&gt;LinkedIn - MUMPS and Cache Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.quora.com/What-are-the-criteria-to-differentiate-graph-databases/answer/Athanassios-Hatzis-PhD&#34;&gt;Quora - Question and Answer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/a-quick-guide-to-prevail-in-the-graph-database-arena&#34;&gt;DZone - Article&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.datasciencecentral.com/profiles/blogs/a-quick-guide-on-how-to-prevail-in-the-graph-database-arena&#34;&gt;Data Science Central - Blog Post&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://community.intersystems.com/post/how-intersystems-cach%C3%A9-fits-graph-database-arena&#34;&gt;Intersystems Developer Community - 21/2/2017 Post about how Intersystems Cache fits in the Graph Database Arena&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Association in RDF Data Model</title>
      <link>https://healis.eu/en/post/20161220/</link>
      <pubDate>Tue, 20 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://healis.eu/en/post/20161220/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#introduction-to-rdf&#34;&gt;Introduction to RDF&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#rdf-and-linked-data&#34;&gt;RDF and Linked Data&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#association-in-rdf&#34;&gt;Association in RDF&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#associative-model&#34;&gt;Associative Model&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#association-in-r3dm&#34;&gt;Association in R3DM&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#discussion&#34;&gt;Discussion&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#acknowledgements&#34;&gt;Acknowledgements&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#cross-references&#34;&gt;Cross-References&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;

&lt;h2 id=&#34;introduction-to-rdf&#34;&gt;Introduction to RDF&lt;/h2&gt;
&lt;p&gt;In the previous post, &lt;a href=&#34;https://healis.eu/en/post/20160913/&#34;&gt;Part-3&lt;/a&gt;, of this series we explored the Property Graph data model. It is now time to write about another Graph data model with a long history behind it, the Resource-Description-Framework (&lt;a href=&#34;https://en.wikipedia.org/wiki/Resource_Description_Framework&#34;&gt;RDF&lt;/a&gt;). We will see how we can define an association in RDF and what are the differences with other data models that we analyzed in previous posts of our series.&lt;/p&gt;
&lt;p&gt;RDF is a graph-based data model that has been designed to represent information as a &lt;strong&gt;labeled directed graph&lt;/strong&gt;. In RDF, a description of a resource, i.e. any type of thing, is represented as a number of triples. Each triple has a subject, predicate, and object. Alternatively if you want to think in terms of &lt;a href=&#34;https://en.wikipedia.org/wiki/Entity%E2%80%93relationship_model&#34;&gt;Entity-Relationship&lt;/a&gt; model, these three parts of the triple become the Entity-Attribute-Value. This is also known as the &lt;a href=&#34;https://en.wikipedia.org/wiki/Entity%E2%80%93attribute%E2%80%93value_model&#34;&gt;EAV&lt;/a&gt; model. For instance the Entity subject &lt;code&gt;Part:998&lt;/code&gt; of our &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/SupplierPartCatalogue/tsv/Parts.tsv&#34;&gt;Parts&lt;/a&gt; table in the &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/SupplierPartCatalogue&#34;&gt;example data set&lt;/a&gt; of our series can be &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/SupplierPartCatalogue/ttl/parts.ttl&#34;&gt;serialized&lt;/a&gt; in Turtle syntax as :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Part:998 rdf:label        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fire Hydrant Cap&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@en&lt;/span&gt; ;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         schema:color     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Red&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@en&lt;/span&gt; ;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         schema:weight    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;7.2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^^&lt;/span&gt;xsd:&lt;span style=&#34;color:#66d9ef&#34;&gt;double&lt;/span&gt; ;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         schema:unitText  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lb&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@en&lt;/span&gt; ;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         dc:identifier    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;998&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^^&lt;/span&gt;xsd:&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; .
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;These &lt;code&gt;rdf:label&lt;/code&gt;, &lt;code&gt;schema:color&lt;/code&gt;, &lt;code&gt;schema:weight&lt;/code&gt;, &lt;code&gt;schema:unitText&lt;/code&gt;, &lt;code&gt;dc:identifier&lt;/code&gt; are attributes of this Entity instance and &amp;ldquo;Fire Hydrant Cap&amp;rdquo;, &amp;ldquo;Red&amp;rdquo;, &amp;ldquo;7.2&amp;rdquo;, &amp;ldquo;lb&amp;rdquo; and &amp;ldquo;998&amp;rdquo; are atomic values with an accompanied data type, see also &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig7&#34;&gt;&lt;strong&gt;Fig. 7&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;rdf-and-linked-data&#34;&gt;RDF and Linked Data&lt;/h2&gt;
&lt;p&gt;But RDF is not like any other data model, it has been selected from &lt;a href=&#34;https://en.wikipedia.org/wiki/World_Wide_Web_Consortium&#34;&gt;W3C&lt;/a&gt; as one of the Web technologies, together with &lt;a href=&#34;https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol&#34;&gt;HTTP&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/Uniform_resource_identifier&#34;&gt;URIs&lt;/a&gt;, to &lt;strong&gt;extend the hyperlinking of documents to a set of best practices for publishing and interlinking structured data on global scale&lt;/strong&gt;. Today the term &lt;a href=&#34;https://en.wikipedia.org/wiki/Linked_data&#34;&gt;Linked Data&lt;/a&gt; refers to these standards, and the extension of the Web is also known as the &lt;a href=&#34;https://en.wikipedia.org/wiki/Semantic_Web&#34;&gt;Semantic Web&lt;/a&gt;. The predecessor of RDF, the &lt;a href=&#34;https://en.wikipedia.org/wiki/Semantic_network&#34;&gt;Semantic Network Model&lt;/a&gt;, was formed in the early 1960s. The main difference is that arcs and nodes in RDF are identified using HTTP URIs and dereferenced (i.e., looked up) over the HTTP protocol. If we use &lt;a href=&#34;https://en.wikipedia.org/wiki/N-Triples&#34;&gt;N-Triples&lt;/a&gt; syntax to serialize the same resource &lt;code&gt;Part:998&lt;/code&gt; we take:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#75715e&#34;&gt;//example.org/spc/Part/998&amp;gt;   &amp;lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#label&amp;gt;  &amp;#34;Fire Hydrant Cap&amp;#34;@en .&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#75715e&#34;&gt;//example.org/spc/Part/998&amp;gt;   &amp;lt;http://schema.org/color&amp;gt;                           &amp;#34;Red&amp;#34;@en .&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#75715e&#34;&gt;//example.org/spc/Part/998&amp;gt;   &amp;lt;http://schema.org/weight&amp;gt;                          &amp;#34;7.2&amp;#34;^^&amp;lt;http://www.w3.org/2001/XMLSchema#double&amp;gt; .&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#75715e&#34;&gt;//example.org/spc/Part/998&amp;gt;   &amp;lt;http://schema.org/unitText&amp;gt;                        &amp;#34;lb&amp;#34;@en .&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#75715e&#34;&gt;//example.org/spc/Part/998&amp;gt;   &amp;lt;http://purl.org/dc/elements/1.1/identifier&amp;gt;        &amp;#34;998&amp;#34;^^&amp;lt;http://www.w3.org/2001/XMLSchema#int&amp;gt; .&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Notice that the &lt;code&gt;object&lt;/code&gt; part of the triple is an &lt;a href=&#34;https://www.w3.org/TR/rdf11-concepts/#section-Datatypes&#34;&gt;RDF literal&lt;/a&gt; and datatypes are used to represent values such as strings, numbers and dates. These triples are called &lt;strong&gt;Literal triples&lt;/strong&gt; and describe the properties of resources. In our example these &lt;code&gt;literal triples&lt;/code&gt; describe five properties of the &lt;code&gt;Part:998&lt;/code&gt; resource. This type of RDF triples is distinguished from the other type which is &lt;strong&gt;RDF Links&lt;/strong&gt; and describe the relationship between two resources. For example if we want to express with the same syntax all the vendors of &lt;code&gt;Part:998&lt;/code&gt; we will form these triples:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#75715e&#34;&gt;//example.org/spc/Part/998&amp;gt;   &amp;lt;http://www.wikidata.org/property/hasVendor&amp;gt;  &amp;lt;http://example.org/spc/Supplier/1081&amp;gt; .&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#75715e&#34;&gt;//example.org/spc/Part/998&amp;gt;   &amp;lt;http://www.wikidata.org/property/hasVendor&amp;gt;  &amp;lt;http://example.org/spc/Supplier/1082&amp;gt; .&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#75715e&#34;&gt;//example.org/spc/Part/998&amp;gt;   &amp;lt;http://www.wikidata.org/property/hasVendor&amp;gt;  &amp;lt;http://example.org/spc/Supplier/1083&amp;gt; .&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#75715e&#34;&gt;//example.org/spc/Part/998&amp;gt;   &amp;lt;http://www.wikidata.org/property/hasVendor&amp;gt;  &amp;lt;http://example.org/spc/Supplier/1084&amp;gt; .&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is also the equivalent result set at &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig1&#34;&gt;&lt;strong&gt;Fig. 1&lt;/strong&gt;&lt;/a&gt; presented in a compact form from the following &lt;a href=&#34;https://www.w3.org/TR/rdf-sparql-query/&#34;&gt;SPARQL&lt;/a&gt; query:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;Suppliers &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; Part &lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; Supplier: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;example.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;spc&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;Supplier&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; Part: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;example.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;spc&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;Part&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; xsd: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;www.w3.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2001&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;XMLSchema&lt;span style=&#34;color:#f92672&#34;&gt;#&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; wd: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;www.wikidata.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;property&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; dc: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;purl.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;dc&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;elements&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;sup &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	BIND(wd:hasVendor &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;p)    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Start&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt that has id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt dc:identifier &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;998&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^^&lt;/span&gt;xsd:int .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; Find &lt;span style=&#34;color:#66d9ef&#34;&gt;all&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt; items (&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat) &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; a reference &lt;span style=&#34;color:#66d9ef&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat wd:hasPart &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;For&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;any&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt; item (&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat) find the vendor that supplies &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;sup .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;part998-suppliers-result-set.jpg&#34; data-caption=&#34;Result set from SPARQL query to find the suppliers of Part:98&#34;&gt;

&lt;img src=&#34;part998-suppliers-result-set.jpg&#34; alt=&#34;Result set from SPARQL query to find the suppliers of Part:98&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Result set from SPARQL query to find the suppliers of Part:98
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;In &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig1&#34;&gt;&lt;strong&gt;Fig. 1&lt;/strong&gt;&lt;/a&gt; The URI with &lt;a href=&#34;https://en.wikipedia.org/wiki/QName&#34;&gt;QName&lt;/a&gt; &lt;code&gt;wd:hasVendor&lt;/code&gt;,  in the &lt;code&gt;predicate&lt;/code&gt; position defines the type of relationship between a &lt;code&gt;subject&lt;/code&gt; with QName &lt;code&gt;Part:998&lt;/code&gt; and an &lt;code&gt;object&lt;/code&gt; with any of these QNames (&lt;code&gt;Supplier:1081&lt;/code&gt;, &lt;code&gt;Supplier:1082&lt;/code&gt;, &lt;code&gt;Supplier:1083&lt;/code&gt;, &lt;code&gt;Supplier:1084&lt;/code&gt;). Both subject and object URIs are in the same namespace (&lt;code&gt;http://example.org/spc/&lt;/code&gt;), these are called &lt;strong&gt;Internal RDF links&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;One way to think these &lt;strong&gt;RDF links&lt;/strong&gt; is as a &lt;strong&gt;labeled directed graph&lt;/strong&gt;. Each triple is a directed arc that connects a subject, e.g. &lt;code&gt;Part:998&lt;/code&gt;, with an object, e.g. &lt;code&gt;Supplier:1084&lt;/code&gt;,  and the predicate is the label of the arc, &lt;code&gt;wd:hasVendor&lt;/code&gt;. For example the previous result set can be represented with the following graph in &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig2&#34;&gt;&lt;strong&gt;Fig. 2&lt;/strong&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;gruff-part998-suppliers.jpg&#34; data-caption=&#34;Suppliers of Part:998&#34;&gt;

&lt;img src=&#34;gruff-part998-suppliers.jpg&#34; alt=&#34;Suppliers of Part:998&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Suppliers of Part:998
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;But the graph for the data model of our example is slightly more complicated because there are intermediate nodes, i.e. inventory items that represent records from the &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/SupplierPartCatalogue/tsv/Catalog.tsv&#34;&gt;Catalog&lt;/a&gt; table, that &lt;a href=&#34;https://en.wikipedia.org/wiki/Associative_entity&#34;&gt;&lt;strong&gt;associate&lt;/strong&gt;&lt;/a&gt;, bridge &lt;strong&gt;Suppliers&lt;/strong&gt; with &lt;strong&gt;Parts&lt;/strong&gt; &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig3&#34;&gt;&lt;strong&gt;Fig. 3&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;gruff-part998-suppliers-and-inventory-items.jpg&#34; data-caption=&#34;Suppliers of Part:998 with intermediate Inventory Items nodes&#34;&gt;

&lt;img src=&#34;gruff-part998-suppliers-and-inventory-items.jpg&#34; alt=&#34;Suppliers of Part:998 with intermediate Inventory Items nodes&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Suppliers of Part:998 with intermediate Inventory Items nodes
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Another distinction of &lt;strong&gt;RDF links&lt;/strong&gt; to &lt;strong&gt;Outgoing&lt;/strong&gt; and &lt;strong&gt;Incoming&lt;/strong&gt; can be seen in &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig3&#34;&gt;&lt;strong&gt;Fig. 3&lt;/strong&gt;&lt;/a&gt;. For example &lt;code&gt;Part:998&lt;/code&gt; has four incoming &lt;strong&gt;RDF links&lt;/strong&gt; of type &lt;code&gt;wd:hasPart&lt;/code&gt; and &lt;code&gt;Item:7&lt;/code&gt; has two outgoing &lt;strong&gt;RDF links&lt;/strong&gt; of type &lt;code&gt;wd:hasPart&lt;/code&gt; and &lt;code&gt;wd:hasVendor&lt;/code&gt; respectively.&lt;/p&gt;
&lt;p&gt;In fact the SPARQL query above has been written taking in consideration this graph. In order to traverse the nodes you must know both the type of &lt;strong&gt;RDF link&lt;/strong&gt; and its direction. &lt;strong&gt;In RDF graph data model edges are unidirectional&lt;/strong&gt;. In order to define bidirectional edges we have to define both outgoing and incoming  &lt;strong&gt;RDF links&lt;/strong&gt; for each node, i.e. two predicates &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig4&#34;&gt;&lt;strong&gt;Fig. 4&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;gruff-part998-suppliers-bidirectional.jpg&#34; data-caption=&#34;RDF bidirectional&#34;&gt;

&lt;img src=&#34;gruff-part998-suppliers-bidirectional.jpg&#34; alt=&#34;RDF bidirectional&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    RDF bidirectional
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;association-in-rdf&#34;&gt;Association in RDF&lt;/h2&gt;
&lt;p&gt;We can now compare these &lt;a href=&#34;https://healis.eu/en/post/20160902/#topic-map-serialization&#34;&gt;five associations&lt;/a&gt; of &lt;code&gt;Part:998&lt;/code&gt; with &lt;strong&gt;RDF links&lt;/strong&gt; of the graph in &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig6&#34;&gt;&lt;strong&gt;Fig. 6&lt;/strong&gt;&lt;/a&gt;.  One of them is composed with all outgoing triples of &lt;code&gt;Part:998&lt;/code&gt;, i.e. &lt;code&gt;Part:998&lt;/code&gt; is the subject of the triple &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig5&#34;&gt;&lt;strong&gt;Fig. 5&lt;/strong&gt;&lt;/a&gt;. These &lt;code&gt;literal triples&lt;/code&gt; describe five properties of &lt;code&gt;Part:998&lt;/code&gt; resource, yellow boxes of &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig6&#34;&gt;&lt;strong&gt;Fig. 6&lt;/strong&gt;&lt;/a&gt;, and another RDF link is for the type of resource, i.e. &lt;code&gt;Item&lt;/code&gt; (grey box).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Get&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;all&lt;/span&gt; outgoing triples &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; a &lt;span style=&#34;color:#66d9ef&#34;&gt;specific&lt;/span&gt; part
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; Part: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;example.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;spc&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;Part&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;o &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    BIND(Part:&lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;o .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;part998-outgoing-triples-result-set.jpg&#34; data-caption=&#34;Result set of all outgoing triples for Part:998&#34;&gt;

&lt;img src=&#34;part998-outgoing-triples-result-set.jpg&#34; alt=&#34;Result set of all outgoing triples for `Part:998`&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Result set of all outgoing triples for &lt;code&gt;Part:998&lt;/code&gt;
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;The resource &lt;code&gt;Part:998&lt;/code&gt; participates in four associations with &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/SupplierPartCatalogue/ttl/catalog.ttl&#34;&gt;&lt;strong&gt;Inventory&lt;/strong&gt; resources&lt;/a&gt;,  as the object of a triple. These are the four incoming &lt;strong&gt;RDF links&lt;/strong&gt; of &lt;code&gt;Part:998&lt;/code&gt; in &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig3&#34;&gt;&lt;strong&gt;Fig. 3&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig6&#34;&gt;&lt;strong&gt;Fig. 6&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig8&#34;&gt;&lt;strong&gt;Fig. 8&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;gruff-part998.jpg&#34; data-caption=&#34;Five associations of Part:998, four with the green boxes and one with the yellow boxes&#34;&gt;

&lt;img src=&#34;gruff-part998.jpg&#34; alt=&#34;Five associations of `Part:998`, four with the green boxes and one with the yellow boxes&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Five associations of &lt;code&gt;Part:998&lt;/code&gt;, four with the green boxes and one with the yellow boxes
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;We can write the following SPARQL query to ask for all the suppliers of &lt;code&gt;Part:998&lt;/code&gt; sorted by their catalog price.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;Suppliers &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; Part &lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt; (Red Fire Hydrant Cap) sorted &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; their &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt; price
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; xsd: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;www.w3.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2001&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;XMLSchema&lt;span style=&#34;color:#f92672&#34;&gt;#&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; wd: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;www.wikidata.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;property&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;schema&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;schema&lt;/span&gt;.org&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; rdf: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;www.w3.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1999&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;02&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;rdf&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;syntax&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ns&lt;span style=&#34;color:#f92672&#34;&gt;#&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;PREFIX&lt;/span&gt; dc: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;purl.org&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;dc&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;elements&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;sup &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;supName &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;supCountry &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;catPrice &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;catQuantity &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prtName &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prtColor &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Start&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt that has id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;get&lt;/span&gt; its name &lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; color &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt dc:identifier &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;998&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^^&lt;/span&gt;xsd:int .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt rdf:label &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prtName .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt &lt;span style=&#34;color:#66d9ef&#34;&gt;schema&lt;/span&gt;:color &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prtColor .            
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; Find &lt;span style=&#34;color:#66d9ef&#34;&gt;all&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt; items (&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat) &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; a reference &lt;span style=&#34;color:#66d9ef&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt &lt;span style=&#34;color:#66d9ef&#34;&gt;get&lt;/span&gt; their price &lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; quantity &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat wd:hasPart &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat &lt;span style=&#34;color:#66d9ef&#34;&gt;schema&lt;/span&gt;:cost &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;catPrice
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    OPTIONAL &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat &lt;span style=&#34;color:#66d9ef&#34;&gt;schema&lt;/span&gt;:quantity &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;catQuantity .&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;For&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;any&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catalog&lt;/span&gt; item (&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat) find the vendor that supplies &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;prt &lt;span style=&#34;color:#66d9ef&#34;&gt;get&lt;/span&gt; their name &lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; the country &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; origin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;cat wd:hasVendor &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;sup .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;sup rdf:label &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;supName .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;sup &lt;span style=&#34;color:#66d9ef&#34;&gt;schema&lt;/span&gt;:country &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;supCountry
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ASC&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;catPrice)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You may consider the analogy between this query and the result set at &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig7&#34;&gt;&lt;strong&gt;Fig. 7&lt;/strong&gt;&lt;/a&gt; and the equivalent &lt;a href=&#34;https://healis.eu/en/post/20160913/#join-vs-edge&#34;&gt;OrientDB SQL query and the result set from a &lt;strong&gt;Property Graph&lt;/strong&gt; data model&lt;/a&gt;. The main differences are that in &lt;strong&gt;Property Graph&lt;/strong&gt; data model you can traverse edges in both directions, (incoming, outcoming), the filtering part (&lt;code&gt;where&lt;/code&gt;) in SPARQL is significantly longer, and the starting point is represented in a different manner (edge vs link).&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;graphdb-part998-sup-catprices-1137x178.jpg&#34; data-caption=&#34;Suppliers of Part 998 (Red Fire Hydrant Cap) sorted by their catalog price&#34;&gt;

&lt;img src=&#34;graphdb-part998-sup-catprices-1137x178.jpg&#34; alt=&#34;Suppliers of Part 998 (Red Fire Hydrant Cap) sorted by their catalog price&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;fig7&lt;/h4&gt;
  &lt;p&gt;
    Suppliers of Part 998 (Red Fire Hydrant Cap) sorted by their catalog price
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;gruff-part998-suppliers-catprices-1210x710.jpg&#34; data-caption=&#34;Associations of Part:998 with Suppliers and their Catalog prices&#34;&gt;

&lt;img src=&#34;gruff-part998-suppliers-catprices-1210x710.jpg&#34; alt=&#34;Associations of `Part:998` with Suppliers and their Catalog prices&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Associations of &lt;code&gt;Part:998&lt;/code&gt; with Suppliers and their Catalog prices
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;We can view a graph representation, &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig8&#34;&gt;&lt;strong&gt;Fig. 8&lt;/strong&gt;&lt;/a&gt;, of this SPARQL query and its result data set &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig7&#34;&gt;&lt;strong&gt;Fig. 7&lt;/strong&gt;&lt;/a&gt;. In the same screen capture, &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig8&#34;&gt;&lt;strong&gt;Fig. 8&lt;/strong&gt;&lt;/a&gt;, a many-to-many relationship is modeled with RDF triples. &lt;code&gt;Supplier:1082&lt;/code&gt; is associated with three parts (&lt;code&gt;Part:991&lt;/code&gt;, &lt;code&gt;Part:997&lt;/code&gt; and &lt;code&gt;Part:998&lt;/code&gt;) and &lt;code&gt;Part998&lt;/code&gt; is associated with four suppliers (&lt;code&gt;Supplier:1081&lt;/code&gt;, &lt;code&gt;Supplier:1082&lt;/code&gt;, &lt;code&gt;Supplier:1083&lt;/code&gt;, &lt;code&gt;Supplier:1084&lt;/code&gt;), see also &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig9&#34;&gt;&lt;strong&gt;Fig. 9&lt;/strong&gt;&lt;/a&gt;. From a semantic point of view, Parts and Suppliers participate in associations with Inventory items (green boxes - &lt;code&gt;Catalog:7&lt;/code&gt;, &lt;code&gt;Catalog:9&lt;/code&gt;, &lt;code&gt;Catalog:10&lt;/code&gt;, &lt;code&gt;Catalog:11&lt;/code&gt;, &lt;code&gt;Catalog:12&lt;/code&gt; and &lt;code&gt;Catalog:16&lt;/code&gt;). In contrast with the binary relations between Suppliers and Parts represented with directed edges in a &lt;strong&gt;Property Graph&lt;/strong&gt;, &lt;a href=&#34;https://healis.eu/en/post/20160913/#property-graph-with-directed-edges&#34;&gt;see here&lt;/a&gt;, instead of an &lt;strong&gt;edge type&lt;/strong&gt; we have explicit intermediate (bridge) nodes and instead of outgoing head (out) and incoming tail (in) we have two outgoing directional links (&lt;code&gt;wd:hasPart&lt;/code&gt; and &lt;code&gt;wd:hasVendor&lt;/code&gt;) from this intermediate node, e.g. Catalog/Inventory item to Supplier and Part. In such as case these outgoing directional links (&lt;code&gt;wd:hasPart&lt;/code&gt; and &lt;code&gt;wd:hasVendor&lt;/code&gt;) look like &lt;a href=&#34;https://healis.eu/en/post/20160902/#topic-map-serialization&#34;&gt;roles in a Topic Map binary association&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/* 4 Associations of catalog part no 998 with supplier Ids and catalog prices */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Catalog07&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;Part998&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;HasPart&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Supplier1081&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;HasVendor&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11.7&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Cost&lt;/span&gt; )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Catalog11&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;Part998&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;HasPart&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Supplier1082&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;HasVendor&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7.95&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Cost&lt;/span&gt; )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Catalog12&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;Part998&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;HasPart&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Supplier1083&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;HasVendor&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;12.5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Cost&lt;/span&gt; )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Catalog16&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;Part998&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;HasPart&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Supplier1084&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;HasVendor&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;48.6&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Cost&lt;/span&gt; )
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;gruff-4suppliers-3parts-1227x457.jpg&#34; data-caption=&#34;A Many-to-Many Relationship between Suppliers and Parts modeled with RDF triples&#34;&gt;

&lt;img src=&#34;gruff-4suppliers-3parts-1227x457.jpg&#34; alt=&#34;A Many-to-Many Relationship between Suppliers and Parts modeled with RDF triples&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    A Many-to-Many Relationship between Suppliers and Parts modeled with RDF triples
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;associative-model&#34;&gt;Associative Model&lt;/h2&gt;
&lt;p&gt;Although it has not become mainstream, we see &lt;a href=&#34;https://en.wikipedia.org/wiki/Associative_model_of_data&#34;&gt;associative model of data&lt;/a&gt; as an effort to enhance RDF data model in a new kind of DBMS. The logical layer of &lt;a href=&#34;http://www.sentences.com/sentences.htm&#34;&gt;Sentences&lt;/a&gt; associative database management system may be regarded as comprising of only two tables: one for &lt;code&gt;Items&lt;/code&gt; that represent &lt;code&gt;Entities&lt;/code&gt;, &lt;code&gt;Entity Types&lt;/code&gt;, &lt;code&gt;Values&lt;/code&gt; and &lt;code&gt;Value Types&lt;/code&gt; and one for &lt;code&gt;Links&lt;/code&gt; that represent among other things &lt;code&gt;Associations&lt;/code&gt; and &lt;code&gt;Association Types&lt;/code&gt; (&lt;strong&gt;[Fig. 15]&lt;/strong&gt;, &lt;strong&gt;[Fig. 16]&lt;/strong&gt;). Both &lt;code&gt;Items&lt;/code&gt; and &lt;code&gt;Links&lt;/code&gt; also represent meta-types and instances, which perform various functions in the database. Thanks to this simple consistent form of &lt;code&gt;Items&lt;/code&gt; and &lt;code&gt;Links&lt;/code&gt;, it is easy to write generic code that is capable of working with every type of data. Recording schema changes and transactions, a type system &lt;strong&gt;[Fig. 15]&lt;/strong&gt;, associative queries in the form of a request tree, business rules, data provenance, automated default data entry forms &lt;strong&gt;[Fig. 16]&lt;/strong&gt; and many other features of Sentences DBMS were designed and implemented based on this generic metacode programming.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;SentencesDB_SPC_Types.jpg&#34; data-caption=&#34;Types, Association Instances and their Properties&#34;&gt;

&lt;img src=&#34;SentencesDB_SPC_Types.jpg&#34; alt=&#34;Types, Association Instances and their Properties&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Types, Association Instances and their Properties
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;

&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;SentencesDB_SPC_DataEntryForms.jpg&#34; data-caption=&#34;Types, Entity Instances and Data Entry Forms&#34;&gt;

&lt;img src=&#34;SentencesDB_SPC_DataEntryForms.jpg&#34; alt=&#34;Types, Entity Instances and Data Entry Forms&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Types, Entity Instances and Data Entry Forms
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;In fact along similar principles &lt;a href=&#34;https://en.wikipedia.org/wiki/Freebase&#34;&gt;Freebase&lt;/a&gt; collaborative knowledge base, now known as Google&amp;rsquo;s &lt;a href=&#34;https://en.wikipedia.org/wiki/Knowledge_Graph&#34;&gt;Knowledge Graph&lt;/a&gt;, was serving its users.&lt;/p&gt;
&lt;p&gt;Both Freebase and Sentences added also reverse edges to their model. In Freebase notation, &lt;strong&gt;[Fig. 10]&lt;/strong&gt; we can see that &lt;code&gt;/film/film&lt;/code&gt; is &lt;code&gt;/directed_by&lt;/code&gt; a &lt;code&gt;/film/director&lt;/code&gt; and a &lt;code&gt;/film/director&lt;/code&gt; has directed (&lt;code&gt;/film&lt;/code&gt;) a &lt;code&gt;/film/film&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;freebase-film.jpg&#34; data-caption=&#34;Movies Data Model in Freebase&#34;&gt;

&lt;img src=&#34;freebase-film.jpg&#34; alt=&#34;Movies Data Model in Freebase&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    Movies Data Model in Freebase
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Bidirectional links allow a 360Â° view of every data item in the database. Directed edges in &lt;strong&gt;Property Graph&lt;/strong&gt; share the same concept, &lt;a href=&#34;https://healis.eu/en/post/20160913/#property-graph-with-directed-edges&#34;&gt;see here&lt;/a&gt;. In the following three figures (&lt;a href=&#34;https://healis.eu/en/post/20161220/#fig11&#34;&gt;&lt;strong&gt;Fig. 11&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig12&#34;&gt;&lt;strong&gt;Fig. 12&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig13&#34;&gt;&lt;strong&gt;Fig. 13&lt;/strong&gt;&lt;/a&gt;) we present three alternative schema views for our Supplier-Part-Catalog database that we built on Sentences DBMS. &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig11&#34;&gt;&lt;strong&gt;Fig. 11&lt;/strong&gt;&lt;/a&gt; illustrates that it is possible to add attributes on the link. &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig12&#34;&gt;&lt;strong&gt;Fig. 12&lt;/strong&gt;&lt;/a&gt; shows that &lt;code&gt;Supplier&lt;/code&gt;, &lt;code&gt;Catalog&lt;/code&gt; and &lt;code&gt;Part&lt;/code&gt; entities are sharing common attributes while in &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig13&#34;&gt;&lt;strong&gt;Fig. 13&lt;/strong&gt;&lt;/a&gt; they are directly connected with bidirectional links.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;








  
  


&lt;div class=&#34;gallery&#34;&gt;

  
  
  
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-screen_captures&#34; href=&#34;https://healis.eu/en/post/20161220/screen_captures/SPC-bidirectional_edges_associations_directconnections.jpg&#34; &gt;
  &lt;img src=&#34;https://healis.eu/en/post/20161220/screen_captures/SPC-bidirectional_edges_associations_directconnections_hu2f5ba3506c67aca4d5953246be86fb8c_118507_0x190_resize_q90_lanczos.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-screen_captures&#34; href=&#34;https://healis.eu/en/post/20161220/screen_captures/SPC-bidirectional_edges_associations_indirectconnections.jpg&#34; &gt;
  &lt;img src=&#34;https://healis.eu/en/post/20161220/screen_captures/_huf9a85b6d31db297a90a7e332a9e02929_142663_2be83408ec7f9a57b41252a8ecdc2a14.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-screen_captures&#34; href=&#34;https://healis.eu/en/post/20161220/screen_captures/SPC-bidirectional_edges_associations_propertygraph.jpg&#34; &gt;
  &lt;img src=&#34;https://healis.eu/en/post/20161220/screen_captures/SPC-bidirectional_edges_associations_propertygraph_hu854a3e7bd7fe75e3520da486490b9b8f_93442_0x190_resize_q90_lanczos.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  

  
&lt;/div&gt;
&lt;h2 id=&#34;association-in-r3dm&#34;&gt;Association in R3DM&lt;/h2&gt;
&lt;p&gt;According to &lt;a href=&#34;https://healis.eu/en/post/20160913/#r3dm-hypergraph-terminology&#34;&gt;R3DM Hypergaph Terminology&lt;/a&gt;, the objects of &lt;code&gt;RDF literal&lt;/code&gt; triples, i.e. values, are  &lt;strong&gt;HyperAtoms&lt;/strong&gt; and the resources of &lt;strong&gt;RDF links&lt;/strong&gt; are &lt;strong&gt;HyperBonds&lt;/strong&gt;. Thus the RDF graph of &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig8&#34;&gt;&lt;strong&gt;Fig. 8&lt;/strong&gt;&lt;/a&gt; can be redrawn as a hypergraph with &lt;!-- raw HTML omitted --&gt; red &lt;!-- raw HTML omitted --&gt; nodes that play the role of &lt;strong&gt;HyperAtoms&lt;/strong&gt; and &lt;!-- raw HTML omitted --&gt; green &lt;!-- raw HTML omitted --&gt; nodes that play the role of &lt;strong&gt;HyperBonds&lt;/strong&gt;, see &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig14&#34;&gt;&lt;strong&gt;Fig. 14&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;part998-R3DM_hypergraph.png&#34; data-caption=&#34;R3DM Hypergraph&#34;&gt;

&lt;img src=&#34;part998-R3DM_hypergraph.png&#34; alt=&#34;R3DM Hypergraph&#34; &gt;
&lt;/a&gt;


&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
  &lt;h4&gt;&lt;/h4&gt;
  &lt;p&gt;
    R3DM Hypergraph
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;This R3DM hypergraph figure above, &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig14&#34;&gt;&lt;strong&gt;Fig. 14&lt;/strong&gt;&lt;/a&gt;, has been created from the execution of the following Wolfram Language code. You will notice that &lt;strong&gt;HyperAtom&lt;/strong&gt; sets such as &lt;strong&gt;ha2-(catcost)&lt;/strong&gt; and &lt;strong&gt;ha5-(catqnt)&lt;/strong&gt; are attribute sets with value members that take part in the formation of &lt;strong&gt;Catalog&lt;/strong&gt; records with instances that are drawn from &lt;strong&gt;hb2 set&lt;/strong&gt;. &lt;strong&gt;Supplier&lt;/strong&gt; instances are drawn from the other &lt;strong&gt;HyperBond&lt;/strong&gt; set (&lt;strong&gt;hb3&lt;/strong&gt;) and &lt;strong&gt;ha3-(sname)&lt;/strong&gt;, &lt;strong&gt;ha4-(scountry)&lt;/strong&gt; are attribute sets with value members that describe the &lt;strong&gt;Suppliers&lt;/strong&gt;. Instances from these &lt;strong&gt;HyperBond&lt;/strong&gt; sets may share common values or associated with the same &lt;strong&gt;HyperBond&lt;/strong&gt;. For example we have two suppliers, &lt;strong&gt;Supplier:1082&lt;/strong&gt; and &lt;strong&gt;Supplier:1081&lt;/strong&gt; that are located in &lt;strong&gt;USA&lt;/strong&gt; or &lt;strong&gt;Catalog:11&lt;/strong&gt; and &lt;strong&gt;Catalog:16&lt;/strong&gt; entries that are associated with &lt;strong&gt;Part:998&lt;/strong&gt; and they both have the same quantity, i.e. &lt;strong&gt;200&lt;/strong&gt; pieces of this part.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ha1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#ae81ff&#34;&gt;998&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fire Hydrant Cap&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Red&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`,&amp;#34;lb&amp;#34;};
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ha2={11.7,7.95,12.5,48.6};
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ha3={&amp;#34;Acme Widget Suppliers&amp;#34;,&amp;#34;Big Red Tool and Die&amp;#34;,&amp;#34;Perfunctory Parts&amp;#34;,&amp;#34;Alien Aircaft Inc.&amp;#34;};
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ha4={&amp;#34;USA&amp;#34;,&amp;#34;USA&amp;#34;,&amp;#34;SPAIN&amp;#34;,&amp;#34;UK&amp;#34;};
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ha5={&amp;#34;400&amp;#34;,&amp;#34;200&amp;#34;,&amp;#34;200&amp;#34;};
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;hb1={&amp;#34;Part:998&amp;#34;,&amp;#34;schema:item&amp;#34;};
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;hb2={&amp;#34;Catalog:7&amp;#34;,&amp;#34;Catalog:11&amp;#34;,&amp;#34;Catalog:12&amp;#34;,&amp;#34;Catalog:16&amp;#34;};
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;hb3={&amp;#34;Supplier:1081&amp;#34;,&amp;#34;Supplier:1082&amp;#34;,&amp;#34;Supplier:1083&amp;#34;,&amp;#34;Supplier:1084&amp;#34;};
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;vstyle=Join[Thread[Join[ha1,ha2, ha3,ha4,ha5]-&amp;gt;Red],Thread[Join[hb1,hb2,hb3]-&amp;gt;Green]];
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;data=Join[
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  {&amp;#34;Part:998&amp;#34;-&amp;gt;&amp;#34;schema:item&amp;#34;},
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  Thread[&amp;#34;Part:998&amp;#34;-&amp;gt;ha1],Thread[hb2-&amp;gt;ha2],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  Thread[hb2-&amp;gt;hb3],Thread[hb3-&amp;gt;ha3],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  Thread[hb3-&amp;gt;ha4],Thread[hb2-&amp;gt;&amp;#34;Part:998&amp;#34;],  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  Thread[{&amp;#34;Catalog:7&amp;#34;,&amp;#34;Catalog:11&amp;#34;,&amp;#34;Catalog:16&amp;#34;}-&amp;gt;ha5]];
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Graph[
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  data,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  VertexLabels-&amp;gt;&amp;#34;Name&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  VertexSize-&amp;gt;{{&amp;#34;Nearest&amp;#34;,0.15}},
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  VertexStyle-&amp;gt;vstyle,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  EdgeShapeFunction-&amp;gt;GraphElementData[{&amp;#34;CarvedArrow&amp;#34;,&amp;#34;ArrowSize&amp;#34;-&amp;gt;.02}],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  EdgeStyle-&amp;gt;Thick,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  GraphLayout-&amp;gt;&amp;#34;SpringEmbedding&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  ImageSize-&amp;gt;{400.,Automatic}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can rewrite now the following four associations :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/* 4 Associations of catalog part no 998 with supplier Ids and catalog prices */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CatalogID&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;catpid&lt;/span&gt;,  &lt;span style=&#34;color:#a6e22e&#34;&gt;catsid&lt;/span&gt;,       &lt;span style=&#34;color:#a6e22e&#34;&gt;catqnt&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;catcost&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Catalog07&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;Part998&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Supplier1081&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt;,    &lt;span style=&#34;color:#ae81ff&#34;&gt;11.70&lt;/span&gt;  )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Catalog11&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;Part998&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Supplier1082&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;,     &lt;span style=&#34;color:#ae81ff&#34;&gt;7.95&lt;/span&gt;  )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Catalog12&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;Part998&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Supplier1083&lt;/span&gt;,         &lt;span style=&#34;color:#ae81ff&#34;&gt;12.50&lt;/span&gt;  )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Catalog16&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;Part998&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Supplier1084&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;,    &lt;span style=&#34;color:#ae81ff&#34;&gt;48.60&lt;/span&gt;  )
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Associations in this form greatly resemble tuples of &lt;strong&gt;Catalog&lt;/strong&gt; relation, see &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/SupplierPartCatalogue/tsv/Catalog.tsv&#34;&gt;TSV&lt;/a&gt; format, where the &lt;strong&gt;heading&lt;/strong&gt; of this relation is usually stored in a &lt;a href=&#34;https://en.wikipedia.org/wiki/Data_dictionary&#34;&gt;data dictionary&lt;/a&gt; and &lt;strong&gt;Null&lt;/strong&gt; marker indicates that a data value is absent from the tuple. On the contrary in case of &lt;strong&gt;RDF literal&lt;/strong&gt; triples the predicate position signifies the object part of the triple and in &lt;strong&gt;RDF links&lt;/strong&gt; Instances/Type of resources at subject and object positions are also signified by predicates such as (&lt;code&gt;rdf:type&lt;/code&gt;). But in &lt;strong&gt;R3DM associations&lt;/strong&gt; there is not any label on the edge that connects &lt;strong&gt;HyperAtoms&lt;/strong&gt; or &lt;strong&gt;HyperBonds&lt;/strong&gt;. Therefore the denotation of resources and literals, i.e. what they stand for, cannot be seen on this graph, &lt;a href=&#34;https://healis.eu/en/post/20161220/#fig14&#34;&gt;&lt;strong&gt;Fig. 14&lt;/strong&gt;&lt;/a&gt;. For example in &lt;code&gt;Catalog12&lt;/code&gt; association instance we have to know that the literal meaning of the value &lt;code&gt;12.5&lt;/code&gt; is the &lt;strong&gt;Catalog Cost&lt;/strong&gt;. Generally speaking, this is the &lt;strong&gt;granularity of data&lt;/strong&gt; problem. How we represent a piece of information at atomic level and how we construct higher structures. &lt;strong&gt;R3DM/S3DM unifies three perspectives, semantics at the conceptual layer, representation at the symbol layer and encoding at the physical layer&lt;/strong&gt;, in such a way that they are separable. R3DM/S3DM conceptual framework is based on the natural process of semiosis where &lt;strong&gt;the signified, i.e. concept, entity, attribute and the signifier, i.e. value, &lt;a href=&#34;https://healis.eu/en/post/20150320/#signified-sign-signifier-alternative-paradigm&#34;&gt;are referenced through symbols&lt;/a&gt;, i.e. signs, at discrete layers&lt;/strong&gt;. The main difference with RDF data model is that these references are not in the form of &lt;a href=&#34;https://en.wikipedia.org/wiki/Uniform_resource_identifier&#34;&gt;URIs&lt;/a&gt; but they resemble &lt;a href=&#34;https://en.wikipedia.org/wiki/IP_address&#34;&gt;IPs&lt;/a&gt;. For example the value &lt;code&gt;12.50&lt;/code&gt; can be referenced by a 4D vector of the form &lt;code&gt;{2, 8, 262, 1}&lt;/code&gt; where the first dimension is the database, the second dimension is the table (Entity), the third dimension is the field (Attribute) and the last dimension is a member of an attribute set.&lt;/p&gt;
&lt;h2 id=&#34;discussion&#34;&gt;Discussion&lt;/h2&gt;
&lt;p&gt;Although this is not the space or the time to elaborate more on &lt;strong&gt;R3DM/S3DM associations&lt;/strong&gt; it is important to mention that it is possible to escape from the predicate logic (&lt;code&gt;owl#sameAs&lt;/code&gt;) on how to identify that two URI aliases refer to the same entity. Moreover the alternative paradigm of &lt;strong&gt;R3DM/S3DM&lt;/strong&gt; offers a more attractive and efficient approach on data integration and heterogeneous data representation than bridging between RDF vocabularies with mapping predicates such as &lt;code&gt;owl:equivalentClass&lt;/code&gt;  and &lt;code&gt;owl:equivalentProperty&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We foresee that the Internet of things will use a protocol with numerical reference vectors for data communication in a similar fashion to IP addresses that are used for connecting devices in a computer network. Hopefully one day it will become clear that the predicate part of RDF data model is causing more harm than good in the semantic interpretation and information representation.&lt;/p&gt;
&lt;p&gt;Last but not least, SPARQL query mechanism is heavily dependent on namespace vocabulary terms, especially predicate terms that connect resources and literals. To answer such queries, care must be taken to devise a suitable mechanism of indexes (e.g. spo, sop, pso, pos, osp, ops) to support RDF triple structure. Besides indexing, RDF edges by default are not bidirectional, therefore 360 degrees view and nodes navigation is problematic. In contrast with RDF, in R3DM/S3DM everything is bidirectionally linked and referenced with 4D numerical vectors and these are naturally used for indexing purposes. Instead of writing queries there is a functional way, i.e. you learn a single command with a standard number of optional or mandatory parameters, to filter the data space and retrieve any piece of information.&lt;/p&gt;
&lt;p&gt;Interactive and associative data exploration is the key, unique feature of &lt;a href=&#34;http://www.qlik.com/us/products/qlikview&#34;&gt;Qlikview&lt;/a&gt;/&lt;a href=&#34;http://www.qlik.com/us/products/qlik-sense&#34;&gt;Qliksense&lt;/a&gt;, one of the best data visualization and business intelligence software in the market today. Behind the scenes, columnar, binary indexing capability is the foundation for &lt;strong&gt;QIX Associative Data Indexing Engine&lt;/strong&gt;. In the next part of our series we will apply Qlik associative technology on our toy dataset and we will demonstrate how we build the domain model and how we filter our data.&lt;/p&gt;
&lt;h2 id=&#34;acknowledgements&#34;&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;We have serialized our &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/SupplierPartCatalogue&#34;&gt;Supplier-Part-Catalogue example&lt;/a&gt; in &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/SupplierPartCatalogue/ttl/&#34;&gt;Turtle&lt;/a&gt; and &lt;a href=&#34;https://github.com/healiseu/healiseu.github.io/blob/master/SupplierPartCatalogue/n3/&#34;&gt;N-Triples&lt;/a&gt; syntax. Then we used &lt;a href=&#34;https://en.wikipedia.org/wiki/AllegroGraph&#34;&gt;AllegroGraph&lt;/a&gt; and &lt;a href=&#34;http://graphdb.ontotext.com/documentation/free/about-graphdb.html&#34;&gt;GraphDB&lt;/a&gt; triple-store to create a repository and run queries on their SPARQL interfaces. All graph-based images of this article were displayed and captured on &lt;a href=&#34;https://franz.com/agraph/gruff/&#34;&gt;Gruff&lt;/a&gt;, an RDF visual browser that displays a variety of the relationships in &lt;a href=&#34;https://en.wikipedia.org/wiki/AllegroGraph&#34;&gt;AllegroGraph&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;cross-references&#34;&gt;Cross-References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/associative-data-modeling-demystified-part-4-hatzis-phd&#34;&gt;LinkedIn Published Posts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/49970/49970-6217358696947814400&#34;&gt;LinkedIn Semantic Web Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/2552968/2552968-6217357737450438660&#34;&gt;LinkedIn Graph Databases Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/108904/108904-6217358696935231488&#34;&gt;LinkedIn Data Warehouse &amp;amp; Business Intelligence Architects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/6514034/6514034-6217358562243543041&#34;&gt;LinkedIn Computational Semiotics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/38506/38506-6217358477753483266&#34;&gt;LinkedIn Semantic Technologies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/4737538/4737538-6217357595209015300&#34;&gt;LinkedIn Data Visualization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/3750024/3750024-6217358686722097153&#34;&gt;LinkedIn Database &amp;amp; Data Store Professionals â˜… NoSQL â˜… NewSQL â˜… Relational&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/73235/73235-6217357914919837698&#34;&gt;LinkedIn Database Developers and Architects Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/60636/60636-6217357769868222467&#34;&gt;LinkedIn Linked Data Web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/62614/62614-6217357140789727236&#34;&gt;LinkedIn Mathematica Users&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/groups/45183/45183-6217358477761875970&#34;&gt;LinkedIn Database Experts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/associative-data-modeling-demystified-part-iv&#34;&gt;DZone Article&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
